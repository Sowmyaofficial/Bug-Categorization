Summary,Signature,Major blocks,Sub-blocks,Sub Sub-blocks,Description,Issue key,Issue id,Parent id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project lead id,Project description,Project url,Priority,Resolution,Assignee,Assignee Id,Reporter,Reporter Id,Creator,Creator Id,Created,Updated,Last Viewed,Resolved,Affects versions,Affects versions,Affects versions,Affects versions,Affects versions,Affects versions,Affects versions,Affects versions,Affects versions,Affects versions,Fix versions,Fix versions,Components,Components,Components,Components,Components,Components,Components,Components,Due date,Votes,Labels,Labels,Labels,Description,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers Id,Watchers Id,Watchers Id,Watchers Id,Watchers Id,Watchers Id,Watchers Id,Watchers Id,Watchers Id,Watchers Id,Watchers Id,Watchers Id,Watchers Id,Watchers Id,Watchers Id,Original estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Inward issue link (Cloners),Inward issue link (Cloners),Outward issue link (Cloners),Inward issue link (Duplicate),Inward issue link (Duplicate),Inward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Features),Outward issue link (Features),Outward issue link (Features),Outward issue link (Features),Inward issue link (Gantt End to End),Inward issue link (Gantt End to Start),Outward issue link (Gantt End to Start),Outward issue link (Gantt End to Start),Inward issue link (Initiatives),Outward issue link (Initiatives),Inward issue link (Issue split),Outward issue link (Issue split),Inward issue link (Parents),Inward issue link (Parents),Inward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Outward issue link (Parents),Inward issue link (Problem/Incident),Inward issue link (Problem/Incident),Outward issue link (Problem/Incident),Outward issue link (Problem/Incident),Outward issue link (Problem/Incident),Outward issue link (Problem/Incident),Outward issue link (Problem/Incident),Inward issue link (Relates),Inward issue link (Relates),Inward issue link (Relates),Inward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (3x3 Type & Engagement Level),Custom field (AE),Custom field (Add to distribution lists),Custom field (Additional Info),Custom field (Address),Custom field (Affected hardware),Custom field (Affected services),Custom field (Affects Commit),Custom field (Affects previously released IP/Silicon),Custom field (Application),Custom field (Arch Components),Custom field (Arch Components),Custom field (Arch Components),Custom field (Archive Core IP Tag),Custom field (Associated Project),Custom field (Baseline end date),Custom field (Baseline start date),Custom field (Build ID),Custom field (Build Override),Custom field (Build Status Override),Custom field (Build Summary),Custom field (Builds Completed),Custom field (Builds Completed Text),Custom field (Builds Planned),Custom field (Builds Planned Text),Custom field (CX Declaration of Usage),Custom field (CX Lead),Custom field (CX Next Steps),Custom field (Category),Custom field (Change completion date),Custom field (Change reason),Custom field (Change risk),Custom field (Change start date),Custom field (Change type),Custom field (Client),Custom field (Closed Win/Loss Reason),Custom field (Code Name),Custom field (Command to Reproduce),Custom field (Commit Hash),Custom field (Commits),Custom field (Company),Custom field (Company Text),Custom field (Competition),Custom field (Concept approval date),Custom field (Config Type),Custom field (Contract Effective Date),Custom field (Contract End Date),Custom field (Contract Term),Custom field (Customer Design Phase),Custom field (Customer Driven),Custom field (Customer Lead Email ),Custom field (Customer Lead Name ),Custom field (Customer Name),Custom field (Customer Project Name),Custom field (Customer Request Type),Custom field (Customer Status),Custom field (DR target date),Custom field (DRI Name),Custom field (Dabble Model Status),Custom field (Date and Time),Custom field (Date of First Meeting),Custom field (Declaration Comment),Custom field (Delivered Date),Custom field (Delivery Sign-off),Custom field (Department),Custom field (Dependencies),Custom field (Design Phase),Custom field (Design Spec),Custom field (Development),Custom field (Docs Commit Hash),Custom field (Document URL),Custom field (Effort Size),Custom field (Employment status),Custom field (End date),Custom field (Engineering Response),Custom field (Epic Color),Custom field (Epic Link),Custom field (Epic Name),Custom field (Epic Status),Custom field (Errata BRC Discussion),Custom field (Errata CAT),Custom field (Errata Condition),Custom field (Errata Impact),Custom field (Errata Implication),Custom field (Errata Probability),Custom field (Errata Scope),Custom field (Errata Std Products Affected),Custom field (Errata Std Products Affected),Custom field (Errata Title),Custom field (Errata Workaround),Custom field (Errata to Publish),Custom field (Escape Analysis),Custom field (Eval End),Custom field (Eval Start),Custom field (Execution approval date),Custom field (External email),Custom field (FAE),Custom field (FPGA Prototyping),Custom field (Feature Approval),Custom field (First Name),Custom field (Fix Commit),Custom field (Flag Resolve Date),Custom field (Flag type),Custom field (Flags),Custom field (Funnel Stage (old)),Custom field (GR external milestone),Custom field (Health),Custom field (Health update mode),Custom field (High),Custom field (High/Highest),Custom field (Highest),Custom field (Home monitor etc preference),Custom field (How it was found),Custom field (How it was found),Custom field (IP),Custom field (IP Deliverables),Custom field (IP Release Version),Custom field (IP Type),Custom field (IPX Name),Custom field (IPX Rev ID),Custom field (Impacts Performance),Custom field (Incumbent),Custom field (Investigation reason),Custom field (Issue color),Custom field (Job title),Custom field (Key Customer Asks),Custom field (Key Customer Contacts (Email)),Custom field (Laptop preference),Custom field (Last Name),Custom field (Legal first name),Custom field (Legal last name),Custom field (Legal name),Custom field (Location),Custom field (Locked forms),Custom field (Major incident),Custom field (Manager),Custom field (Manager email),Custom field (Mass Production),Custom field (Medium),Custom field (Memory Vendor),Custom field (Milestone Description),Custom field (Milestone Status),Custom field (Model Version),Custom field (Need Management Help),Custom field (Next milestone date),Custom field (Notes),Custom field (Number of Variants),Custom field (Official Close Date),Custom field (Onboarding location),Custom field (Open),Custom field (Open forms),Custom field (Opened last 7 days),Custom field (Operational categorization),Custom field (Organization),Custom field (Owner),Custom field (POR Status),Custom field (PPA Area Priority),Custom field (PPA Frequency Priority),Custom field (PPA Power Priority),Custom field (PR declined),Custom field (PR external milestone),Custom field (PR merged),Custom field (PR open),Custom field (Parent Link),Custom field (Party Name),Custom field (Pending reason),Custom field (Percentage (%) completed),Custom field (Phase),Custom field (Phone),Custom field (Potential CAT-A),Custom field (Preferred first name),Custom field (Preferred last name),Custom field (Preferred name),Custom field (Process Node),Custom field (Product categorization),Custom field (Project),Custom field (Project Name),Custom field (Project Revenue (USD)),Custom field (Project Task (hrs)),Custom field (RMT),Custom field (RTL Freeze),Custom field (Rank),Custom field (Reference),Custom field (Release Blockers),Custom field (Remaining days),Custom field (Request language),Custom field (Request participants),Custom field (Requirement ID),Custom field (Resolved),Custom field (Responders),Custom field (Results),Custom field (Risk Description),Custom field (Risk Impact),Custom field (Risk Level),Custom field (Risk Matrix),Custom field (Risk Mitigation Plan),Custom field (Risk Probability),Custom field (RnD),Custom field (Root cause),Custom field (SCD User Domain),Custom field (SCS Page),Custom field (Sales Lead),Satisfaction rating,Custom field (Scala config),Custom field (Score),Custom field (Severity),Custom field (Short Name),Custom field (SiFive CI Build URL),Custom field (SiFive Federation Config),Custom field (SiFive Internal Priority),Custom field (Software Bringup),Custom field (Source),Custom field (Special Config?),Custom field (Start date),Custom field (Status Summary),Custom field (Status Summary Last Updated),Custom field (Std Cell Vendor),Custom field (Steps to Reproduce),Custom field (Story Points),Custom field (Story point estimate),Custom field (Sub-Component),Custom field (Submitted forms),Custom field (Support & Maintenance Expiration),Custom field (Support & Maintenance Status),Custom field (Tapeout),Custom field (Target Frequency),Custom field (Target Version),Custom field (Target Version),Custom field (Target end),Custom field (Target start),Custom field (Task progress),Custom field (Team),Custom field (Time to approve normal change),Custom field (Time to close after resolution),Custom field (Time to complete OOBE),Custom field (Time to first response),Custom field (Time to resolution),Custom field (Total),Custom field (Total forms),Custom field (URL to PR merged),Custom field (URL to PR open),Custom field (Urgency),Custom field (User type),Custom field (VT/Power Limitations),Custom field (Validator),Custom field (Verification Status),Custom field (WEEKEND),Custom field (Why is this Special?),Custom field (Work category),Custom field (Workaround),Custom field (Workload Version),Custom field (Workload/Software Stack/Benchmarks),Custom field ([CHART] Date of First Response),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Parent,Parent summary,Status Category
LSU FV: Store cross cache misaligned with 2nd part replayed is getting flush after 1st part retires,LSU FV Store cross cache,,,,,MAL-2735,127215,,Bug,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,John Ingalls,5bb6808b9ba2930990f81895,Abhishek Anand,622a7ed2f1e55c0070f301a9,Abhishek Anand,622a7ed2f1e55c0070f301a9,9/27/2022 20:41,9/27/2022 21:41,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"Hi John, 

I am observing a fail for following RTL assertion at [https://github.com/sifive/federation/blob/99d402c93771cf72ad8050f597637d4817311c83/mallard/src/main/scala/core/mallard/StoreQ.scala#L1266|https://github.com/sifive/federation/blob/99d402c93771cf72ad8050f597637d4817311c83/mallard/src/main/scala/core/mallard/StoreQ.scala#L1266]:
LSUPreReplayTestharnessFPV.lsu.StQ.stqEntries_0.SiFive_StQEntry_assert_0.assert__verif_library_lsuAssert__StQEntry_must_not_flush_after_committed_or_retire_request

In the failing scenario, an instruction with GID 0xd is unrolling and 2nd part is getting an lstm_xcpt. 1st part StoreQ entry retires, but the instruction doesn't resolve (due to 2nd part getting an lstm_xcpt). Further the commit pointer remains at 0xd and RDU issues a flush at this point, which fires the above assertion. Please let me know if I am missing something here.Please use following command to open the waveform (Verif03):


{noformat}cd /scratch/abhisheka/federation3/build/formal/lsu_prereplay_fpv && verdi -f /scratch/abhisheka/federation3/build/formal/lsu_prereplay_fpv/vsrcs.F -ssf /scratch/abhisheka/federation3/Waveforms/StQEntry_must_not_flush_after_committed_or_retire_request.fsdb -sswr /scratch/abhisheka/federation3/mallard/scripts/verdi/LSU.rc -top LSUPreReplayTestharnessFPV &{noformat}",Abhishek Anand,,,,,,,,,,,,,,,622a7ed2f1e55c0070f301a9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Formal,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|hzn90a:r001r,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Assertion Failure: ROB Retire Hang around entry  72   ,[TGV] Assertion Failure ROB Retire,Execution Unit ,Vector ROB,,,MAL-2734,127143,,Bug,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,9/27/2022 8:07,9/27/2022 11:02,9/28/2022 0:51,,,,,,,,,,,,,,,,,,,,,,,0,,,,"*Debug info* 
while tracing back we find that the {{robCommitPtr[8:0]}} is getting incremented from 48 to 51 but {{robRetirePtr[8:0]}} is getting stuck at gid *48.* Tracing back to the gid we have  below two instruction

{noformat}8c08ab7fe:	2984b457          	vor.vi	v8,v24,9,v0.t  --> this come under vex pipe0
8c08ab802:	310cc457          	vrgather.vx	v8,v16,x25,v0.t --> this come under vex pipe1{noformat}

For these two instruction we see the {{robVec_cmplCnt_72[5:0]}}  is incrementing from *0->3->5->7* after receiving two completion valid   {{exPipes_0.io_cmplReq_WB_valid}} and one completion valid  {{exPipes_1.io_cmplReq_WB_valid}} the {{robVec_cmplCnt_72[5:0]}} is  decrementing to +*4->3*+ and finally  it stuck to 3 . but as above we are expecting *7 WB* completions and only 3 are received which is why  we see ROB retire hang 

*Question*: For these two instructions is 7 WB needed?



*SHA:* [+94dfe64+|https://simscope.internal.sifive.com/models/undefined--master--94dfe64cd33f4764296fb299ef98612c25303d5e]

*Config:* coreip_p670

*rerun.outline*

outline copied into {{/work/nicolasb/tgv_bug_outlines/sting/MAL-2734.outline}}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0289"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1775689030
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath*

{{verif05:/scratch/ishita/tgv_regression/sign_227_test_fails/federation/builds21/coreip_p670/sim/rerundir1_rob/rob_rerun.outline/sting_StingSiFiveTuple_T_0289/sting/sifive/vector/vector_tgv_dev.conf}}
*Waves*
{{verif05:/scratch/ishita/tgv_regression/sign_227_test_fails/federation/builds21/coreip_p670/sim/rerundir1_rob/rob_rerun.outline/sting_StingSiFiveTuple_T_0289/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb}}",Abhishek Kumar,Ishita Shah,Naveen Rathore,Nicolas Brunie,Ramesh Bitra,Satish Bhavanari,Srivatsa Yogendra,,,,,,,,,620ee634a715c6006914e852,607e26355431a500701f5aed,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,61e619bcf0ed04006872cc59,626058b9436629006f73dd4b,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i019zb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,23:44.7,27/Sep/22 8:23 AM;6065017e90e3950069cf01c5;While debugging [https://sifive.atlassian.net/browse/MAL-2713|https://sifive.atlassian.net/browse/MAL-2713|smart-link] I found a bug in the vrgather where if configured with both tail and mask agnostic a complex {{vrgather}} will stall indifinitely in the pipeline. This looks like a similar issue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[HB] LSU: investigate freeing LSIssQ early,,,,,,MAL-2731,127138,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Lucas Garcia,63126758b433b060db56126f,Lucas Garcia,63126758b433b060db56126f,Lucas Garcia,63126758b433b060db56126f,9/27/2022 7:45,9/27/2022 9:50,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"LSIssQ entries are kept alive until we are sure that there will be no replay. This currently means LSTO stage where it is definitely known that LdQ/StQ/MSHR/VLTB are available or not.

However, in some cases we can know early that those resources are available:

* if N stages before LSTO, there are at least (N+1)*nbPipes free entries, then it is guaranteed to find a free one when arriving in LSTO
* We can go one step further by counting the number of valid instructions in the pipe between the current stage and LSTO.

As a result, each LSTPipe stage later than the DTLB hit information can signal early that the LSIssQ can free the entry.",John Ingalls,Lucas Garcia,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,63126758b433b060db56126f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-231,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i019y7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[HB] LSU: check all issue queue replay/wakeup for optimisations,,,,,,MAL-2730,127137,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Lucas Garcia,63126758b433b060db56126f,Lucas Garcia,63126758b433b060db56126f,Lucas Garcia,63126758b433b060db56126f,9/27/2022 7:37,9/27/2022 8:52,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"Some replay are with wakeup and some replay immediately, wasting bandwidth. However, having a wakeup might sometimes imply to be less than optimal on the moment we replay (for instance, waiting for a LdQ entry to be freed before issuing, while we only need one in LSTO).

This task is to list all reasons to replay and discuss the best solution between immediate replay and wakeup, with a focus on discussing the best wakeup event.

The current known list of replay reasons is:

* DTLB miss
* StQ full
* LdQ full
* MSHR full
* VLTB full
* replay as dependent of a missing instruction

Note: there can be subcases, like taking into account the fact that an instruction is the oldest.",John Ingalls,Lucas Garcia,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,63126758b433b060db56126f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i019xz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Investigate Power differences between P650 PRF and Explicit Banked PRF Implementations,,,,,,MAL-2729,127133,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Julian Bailey,629ab2a89bc7150068d00cdf,Julian Bailey,629ab2a89bc7150068d00cdf,Julian Bailey,629ab2a89bc7150068d00cdf,9/27/2022 6:19,9/28/2022 0:43,9/28/2022 0:51,,,,,,,,,,,,,,Power,RTL/FEX,RTL/IEX,,,,,,,0,,,,"From the Healdsburg Power Discussions, run the P650 with and without the Explicit Banking in the PRF and invesitgate if the Explicit banking reduces logic power in a meaningful way.",Josh Smith,Julian Bailey,Mehul Thakkar,,,,,,,,,,,,,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,622a8208db58c100687dd15a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i019x3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,12:01.0,27/Sep/22 9:33 AM;629ab2a89bc7150068d00cdf;Adding [~accountid:622a8208db58c100687dd15a] as this is related to the healdsburg power discussions from 26th Sept.,"27/Sep/22 10:21 AM;629ab2a89bc7150068d00cdf;||*Implementation*||*Logic Total*||*Clock Tr Total*||*Total Pwr*||
|PPAOptimizedPRF (Logically Banked into 4)|3.51mW|324.64uW|3.84mW|
|PPAOptimizedExplicitBankedPRF
(4 Physical Banks)|3.33mW|328.35uW|3.66mW|

* Logic Reduction for 4 explicit banks vs Logical Banked standard implementation: 0.18mW

[~accountid:5acffeafaa802f2a797a955c] & [~accountid:622a8208db58c100687dd15a]: Is this reduction worthwhile? Do i need to report more figures?

Databases are available on *iota06*
* Standard Implementation:
** /scratch/jbailey/MAL2729_StandardPRF/build/p650_7nm_H240/Solitaire/PowerArtist_7nm_H240/solitaire_outputs/imp/build/power-rundir/
* Explicitly Banked Implementation:
** /scratch/jbailey/MAL2729_BankedPRF/build/p650_7nm_H240/Solitaire/PowerArtist_7nm_H240/solitaire_outputs/imp/build/power-rundir",27/Sep/22 11:12 AM;622a8208db58c100687dd15a;The impact is small at PA but if its helping timing overall we should check in for Panda. We would get more benefit as timing ease in rdOut paths ,28/Sep/22 12:43 AM;629ab2a89bc7150068d00cdf;[~accountid:5acffeafaa802f2a797a955c] You okay with us making this change permanent for P650/P670? We did have a ticket about PRF timing in P650 but the team (Michael White) said it was resolved on its own…We might have to let implementation team know if we make this change?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] complex vrgather deadlock when tail+mask agnostic enforced,[TGV] deadlock agnostic enforced,Execution Unit ,Vector,,,MAL-2728,127131,,Bug,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,9/27/2022 6:02,9/27/2022 20:02,9/28/2022 0:51,,,,,,,,,,,,,,,,,,,,,,,0,TGV,,,"*Error::*

Error: ""/scratch/naverath/sep-27/federation/builds/coreip_p670/verilog/design/SiFive_MSHREntry.sv"", 1495: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.mshrEntries_0: at time 3843162500 ps
assert failed (verification library): MSHR Entry Valid Non-Reusable Hang  @\[MSHR_Mallard.scala 4251:14]
Fatal: ""/scratch/naverath/sep-27/federation/builds/coreip_p670/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", 521: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.mshrEntries_0.SiFive_MSHREntry_assert: at time 3843162500 ps

*SHA1::*  c30b2f1604841d843dbc445c460ca99c261e11a7
*Config::*  coreip_p670
*Waves::* gamma25://scratch/naverath/sep-27/federation/builds/coreip_p670/sim/sim/rerun.outline_mshr/sting_StingSiFiveTuple_T_0256/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb
*rerun. Outline::* {{/work/nicolasb/tgv_bug_outlines/sting/MAL-2728.outline}}


*Debug-Info::*
Last retired PC=0x54068d582

Next set of instructions::
 54068d592:	775225d7          	.4byte	0x775225d7 //[vmnand.mm|http://vmnand.mm] v11, v21, v4   , GID=0x10a
   54068d596:	31854757          	.4byte	0x31854757 //vrgather.vx v14, v24, a0, v0.t, GID=0x10a
   54068d59a:	332a0457          	.4byte	0x332a0457 //vrgather.vv v8, v18, v20  , GID=0x10b
   54068d59e:	00638303          	lb	t1,6(t2)
   54068d5a2:	00f37313          	andi	t1,t1,15
   54068d5a6:	00030c63          	beqz	t1,54068d5be <skip_dec_3_16_f6_c0_232>

Here CmplReq not received for Gid=0x10b ,
After back tracing it seems IssueQ not sending GId=0x10b and So no ComplReq

Running this with [https://sifive.atlassian.net/browse/MAL-2713|https://sifive.atlassian.net/browse/MAL-2713|smart-link] PR fixes.",Naveen Rathore,Nicolas Brunie,,,,,,,,,,,,,,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,c30b2f1604841d843dbc445c460ca99c261e11a7,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-27T19:33:58.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,No,,,,,,,,,,,,2|i019wn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26499/files],,,,,,,,,,,,,24:57.4,"27/Sep/22 8:24 AM;6065017e90e3950069cf01c5;Similar to the remark I made on [https://sifive.atlassian.net/browse/MAL-2734|https://sifive.atlassian.net/browse/MAL-2734|smart-link] 

{quote}While debugging [https://sifive.atlassian.net/browse/MAL-2713|https://sifive.atlassian.net/browse/MAL-2713|smart-link] I found a bug in the vrgather where if configured with both tail and mask agnostic a complex {{vrgather}} will stall indifinitely in the pipeline. This looks like a similar issue.{quote}

I have a fix under test",27/Sep/22 2:21 PM;6065017e90e3950069cf01c5;Issue seems to be fixed by [https://github.com/sifive/federation/pull/26499|https://github.com/sifive/federation/pull/26499|smart-link],"27/Sep/22 3:07 PM;6065017e90e3950069cf01c5;A bit more information, the last {{vset*}} executed seems to be

{noformat}                   0:     100161 [1] pc=[000000054068d436] W[r13=0000000000000004][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[0d9076d7] vsetvli a3, zero, e64, m2, ta, ma{noformat}

which sets both mask and tail policies to agnostic",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
Mallard top logic Movement,,,,,,MAL-2727,127125,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,Ashish Singh,62b5728c0c77011bdfde3d17,Ashish Singh,62b5728c0c77011bdfde3d17,9/27/2022 4:20,9/27/2022 10:29,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/Tile,,,,,,,,0,,,,"Hi Team,

We were checking the logic sitting in Mallard top module.  Attached diagram describe the same. We have 3 request based on this:

# Move all logic generating io_coreBusy signal into LSU module. This will require movement of cell I_0, I_1, I_2, I_3, I_4, C6, C5, C8 into LSU.
# Please add a pipeline register at the output of C8 as one of the input signal is coming from TGV module which is sitting very far from io_coreBusy port.
# Please replicate C7 OR gate in feu, tgv and lsu. On separate note, we don’t see any flop driving and being driven by C7 OR gate. Is it expected?

Regards

Ashish",Ashish Singh,John Ingalls,Josh Smith,,,,,,,,,,,,,62b5728c0c77011bdfde3d17,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,27/Sep/22 4:13 AM;ug:988d9718-3c8a-4685-88a1-40144cb892e5;image-20220927-111310.png;https://sifive.atlassian.net/secure/attachment/78342/image-20220927-111310.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i019vb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,22:30.3,"27/Sep/22 9:22 AM;5acffeafaa802f2a797a955c;{quote}Please replicate C7 OR gate in feu, tgv and lsu. On separate note, we don’t see any flop driving and being driven by C7 OR gate. Is it expected?{quote}

The {{disableHangCatcher}} is a signal that should only be used for simulation purposes to disable assertions that we have for catching core hangs.  We need to see why this is not removed in synthesis.

[~accountid:5bb6808b9ba2930990f81895] FYI",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Correlation: Look into vfmerge latency,[TGV] Correlation vfmerge latency,,,,,MAL-2726,127122,,Bug,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,,Nicolas Brunie,6065017e90e3950069cf01c5,Ian Chuang,61aaae1d9615eb006f5ff922,Ian Chuang,61aaae1d9615eb006f5ff922,9/27/2022 3:05,9/27/2022 22:46,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"According to the miscorrelation study [https://sifive.atlassian.net/browse/SPARTA-2289|https://sifive.atlassian.net/browse/SPARTA-2289|smart-link], {{vfmerge}} latency microbenchmark exposes the latency as 4 cycles on the design. The merge operation of an uOP should take only 1 cycle. We confirmed the tag broadcasting is working correctly and need to take a deep-dive into other units. 

*Failing tests*

Vector FP merge with a dependency chain 

* 0080121 vfmergevfm_e64_m1_vlmax

*Federation SHA*

{{f6c29fd8af9}}

*Configuration*

{{coreip_p670}}

*Error messages*

NA. It’s a performance issue 

*Outline:*

copied into {{/work/nicolasb/tgv_bug_outlines/sparta/MAL-2726.outline}}

*outline*

{noformat}require_relative 'sparta_workload'


checkpoint_list = %w[
0080/121
]

checkpoint_list.each  do |checkpoint|
    run_test(get_wkld_configure_test(checkpoint))
end{noformat}

*Reproducing*

To reproduce the issue, please follow the following steps in your Federation clone:

# Build the coreip_p670 configuration from the indicated sha1
# Run *sitest* on the provided outline
{noformat}./sitest --waves=fsdb @/work/nicolasb/tgv_bug_outlines/sparta/MAL-2726.outline{noformat}",David Kravitz,Ian Chuang,I-Cheng Cheng,Josh Smith,Knute Lingaard,Nicolas Brunie,Zhen Wei,,,,,,,,,5fd15143b4a74900763834e0,61aaae1d9615eb006f5ff922,5d7bfdaa003e040c3e175060,5acffeafaa802f2a797a955c,5e1374fb7a22c90da0c60495,6065017e90e3950069cf01c5,5e49f622a17f930c9b94b6cd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,27/Sep/22 5:37 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220928-003204.png;https://sifive.atlassian.net/secure/attachment/78370/image-20220928-003204.png,27/Sep/22 5:50 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220928-004954.png;https://sifive.atlassian.net/secure/attachment/78371/image-20220928-004954.png,27/Sep/22 10:45 PM;ug:289ae57a-9468-42e4-b3c7-1f69f2f4f10e;image-20220928-054235.png;https://sifive.atlassian.net/secure/attachment/78379/image-20220928-054235.png,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,32e58cb8d4449bad74bdaf11ec3790b329f8a385,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i019un:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,37:21.4,"27/Sep/22 3:19 AM;61aaae1d9615eb006f5ff922;[~accountid:6065017e90e3950069cf01c5], I am suspecting it’s S2V buffer. It might be a good start to look into. ","27/Sep/22 5:37 PM;6065017e90e3950069cf01c5;so workload is basically pairs of {{vfmv.f.s}} followed by {{vfmv.s.f}} with a linear dependency chain

{noformat}                   0:       9834 [1] pc=[0000000080000a82] W[f31=ffffffff00000000][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[42801fd7] vfmv.f.s ft11, v8
C                   0:       9834 [1] pc=[0000000080000a86] W[r 0=0000000000000000][0] R[f31=ffffffff00000000] R[r 0=0000000000000000] inst=[420fd457] vfmv.s.f v8, ft11
C                   0:       9834 [1] pc=[0000000080000a8a] W[f31=ffffffff00000000][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[42801fd7] vfmv.f.s ft11, v8
C                   0:       9834 [1] pc=[0000000080000a8e] W[r 0=0000000000000000][0] R[f31=ffffffff00000000] R[r 0=0000000000000000] inst=[420fd457] vfmv.s.f v8, ft11
C                   0:       9834 [1] pc=[0000000080000a92] W[f31=ffffffff00000000][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[42801fd7] vfmv.f.s ft11, v8
C                   0:       9834 [1] pc=[0000000080000a96] W[r 0=0000000000000000][0] R[f31=ffffffff00000000] R[r 0=0000000000000000] inst=[420fd457] vfmv.s.f v8, ft11
C                   0:       9834 [1] pc=[0000000080000a9a] W[f31=ffffffff00000000][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[42801fd7] vfmv.f.s ft11, v8{noformat}

* There is one write to {{s2v}} every 9 cycles (8 empty cycles between two writes), and reads happen the same cycle as write
* same thing for {{v2s}}
* a write/read in {{v2s}} occurs 4 cycles after a write/read in {{s2v}}
* a write/read in {{s2v}} occurs 5 cycles after a write/read in {{v2s}}

!image-20220928-003204.png|width=2242,height=707!","27/Sep/22 5:50 PM;6065017e90e3950069cf01c5;Instructions are issued two by two with 7-cycle gap between them.

It looks like the {{s2v}} uop is properly waking up the {{v2s}} so they are issued back to back and then the {{v2s}} is only going to write to the {{v2s}} buffer in  {{WB}}  .

!image-20220928-004954.png|width=1765,height=403!","27/Sep/22 8:00 PM;61aaae1d9615eb006f5ff922;[~accountid:6065017e90e3950069cf01c5], sorry, I found that I provided the wrong test ID. It should be 0080/121. Could you modify your test outline and give it a try?",27/Sep/22 9:27 PM;6065017e90e3950069cf01c5;[~accountid:61aaae1d9615eb006f5ff922] the vmv did not look like a vfmerge 🙂 . I will try both checkpoints . I need to figure some things for the fp ,"27/Sep/22 10:45 PM;61aaae1d9615eb006f5ff922;[~accountid:6065017e90e3950069cf01c5] both have “vfm“, right? 😆 

I think I found the reason for the 4-cycle latency. It’s the scalar register read instruction that is waiting for the vector instruction to wake up. 

!image-20220928-054235.png|width=1028,height=320!

I am thinking if we need the scalar read instruction to depend on the vector instruction? It seems not necessary from the instructions' perspective. But not sure if any potential deadlocks will happen. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
2-Cycle RR/Bypass Stage for ExPipes/FexPipes,,,,,,MAL-2725,127121,123004,Sub-task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Julian Bailey,629ab2a89bc7150068d00cdf,Julian Bailey,629ab2a89bc7150068d00cdf,Julian Bailey,629ab2a89bc7150068d00cdf,9/27/2022 3:01,9/27/2022 9:19,9/28/2022 0:51,,,,,,,,,,,,,,RTL/FEX,RTL/IEX,,,,,,,,0,,,,"For timing reasons we will need to investigate 2-cycle register read/bypass in the ExPipes & FexPipes.

This work is a mixture between PRF growth and ExPipe Growth feasibility. 

We need to work out a sensible pipe stage point to add the extra stage.

One logical point for a register might be between the muxing from within the rgeister bank and selecting between banks within the PRF, we can then register the bypass and select the PRF bank and bypassing in the new stage. (Will provide a diagram for clarity as this description isnt clear enough\!).",John Ingalls,Josh Smith,Julian Bailey,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2418,MAL-2421,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i019uf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,123004,IEX PRF Growth Feasibility,To Do
Prototype PRF Port Sharing,,,,,,MAL-2724,127120,123004,Sub-task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Julian Bailey,629ab2a89bc7150068d00cdf,Julian Bailey,629ab2a89bc7150068d00cdf,Julian Bailey,629ab2a89bc7150068d00cdf,9/27/2022 2:53,9/27/2022 9:18,9/28/2022 0:51,,,,,,,,,,,,,,RTL/IEX,,,,,,,,,0,,,,"The number if PRF read ports in the IEX is massive (20 Readd, 9 Write). There have been a number of performance studies that indicate it should be possible to share read ports between pipes without performance impact.

We need to get an idea of how this is going to work, aiming for 12 Read ports as an upper limit (this might not be achievable in this prototyping study).

In this study we shall attempt to share a Read port between two simple integer pipes (ExPipe 0 and 1) so that each have a dedicated Read port and 1 shared read port.

[~accountid:5acffeafaa802f2a797a955c] indicated this would work at a bank level, so that perhaps we have 20 physical ports at the top-level of the PRF but internally eacgh bank has fewer ports, this way, if pipes are reading from different banks we can still manage to read two operands. This is smart but requires a bit more thought, ISS stage of the ExPipe will need to work out if one or two operands are needed from the PRF and inidcate this to the shared ExPipe so that instructions can be replayed if there if conflict.

This is us trying to get ahead of the game as this will be needed for Healdsburg/Napa.",Josh Smith,Julian Bailey,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2418,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i019u7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,123004,IEX PRF Growth Feasibility,To Do
Move logic in IEX relating to DispSrcsReady and SrcsReady so the logic W.R.T TagMatch to reduce logic,,,,,,MAL-2723,127118,123007,Sub-task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,Julian Bailey,629ab2a89bc7150068d00cdf,Julian Bailey,629ab2a89bc7150068d00cdf,9/27/2022 2:49,9/27/2022 9:03,9/28/2022 0:51,,,,,,,,,,,,,,RTL/IEX,Timing,,,,,,,,0,,,,"!image-20220927-094921.png|width=1382,height=823!

The logic in the green cloud in the picture needs some chages to improve timing. The Mux whose inputs are disSrcsReady and SrcsReady need to be moved so that the tag matching is done after the mux and the logic is shared.
",John Ingalls,Josh Smith,Julian Bailey,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2421,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,27/Sep/22 2:50 AM;ug:015362ac-3118-4c7e-9dbc-3954250f02cc;image-20220927-094921.png;https://sifive.atlassian.net/secure/attachment/78339/image-20220927-094921.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i019tr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,03:27.1,27/Sep/22 2:51 AM;629ab2a89bc7150068d00cdf;[~accountid:5acffeafaa802f2a797a955c] Are you able to be more descriptive about this? Trying not to be too vague here so that we don’t forget what needs doing and so it can be reassigned easily.,"27/Sep/22 9:03 AM;5acffeafaa802f2a797a955c;In the Issue Queue, there are two sections of the RTL for CAM’ing against the tag buses.  One section is for handling instructions dispatching to the issue queue this cycle (which checks _ALL_ tag buses), and the other section is inside of each entry, for checking against the first-cycle tag bus from each execution pipeline.



{noformat}  // Handle tracking source readiness
  // Instruction in Dispatch stage needs to monitor all tags from ISS to WB.
  val dispSrcInfo       = Wire(Vec(ip.nDisp, Vec(ip.nSrcs, new IssSrcInfo(mp))))
  val dispSrcLateReplay = Wire(Vec(ip.nDisp, Vec(ip.nSrcs, Bool())))

  val dispSrcTagMatch = io.dispReq.map(r => r.bits.srcTag.map(s => TagCam(s, io.exPipeTag, true)))
  val cannotLateReplay = ((ip.nSrcs == 3) && !mp.lsu.fastLoadFloat).B  // MAL-1065, MAL-1429
  dispSrcTagMatch.zipWithIndex.foreach { case (d, di) =>
    d.zipWithIndex.foreach { case (s, si) =>
      val srcInWB = s.zipWithIndex.map { case (stage, i) =>
        (  stage(mp.exStageSelBits)
        && (  !io.exPipeTagReplay(i)(mp.exStageSelBits-1)
           || io.exPipePrfWrVld(i))) }.orR
      val fwdCtl  = FwdCtlEncode(mp, s)

      // Check for replay from same stage as broadcast. Instructions can't replay directly from ISS stage, so ignore ISS tag match for
      // better timing.
      val fwdCtlForReplay = FwdCtlEncode(mp, s.map(_.tail))
      val srcLateReplay = (  (fwdCtlForReplay.stageSel & io.exPipeTagReplay(fwdCtlForReplay.pipeSel).asUInt).orR
                          && !(fwdCtlForReplay.stageSel(mp.exStageSelBits-1) && io.exPipePrfWrVld(fwdCtlForReplay.pipeSel)))

      dispSrcInfo(di)(si).tag.valid := io.dispReq(di).bits.srcTag(si).valid
      dispSrcInfo(di)(si).tag.ready := io.dispReq(di).bits.srcTag(si).ready || srcInWB
      dispSrcInfo(di)(si).tag.bits  := io.dispReq(di).bits.srcTag(si).bits
      dispSrcInfo(di)(si).fwdCtl    := fwdCtl

      dispSrcLateReplay(di)(si) := srcLateReplay && !cannotLateReplay
      mallardAssert(!io.dispReq(di).valid || !(cannotLateReplay && srcLateReplay), ""Unexpected source late replay in FEX issue queue"")

      s.zipWithIndex.map { case (pipe, pi) =>
        for (stgidx <- 0 until pipe.size) {
          ccover(srcInWB, s""ISSQ_DISP${di}_SRC${si}_HIT_PIPE${pi}_STAGE${stgidx}"", s""Dispatch ${di} source ${si} tag hit pipe ${pi} stage ${stgidx}"")
        }
      }
    }
  }{noformat}

Line 6 above calling {{TagCam}}1 is doing the tag comparison for each source operand, for each instruction dispatching (for IEX and FEX, we only have 1 dispatching op/cycle)

Inside the {{IssQEntry}} class, we use a separate block of logic for tracking the source operands:

{noformat}  srcInfo.zipWithIndex.foreach { case (s,i) =>
    val (info, ready, replay) = IssSrcMonitor(gen               = new IssSrcInfo(mp),
                                              pipeTag           = io.exPipeTag,
                                              ldNxtTag          = VecInit(Seq(0.U.asTypeOf(Valid(new TagBroadcast(mp))))),
                                              pipeTagReplay     = io.exPipeTagReplay,
                                              pipePrfWrVld      = io.exPipePrfWrVld,
                                              valid             = valid,
                                              dispWrEn          = dispWrEn,
                                              dispSrcInfo       = dispSrcInfo(i),
                                              dispSrcLateReplay = dispSrcLateReplay(i),
                                              mp = mp)
    s               := info
    srcSpecReady(i) := ready{noformat}

{{IssSrcMonitor}} is “instantiated” for each source operand, and inside of that logic we can {{TagCam}} again:'

{noformat}    val tagMatch      = TagCam(s.tag, pipeTag, false)
    val tagMatchAny   = tagMatch.flatten.reduce(_ || _)
    val tagMatchLdNxt = TagCam(s.tag, ldNxtTag, false)
    val fwdCtlNxt     = FwdCtlEncode(mp, tagMatch)
    val srcReplaying  = Wire(Bool())

    // Determine if instruction producing source is replaying, so we should not try to issue
    srcReplaying := (s.fwdCtl.stageSel & pipeTagReplay(s.fwdCtl.pipeSel).asUInt).orR

    when(dispWrEn) {
      // Take dispatch inputs
      s                 := dispSrcInfo
      s.fwdCtl.stageSel := Mux(dispSrcLateReplay, 0.U, dispSrcInfo.fwdCtl.stageSel)
    }.elsewhen(valid) {

      // Set source as ready if the source is in WB stage and not replaying. We can only get WB replays from sources which are loads
      s.tag.ready := (s.tag.ready
        || (s.fwdCtl.stageSel(mp.exStageSelBits - 1)
          && (!pipeTagReplay(s.fwdCtl.pipeSel)(mp.exStageSelBits - 1)
            || pipePrfWrVld(s.fwdCtl.pipeSel))))

      when(tagMatchAny) {
        // We hit a broadcast, take new forwarding control info
        s.fwdCtl := fwdCtlNxt
      }.otherwise {
        // Update existing forwarding control by advance stageSel pointer
        s.fwdCtl := s.fwdCtl.advance(clear = srcReplaying)
      }

      mallardAssert(!(s.tag.ready && (tagMatchAny || tagMatchLdNxt)), ""make sure we don't match tag on a source that's marked ready"")
    }{noformat}

So the {{tagMatch}} signals on line 1 match against the tag buses again (the {{false}} parameter makes it so that only the first-cycle tag bus from each pipe is checked, not _all_ tag buses).



So overall, the path from issue queue pick → broadcast destination tag → tag matching goes through both the {{dispSrcInfo}} cone of logic _and_ the {{tagMatch*}} cone inside the IssQEntry.  The {{when (dispWrEn) {}}} block is essentially the 2:1 mux that updates the source operand flops with either the information coming from dispatch or the information coming from the issue queue entry.

My thought was that for the first-cycle tag bus (which is the most timing critical), we could just match against it one, with a source operand tag that is muxed between the dispatching source tag and the issue queue entry’s source tag.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,123007,IEX Pipe Growth Feasibility,To Do
Investigate moving the moving exPipe tagmuxValid to age matrix mux ,,,,,,MAL-2722,127117,123007,Sub-task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Eleni Maragkoudaki,62e422de0b4bf7ad924bc51a,Julian Bailey,629ab2a89bc7150068d00cdf,Julian Bailey,629ab2a89bc7150068d00cdf,9/27/2022 2:34,9/27/2022 8:11,9/28/2022 0:51,,,,,,,,,,,,,,RTL/IEX,Timing,,,,,,,,0,,,,"As discussed in [https://sifive.atlassian.net/wiki/spaces/CIP/pages/2373189776/IEX+FEX+critical+path+deep-dive|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2373189776/IEX+FEX+critical+path+deep-dive|smart-link].

We talked about moving the exPipe tagmuxValid mux into the to age matrix mux to improve timing.

Please look at making this change on a branch and determine if timing for this path improves, pass the branch tot he implmention team for trials as required.


!image-20220927-093536.png|width=1382,height=823!",John Ingalls,Josh Smith,Julian Bailey,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2421,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,27/Sep/22 2:35 AM;ug:015362ac-3118-4c7e-9dbc-3954250f02cc;image-20220927-093536.png;https://sifive.atlassian.net/secure/attachment/78336/image-20220927-093536.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i019tj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,123007,IEX Pipe Growth Feasibility,To Do
Investigate sharing the issue queue between ExPipes,,,,,,MAL-2721,127113,123008,Sub-task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Steffen Kunze,62cbe3403d382dfc9c5f3078,Julian Bailey,629ab2a89bc7150068d00cdf,Julian Bailey,629ab2a89bc7150068d00cdf,9/27/2022 2:29,9/27/2022 8:10,9/28/2022 0:51,,,,,,,,,,,,,,RTL/IEX,RTL/RDU,,,,,,,,0,,,,"Look at whether sharing the issue queues between Expipes will impact performance. Not all ExPipes should share issue queues, we need to be sensible with this.

We can prototype this by setting the issue queue for one pipe to a small number and increasing the cross issue for an adjacent pipe.",John Ingalls,Josh Smith,Julian Bailey,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2422,MAL-2421,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i019sn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,123008,IEX Issue Queue Growth Feasibility,To Do
Reducing logic depth for io_iexPipeFwdData_*_*[*] bus from IEX to LSU,,,,,,MAL-2720,127106,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,,Julian Bailey,629ab2a89bc7150068d00cdf,Sumit Jha,623e366950bb2b0070b7d28e,Sumit Jha,623e366950bb2b0070b7d28e,9/27/2022 0:20,9/27/2022 9:29,9/28/2022 0:51,,,,,,,,,,,,,,RTL/IEX,Timing,,,,,,,,0,,,,"Hi Josh,

Current timing path from IEX to LSU for iexPipeFwdData is very long both in terms of logic depth(>30 instances) and wire delay (>250u). Taking umavoidable wire delay into account we need to cut cell count in this path by ~5-6 stages. There are two parts to this problem.

# High logic depth inside ALU
# >10 instances inside LSU for store data.

As discussed, could you explore the ways to cut down overall logic depth in ALU? I’ll raise a separate Jira for LSU part.

Thanks

Sumit",John Ingalls,Josh Smith,Sumit Jha,Vaibhav Gupta,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,623e366950bb2b0070b7d28e,623e4830b75ca80070580145,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,27/Sep/22 12:19 AM;ug:4ab0b3d8-6319-476f-94ae-6101f288a486;iexPipeFwdData.docx;https://sifive.atlassian.net/secure/attachment/78326/iexPipeFwdData.docx,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i019r3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,29:36.0,"27/Sep/22 9:29 AM;5acffeafaa802f2a797a955c;Reassigning to Julian for now, but part 2 should be a separate ticket.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Strided vector load store address generation,,,,,,MAL-2719,127104,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,9/26/2022 23:59,9/27/2022 1:10,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,,Brad Wu,John Ingalls,,,,,,,,,,,,,,62103777eb2978006893b778,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2442,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-27T21:39:53.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2442,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,,,,,,,,,,,,,,,,2|i019qn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Pay technical debt: Decouple vector/scalar floating point half-precision configuration,,,,,,MAL-2718,127076,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Shaka Kao,5f94696c29bd8a006f94f0e1,Shaka Kao,5f94696c29bd8a006f94f0e1,Shaka Kao,5f94696c29bd8a006f94f0e1,9/26/2022 20:18,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Currently, the TGV floating point instantiates Mallard’s {{FloatUtils}} and causes a “bug” that:

{{In case scalar(Mallard) enables fp16(zfh), but vector(TGV) does not enable vector fp16, TGV will obtain the wrong minFLen value.}}

So, the current P650/P670 has enabled scalar FP half-precision by default, and thus TGV also needs to enable FP half-precision. It’s not a problem to let both scalar/vector enable FP half-precision at the same time; The problem will occur when a requirement is “Scalar has FP half-precision ON, and Vector has FP half-precision OFF”.

Detail discussion please see [here|https://github.com/sifive/federation/pull/21710#issuecomment-1105835525].

{color:#ff5630}*_NOTE_*{color}{color:#ff5630} *This is NOT a Panda requirement. Set the Target version to Healdsburg DR.*{color}",Nicolas Brunie,Shaka Kao,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i019kv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] add coverpoints for special cases of vsetvli in RDU and VSetALU,,,,,,MAL-2717,127041,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/26/2022 16:22,9/26/2022 16:30,9/28/2022 0:51,,,,,,,,,,,,,,RTL/RDU,TGV_RTL/RDU,TGV_RTL/Top,,,,,,,0,,,,"We must make sure we cover the following cases:

* {{vsetvli x0, x0, ...}} instruction with *valid* {{vl}} for the new {{vtype}}
* {{vsetvli x0, x0, ...}} instruction with *invalid* {{vl}} for the new {{vtype}}
* {{vsetvli x0, x0}} part of the same decode group as other {{vset*}} (before it)
* {{vsetvli x0, x0}} which must read its {{vl}} value after a rewind",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2625,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2625,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i019ef:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[HB] LSU feasibility analysis: grow L1MSHRs 24->32,,,,,,MAL-2716,127018,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Sihao Liu,62b1563ab065974c3e23a9ea,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,9/26/2022 14:12,9/26/2022 16:17,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"[https://sifive.atlassian.net/browse/MAL-2324|https://sifive.atlassian.net/browse/MAL-2324|smart-link] grew the L1MSHRs from 24-32 in {{tile_healdsburg.json}}.

For a feasibility study, we should try synthesizing P650 with 32 MSHRs.

If not feasible, then we could bank the MSHRs by either address bit\[6] or by even/odd entry number.

This could be done in a tightly coupled fashion with [https://sifive.atlassian.net/browse/MAL-1942|https://sifive.atlassian.net/browse/MAL-1942|smart-link] and [https://sifive.atlassian.net/browse/MAL-2706|https://sifive.atlassian.net/browse/MAL-2706|smart-link].",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2324,,,,,,,MAL-1942,MAL-2706,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,CIP-3958,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0199b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Contextual optimizations to uop signals,,,,,,MAL-2715,127012,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,9/26/2022 13:05,9/26/2022 13:05,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Continuing with the idea introduced with this PR: [https://github.com/sifive/federation/pull/26351|https://github.com/sifive/federation/pull/26351|smart-link]…

Some control signals inherited from Bullet made specific assumptions about the context the control signal would be used in. For example {{mask_out_only_op}} is valid for some vector load/store instructions, when those are not {{vmadc}} or {{vcmp}} instructions, but this is okay because the {{def}} is only used within the VALU context. We should review the usage of existing control words in TGV / Mallard to see if there are areas where a signal is used across multiple contexts (RDU, VRDU, SEQ, VEX) and see if there are optimizations that we can make in each of them.

Is there any way to define the context a uop is being accessed in, and generate optimal uop {{defs}} from the context?",Andrew Hanselman,Nicolas Brunie,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0197z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
LSU: LsIssQ pick stores behind loads,,,,,,MAL-2714,127003,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Won't Do,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,9/26/2022 11:59,9/26/2022 11:59,9/28/2022 0:51,9/26/2022 11:59,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"[https://sifive.atlassian.net/browse/MAL-1430|https://sifive.atlassian.net/browse/MAL-1430|smart-link] tightened the restrictions on picking loads from the LsIssQ to speed up timing, and made the pick _stop_ at the first _load_ that exceeds {{nLDPipes}}.  In configs with {{nLSTPipes >= (nLDPipes+2)}}, e.g. 4x LSTPipes and 2x LDPipes, this would prevent issuing a store in the fourth LSTPipe behind three loads (the last of which would hold).

We could relax this to allow issuing that store by changing this in the LsIssQ:

{noformat}  val issSelectLsNotRead =   // only issue nLDPipes loads per cycle to avoid contention on LDPipe returning data
    (  (lsp.nLSPipes > lsp.nLDPipes).B
-   && (PopCount(issOldestReadyReqRead.take(ls+1)) > lsp.nLDPipes.U))
- when (issSelectLsNotRead || io.chicken.forceSingleIssueToLSU) {
+   && (PopCount(issOldestReadyReqRead.take(ls)) > lsp.nLDPipes.U))
+ when ((issSelectLsNotRead && io.issReq_ISS(ls).bits.memRead) || io.chicken.forceSingleIssueToLSU) {{noformat}

Edit: actually, on further thought, nevermind, this is a un-interesting configuration; all of our standard configs (P550, P650, Healdsburg) have at most one extra LSTPipe more than nLDPipes.",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1430,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{repository={count=2, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-27T09:53:11.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0195z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[TGV]:: vsetvli instruction not retaining previous value and Programmed VL to 0,  in case of rs1=x0 ",[TGV] instruction not retaining previous value,,,,,MAL-2713,126979,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,9/26/2022 6:50,9/27/2022 10:35,9/28/2022 0:51,9/27/2022 10:26,,,,,,,,,,,,,,,,,,,,,,0,TGV,,,"*Error::*

\[COSIM-ERROR]\[0] COSIM VS RTL VL/VTYPE MISMATCH
\[COSIM-ERROR]\[0] m_dut_inst_item: \[354245] InstInfo: VLD=1 | PC=0x000000004406fad2 | INSN=0x08e07057 | INST_DST=VECTOR | REDUCTION = false | WR: en=false r0=0x0000_0001_0000_0003_0000_0003_0000_0002 mask=000000ff | READY=1 | CSR_TIMER=354245 | PRV=3 | MSTATUS=0x8000000a000066aa | MTVEC=0x0000000080000400 | MCAUSE=0x8000000000000007 | VSTART=0 | VL=0 | SEW=16 | LMUL=mf4 | VSEGELT=0
\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x000000004406fad2 | INSN=0x08e07057 | INST_DST=NONE | REDUCTION = false | WR:
\[COSIM-ERROR]\[0] m_dut:  en=false r0=0x0000_0001_0000_0003_0000_0003_0000_0002 mask=000000ff
\[COSIM-ERROR]\[0] m_sim:

*SHA1::* 9c2839b4da01acf4b027935c99180470ac455e03
*Config::* coreip_u8_minimal_vector
*Waves::* gamma25:://scratch/naverath/sep-26/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0142/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb
*rerun. Outline::*  Outline copied to {{/work/nicolasb/tgv_bug_outlines/sting/MAL-2713.outline}}

*Debug-Info:*:
As per [~accountid:6065017e90e3950069cf01c5]  comment in
[https://sifive.atlassian.net/browse/MAL-2396?focusedCommentId=383037|https://sifive.atlassian.net/browse/MAL-2396?focusedCommentId=383037|smart-link] 
VL shouldn’t change incase rs1=x0
Last two vset* instructions::
core   0: 0x000000004406faaa (0x0d807357) vsetvli t1, zero, e64, m1, ta, ma   //Changed VL to 2
core   0: 3 0x000000004406faaa (0x0d807357) x6  0x0000000000000002
core   0: 0x000000004406fad2 (0x08e07057) vsetvli zero, *zero*, e16, mf4, tu, ma   //VL shouldn’t change
core   0: 3 0x000000004406fad2 (0x08e07057)

In this case 2nd  vset instruction dispatched in cycle @7087.0425 us


!image-20220926-134726.png|width=1394,height=651!",Abhishek Kumar,Ishita Shah,Josh Smith,Naveen Rathore,Nicolas Brunie,Ramesh Bitra,Satish Bhavanari,Srivatsa Yogendra,Zhiqiang Hao,,,,,,,620ee634a715c6006914e852,607e26355431a500701f5aed,5acffeafaa802f2a797a955c,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,61e619bcf0ed04006872cc59,626058b9436629006f73dd4b,5a938e9c0913194d2d262658,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26/Sep/22 6:50 AM;ug:00e334db-2e60-4fae-a5b5-d5d39244fe5c;image-20220926-134726.png;https://sifive.atlassian.net/secure/attachment/78274/image-20220926-134726.png,26/Sep/22 10:36 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220926-173651.png;https://sifive.atlassian.net/secure/attachment/78286/image-20220926-173651.png,26/Sep/22 12:10 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220926-191016.png;https://sifive.atlassian.net/secure/attachment/78293/image-20220926-191016.png,,,,,,,,,,,,,,9c2839b4da01acf4b027935c99180470ac455e03,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-27T10:06:04.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/a30c8813c3a3a03ea6512c4763e150634278fc0e,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i0190n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26447/files],,,,,,,,,,,,,48:05.6,"26/Sep/22 9:48 AM;6065017e90e3950069cf01c5;I think I am able to reproduce the cosim issue with a much simpler test

**

{noformat}#include ""riscv_test.h""
#include ""test_macros.h""
#include ""vector.h""

#if __riscv_xlen == 64
RVTEST_RV64UV
#else
RVTEST_RV32UV
#endif
RVTEST_CODE_BEGIN

  #-------------------------------------------------------------
  # basic
  #-------------------------------------------------------------


  vsetvli a2, x0, e64, m1

  ## From X to vector
  li t0, 0x0123456789abcdef // to be used as indexes
  li t1, 0xfedcba9876543210 // to be used as data
  vmv.v.x v2, t0   // splat 32b value across v2
  vmv.v.x v1, t1   // splat 32b value across v2

  vsetivli a2, 7, e8, m1
  vadd.vv  v0, v1, v2
  vsetvli x0, x0, e32, m1
  vadd.vv  v0, v1, v2

  j pass

pass: RVTEST_PASS
fail: RVTEST_FAIL

RVTEST_CODE_END

  .data
RVTEST_DATA_BEGIN

  TEST_DATA

.balign 16
# FLEN = 32
vec_one:
    .float 1.0
    .float 1.0
    .float 1.0
    .float 1.0


RVTEST_DATA_END{noformat}

Getting a similar error

**

{noformat}*Verdi* : Flush all FSDB Files at 274,182,500 ps.
*Verdi* : Flush all FSDB Files at 274,182,500 ps.

*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 54837 simulation cycles (in TestDriver.report_phase_actions)

*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 54837 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 274,182,500 ps.
*Verdi* : Close all FSDB Files at 274,182,500 ps.
$finish at simulation time            274182500
           V C S   S i m u l a t i o n   R e p o r t
Time: 274182500 ps
CPU Time:     54.460 seconds;       Data structure size:  32.4Mb
Mon Sep 26 09:46:07 2022
=== sitest found errors in test sim/tgv_debug.outline/vector/tgv-debug:
[VL-VTYPE-Checker][0] RTL vl = 0 , vtype = 10
[COSIM-ERROR][0] COSIM VS RTL VL/VTYPE MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [13087] InstInfo: VLD=1 | PC=0x0000000080000c6e | INSN=0x01007057 | INST_DST=VECTOR | REDUCTION = false | WR: en=false r0=0x0000_0000_0000_0000_0000_0000_0000_0000 mask=000000ff | READY=1 | CSR_TIMER=13087 | PRV=0 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080000d40 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=0 | SEW=32 | LMUL=m1 | VSEGELT=0

[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000080000c6e | INSN=0x01007057 | INST_DST=NONE | REDUCTION = false | WR:



[COSIM-ERROR][0] m_dut:  en=false r0=0x0000_0000_0000_0000_0000_0000_0000_0000 mask=000000ff
[COSIM-ERROR][0] m_sim:

sifive_test_results_pkg::set@(t=264133000): Test Result Setting for Index ID [3] Done [1] Success [0] Exit Code [13107]

sifive_test_results_pkg::report_status.unnamed$$_0@(t=274183000): Test Result Checking Registered Name [TestDriver.testHarness.PL2Scb] Index ID [2] Done [0] Success [0] Exit Code [0]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=274183000): FAILED: Test Result Registered Name [TestDriver.testHarness.cosim] Index ID [3] Done [1] Success [0] Exit Code [13107]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=274183000): FAILED: Test Result Registered Name [TestDriver.testHarness.i_TF] Index ID [4] Done [1] Success [0] Exit Code [0]

sifive_test_results_pkg::report_status@(t=274183000): done:          3, registered:          3, success:          1


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 54837 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 274,182,500 ps.

C                   0:      13084 vrf[ 1]=[fedcba9876543210fedcba9876543210][ffff]
Error: Instruction-by-Instruction check failed
C                   0:      13087 [1] pc=[0000000080000c6a] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[02110057] DASM(02110057)

C                   0:      13589 [1] pc=[0000000080000824] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[0000bffd] DASM(0000bffd)
Error: Instruction-by-Instruction check failed


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 54837 simulation cycles (in TestDriver.report_phase_actions)
2022-09-26T09:46:08-0700: Error: simulation sim/tgv_debug.outline/vector/tgv-debug failed{noformat}","26/Sep/22 10:07 AM;6065017e90e3950069cf01c5;my test has at least one peculiarity: {{vl}} is too big for e32. I was not quite sure what was supposed to happen.

The spec says old {{vl}}  must be used as AVL and so a new {{vl}} may be written in that case.

[https://github.com/riscv/riscv-v-spec/blob/master/v-spec.adoc#62-avl-encoding|https://github.com/riscv/riscv-v-spec/blob/master/v-spec.adoc#62-avl-encoding|smart-link]

{quote}When {{rs1=x0}} and {{rd=x0}}, the instruction operates as if the current vector length in {{vl}} is used as the AVL, and the resulting value is written to {{vl}}, but not to a destination register. This form can only be used when VLMAX and hence {{vl}} is not actually changed by the new SEW/LMUL ratio. Use of the instruction with a new SEW/LMUL ratio that would result in a change of VLMAX is reserved. Implementations may set {{vill}} in this case.{quote}","26/Sep/22 10:34 AM;6065017e90e3950069cf01c5;One potential issue I am seeing is that it seems {{vl}} is not modified: 

In this case {{vsetvli x0, x0, e32, m1}} forces the switch from e8 to e32, old {{vl=7}} should be used as {{AVL}} and this is considered as reserved so {{vill}} could  be set.

{quote}Use of the instruction with a new SEW/LMUL ratio that would result in a change of VLMAX is reserved. Implementations may set {{vill}} in this case.{quote}

!image-20220926-173651.png|width=1593,height=844!","26/Sep/22 10:40 AM;6065017e90e3950069cf01c5;and cosim is complaining about this mismatch:

{noformat}C                   0:      13084 vrf[ 1]=[fedcba9876543210fedcba9876543210][ffff]
[VL-VTYPE-Checker][0] SPIKE vl = 4 , vtype = 10
[VL-VTYPE-Checker][0] RTL vl = 0 , vtype = 10
[COSIM-ERROR][0] COSIM VS RTL VL/VTYPE MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [13087] InstInfo: VLD=1 | PC=0x0000000080000c6e | INSN=0x01007057 | INST_DST=VECTOR | REDUCTION = false | WR: en=false r0=0x0000_0000_0000_0000_0000_0000_0000_0000 mask=000000ff | READY=1 | CSR_TI$ER=13087 | PRV=0 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080000d40 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=0 | SEW=32 | LMUL=m1 | VSEGELT=0
[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000080000c6e | INSN=0x01007057 | INST_DST=NONE | REDUCTION = false | WR:

[COSIM-ERROR][0] m_dut:  en=false r0=0x0000_0000_0000_0000_0000_0000_0000_0000 mask=000000ff
[COSIM-ERROR][0] m_sim:
Error: Instruction-by-Instruction check failed
sifive_test_results_pkg::set@(t=264133000): Test Result Setting for Index ID [3] Done [1] Success [0] Exit Code [13107]
C                   0:      13087 [1] pc=[0000000080000c6a] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[02110057] DASM(02110057)
C                   0:      13087 [1] pc=[0000000080000c6e] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[01007057] DASM(01007057)
C                   0:      13085 vrf[ 0]=[000000000000000000ffffffffffffff][ffff]
sifive_test_results_pkg::set@(t=264163000): Test Result Setting for Index ID [4] Done [1] Success [0] Exit Code [0]
sifive_objections_pkg::drop_objection@(t=264163000): Index [2] for phase [main_e]{noformat}

 I am not quite sure where {{RTL vl = 0}} is coming from, since this is not the value I see in the waves.","26/Sep/22 11:02 AM;5acffeafaa802f2a797a955c;The testbench reads from the VSRF when the instruction retires, and passes that information to cosim.  From MallardTile.scala:



{noformat}      val vsetRetireColor_ID = Wire(Vec(coreTaps.insts.size, UInt(rduTaps.vsetRetireColor_ID.getWidth.W)))
      val vsetID             = if (params.core.useVector) rduTaps.vsetRetireColor_ID.stripWrap else 0.U
      coreTaps.insts.zip(coreTaps.cmbs.zip(coreTaps.vecWrdstInfo)).zipWithIndex.foldLeft(vsetID.asTypeOf(UInt(rduTaps.vsetRetireColor_ID.getWidth.W))) {
        case (lastValue, ((uop, (cmb, vdst)), idx)) =>
          val offset = if (params.core.useVector) lastValue.increment((cmb.valid && uop.vset).asUInt, coreImp.params.tgvParams.nVSetColors) else 0.U
          vsetRetireColor_ID(idx) := offset
          vsetRetireColor_ID(idx)
      }
      
      ...
            coreTaps.insts.zip(coreTaps.cmbs.zip(coreTaps.vecWrdstInfo)).zipWithIndex.foreach { case ((uop, (cmb, vdst)), idx) =>
        val insnX = Wire(info.insn(idx).bits.cloneType)
        val wrenv = vdst.wrdst.collect({ case e => e.valid }).reduce(_ | _)
        val vl    =
          if (params.core.useVector) rduTaps.vsrf(vsetRetireColor_ID(idx)).asTypeOf(new PackedVConfig).vl
          else 0.U{noformat}

Potentially, the vset color that is being calculated is incorrect, so the testbench is reading a different entry of the VSRF than the instruction used.  Or it’s possible that the VSRF entry was modified some time before retirement.","26/Sep/22 12:10 PM;6065017e90e3950069cf01c5;The problem might be than the actual {{vl}} value is not written in the VSR 4

!image-20220926-191016.png|width=1774,height=579!","26/Sep/22 12:24 PM;6065017e90e3950069cf01c5;for this particular {{vsetvli}} the {{vl}} should be read from the previous value of {{vl}}. It seems there is a forwarding for that in the {{VSetALU}}, but it does not seem to be exercised.

{noformat}    // VL handling
    val vlIsImm_EX   = io.ctrl_EX.vsetivli
    val useCurVL_EX  = io.ctrl_EX.vsetReadVL
    val vsetVLMax_EX = !vlIsImm_EX && (io.ctrl_EX.rs1 === 0.U) && (io.ctrl_EX.rd =/= 0.U)

    val avl_EX   = io.instSrcs_EX(0)
    val curVL_EX = vsetSrc_EX.vl{noformat}",26/Sep/22 2:20 PM;6065017e90e3950069cf01c5;This fix [https://github.com/sifive/federation/pull/26447/files|https://github.com/sifive/federation/pull/26447/files] seems to correct the issue on the unit test. Checking the sting test now.,"26/Sep/22 3:50 PM;6065017e90e3950069cf01c5;with the fix, the unit test is passing and the ticket test is failing later

*head to ticket outline trace*

{noformat}C                   0:    1147344 vrf[ 8]=[727272727272727272727272727272c8][ffff]
C                   0:    1147348 vrf[ 9]=[727272727272727272727272e4727e9e][ffff]
C                   0:    1147352 vrf[10]=[7272727272727272727272724ea04ea0][ffff]
C                   0:    1147356 vrf[11]=[00000000000000000000008e00000000][ffff]
C                   0:    1147360 vrf[ 8]=[fffff0f0fff0f0fff0f0fffffff0f0f0][ffff]
C                   0:    1147364 vrf[ 9]=[ffffffffffffffefffffffffffffffff][ffff]
C                   0:    1147551 vrf[10]=[f0f0f0f0f0f0f0f02fd0f0f0f0f0f0ff][ffff]
C                   0:    1147713 vrf[11]=[ffffffffffffffffffffffffffffffff][ffff]
C                   0:    1147548 vrf[12]=[ffffffffffffffffffffffffff00d1d8][ffff]
C                   0:    1147552 vrf[13]=[ffffffffffffffffffffffffffffffff][ffff]
C                   0:    1147553 vrf[14]=[ffffffffffffffffff01002df9120cff][ffff]
C                   0:    1147714 vrf[15]=[ffffffffffffffffffffffffffffffff][ffff]
C                   0:    1147556 vrf[14]=[00000000000000000000000000000003][ffff]
C                   0:    1147560 vrf[12]=[ffffffffffffffffffffffffffffffff][ffff]
C                   0:    1147717 [1] pc=[00000000831129d0] W[r 5=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00000297] auipc   t0, 0x0
C                   0:    1147717 [1] pc=[00000000831129d4] W[r 5=00000000831129e0][1] R[r 5=0000000083112992] R[r 0=0000000000000000] inst=[01028293] addi    t0, t0, 16
C                   0:    1147717 [1] pc=[00000000831129d8] W[r 1=00000000831129dc][1] R[r 5=00000000831129e0] R[r 0=0000000000000000] inst=[000280e7] jalr    t0
C                   0:    1147723 [1] pc=[00000000831129e0] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[2f473457] vxor.vi v8, v20, 14
C                   0:    1147723 [1] pc=[00000000831129e4] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[96080657] vsll.vv v12, v0, v16
C                   0:    1147723 [1] pc=[00000000831129e8] W[r 0=0000000000000000][0] R[r13=00000000000000ff] R[r 0=0000000000000000] inst=[2e06c457] vxor.vx v8, v0, a3
C                   0:    1147723 [1] pc=[00000000831129ec] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[9ec0b457] vmv2r.v v8, v12
C                   0:    1147723 [1] pc=[00000000831129f0] W[r 1=00000000831129f4][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[008000ef] jal     pc + 0x8
C                   0:    1147561 vrf[ 8]=[f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1f2][ffff]
C                   0:    1147562 vrf[ 9]=[f1f1f1f1f1f1f1f1f1f1f1f1f0f1c737][ffff]
C                   0:    1147563 vrf[10]=[f1f1f1f1f1f1f1f1f1f1f1f1afbeafbe][ffff]
C                   0:    1147715 vrf[11]=[0e0e0e0e0e0e0e0e0e0e0e0f0e0e0e0e][ffff]
C                   0:    1147571 vrf[12]=[ffffffffffffffff00008000010036c7][ffff]
C                   0:    1147572 vrf[13]=[80808080808080800000000000000000][ffff]
C                   0:    1147575 vrf[14]=[ffffffffffffffff80000000000000a4][ffff]
C                   0:    1147721 vrf[15]=[808080808080808080808080808080d0][ffff]
C                   0:    1147574 vrf[ 8]=[0000000000000000ffff0001feffc938][ffff]
C                   0:    1147578 vrf[ 9]=[0000000000000000ffffffffffffffff][ffff]
C                   0:    1147582 vrf[10]=[0000000000000000803fffffffffffad][ffff]
C                   0:    1147717 vrf[11]=[00000000000000000000000000000002][ffff]
C                   0:    1147718 vrf[ 8]=[ffffffffffffffff00008000010036c7][ffff]
C                   0:    1147719 vrf[ 9]=[80808080808080800000000000000000][ffff]

*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 4991372 simulation cycles (in TestDriver.report_phase_actions){noformat}","26/Sep/22 4:09 PM;6065017e90e3950069cf01c5;We may have another issue, I am not sure the {{vill}} field is properly set when a {{vsetvli}} changes the SEW/LMUL ratio.

The spec does not seem to mandate it, -so it is not clear yet what behavior is expected from TGV.-  the MAS says that {{vtype.vill}} must be set in such cases.",26/Sep/22 4:24 PM;5d02d411febd110bc78aabc3;Do we still require a spike change for this ticket?,"26/Sep/22 4:50 PM;6065017e90e3950069cf01c5;the simple unit test passes with the RTL fix without any spike change.

[~accountid:5d02d411febd110bc78aabc3] Which was the possible spike change which could have been required ?","27/Sep/22 10:16 AM;5a938e9c0913194d2d262658;{quote}with the fix, the unit test is passing and the ticket test is failing later{quote}

Is it a cosim error or assertion or something else?",27/Sep/22 10:25 AM;6065017e90e3950069cf01c5;it is a hang assertion which seems very close to [https://sifive.atlassian.net/browse/MAL-2728|https://sifive.atlassian.net/browse/MAL-2728|smart-link] and [https://sifive.atlassian.net/browse/MAL-2734|https://sifive.atlassian.net/browse/MAL-2734|smart-link] . I am currently testing a fix.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] test and enable 2b / cycle vector FP div and rem configuration,,,,,,MAL-2712,126930,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/25/2022 21:29,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,New configuration added in [https://github.com/sifive/federation/pull/18366|https://github.com/sifive/federation/pull/18366|smart-link] was never enabled in TGV.,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-27T14:56:38.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,,,,,,,,,,,,,,,,,,,,2|i018pr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Fork Mallard generator into Starlight in Federation,,,,,,MAL-2711,126915,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,9/25/2022 8:16,9/26/2022 13:32,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/Tile,Verification,,,,,,,0,,,,"Healdsburg is intended to come from a new generator (Starlight), which will start as a fork of Mallard and then be modified over time.

This ticket is just to track getting Starlight into federation so that Healdsburg configurations that don’t use Mallard can start to be added.",John Ingalls,Josh Smith,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-26T12:53:49.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,,,,,,,,,,,,,,,,2|i018mf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,3,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV]  vector divider credit underflow,[TGV]  vector divider credit underflow,Execution Unit ,Vector,,,MAL-2710,126895,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/24/2022 17:49,9/27/2022 10:31,9/28/2022 0:51,9/25/2022 20:12,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"**

{noformat}*Verdi* : Flush all FSDB Files at 20,344,862,500 ps.
*Verdi* : Close all FSDB Files at 20,344,862,500 ps.
""/scratch/verif/nicolasb/federation/vsrc/sim/common/../TestDriver.sv"", 531: TestDriver.assert_final_phase.final_error: started at 20344862500ps failed at 20344862500ps
        Offending '(current_phase === shutdown_e)'

$finish at simulation time          20344862500
           V C S   S i m u l a t i o n   R e p o r t
Time: 20344862500 ps
CPU Time:   2417.730 seconds;       Data structure size:  32.4Mb
Sat Sep 24 17:47:33 2022
=== sitest found errors in test dbg-credit-underflow/rerun.outline/sting_StingSiFiveTuple_T_0044/sting/sifive/vector/vector_tgv_dev.conf:
Reset m_pl2_mmc_inner_agents  d2
Error: ""/scratch/verif/nicolasb/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", 543: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_0.SiFive_VexPipe_assert: at time 20344862500 ps
Assertion failed: credit underflow credit=0, debit=1, empty=1

    at Credit.scala:23 assert(!(debit && empty) || credit, ""credit underflow credit=%%d, debit=%%d, empty=%%d"", credit, debit, empty)


Fatal: ""/scratch/verif/nicolasb/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", 545: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_0.SiFive_VexPipe_assert: at time 20344862500 ps
$finish called from file ""/scratch/verif/nicolasb/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", line 545.


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 4068972 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 20,344,862,500 ps.

*Verdi* : Close all FSDB Files at 20,344,862,500 ps.
""/scratch/verif/nicolasb/federation/vsrc/sim/common/../TestDriver.sv"", 531: TestDriver.assert_final_phase.final_error: started at 20344862500ps failed at 20344862500ps
        Offending '(current_phase === shutdown_e)'{noformat}



Outline copied into {{/work/nicolasb/tgv_bug_outlines/sting/MAL-2710.outline}}

*outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=500"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+MEM_ERROR_INJECT=.*\\.cc_banks.*ext,1,0,25:.*\\.icWayPredArray.*ext,1,0,25:.*\\.RamBank.*ext,1,0,20"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0044"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 545601553
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-25T18:43:30.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/50ef326c92667cffaacf10178bf7da0779492e6f,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i018hz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26416/files],,,,,,,,,,,,,,"24/Sep/22 6:04 PM;6065017e90e3950069cf01c5;It looks like there is a credit leak when a kill occurs while a division is starting ({{divStart_EX}} true), the credit count is not properly reset.",25/Sep/22 8:13 AM;6065017e90e3950069cf01c5;fix under test [https://github.com/sifive/federation/pull/26416|https://github.com/sifive/federation/pull/26416|smart-link],"25/Sep/22 8:15 AM;6065017e90e3950069cf01c5;[~accountid:607e270b81e7b900681be5a8] , may I know why you assigned this task to yourself ? ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Design considering the wrong cause code for Machine Timer Interrupt,Machine Timer Interrupt,,,,,MAL-2709,126880,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Satish Bhavanari,626058b9436629006f73dd4b,Satish Bhavanari,626058b9436629006f73dd4b,Satish Bhavanari,626058b9436629006f73dd4b,9/24/2022 0:06,9/27/2022 8:37,9/28/2022 0:51,9/27/2022 8:37,,,,,,,,,,,,,,,,,,,,,,0,,,,"Hi, 

            We are seeing the {{mcause}} register mismatches between RTL and Cosim. Issue was observed in Single Core Vector/TGV build.

{noformat}[COSIM-ERROR][0] COSIM VS RTL MCAUSE MISMATCH
[COSIM-ERROR][0] Dut state: CSR_TIMER=252802 | PRV=3 | MSTATUS=0x8000000a000066aa | MTVEC=0x0000000080000400 | MCAUSE=0x800000000000000e | VSTART=0 | VL=4 | SEW=32 | LMUL=m1 | VSEGELT=0
[COSIM-ERROR][0] Cosim state: CSR_TIMER=0 | PRV=3 | MSTATUS=0x8000000a000066aa | MTVEC=0x0000000080000400 | MCAUSE=0x000000000000000b | VSTART=0 | VL=4 | SEW=32 | LMUL=m1 | VSEGELT=0{noformat}

*RTL Trace*:

{noformat}C0: 252791 [1] pc=[000000038148fa7c] W[r 0=0000000000000000][0] R[r 6=00000001c065d000] R[r 7=68bccd3273f12610] inst=[00733423] sd      t2, 8(t1)   //Design has taken Interrupt
C0: 252861 [1] pc=[0000000000000800] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00c0006f] j       pc + 0xc{noformat}

*Cosim Trace*:

{noformat}core   0: 0x000000038148fa7c (0x00733423) sd      t2, 8(t1)
core   0: 3 0x000000038148fa7c (0x00733423) mem 0x00000001c065d008-0x00000001c065d008 0x68bccd3273f12610
core   0: 0x000000038148fa80 (0x00733823) sd      t2, 16(t1)
core   0: 3 0x000000038148fa80 (0x00733823) mem 0x00000001c065d010-0x00000001c065d010 0x68bccd3273f12610{noformat}

*Issue Description*:

          Core is in machine mode and the test has configured the Timer Interrupt. Design also triggered this timer interrupt and started executing the interrupt handler.

We dig more into the RTL and observed few points,

* As per the RISC-V Spec, the Cause code for Machine Timer Interrupt is 'h8000_0000_0000_0007 but design has taken wrong cause code ('h8000_0000_0000_000e) which is Reserved.

              I have saved the session file in the below path. Can you please help me on this ?

*Local Path*:

{noformat}verif05:/scratch/sbhavanari/Debug_22SEP2022/dbg_1/federation/builds/coreip_p670/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0153/sting/sifive/vector/vector_tgv_dev.conf   {noformat}

*Session File*:

{noformat}verif05:/scratch/sbhavanari/Debug_22SEP2022/dbg_1/federation/builds/coreip_p670/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0153/sting/sifive/vector/vector_tgv_dev.conf/signal.rc{noformat}

*Build Config:* {{coreip_p670}}
*Branch/Commit SHA:* {{11df259}}
*Testname:* {{sting_StingSiFiveTuple_T_0153/sting/sifive/vector/vector_tgv_dev.conf}}
*Simscope Link*: [https://simscope.internal.sifive.com/sigs/705/cn29etr9hn3g|https://simscope.internal.sifive.com/sigs/705/cn29etr9hn3g]

*Rerun.outline*:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0153"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2621949711
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Regards,

Satish B",Abhishek Kumar,Ishita Shah,Josh Smith,Naveen Rathore,Nicolas Brunie,Ramesh Bitra,Sai Maddali,Satish Bhavanari,Srivatsa Yogendra,Zhiqiang Hao,,,,,,620ee634a715c6006914e852,607e26355431a500701f5aed,5acffeafaa802f2a797a955c,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,61e619bcf0ed04006872cc59,61d5cd480586a200695d2581,626058b9436629006f73dd4b,5a938e9c0913194d2d262658,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24/Sep/22 12:08 AM;ug:19f6dfbb-6ba8-4300-acbc-db18839de374;Debug_1.PNG;https://sifive.atlassian.net/secure/attachment/78227/Debug_1.PNG,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i018en:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,20:30.6,"24/Sep/22 8:20 AM;5acffeafaa802f2a797a955c;{{coreip_p670}} is using {{AIA}} now, the cause of {{0x8000_0000_0000_000e}} is coming directly from the CSRFile.  I believe _before_ the Advanced Interrupt Architecture, that cause value was reserved.

I’m not super familiar with the new Advanced Interrupt architecture, but we’re reporting the cause coming directly from the same CSRFile that Bullet uses also.  Is it possible that cosim doesn’t know that the configuration is using AIA?","24/Sep/22 8:25 AM;5acffeafaa802f2a797a955c;[~accountid:5dbc8d4f3a09190c2ad5f41d] I have no idea who is working on SAINT DV, maybe someone else can shed light on this?  I’ve never really looked at the SAINT changes to the core before.","24/Sep/22 9:20 AM;5acffeafaa802f2a797a955c;The use of AIA in {{coreip_p670}} was also reverted after this commit: 

[https://github.com/sifive/federation/pull/26307|https://github.com/sifive/federation/pull/26307|smart-link]","26/Sep/22 10:30 AM;5a938e9c0913194d2d262658;Are we going to use Saint in P670? Or is it not in panda? 


{quote}I have no idea who is working on SAINT DV, maybe someone else can shed light on this?{quote}

I’ll ask internally and figure this out. 


If we are not going to use Saint in P670 , wee can go ahead and close this.",26/Sep/22 10:57 AM;5acffeafaa802f2a797a955c;P670 will use SAINT also.  That change was just reverted because it was causing problems at the moment.  It’s a planned Panda feature though.,"27/Sep/22 8:37 AM;626058b9436629006f73dd4b;Now the build configuration got reverted. Hence, i am closing the Jira. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion in LST pipe of LSU On L2 testing of Milestone 4,Assertion LST pipe LSU On L2 testing,,,,,MAL-2708,126866,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,9/23/2022 14:33,9/26/2022 11:18,9/28/2022 0:51,9/24/2022 22:12,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"i see the assertion firing 

{noformat}Error: ""/scratch/verif/srivatsa/milest_4_4_rerun/builds/coreip_p670/verilog/design/SiFive_LSTPipe.sv"", 6912: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LSTPipes_0: at time 1924542500 ps
assert failed (verification library): Issue stage pre-calculated age wrong versus RR stage 1  @[LSTPipe.scala 5666:20]

Fatal: ""/scratch/verif/srivatsa/milest_4_4_rerun/builds/coreip_p670/verilog/design/assertions/SiFive_LSTPipe_assert.sv"", 1350: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LSTPipes_0.SiFive_LSTPipe_assert: at time 1924542500 ps

$finish called from file ""/scratch/verif/srivatsa/milest_4_4_rerun/builds/coreip_p670/verilog/design/assertions/SiFive_LSTPipe_assert.sv"", line 1350.{noformat}

This is on a 4th load of a sequence of back to back loads for EEW=SEW=8, LMUL =4 and Vl = 64. The first load completes and retires, but the 4th load is the final request that comes in to the LST pipe before the assertion is fired.



To recreate this failure:

# clone federation and checkout the commit a2566bb25ac1f7332fd56f3e1b0c3ea40c9b9d23
# build coreip_p670 and rerun the simulation using the outline 
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+verbose""
  ],
  ""subdir"": ""t0031"",
  ""subtest"": ""sifive/regress.d/vector/tgv_milestone/vector_tgv_milestone_4_l2.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1047745544
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""all""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))) {noformat}

The generated waves are at {{verif02:/scratch/verif/srivatsa/milest_4_4_rerun/builds/coreip_p670/sim/sim4/rerun.outline/t0031/sting/sifive/regress.d/vector/tgv_milestone/vector_tgv_milestone_4_l2.conf}}",Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,MAL-2008,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-25T20:14:21.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/26418,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i018bj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26418/files],,,,,,,,,,,,,,23/Sep/22 2:33 PM;5a938e9c0913194d2d262658;cc [~accountid:5fd15143b4a74900763834e0] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[HB] LSU: TileLink2,,,,,,MAL-2707,126850,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Rick Chen,5fc1b965d670b8006eda0fde,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,9/23/2022 11:08,9/26/2022 16:18,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"* U84 spoke TileLink1 to the Composable Cache.
* P550 and P650 speak CacheLink (CCL) to the Private L2.
* Healdsburg will speak TileLink2 to the Extensible Cache.
** Step #1 will be to update the Mallard LSU (and IFU) to functionally work with TileLink2.
** Step #2 will be to incorporate as many of the performance optimizations from CCL as we can in TL2 for faster request and response wakeup latencies.",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,CIP-3958,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0187z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,40,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[HB] LSU: bank StoreQ,,,,,,MAL-2706,126849,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,9/23/2022 11:03,9/26/2022 16:15,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"* P550 and P650 have a single StoreQ with 16-32 entries.
* Healdsburg will have ~64 StoreQ entries, which will be difficult to meet timing on pick from in age order.  We could split the StoreQ into two halves, selected by address bit\[6].  The same could also be done in the LoadQ for [https://sifive.atlassian.net/browse/MAL-1942|https://sifive.atlassian.net/browse/MAL-1942|smart-link], and/or eventually the MSHR too in tandem with both LoadQ and StoreQ.",John Ingalls,Josh Smith,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,MAL-1432,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1942,,,,MAL-2716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,CIP-3958,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0187r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,40,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,31:26.3,"23/Sep/22 11:31 AM;5acffeafaa802f2a797a955c;Unless there’s a natural reason to bank based on an address bit (such as the actual store data pipeline or something is physically tied to one of the address bits), banking by even and odd-numbered entries makes more sense to me.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[HB] LSU: LsIssQ pick four,,,,,,MAL-2705,126848,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Lucas Garcia,63126758b433b060db56126f,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,9/23/2022 10:56,9/28/2022 0:41,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"* P550 and P650 have a serialized pick two (i.e. pick oldest, mask that off, then pick the second oldest) from 16-24 entries.  This meets timing in P650.
* Healdsburg will have 32+ LsIssQ entries, and need to pick four to issue to [https://sifive.atlassian.net/browse/MAL-2704|https://sifive.atlassian.net/browse/MAL-2704|smart-link].  This does not make timing in a serialized picker from a unified issue queue.  We will need to split the LsIssQ topology, perhaps into separate LdIssQ and StIssQ, and within those, perhaps a separate single picker per LSTPipe.",John Ingalls,Josh Smith,Khondakar Mujtaba,Lucas Garcia,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,622a930149c900007023d105,63126758b433b060db56126f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2704,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,CIP-3958,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0187j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,40,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,05:05.8,"27/Sep/22 9:05 AM;63126758b433b060db56126f;First random collection of thoughts:

Option 1: Split the LSIssQ into 4 IQs (maybe 5 if we separate the LD and ST for the Gen pipe), one for each pipe, and decide at dispatch what goes where

* Advantages:
** Addresses the timing issues both by not having cascaded pickers (nbPipe issue), but also by picking on smaller IQs (IQSize issue)
** 1:1 mapping with the pipes is likely to help the place and route by allowing to physically separate the pipes from the beginning with less long wires between them
* Drawbacks:
** Moves the problem to the steering (before dispatch?), which might lead to perf loss due to suboptimal choices:
*** One IQ might have no ready entry while another has multiple ready entries and we are unable to select 2 entries
*** Fairness between loads will be extremely hard to achieve between the Gen Pipe and the LD Pipes, creating unuseful OoO that can lower the efficiency of HWPF (can be mitigated a little by making some of the algorithms more OoO tolerant), slow down some critical loads and increase the number of flushes due to RaR hazards
*** Same for stores, which can lead to an increased number of flushes due to RaW hazards
* Other comments:
** Ideas for dispatch:
*** bias to use the LD pipe before the Gen Pipe (for instance make believe that there are a few less entries available in the Gen Queue)
*** bias to go in IQ where other instructions have the same PC (try to keep regular streams in order for PFs)
*** bias based on src RF index so that we can save a read port on the PRF (might create timing issues as the steering is done in Rename stage)

Option 2: Keep one unified LSIssQ, and make the pickers independant by creating “Virtual IQs“ (we can change the name, I just do not have a better one right now)

* Explanation
** The idea here is to mask the “ready“ vector with picking masks and do an age selection on this masked_ready. The picking_mask for the K pickers should respect the following properties:
*** mask(0) | mask(1) | …. | mask(K-1) = 111….1111
*** For each (i,j), mask(i) & mask(j) = 000…0000
** Therefore, each instruction is part of exactly one mask (representing a “Virtual IQ“)
** The mask can be defined at cycle T to be used at cycle T+1, so the masking is basically out of flops (this might cause some approximations)
** Ideas of masks (most of them are binary separation, so we will need to combine them to create enough different masks):
*** LD vs ST
*** ready vs not_ready
*** xor_reduction of age matrix line: each bit equals to 1 in the age matrix line represent an older instruction, so this will separate on one side the oldest, the third oldest, the fifth oldest… and on the other side the second oldest, the fourth oldest,…
*** xor_reduction of the ready_filtered age matrix: same as previous, but only consider ready instructions. This ensures that both groups have ready instructions in them
*** src_RF_index(0): this allows to reduce the number of read ports on PRF by banking it
*** steer hint from rename/dispatch
** Current favorite solution (pure guess so it might change and be proven wrong, not necessarily in that order)
*** ST0 = st_ready_filtered_xor_with_oldest               or st_not_ready_filtered_xor_with_second_oldest
*** ST1 = st_ready_filtered_xor_with_second_oldest or st_not_ready_filtered_xor_with_oldest
*** LD0 = (src_RF_index(0) == 0) and (ld_ready_filtered_xor_with_oldest or ld_not_ready_filtered_xor_with_second_oldest)
*** LD1  = (src_RF_index(0) == 1) and (ld_ready_filtered_xor_with_oldest or ld_not_ready_filtered_xor_with_second_oldest)
*** LD2 = ld_ready_filtered_xor_with_second_oldest or ld_not_ready_filtered_xor_with_oldest
*** GenPipe = ST1 or LD2, all other are directly mapped on ST0, LD0 or LD1
*** The newly dispatched instructions use a steer hint
*** Justifications:
**** This splits the ready instructions between virtual IQs but still gives a chances to instructions that may become ready this cycle
**** This save a RF read port on the load pipes
* Advantages
** Common large pool of entries for both Loads and Stores, making the design more responsive to a larger set of workloads (LD/ST proportion is not fixed)
** Allows dynamic reallocation inside virtual IQs to get the best performance (but it costs a lot of tuning)
* Drawbacks
** It solves the problem of sequential age selection, but leaves the problem related to size increase. It must be studied if the size problem alone limits our ability to perform age selection: the age selection are still performed on 32 entries, even if many are considered “not ready“ for each picker.

Option 3: look at some research papers for other ideas

Option N: Make a mix of options 1 to N-1

All of the options are to be considered at this stage.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[HB] LSU: four pipes: 2Ld+1St+1Gen,,,,,,MAL-2704,126847,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Khondakar Mujtaba,622a930149c900007023d105,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,9/23/2022 10:44,9/26/2022 16:08,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"* P550 has 2x LSTPipes, 1x LDPipe, 1x SDPipe.
* P650 has 2x of each LSTPipes, LDPipes, SDPipes.
* Healdsburg will have 1x generic LSTPipe, 2x LTPipes, 1x STPipe, 3x LDPipes, 2x SDPipes.",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2705,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,CIP-3958,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0187b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,40,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
"[TGV] LSU requesting to to claim an LTB in Baler, but not establish response being sent, but LSU tries to send the data",[TGV] LSU request LTB,LSU (Load Store Unit),,,,MAL-2703,126843,,Bug,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Showstopper,,Yohann Rabefarihy,61730c9cbcb57400683f15a6,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,9/23/2022 10:05,9/26/2022 12:50,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"I see for a vector load with parameters SEW = 8, EEW = 8, LMUL = 1, Vl = 11, ta, mu.  The load request going into the LSU, and the LSU tries to get a LTB in baler. i donot see a response coming back from the LTB , but i see LSU trying to send the data 

!Screen Shot 2022-09-23 at 09.59.34.png|width=831,height=508!

The time is 3906422500ps and the gid for the transfer is 0x1d



Then an assertion is fired in the baler LDPipe 

{noformat}Error: ""/scratch/verif/srivatsa/milest_4_4_rerun/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LoadBuffer_assert.sv"", 169: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.bal.ltb.SiFive_LoadBuffer_assert: at time 3906542500 ps
Assertion failed: LDPipe 0 sent tag  that matched no LTB entries

    at LoadBuffer.scala:390 assert(matchedCount_LDR  =/= 0.U, cf""LDPipe $ldp sent tag  that matched no LTB entries"")


Fatal: ""/scratch/verif/srivatsa/milest_4_4_rerun/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LoadBuffer_assert.sv"", 171: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.bal.ltb.SiFive_LoadBuffer_assert: at time 3906542500 ps
$finish called from file ""/scratch/verif/srivatsa/milest_4_4_rerun/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LoadBuffer_assert.sv"", line 171.{noformat}

To recreate this failure , 

# clone federation and checkout the commit a2566bb25ac1f7332fd56f3e1b0c3ea40c9b9d23
# build coreip_u8_minimal_vector and rerun the simulation using the outline
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+verbose""
  ],
  ""subdir"": ""t0045"",
  ""subtest"": ""sifive/regress.d/vector/tgv_milestone/vector_tgv_milestone_3_l2.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3596072043
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""all""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

The generated waves are at {{verif02:/scratch/verif/srivatsa/milest_4_4_rerun/builds/coreip_u8_minimal_vector/sim/sim3/rerun.outline/t0045/sting/sifive/regress.d/vector/tgv_milestone/vector_tgv_milestone_3_l2.conf}}",David Kravitz,John Ingalls,Srivatsa Yogendra,Vijith KS,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,5a938e9c0913194d2d262658,5fa30ce971ab9e006a1d63d8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,23/Sep/22 10:05 AM;srivatsa;Screen Shot 2022-09-23 at 09.59.34.png;https://sifive.atlassian.net/secure/attachment/78206/Screen+Shot+2022-09-23+at+09.59.34.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i0186f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,56:00.3,"23/Sep/22 11:56 AM;5fd15143b4a74900763834e0;There’s a claim request at 3,906,422,500. The claim is not established, but a few cycles later the LDPipe sends data for gid=1d anyhow.

This is probably one of the bugs that we fixed before the revert earlier this week. I think Yohann handled that one, so sending this one there, too.

Any fix needs to make sure that milestone 7 continues to pass per [https://sifive.slack.com/archives/C02LGLVN2LD/p1663864972919089?thread_ts=1663820754.562119&cid=C02LGLVN2LD|https://sifive.slack.com/archives/C02LGLVN2LD/p1663864972919089?thread_ts=1663820754.562119&cid=C02LGLVN2LD|smart-link]",23/Sep/22 12:02 PM;5fd15143b4a74900763834e0;Outline has been copied to {{/work/nicolasb/tgv_bug_outlines/sting/MAL-2703.outline}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
SRAM-based NLP should not use same PC bits for both index and tag generation,,,,,,MAL-2702,126841,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Jeffrey Huang,627586097de1ec00695bca96,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,9/23/2022 9:49,9/27/2022 17:56,9/28/2022 0:51,,,,,,,,,,,,,,Performance,RTL/Frontend,,,,,,,,0,,,,"The NLP uses a common {{nlpTag}} function to compute the tag for NLP lookup:

{noformat}  // Generate tag from pcVA (use at most 3-input XOR)
  private def nlpTag(addr: UInt) = VAHash((addr >> coreInstBytes.log2).extract(3*params.nlpTagBits-1,0), params.nlpTagBits){noformat}

This is used for both the main NLP and the side “NLP RAS” entries.

However, when the main NLP is configured to use a larger set-associative SRAM-based structure, the {{nlpIdx}} method for generating the set index uses a bunch of the same least significant bits of the PC.

{noformat}  private def nlpIdx(addr: UInt): UInt = {
    val baseIndex = (addr >> coreInstBytes.log2)

    val (bankMSBIndex, bankLSBIndex) = (6, (6 + 1) - params.nNLPBanks.log2)
    val bankIndex = baseIndex.extractOption(bankMSBIndex, bankLSBIndex)

    val baseIndexHi = baseIndex.extractOption(baseIndex.getWidth-1, bankMSBIndex+1)
    val baseIndexLo = baseIndex.extractOption(bankLSBIndex-1, 0)
    val baseMinusBank = Seq(baseIndexLo, baseIndexHi).flatten.asUInt

    val subIndexWidth = (params.nNLPSets.log2) - (params.nNLPBanks.log2)
    val subIndex = baseMinusBank.extractOption(subIndexWidth-1, 0)

    (bankIndex, subIndex) match {
      case (Some(b), Some(s)) => Cat(s,b)
      case (Some(b), None)    => b
      case (None   , Some(s)) => s
      case (None   , None)    => 0.U
    }
  }{noformat}



When the NLP is configured to use the larger SRAMs, we should use a different {{nlpTag}} function which does not hash in any of the PC bits that are also used for the {{nlpIndex}} calculation.",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Branch Prediction,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0185z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,2,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,10:20.9,26/Sep/22 1:10 PM;5e1371705361330daaeaf389;Does the NLPRAS lookup also suffer from the same-bits-used-for-tag-and-index issue?,"26/Sep/22 2:59 PM;5acffeafaa802f2a797a955c;{quote}Does the NLPRAS lookup also suffer from the same-bits-used-for-tag-and-index issue?{quote}

The NLPRas in P650 is fully-associative, so it’s not a problem there.  But when configured as set-associative I believe it would.","26/Sep/22 3:08 PM;5e1371705361330daaeaf389;For Hburg, it’s 2-way in the JSON. Remember how Dhrystone needed 4-way on Hburg to track everything to maximize performance? I wonder if this was part of the reason, that there were some index bits being used as part of the tag when only 2-way, making a tag collision more likely.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] Experiments for VexPipe coverage test,,,,,,MAL-2701,126742,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Shaka Kao,5f94696c29bd8a006f94f0e1,Shaka Kao,5f94696c29bd8a006f94f0e1,Shaka Kao,5f94696c29bd8a006f94f0e1,9/22/2022 16:57,9/23/2022 1:44,9/28/2022 0:51,,,,,,,,,,,,,,Coverage,TGV_RTL/VEX,,,,,,,,0,,,,"We have several cover points ({{ccover}}) in the VexPipe, and we want to do some regressions to check the cover point coverage.

Reference:

* [Collect and analyze coverage|https://sifive.atlassian.net/wiki/spaces/CIP/pages/589105782/Collect+and+analyze+coverage]
* [UNR flow implementation|https://sifive.atlassian.net/wiki/spaces/CIP/pages/390397966/UNR+flow+implementation]",Kira Tsao,Nicolas Brunie,Shaka Kao,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,22/Sep/22 10:17 PM;ug:113b86d8-ecfc-456b-a6a8-529c0abb7d7d;image-20220923-051625.png;https://sifive.atlassian.net/secure/attachment/78165/image-20220923-051625.png,22/Sep/22 10:38 PM;ug:113b86d8-ecfc-456b-a6a8-529c0abb7d7d;image-20220923-052910.png;https://sifive.atlassian.net/secure/attachment/78169/image-20220923-052910.png,22/Sep/22 10:38 PM;ug:113b86d8-ecfc-456b-a6a8-529c0abb7d7d;image-20220923-053150.png;https://sifive.atlassian.net/secure/attachment/78170/image-20220923-053150.png,22/Sep/22 11:13 PM;ug:113b86d8-ecfc-456b-a6a8-529c0abb7d7d;image-20220923-060943.png;https://sifive.atlassian.net/secure/attachment/78177/image-20220923-060943.png,22/Sep/22 11:13 PM;ug:113b86d8-ecfc-456b-a6a8-529c0abb7d7d;image-20220923-061251.png;https://sifive.atlassian.net/secure/attachment/78178/image-20220923-061251.png,23/Sep/22 1:44 AM;ug:113b86d8-ecfc-456b-a6a8-529c0abb7d7d;image-20220923-084246.png;https://sifive.atlassian.net/secure/attachment/78189/image-20220923-084246.png,23/Sep/22 1:44 AM;ug:113b86d8-ecfc-456b-a6a8-529c0abb7d7d;image-20220923-084348.png;https://sifive.atlassian.net/secure/attachment/78188/image-20220923-084348.png,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i017k7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Sep/22 10:17 PM;5f94696c29bd8a006f94f0e1;{{2022-09-23}} 

*config*: {{p670.json}}

*outline*: {{tgv-sanity.outline}}

*Modification of tgv-sanity.outline*

{noformat}--- a/test-outlines/tgv-sanity.outline
+++ b/test-outlines/tgv-sanity.outline
@@ -46,10 +46,10 @@ Xsfvfnrclipxfqf = $config.object_model.isa_extension_xsfvfnrclipxfqf_support?(0)
 
 # setting some flags for easy dubugging and controlled test generation
 enable_ecc = 0
-enable_masking = 0
+enable_masking = 1
 enable_exceptions = 0
 enable_Fflag_check = 0
-flmul = 1
+flmul = 0
 non0Vstart = 0{noformat}



*Overall coverage:*

!image-20220923-060943.png|width=100%!



*Cover-point coverage for VexPipe 0: (toggled/total) = 29/43 = 67.44%*

*Cover-point coverage for VexPipe 1: (toggled/total) = 29/50= 58%*



Cover points for VexPipe 0:

!image-20220923-051625.png|width=100%!



Cover points for VexPipe 1:

!image-20220923-061251.png|width=100%!","22/Sep/22 10:38 PM;5f94696c29bd8a006f94f0e1;{{2022-09-23}} 

config: {{u8_minimal_vector.json}}

outline: {{vtg-tgv-tests.outline}}

*Modifications of vtg-tgv-tests.outline*

{noformat}--- a/test-outlines/vtg-tgv-tests.outline
+++ b/test-outlines/vtg-tgv-tests.outline
@@ -47,16 +47,16 @@ Xsfvfnrclipxfqf = $config.object_model.isa_extension_xsfvfnrclipxfqf_support?(0)
 
 # setting some flags for easy dubugging and controlled test generation
 enable_ecc = 0
-enable_masking = 0
-enable_exceptions = 1
+enable_masking = 1
+enable_exceptions = 0
 enable_Fflag_check = 1
-flmul = 1
+flmul = 0
 # should be re enabled once VI-7056 is resolved.
 non0Vstart = 1
 non0VstartPercentage = 10
 Vxsat_check = 1
 Vtype_check = 1
-num_of_tests_gen = 50
+num_of_tests_gen = 10
 lmuls = [1, 2, 4, 8]{noformat}



*Overall coverage*

!image-20220923-052910.png|width=91.66666666666667%!



*Cover-point coverage for VexPipe: (toggled/total) = 35/53 = 67.04%*

!image-20220923-053150.png|width=100%!","23/Sep/22 1:44 AM;5f94696c29bd8a006f94f0e1;{{2022-09-23}} 

config: {{u8_minimal_vector.json}}

outline: {{tgv-sanity.outline}}

*Modifications of tgv-sanity.outline*

{noformat}--- a/test-outlines/tgv-sanity.outline
+++ b/test-outlines/tgv-sanity.outline
@@ -46,10 +46,10 @@ Xsfvfnrclipxfqf = $config.object_model.isa_extension_xsfvfnrclipxfqf_support?(0)
 
 # setting some flags for easy dubugging and controlled test generation
 enable_ecc = 0
-enable_masking = 0
+enable_masking = 1
 enable_exceptions = 0
 enable_Fflag_check = 0
-flmul = 1
+flmul = 0
 non0Vstart = 0
 Vxsat_check = 0{noformat}



*Overall coverage*

!image-20220923-084246.png|width=100%!



*Cover-point coverage for VexPipe: (toggled/total) = 28 / 53 = 52.83%*

!image-20220923-084348.png|width=100%!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] vmv1r.v WRData Mismatch,[TGV] WRData Mismatch,,,,,MAL-2698,126703,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Zhiqiang Hao,5d02d411febd110bc78aabc3,Zhiqiang Hao,5d02d411febd110bc78aabc3,9/22/2022 12:22,9/23/2022 11:11,9/28/2022 0:51,9/22/2022 21:49,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,TGV,,,"Config: {{coreip_u8_minimal_vector}}

Branch: {{zq_VI_8328}}

Rerun:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0003"",
  ""subtest"": ""sifive/regress.d/vector/tgv_milestone/vector_tgv_milestone_14_ta_ma.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1963679703
  },
  ""sim"": {
    ""vendor"": ""vcs""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}





Code:

{noformat}core   0: 0x00000000800090c6 (0xc05d7057) vsetivli zero, 26, e8, mf8, tu, mu
core   0: 3 0x00000000800090c6 (0xc05d7057)
core   0: 0x00000000800090ca (0x9e8034d7) vmv1r.v v9, v8{noformat}



Spike-Cosim:

{noformat}core   0: 0x00000000800090ca (0x9e8034d7) vmv1r.v v9, v8
core   0: 3 0x00000000800090ca (0x9e8034d7) e8 mf8 l2 v9  0x00000000000000004e124e4e00094e4e{noformat}

This value seems to be correct as previously:

{noformat}core   0: 0x0000000080009038 (0x13874457) vminu.vx v8, v24, a4
core   0: 3 0x0000000080009038 (0x13874457) e8 m1 l16 v8  0x00000000000000004e124e4e00094e4e{noformat}



RTL:

{noformat}C                   0:     124027 [1] pc=[00000000800090c6] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[c05d7057] vsetivli zero, 26, e8, mf8, tu, mu
C                   0:     124027 [1] pc=[00000000800090ca] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[9e8034d7] vmv1r.v v9, v8
...
C                   0:     123653 vrf[ 9]=[00000000000000008018000000000000][ffff]{noformat}

v9={{00000000000000008018000000000000}}, which belongs the value of v0

{noformat}core   0: 0x000000008000900e (0x2e0c0057) vxor.vv v0, v0, v24
core   0: 3 0x000000008000900e (0x2e0c0057) e8 m1 l16 v0  0x00000000000000008018000000000000{noformat}",Nicolas Brunie,Zhiqiang Hao,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,,VI-8328,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-23T08:51:46.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/4758cff921f1567bcae126266f5ca0ebc90f5a61,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i017bz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26362/files],,,,,,,,,,,,,56:45.7,"22/Sep/22 1:56 PM;6065017e90e3950069cf01c5;-I am going to dispatch this one to- [~accountid:5e1a4f5ec578120daca5ff8e] -for now, as he is the RTL designer for the group move.-

or maybe not","22/Sep/22 2:03 PM;6065017e90e3950069cf01c5;I am also seeing a data mismatch on {{/work/nicolasb/tgv_bug_outlines/rat/MAL-2695.outline }} after applying [https://github.com/sifive/federation/pull/26354|https://github.com/sifive/federation/pull/26354|smart-link]

{noformat}C                   0:      46347 [1] pc=[000000008000435c] W[r14=00000000801b135c][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[001ad717] auipc   a4, 0x1ad
C                   0:      46347 [1] pc=[0000000080004360] W[f 8=d536c4d09cfb4acf][1] R[r14=00000000801b135c] R[r 0=0000000000000000] inst=[10473407] fld     fs0, 260(a4)
C                   0:      46347 [1] pc=[0000000080004364] W[r 9=3bcd5b07063e92bc][1] R[r15=000000008000c948] R[r 0=0000000000000000] inst=[00006fa4] c.ld    s1, 88(a5)
C                   0:      46348 [1] pc=[0000000080004366] W[f 9=ffffffff1f6f6372][1] R[r 3=000000008000d0c0] R[r 0=0000000000000000] inst=[ff81a487] flw     fs1, -8(gp)
C                   0:      46348 [1] pc=[000000008000436a] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[c0adf057] vsetivli zero, 27, e16, m4, tu, mu
Error: Instruction-by-Instruction check failed
C                   0:      46349 [1] pc=[000000008000436e] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[9ee03557] vmv1r.v v10, v14
C                   0:      46349 [1] pc=[0000000080004372] W[f15=0000000100000002][1] R[r 3=000000008000d0c0] R[r 0=0000000000000000] inst=[8681b787] fld     fa5, -1944(gp)
C                   0:      46349 [1] pc=[0000000080004376] W[r 8=000000008008c376][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00088417] auipc   s0, 0x88
C                   0:      46349 [1] pc=[000000008000437a] W[r27=000000008006d37a][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00069d97] auipc   s11, 0x69
C                   0:      46091 vrf[10]=[00000000000000010000000000000001][ffff]{noformat}

{noformat}=== sitest found errors in test sim/MAL-2695.outline/rat_default_T_0899/rat/default:
[COSIM-WARNING][0] COSIM VS RTL LOAD_INFO size mismatch. COSIM: 0 vs DUT: 1
[COSIM-ERROR][0] COSIM VS RTL WRDATA MISMATCH
[COSIM-ERROR][0] COSIM VS RTL WRINFO MISMATCH

[COSIM-ERROR][0] m_dut_inst_item: [46349] InstInfo: VLD=1 | PC=0x000000008000436e | INSN=0x9ee03557 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r10=0x0000_0000_0000_0001_0000_0000_0000_0001 mask=0000ffff | READY=1 | CSR_TIMER=46349 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x000000008000b130 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=27 | SEW=16 | LMUL=m4 | VSEGELT=0

[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x000000008000436e | INSN=0x9ee03557 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r10=0xffff_ffff_ffff_ffff_ffff_ffff_ffff_fffc mask=0000ffff



[COSIM-ERROR][0] m_dut:  en=true r10=0x0000_0000_0000_0001_0000_0000_0000_0001 mask=0000ffff
[COSIM-ERROR][0] m_sim:  en=true r10=0xffff_ffff_ffff_ffff_ffff_ffff_ffff_fffc mask=0000ffff

Pending PC in the Instruction Queue: 3

sifive_test_results_pkg::report_status.unnamed$$_0@(t=939423000): Test Result Checking Registered Name [TestDriver.testHarness.PL2Scb] Index ID [2] Done [0] Success [0] Exit Code [0]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=939423000): FAILED: Test Result Registered Name [TestDriver.testHarness.cosim] Index ID [3] Done [1] Success [0] Exit Code [13107]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=939423000): FAILED: Test Result Registered Name [TestDriver.testHarness.i_TF] Index ID [4] Done [1] Success [0] Exit Code [0]

sifive_test_results_pkg::report_status@(t=939423000): done:          3, registered:          3, success:          1


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 187885 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 939,422,500 ps.

C                   0:      46348 [1] pc=[000000008000436a] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[c0adf057] DASM(c0adf057)
Error: Instruction-by-Instruction check failed
C                   0:      46349 [1] pc=[000000008000436e] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[9ee03557] DASM(9ee03557)

C                   0:      46789 [1] pc=[000000008000443c] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 2=0000000000bc614e] inst=[0000900a] DASM(0000900a)
Error: Instruction-by-Instruction check failed


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 187885 simulation cycles (in TestDr{noformat}",22/Sep/22 3:22 PM;6065017e90e3950069cf01c5;[~accountid:5d02d411febd110bc78aabc3]  [https://github.com/sifive/federation/pull/26362|https://github.com/sifive/federation/pull/26362|smart-link] should fix this bug.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assert: LSTO Store Data Issued must match SDFP,[TGV] Assert: LSTO Store Data Issue,LSU (Load Store Unit),,,,MAL-2697,126698,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Srivatsa Yogendra,5a938e9c0913194d2d262658,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,9/22/2022 11:18,9/23/2022 9:18,9/28/2022 0:51,9/22/2022 20:58,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"{{vse32.v}} instruction fails with error message:

{noformat}Error: ""/scratch/verif/davidk2/milestones/builds/coreip_u8_minimal_vector/verilog/design/SiFive_LSTPipe.sv"", 5186: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LSTPipes_0: at time 357602500 ps
assert failed (verification library): LSTO Store Data Issued must match SDFP  @[LSTPipe.scala 6102:18]
Fatal: ""/scratch/verif/davidk2/milestones/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LSTPipe_assert.sv"", 1274: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LSTPipes_0.SiFive_LSTPipe_assert: at time 357602500 ps{noformat}",David Kravitz,John Ingalls,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2064,VI-8540,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,49c4649921f879722b937909467c37b77b3cbff4,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Directed,Simulation-VTG,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i017av:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"Check out hash 49c4649921f879722b937909467c37b77b3cbff4
Build coreip_u8_minimal_vector
Run /work/nicolasb/tgv_bug_outlines/vtg/<this ticket>.outline",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,58:52.0,"22/Sep/22 8:58 PM;5bb6808b9ba2930990f81895;In this test, LSTO contains uopID=1, but the SDPipe contains no mention yet of uopID.

Vector Stores (including LMUL>1) will be done in MAL-2064",23/Sep/22 5:04 AM;5fd15143b4a74900763834e0;So this sounds like another case where the milestone 3 test used a store instruction with EMUL>1. That really makes it a duplicate of [https://sifive.atlassian.net/browse/VI-8540|https://sifive.atlassian.net/browse/VI-8540|smart-link]. Assigning this to [~accountid:5a938e9c0913194d2d262658] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: SiFive_IFUIQ_assert,Assertion Failure: IFUIQ_assert,IFU (Instruction Fetch Unit),InstQueue (Instruction Queue),,Refer https://github.com/sifive/arch-specs/blob/master/core/mallard_mas.adoc#513-instruction-queue,MAL-2696,126670,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Jeffrey Huang,627586097de1ec00695bca96,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,9/22/2022 6:49,9/27/2022 18:39,9/28/2022 0:51,9/27/2022 17:55,,,,,,,,,,,,,RTL/Frontend,,,,,,,,,0,xprop,,,"*Error:*

{noformat}Error: ""/scratch/saurabhs/mallard_xprop_142/federation/builds/coreip_u8_minimal/verilog/design/assertions/SiFive_IFUIQ_assert.sv"", 97: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.ifu.instQueue.SiFive_IFUIQ_assert: at time 15962500 ps
Assertion failed: Instruction Queue raddrEn incorrect

    at IFUIQ.scala:91 assert(!(deq_fire_qual(0) && !raddrEn), ""Instruction Queue raddrEn incorrect""){noformat}

The assertion is triggered due to an x-prop.

At {{T:15902500ps}}, assertion's conditional signal {{core.feu.ifu.instQueue.SiFive_IFUIQ_assert._n_additional_enq_T}} transitions to xx triggering the assertion. The xx comes when a read request to addr=0x4 is made at memory bank {{core.feu.ifu.icDataArray_1.icDataArray_0_ext}}. No previous writes are seen for this address hence xx is returned on read.

Looking at the feu, the addr=0x4 seems to have come from {{feu.ifu.icDataRdIdx_F1}}. This was sampled for {{core.feu.ifu._pcVA_F0_T_2[41:0] = 0x80000040}} was fetched. This PC is going to be fetched at the beginning of simulation itself. 

Tracing the Enable which was asserted to read from addr=0x4 at the memory bank, it seems to be triggered from an AXI read request. At {{T:13002500ps}}, an AXI read request for {{addr=0x8000_0040}} is seen. The response ar_valid when raised for this read request triggers the Enable.

Dump Path: {{verif04:/scratch/saurabhs/mallard_xprop_142/federation/builds/coreip_u8_minimal/sim/sim/IFUIQ_assert.outline/hart0/frontport_dm_access_axi}}

*Build*: coreip_u8_minimal

*Commit*: 0eec63f

*Regression*: master/nightly-mallard-xprop/142

*Simscope*: [https://simscope.internal.sifive.com/sigs/2360/cn1okszft7zp|https://simscope.internal.sifive.com/sigs/2360/cn1okszft7zp]

*rerun.outline*: 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""frontport_dm_access_axi"",
  ""raw_plusargs"": [
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+enable_amba_error=0"",
    ""+frontport_dm_access""
  ],
  ""subdir"": ""hart0"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3618263215
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""program"": {
    ""hartid"": 0
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Jeffrey Huang,Josh Smith,Rakesh Palakurthi,Saurabh Singh,,,,,,,,,,,,627586097de1ec00695bca96,5acffeafaa802f2a797a955c,62350e943eacc50071ff0753,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Requires further investigation,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-27T17:52:38.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8b4bee1761f70f2090b73e2f5ce3a8cad8653383,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i01753:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26410/files],,,,,,,,,,,,,25:06.9,"22/Sep/22 7:25 AM;5acffeafaa802f2a797a955c;This appears to be due to x-propagation through the fetch {{startMask}} logic that [~accountid:627586097de1ec00695bca96] recently touched.  I wonder if the new instruction boundary detection logic introduced more x-propagation than we had before.

[~accountid:627586097de1ec00695bca96] can you please try to reproduce this failure in your own workspace?  If you hit this failure, please revert your instruction boundary detection changes (use the old detection logic), and see if the test still fails.","22/Sep/22 8:03 AM;627586097de1ec00695bca96;Sure, I will do it today.",27/Sep/22 5:54 PM;627586097de1ec00695bca96;The new instruction boundary detection logic(CLA style) introduced more x-propagation than we had before. We used killSpeculative_F3 to squash the x-prop and fixed it.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[TGV] Assertion Failure : VexPipe : credit overflow credit=1, debit=0, full=1",[TGV] Assertion Failure : VexPipe,Execution Unit (Vector Pipe),,,,MAL-2695,126668,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,9/22/2022 6:28,9/23/2022 9:12,9/28/2022 0:51,9/23/2022 8:52,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"We see the below assertion failure from VexPipe 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_222_test_fails/federation/builds2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", 530: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_0.SiFive_VexPipe_assert: at time 1945162500 ps
Assertion failed: credit overflow credit=1, debit=0, full=1
    at Credit.scala:22 assert(!(credit && full) || debit, ""credit overflow credit=%%d, debit=%%d, full=%%d"", credit, debit, full)

Fatal: ""/scratch/ishitashah/tgv_regression/sign_222_test_fails/federation/builds2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", 532: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_0.SiFive_VexPipe_assert: at time 1945162500 ps{noformat}

Debug info: 

While tracing back it seems like {{divkillRunning }} is asserted for the{{ stagedDivTag_bits_gid =1a}} .acoording to the trace this gid is for the below  vector division instruction 

{{  8000af94: 82082457  vdivu.vv	v8,v0,v16}}

 *SHA:* [+11df259+|https://simscope.internal.sifive.com/models/undefined--master--11df259e3fda3740d4b90adf9c02a0f7829d4eb3]

*config:* coriep_u8_minimal_vector

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.tag_array_.*ext,0,1,32:.*\\.data_arrays_0_.*ext,0,1,32:.*\\.syssram.*ext,0,1,32:.*\\.island.*\\.lim\\.syssram.*ext,0,1,32:.*\\.tagged_tables_0_.*ext,0,1,32:.*\\.base_table_0_.*ext,0,132""
  ],
  ""subdir"": ""rat_default_T_0899"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2192311487
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath*

{{gamma25:/scratch/ishitashah/tgv_regression/sign_222_test_fails/federation/builds2/coreip_u8_minimal_vector/sim/rerundir1_vex/vex_rerun.outline/rat_default_T_0899/rat/default}}

Waves

{{gamma25:/scratch/ishitashah/tgv_regression/sign_222_test_fails/federation/builds2/coreip_u8_minimal_vector/sim/rerundir1_vex/vex_rerun.outline/rat_default_T_0899/rat/default/waves.fsdb}}",Abhishek Kumar,Ishita Shah,Naveen Rathore,Nicolas Brunie,Ramesh Bitra,Satish Bhavanari,,,,,,,,,,620ee634a715c6006914e852,607e26355431a500701f5aed,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,61e619bcf0ed04006872cc59,626058b9436629006f73dd4b,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-23T08:51:46.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/8f27b9eee2628a6d57f57f1da9a6bb1972b0da2d,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i0174n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26362/files],,,,,,,,,,,,,43:49.8,22/Sep/22 11:43 AM;6065017e90e3950069cf01c5;It looks like the issue is division credits being returned after the division has been flushed. To keep reset out of flushReq fan-out it is delayed by a cycle and this a new output is presented while the credit mechanism is being reset (leading to overflow of credit).,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV/Crypto] TGV Vector Crypto Micro-Architecture Specification for GHASH Instructions,,,,,,MAL-2694,126664,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,9/22/2022 3:44,9/22/2022 12:24,9/28/2022 0:51,,,,,,,,,,,,,,Documentation,,,,,,,,,0,,,,"The following items will be detailed in the “[TGV Vector Crypto Micro-Architecture Specification|https://github.com/sifive/arch-specs/blob/master/core/tgv_crypto.adoc]” document:

* Instruction definitions
* Micro-op specifications
* Micro-op micro-architecture specifications",Erdinc Ozturk,,,,,,,,,,,,,,,61ccb01d90cfd20071b96af2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2391,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2391,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0173r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV/Crypto] TGV Vector Crypto Micro-Architecture Specification for BitManip Instructions,,,,,,MAL-2693,126663,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,9/22/2022 3:44,9/22/2022 12:24,9/28/2022 0:51,,,,,,,,,,,,,,Documentation,,,,,,,,,0,,,,"The following items will be detailed in the “[TGV Vector Crypto Micro-Architecture Specification|https://github.com/sifive/arch-specs/blob/master/core/tgv_crypto.adoc]” document:

* Instruction definitions
* Micro-op specifications
* Micro-op micro-architecture specifications",Erdinc Ozturk,,,,,,,,,,,,,,,61ccb01d90cfd20071b96af2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2391,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2391,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0173j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV/Crypto] TGV Vector Crypto Micro-Architecture Specification for AES Instructions,,,,,,MAL-2692,126662,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,9/22/2022 3:44,9/23/2022 10:23,9/28/2022 0:51,9/23/2022 10:14,,,,,,,,,,,,,Documentation,,,,,,,,,0,,,,"The following items will be detailed in the “TGV Vector Crypto Micro-Architecture Specification” document:

* Instruction definitions
* Micro-op specifications
* Micro-op micro-architecture specifications",Erdinc Ozturk,,,,,,,,,,,,,,,61ccb01d90cfd20071b96af2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2391,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-23T10:12:30.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2391,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i0173b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/block-aes-sifive/pull/16/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV/Crypto] TGV Vector Crypto Micro-Architecture Specification for SM4 Instructions,,,,,,MAL-2691,126661,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,9/22/2022 3:42,9/22/2022 12:23,9/28/2022 0:51,,,,,,,,,,,,,,Documentation,,,,,,,,,0,,,,"The following items will be detailed in the “[TGV Vector Crypto Micro-Architecture Specification|https://github.com/sifive/arch-specs/blob/master/core/tgv_crypto.adoc]” document:

* Instruction definitions
* Micro-op specifications
* Micro-op micro-architecture specifications",Erdinc Ozturk,,,,,,,,,,,,,,,61ccb01d90cfd20071b96af2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2391,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2391,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i01733:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
HWPF LGS: improved twinJet FSM,,,,,,MAL-2688,126613,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,9/21/2022 19:27,9/27/2022 12:02,9/28/2022 0:51,,,,,,,,,,,,,,Performance,RTL/HWPF,,,,,,,,0,,,,"Current TWJ FSM transition from {{detect2}} or {{trained}} state to {{detect1}} state on {{Region Match & Stride Mismatch}}, this transition will cause the new pattern thereafter to lock slower i.e, slow HWPF training. 


Instead, the following transition will help faster training:

* on {{detect2}} state: stay in {{detect2}} on {{Region Match & Stride Mismatch}}
* on {{trained}} state: move to {{detect2}} on {{Region Match & Stride Mismatch}}",Benoy Alexander,Binayak Tiwari,Hung-Lun Chen,I-Cheng Cheng,John Ingalls,,,,,,,,,,,5e1370feefa19b0e976b5c24,60a963ed8cbda700681b40c1,60ce876f624d7000695b9589,5d7bfdaa003e040c3e175060,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,21/Sep/22 7:25 PM;ug:1e29c7e3-9c50-4cc0-81cf-3d99eb2e04ab;TWJ_FSM_Current.png;https://sifive.atlassian.net/secure/attachment/78066/TWJ_FSM_Current.png,21/Sep/22 7:25 PM;ug:1e29c7e3-9c50-4cc0-81cf-3d99eb2e04ab;TWJ_FSM_Updated.png;https://sifive.atlassian.net/secure/attachment/78067/TWJ_FSM_Updated.png,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-22T12:04:31.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,,,,,,,,,,,,,2|i016sf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,5,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/arch-specs/pull/943/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] vsetResolveStall_ID Hang,[TGV] vsetResolveStall_ID Hang,,,,,MAL-2687,126588,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Declined,David Kravitz,5fd15143b4a74900763834e0,Zhiqiang Hao,5d02d411febd110bc78aabc3,Zhiqiang Hao,5d02d411febd110bc78aabc3,9/21/2022 16:33,9/21/2022 18:21,9/28/2022 0:51,9/21/2022 17:27,,,,,,,,,,,,,RTL/RDU,,,,,,,,,0,TGV,,,"assert failed (verification library): vsetResolveStall_ID Hang  @\[RDU.scala 1237:11]



{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0003"",
  ""subtest"": ""sifive/regress.d/vector/tgv_milestone/vector_tgv_milestone_14_ta_ma.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1963679703
  },
  ""sim"": {
    ""vendor"": ""vcs""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



Waveform:

verif05

{{/scratch/verif/zhiqiangh/ms/federation/builds/coreip_u8_minimal_vector/sim/f3/rerun.outline/t0003/sting/sifive/regress.d/vector/tgv_milestone/vector_tgv_milestone_14_ta_ma.conf}}",David Kravitz,Josh Smith,Srivatsa Yogendra,Zhiqiang Hao,,,,,,,,,,,,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,5a938e9c0913194d2d262658,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i016mv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,39:07.8,21/Sep/22 4:39 PM;5acffeafaa802f2a797a955c;[~accountid:5d02d411febd110bc78aabc3] do you have a waveform already somewhere?,"21/Sep/22 4:41 PM;5d02d411febd110bc78aabc3;[~accountid:5acffeafaa802f2a797a955c] - [~accountid:5a938e9c0913194d2d262658] has just told me to close this ticket and I lost the rerun and my run area for this…

Let me see if I could recreate this issue",21/Sep/22 5:06 PM;5d02d411febd110bc78aabc3;[~accountid:5acffeafaa802f2a797a955c] - I add the waveform,21/Sep/22 5:28 PM;5d02d411febd110bc78aabc3;This issue is shown on milestone 14 that RTL may not be ready. Will reopen this later,"21/Sep/22 5:51 PM;5acffeafaa802f2a797a955c;I think the vset hang assertion is just a distraction.  There’s a {{vle8.v}} at PC 0x83e5d6c2 which never completes and retires.  It’s older than the {{vsetvl}} instruction.  The {{vsetvl}} is actually independent of the {{vle8.v}} I think, but the load that the {{vsetvl}} depends on get stuck in the  LsIssQ unable to issue because of the {{vle8.v}}.  It looks like the {{vle8.v}} keeps issuing, holding in RR stage to unroll, and replaying or something.","21/Sep/22 6:21 PM;5fd15143b4a74900763834e0;OK, then we’ll drop it like most of the other load/store bugs, and open new tickets as we find/fix stuff based on the milestone 7 tests",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]: Change the P670 config to match POR,,,,,,MAL-2686,126577,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,9/21/2022 15:33,9/27/2022 11:45,9/28/2022 0:51,9/27/2022 11:13,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Current configuration of p670 config has simpleSlide unit and complexPerm unit in one execution pipe. 

According to [https://sifive.atlassian.net/wiki/spaces/CIP/pages/2164360009/Performance+Architecture+P670+RTL+Performance+Landing+Zone|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2164360009/Performance+Architecture+P670+RTL+Performance+Landing+Zone|smart-link] 

the Simple slide unit is in Vex0 and Complex in Vex1. Making the json to match this ",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Warren Menezes,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,600773dcee80bd006f750bba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2329,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-27T11:12:40.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i016kf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26404/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LSU sends wrong load data to LTB (different than MAL-2646),[TGV] LSU wrong load data  LTB ,LSU (Load Store Unit),,,,MAL-2685,126562,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Cannot Reproduce,Srivatsa Yogendra,5a938e9c0913194d2d262658,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,9/21/2022 13:18,9/21/2022 17:52,9/28/2022 0:51,9/21/2022 17:52,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"After pulling all (at the time) of the commits for [https://github.com/sifive/federation/pull/26254|https://github.com/sifive/federation/pull/26254|smart-link], 2 of the milestone7_case_1 tests still fail with cosim mismatches. The incorrect data is coming from the LSU.",David Kravitz,John Ingalls,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/tree/MAL-2685,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Directed,Simulation-VTG,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i016h3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"Check out https://github.com/sifive/federation/tree/MAL-2685
Build `coreip_u8_minimal_vector`
Run sitest with `/work/nicolasb/tgv_bug_outlines/vtg/MAL-2685.outline`",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Sep/22 1:24 PM;5fd15143b4a74900763834e0;Code around the error:

{noformat}C                   0:      15877 [1] pc=[0000000080000da4] W[r 5=0000000000000010][1] R[r 5=0000000000000010] R[r 0=0000000000000000] inst=[0002f2d7] vsetvli t0, t0, e8, m1, tu, mu
Error: Instruction-by-Instruction check failed
C                   0:      16036 [1] pc=[0000000080000da8] W[r 5=0000000080004da8][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00004297] auipc   t0, 0x4
C                   0:      16036 [1] pc=[0000000080000dac] W[r 5=0000000080005598][1] R[r 5=0000000080004da8] R[r 0=0000000000000000] inst=[7f028293] addi    t0, t0, 2032
C                   0:      16036 [1] pc=[0000000080000db0] W[r 0=0000000000000000][0] R[r 5=0000000080005598] R[r 0=0000000000000000] inst=[0202f807] vle64.v v16, (t0){noformat}


Error message:

{noformat}[COSIM-ERROR][0] m_dut:  en=true r16=0xffef_d008_421e_3567_061b_6f66_9f88_e0f0 mask=0000ffff en=true r17=0x1241_6d41_4d60_3e07_9c43_aa50_d6ee_04a6 mask=0000ffff en=true r18=0x49d3_8d51_7667_00c2_66e5_b1fe_f450_94f6 mask=0000ffff en=true r19=0xe0d4_dbe1_b226_8c97_fcfc_1dc2_08ab_2144 mask=0000ffff en=true r20=0x7e2f_e650_74a1_f892_cf60_8a18_222b_d8ef mask=0000ffff en=true r21=0x645f_d4e0_bcd9_0009_5ed2_6810_ce41_b446 mask=0000ffff en=true r22=0x0000_0000_0000_0000_1a1e_90db_bc2b_b9c1 mask=0000ffff en=true r23=0xffef_d008_421e_3567_061b_6f66_9f88_e0f0 mask=0000ffff
[COSIM-ERROR][0] m_sim:  en=true r16=0xffef_d008_421e_3567_061b_6f66_9f88_e0f0 mask=0000ffff en=true r17=0x1241_6d41_4d60_3e07_9c43_aa50_d6ee_04a6 mask=0000ffff en=true r18=0x49d3_8d51_7667_00c2_66e5_b1fe_f450_94f6 mask=0000ffff en=true r19=0xe0d4_dbe1_b226_8c97_fcfc_1dc2_08ab_2144 mask=0000ffff en=true r20=0x7e2f_e650_74a1_f892_cf60_8a18_222b_d8ef mask=0000ffff en=true r21=0x645f_d4e0_bcd9_0009_5ed2_6810_ce41_b446 mask=0000ffff en=true r22=0x9414_39bb_19b7_3b83_1a1e_90db_bc2b_b9c1 mask=0000ffff en=true r23=0x0f92_88a1_925b_3e07_7248_f986_cd08_7497 mask=0000ffff{noformat}

Directions to reproduce are in “Bug Info”","21/Sep/22 1:54 PM;5fd15143b4a74900763834e0;The first 6.5 transfers from LSU->LTB are correct. The 2nd half of the 7th transfer is all-0 but should have the memory data. The 8th transfer repeats the data from the 1st transfer, but that’s incorrect.","21/Sep/22 5:52 PM;5fd15143b4a74900763834e0;Due to all the turbulence around MAL-2558 and it's various PRs -- merged, closed, or reverted -- closing this bug as not reproducible. New tickets will be filed based on the tip of master and milestone 7 tests (VTG). This plan was agreed by [~accountid:5a938e9c0913194d2d262658] and [~accountid:5fd15143b4a74900763834e0]

For reference, the PRs are:
https://github.com/sifive/federation/pull/26079
https://github.com/sifive/federation/pull/26254
https://github.com/sifive/federation/pull/26305",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Recently added assertion in MallardTileView.scala fires on sting tests,[TGV]  assertion MallardTileView,,,,,MAL-2684,126561,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,9/21/2022 13:14,9/27/2022 10:31,9/28/2022 0:51,9/26/2022 7:02,,,,,,,,,,,Panda DR,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"i see the newly added assertion in PR [https://github.com/sifive/federation/pull/25983|https://github.com/sifive/federation/pull/25983|smart-link]  firing when we are executing code in the interrupt handler. 


Looking at the flow of the instruction, i see the test receives a timer interrupt and when executing the handler the assertion fires.

{noformat}Error: ""/scratch/srivatsa/master/builds/342156983219e50f9c4f81a62b2b67bb169459ab/coreip_u8_minimal_vector/verilog/design/sifive_scope/SiFive_SiFive_Scope_tile0_hart_0_companion.sv"", 5475: TestDriver.testHarness.system.subsystem.SiFive_Scope_tile0_hart_0_companion: at time 19135502500 ps
Assertion failed: VEX dispatch request dispatched while destination tag (PR  93) is still available in the Main Freelist
    at MallardTileView.scala:431 assert(

Fatal: ""/scratch/srivatsa/master/builds/342156983219e50f9c4f81a62b2b67bb169459ab/coreip_u8_minimal_vector/verilog/design/sifive_scope/SiFive_SiFive_Scope_tile0_hart_0_companion.sv"", 5477: TestDriver.testHarness.system.subsystem.SiFive_Scope_tile0_hart_0_companion: at time 19135502500 ps
$finish called from file ""/scratch/srivatsa/master/builds/342156983219e50f9c4f81a62b2b67bb169459ab/coreip_u8_minimal_vector/verilog/design/sifive_scope/SiFive_SiFive_Scope_tile0_hart_0_companion.sv"", line 5477.
{noformat}



This is weird cause we donot have any vector instructions in the handler now. 



To recreate this failure :

# clone federation and checkout the commit 342156983219e50f9c4f81a62b2b67bb169459ab
# build coreip_u8_minimal_vector and rerun the simulation using the outline 
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.l2_tlb_ram_ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+verbose""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0214"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3093770124
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



The waves are at {{verif02:/scratch/srivatsa/master/builds/342156983219e50f9c4f81a62b2b67bb169459ab/coreip_u8_minimal_vector/sim/sim2/sting_tgv.outline/sting_StingSiFiveTuple_T_0214/sting/sifive/vector/vector_tgv_dev.conf}}",Andrew Hanselman,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,21/Sep/22 6:35 PM;ug:03c2888a-5ac7-445d-b700-4a271a824946;Screen Shot 2022-09-21 at 7.38.46 PM-20220922-003930.png;https://sifive.atlassian.net/secure/attachment/78064/Screen+Shot+2022-09-21+at+7.38.46+PM-20220922-003930.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-26T07:01:35.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,23cca6192f517f63725fdd8646ec54909eca0797,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i016gv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26351/files],,,,,,,,,,,,,23:38.3,"21/Sep/22 2:23 PM;609d7e1f5998a6006800dcc5;It looks like I didn’t account for the slightly different earlyValid / lateCancel interface of the Baler dispatch buffer compared to the Vex dispatch buffer when making this assertion. A flush is occurring in the same cycle an instruction is dispatched with a destination still in the free vector. I’m moving the check back from dispatch buffer dequeue to dispatch buffer enqueue. Even with that change, it looks like the Baler dispatch packet is still being constructed and dispatched with a valid destination PR that is unallocated according to the freelist. So I am digging into that. Still undetermined if it’s a RTL bug with a malformed Baler payload, or just an assertion bug.","21/Sep/22 6:35 PM;609d7e1f5998a6006800dcc5;The instruction which appears to be making it to TGV is at PC 0x80028322.

!Screen Shot 2022-09-21 at 7.38.46 PM-20220922-003930.png|width=2090,height=868!

But it looks like that’s not a valid instruction:

{noformat}    80028310:	8082                	ret

0000000080028312 <_Z23get_BOARD_CONF_NUM_CPUSv>:
    80028312:	1141                	addi	sp,sp,-16
    80028314:	e422                	sd	s0,8(sp)
    80028316:	0800                	addi	s0,sp,16
    80028318:	fffff797          	auipc	a5,0xfffff
    8002831c:	2a07b783          	ld	a5,672(a5) # 800275b8 <_GLOBAL_OFFSET_TABLE_+0x5b8>
    80028320:	0b87a503          	lw	a0,184(a5)
    80028324:	6422                	ld	s0,8(sp)
    80028326:	1502                	slli	a0,a0,0x20
    80028328:	9101                	srli	a0,a0,0x20
    8002832a:	0141                	addi	sp,sp,16
    8002832c:	8082                	ret

000000008002832e <_Z32get_BOARD_CONF_DEVICES_RAMS_NAMEj>:
    8002832e:	1141                	addi	sp,sp,-16{noformat}

Disassembling the instruction at that address (in between) seems to make sense as to why something happens TGV side, and why there was no invalid instruction exception. Haven’t sorted out how we get here though. The previous instruction is a {{ret}} I think? But the return stack may have been corrupted before executing this.

{noformat}$ echo ""DASM(0x64220b87)""| spike-dasm                                                                                                                                                                                                                                                                                                   
vluxseg4ei8.v v23, (tp), v2, v0.t{noformat}

Root cause on TGV side is that some instruction is being decoded as a having a baler dispatch target, but using a shared destination (like accumulator uops). These uops that use the shared destination info should only target the VEX pipe, so the Baler dispatch packet doesn’t have the data path to get the correct patched shared PR. So it reuses some stale data. It happens to be the case that the stale PR info is currently in the freelist, so this assertion fires. Aside from any further investigation on how the PC ended up here, I might need to restrict the {{reqAccum}} flag further. But the definition: {{reqAccum = v && mask_out_only_op}} seems like it shouldn’t be firing on this instruction ({{vluxseg}}). Maybe some reserved bits are set in this instruction where the flags are messed up. I'll have to look at this more tomorrow.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] prepare skeleton for vector crypto unit(s),,,,,,MAL-2683,126512,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/21/2022 10:06,9/24/2022 19:43,9/28/2022 0:51,9/24/2022 19:30,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,Prepare a dummy {{VectorFuncUnit}} skeleton such that [~accountid:61ccb01d90cfd20071b96af2] can start instantiating the prototype of crypto units. ,Erdinc Ozturk,Nicolas Brunie,,,,,,,,,,,,,,61ccb01d90cfd20071b96af2,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2682,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-24T19:29:44.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2682,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/b92b2f9639d7356c33b192a164ab407c7f998231,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i0165z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26325/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
vector crypto unit design and integration,,,,,,MAL-2682,126511,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/21/2022 10:06,9/21/2022 10:06,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2683,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-13,,[TGV] vector crypto unit design and integration,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,dark_green,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0165r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
LSU: LDWB unroll mux multiple select,LSU: LDWB ,LSU (Load Store Unit),LDPipes,,,MAL-2681,126471,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,9/21/2022 2:29,9/26/2022 11:18,9/28/2022 0:51,9/22/2022 20:12,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"*Error:*

{noformat}Error: ""/scratch/saurabhs/master_12_9/federation/builds/coreip_u8_maxed_out/verilog/design/assertions/SiFive_LDPipes_assert.sv"", 120: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LDPipes.SiFive_LDPipes_assert: at time 2624642500 ps
Assertion failed

    at Mux.scala:63 assert(PopCount(validVec) <= 1.U(log2Ceil(vec.size).W)){noformat}

This failure was originally seen on [master/nightly-mallard/361|https://simscope.internal.sifive.com/sigs/6513/cn0ac57br6s6] before [https://github.com/sifive/federation/pull/25173|https://github.com/sifive/federation/pull/25173|smart-link] was merged. However, this failure is still seen on latest master {{(commit: 5a2b41493b9)}}

At {{T:2624602500ps}},  {{lsu.LDPipes.LDPipes_1.ldwb_valid_q}} & {{lsu.LDPipes.LDPipes_1.ldwb_metaInfo_q_unrolledMisaligned}} both are set, triggering the assertion. 

{{core.lsu.LSTPipes_1.lstr_unroll_q}} at {{T:2624002500ps}} asserts and sets {{ldwb_metaInfo_q_unrolledMisaligned.}}

*Dump Path*: {{gamma10:/scratch/saurabhs/master_12_9/federation/builds/coreip_u8_maxed_out/sim/sim/LDPipes.outline/vs-mode-g1-vs1-hart0/rv64ui-ma_data}}

*Build*: coreip_u8_maxed_out

*Commit*: 5a2b41493b9

*rerun.outline*: 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rv64ui-ma_data"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+memzero""
  ],
  ""subdir"": ""vs-mode-g1-vs1-hart0"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3173541769
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""v"",
    ""cppmacros"": [
      ""ENABLE_HYPERVISOR_CHANGES=1"",
      ""TEST_STARTUP_PRV=1"",
      ""TEST_STARTUP_V=1"",
      ""ENABLE_GSTAGE_TRANSLATION=1"",
      ""ENABLE_VSSTAGE_TRANSLATION=1""
    ]
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",John Ingalls,Saurabh Singh,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-70,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-23T11:32:02.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/26369,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i015x3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26369/files],,,,,,,,,,,,,20:00.8,"21/Sep/22 11:20 AM;5bb6808b9ba2930990f81895;The test passes when I try to reproduce using that commit+config+rerun.outline, and I don’t see the dump workspace {{verif04:/scratch/saurabhs/master_12_9/}}.

[~accountid:607e26f781e7b900681be48c] can you please re-verify the commit+config+rerun.outline and dump path+machine?","21/Sep/22 9:07 PM;607e26f781e7b900681be48c;[~accountid:5bb6808b9ba2930990f81895] 
Looks like the rerun.outline was different. I updated it in Jira description. 

The dump is available at {{gamma10:/scratch/saurabhs/master_12_9/federation/builds/coreip_u8_maxed_out/sim/sim/LDPipes.outline/vs-mode-g1-vs1-hart0/rv64ui-ma_data}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] improve sanity outline used in CI,,,,,,MAL-2680,126429,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/20/2022 21:04,9/27/2022 19:25,9/28/2022 0:51,9/27/2022 19:17,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"[https://github.com/sifive/federation/blob/master/test-outlines/tgv-sanity.outline|https://github.com/sifive/federation/blob/master/test-outlines/tgv-sanity.outline] 

* ensure each unit has at list a couple of instruction covered
* ensure number of test is enough without increasing test time too much
* check coverage of recent bugs (tagID [https://sifive.atlassian.net/browse/MAL-2645|https://sifive.atlassian.net/browse/MAL-2645|smart-link] for example)",Kira Tsao,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,VI-8350,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-27T19:07:00.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i015nr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26333/files],,,,,,,,,,,,,35:28.2,"21/Sep/22 11:35 AM;5a938e9c0913194d2d262658;i was planning to setup a sting test to be run in CI, i can use the instructions specified in this, to set it up.","22/Sep/22 12:46 AM;5e1a4f5ec578120daca5ff8e;Thanks [~accountid:5a938e9c0913194d2d262658] . I have created a PR for this task, feel free to leave the suggestions.","27/Sep/22 7:17 PM;5e1a4f5ec578120daca5ff8e;[https://github.com/sifive/federation/pull/26333#issuecomment-1258938045|https://github.com/sifive/federation/pull/26333#issuecomment-1258938045]

Turn {{no_self_check = 1}} in the PR temporary for avoid the mask layout instructions fails. Should be turn back on until tail policies in the VTG model be implemented.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Baler - `ROB Instruction should not retire before IssQ Entry` when vl=0,[TGV] Baler - `ROB Instruction ,Execution Unit (VexPipe),Vector ROB,,,MAL-2679,126428,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Cannot Reproduce,Srivatsa Yogendra,5a938e9c0913194d2d262658,Zhiqiang Hao,5d02d411febd110bc78aabc3,Zhiqiang Hao,5d02d411febd110bc78aabc3,9/20/2022 20:55,9/23/2022 9:12,9/28/2022 0:51,9/21/2022 17:51,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"{noformat}vsetvli x7, x7, e8, m1, ta, mu
// x5 = 0x84a00040
vse8.v v16, (x5){noformat}

LMUL=1, EEW=SEW=8, VL=0



Error:

{noformat}ROB Instruction should not retire before IssQ Entry  @[LsIssQ.scala 729:12]{noformat}



Branch: {{zq_ms_3}}

Config: {{coreip_u8_minimal_vector}}

Rerun:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0029"",
  ""subtest"": ""sifive/regress.d/vector/tgv_milestone/vector_tgv_milestone_3_l2.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3764062721
  },
  ""sim"": {
    ""vendor"": ""vcs""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",David Kravitz,Srivatsa Yogendra,Zhiqiang Hao,,,,,,,,,,,,,5fd15143b4a74900763834e0,5a938e9c0913194d2d262658,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i015nj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,51:22.6,"21/Sep/22 5:51 PM;5fd15143b4a74900763834e0;Due to all the turbulence around MAL-2558 and it's various PRs -- merged, closed, or reverted -- closing this bug as not reproducible. New tickets will be filed based on the tip of master and milestone 7 tests (VTG). This plan was agreed by [~accountid:5a938e9c0913194d2d262658] and [~accountid:5fd15143b4a74900763834e0]

For reference, the PRs are:
https://github.com/sifive/federation/pull/26079
https://github.com/sifive/federation/pull/26254
https://github.com/sifive/federation/pull/26305",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] improve inter-fp reduction latency,,,,,,MAL-2678,126413,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/20/2022 19:58,9/20/2022 21:05,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"{noformat}    fpHrzRedReady      := !fpHrzRedRunning && !fphrzredmodValid_EX && !fpHrzRedOutValid

    io.fphrzredReady   := fpHrzRedReady{noformat}

[https://github.com/sifive/federation/blob/master/block-tgv-sifive/src/main/scala/core/tgv/VexPipe.scala#L1917|https://github.com/sifive/federation/blob/master/block-tgv-sifive/src/main/scala/core/tgv/VexPipe.scala#L1917]

Currently, a vector fp horizontal reduction has to wait for the previous one to reach result forwarding {{EXN}} stage.

As soon as fphrzred tag broadcast without conflict, the issQ next horizontal reduction could be unblocked.",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2677,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i015k7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] improve inter-division latency,,,,,,MAL-2677,126411,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/20/2022 19:53,9/20/2022 21:05,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"{noformat}    divReady      := !divRunning && !divStart_EX && !divOutValid // MAL-1741: div unit is only considered ready atfer previous div op has completed result fwding

    io.divReady    := divReady{noformat}

[https://github.com/sifive/federation/blob/master/block-tgv-sifive/src/main/scala/core/tgv/VexPipe.scala#L1786|https://github.com/sifive/federation/blob/master/block-tgv-sifive/src/main/scala/core/tgv/VexPipe.scala#L1786]

Currently, a vector division has to wait for the previous one to reach result forwarding {{EXN}} stage.

As soon as division tag broadcast without conflict, the issQ next division could be unblocked.",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2678,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i015jr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] LDPipe 0 sent data that matched no LTB entries,[TGV] LDPipe mismatch LTB ,LSU (Load Store Unit),LTB ,,,MAL-2676,126400,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Cannot Reproduce,Srivatsa Yogendra,5a938e9c0913194d2d262658,Zhiqiang Hao,5d02d411febd110bc78aabc3,Zhiqiang Hao,5d02d411febd110bc78aabc3,9/20/2022 17:33,9/23/2022 9:13,9/28/2022 0:51,9/21/2022 17:50,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"Code:

{noformat}vsetvli	t1,t1,e16,m2,tu,mu
//  a0 = 0xffffffc400800000
vle16.v	v28,(a0){noformat}



A {{vle16.v}} with {{a0=0xffffffc400800000}}, lmul=2, eew=sew=16, t1=VLMAX

After milestone 4 ({{Milestone 4: Unit-stride LMUL>1 Aligned Loads}}), TGV should already support this pattern



An assertion will fire on {{coreip_u8_minimal_vector}}

{noformat}Assertion failed: LDPipe 0 sent data that matched no LTB entries
    at LoadBuffer.scala:387 assert(matchedCount_LDWB =/= 0.U, cf""LDPipe $ldp sent data that matched no LTB entries""){noformat}



Commit: {{46c787027706c0f1389da410019730d1d821475f}}

Config: {{coreip_u8_minimal_vector}}

Rerun:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0006"",
  ""subtest"": ""sifive/regress.d/vector/tgv_milestone/vector_tgv_milestone_4_l2.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3634877716
  },
  ""sim"": {
    ""vendor"": ""vcs""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Alexandre Solomatnikov,David Kravitz,Srivatsa Yogendra,Zhiqiang Hao,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,5a938e9c0913194d2d262658,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,21/Sep/22 7:24 AM;ug:03996552-4b14-4132-be2b-a08c9c621951;image-20220921-142405.png;https://sifive.atlassian.net/secure/attachment/78028/image-20220921-142405.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-21T19:00:57.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,No,,,,,,,,,,,,2|i015hb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26313/files],,,,,,,,,,,,,25:53.2,"21/Sep/22 5:25 AM;5fd15143b4a74900763834e0;This is my assertion, so I’ll take a look. This assertion is way more likely to be an LSU issue than Baler, so it probably won’t be Alex in the end.","21/Sep/22 7:24 AM;5fd15143b4a74900763834e0;What I see is the LTB is entry, then a series of 4 claims (LMUL=2) come in across 8 cycles. None of them are followed up by an {{establish}} request. However, 7 cycles after the first claim, the LDPipe sends a tag and 2 more cycles later sends data. It looks like either something is incorrectly blocking the {{establish}}es, or incorrectly not blocking the tag and data delivery.

!image-20220921-142405.png|width=656,height=326!

I checked with [~accountid:61730c9cbcb57400683f15a6], who does not believe his in-flight PR fixes this, so we’ll leave it open and let him investigate. I will try to add an assertion that would catch the tag broadcast not matching anything.",21/Sep/22 7:27 AM;5fd15143b4a74900763834e0;Outline has been copied to {{/work/nicolasb/tgv_bug_outlines/sting/MAL-2676.outline}},"21/Sep/22 5:50 PM;5fd15143b4a74900763834e0;Due to all the turbulence around MAL-2558 and it's various PRs -- merged, closed, or reverted -- closing this bug as not reproducible. New tickets will be filed based on the tip of master and milestone 7 tests (VTG). This plan was agreed by [~accountid:5a938e9c0913194d2d262658] and [~accountid:5fd15143b4a74900763834e0]

For reference, the PRs are:
https://github.com/sifive/federation/pull/26079
https://github.com/sifive/federation/pull/26254
https://github.com/sifive/federation/pull/26305",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LSU: lsta_srcReg unstable during unroll,[TGV] LSU: lsta_srcReg unstable ,LSU (Load Store Unit),,,,MAL-2675,126392,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,9/20/2022 16:39,9/22/2022 23:28,9/28/2022 0:51,9/21/2022 14:47,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"{noformat}=== sitest found errors in test sim/tgv_vlseg-vsseg.outline/vector/vlseg4e_v:
Reset m_pl2_mmc_inner_agents  ca
Error: ""/scratch/sols/tgv/federation/builds/954ea32406a_mfc_debug/coreip_u8_minimal_vector/verilog/design/SiFive_LoadQ.sv"", 6110: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LdQ: at time 277422500 ps
assert failed (verification library): LoadQ Age Matrix does not match ROB order at row=4 col=5  @[LoadQ.scala 1142:22]

Fatal: ""/scratch/sols/tgv/federation/builds/954ea32406a_mfc_debug/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LoadQ_assert.sv"", 522: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LdQ.SiFive_LoadQ_assert: at time 277422500 ps

$finish called from file ""/scratch/sols/tgv/federation/builds/954ea32406a_mfc_debug/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LoadQ_assert.sv"", line 522.{noformat}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vlseg4e_v"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Waveform: verif06:/scratch/sols/tgv/federation/builds/954ea32406a_mfc_debug/coreip_u8_minimal_vector/sim/sim/tgv_vlseg-vsseg.outline/vector/vlseg4e_v",Alexandre Solomatnikov,John Ingalls,,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2558,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/954ea32406afdef905399fa2a941382c04042b96,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-21T15:54:36.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/26305,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i015fj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26305/files],,,,,,,,,,,,,56:42.6,"20/Sep/22 5:56 PM;5bb6808b9ba2930990f81895;This is a bug in the address generation logic: {{lsta_srcReg}} is changing value between successive attempts at executing the replayed instruction {{gid=9 uop=3}}.

[~accountid:61730c9cbcb57400683f15a6] this could be similar to what you were fixing in [https://github.com/sifive/federation/pull/26254|https://github.com/sifive/federation/pull/26254|smart-link].",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[HB] HWPF LGS: establish LGS until BPM is trained,,,,,,MAL-2674,126389,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,9/20/2022 16:09,9/26/2022 21:07,9/28/2022 0:51,,,,,,,,,,,,,,Performance,RTL/HWPF,,,,,,,,0,,,,Current RTL establishes an LGS engine only when a BPM engine is established. Changing this to allow the LGS to be established until the BPM  engine is trained will catch some more LGS streams. This scheme shows improvement in {{milc}} workload.,Benoy Alexander,Binayak Tiwari,Hung-Lun Chen,John Ingalls,,,,,,,,,,,,5e1370feefa19b0e976b5c24,60a963ed8cbda700681b40c1,60ce876f624d7000695b9589,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i015ev:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,6,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
"[TGV] vrgather.vv instruction, replacing masked elements with all 1's for an unmasked instruction. ",[TGV] .vv instruction masked with all 1's ,Execution Unit (VexPipe),Vector,,,MAL-2673,126364,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,9/20/2022 12:18,9/27/2022 10:31,9/28/2022 0:51,9/22/2022 11:55,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"Around {{io_time}} {{559072}}

I see that for the vrgather instruction, which is unmasked. All the elements which are supposed to be updated to 0, are being written with all 1s. 

The vrgather spec says 

{noformat}vd[i] = (vs1[i] >= VLMAX) ? 0 : vs2[vs1[i]];{noformat}

for instruction  {{0x0000000023033700 (0x320a0657) vrgather.vv v12, v0, v20}} , when sew = 8, lmul = 4 and vl = 64. With vta = 0 and vma = 1. the source regs are

{noformat}v20 0x21607073ffffffffffffffff7fc00000
v0  0x839fd6ff073fadfe0e7f5bfc1cfeb7f9

The v12 is updated to  0xebfffffffffffffffffffffffffff9f9 in RTL{noformat}

I tried tracing the signals in the vex pipe i see that correct information is being sent into the {{TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_0.vperm_permEngMod}} module, and i get lost inside there. 

Seems like the correct source regs values are also being sent as well.

{noformat}The gid is 0x17, the globalid is 0x1597e. {noformat}

One thing i noticed is that when the regs are being written to the {{TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_0.vperm_permEngMod.dataRF}} module only one of the source regs are written. 



To recreate this failure :

# clone federation and checkout the commit 55400d569538045bacd1daf09e0084d261f2d966
# build coreip_u8_minimal_vector and rerun the simualtion using the outline  {{/work/nicolasb/tgv_bug_outlines/sting/MAL-2673.outline}}
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0156"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 726390828
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



the waves are at {{verif02:/scratch/verif/srivatsa/zq_enable_ta/builds/coreip_u8_minimal_vector/sim/sim2/rerun.outline/sting_StingSiFiveTuple_T_0156/sting/sifive/vector/vector_tgv_dev.conf}}",Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,21/Sep/22 3:32 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220921-223237.png;https://sifive.atlassian.net/secure/attachment/78056/image-20220921-223237.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-22T10:11:17.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/7771132e182685c8039073ada4cb7c7043312cf5,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i0159j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26321/files],,,,,,,,,,,,,13:49.1,"20/Sep/22 6:13 PM;6065017e90e3950069cf01c5;[~accountid:5a938e9c0913194d2d262658] I don’t think I have access to {{verif02}}, also could you list the io time when the error occurs ?","21/Sep/22 3:32 PM;6065017e90e3950069cf01c5;I think the issue lies in the fact that {{vrgather.v*}} sequence are always considered as masked in the permute unit because we use the mask to indicate which elements remain. The actual mask policy of setting unactive elements is performed during value input (initGatherResultRF value) and no mask agnostic policy should be enforce during the actual nano-op sequence. Currently testing a fix

!image-20220921-223237.png|width=2111,height=845!

 ","21/Sep/22 5:26 PM;6065017e90e3950069cf01c5;the instruction is no longer raising a cosim error and the test is executing about 40% more cycles, and failing on an MSHR assertion, this will require a different investigation and another ticket. Fix for review: [https://github.com/sifive/federation/pull/26321|https://github.com/sifive/federation/pull/26321|smart-link] 

*New failure signature*

{noformat}*Verdi* : Flush all FSDB Files at 17,446,082,500 ps.
*Verdi* : Flush all FSDB Files at 17,446,082,500 ps.

*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 3489216 simulation cycles (in TestDriver.report_phase_actions)

*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 3489216 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 17,446,082,500 ps.
*Verdi* : Close all FSDB Files at 17,446,082,500 ps.
""/scratch/nicolasb/federation/vsrc/sim/common/../TestDriver.sv"", 531: TestDriver.assert_final_phase.final_error: started at 17446082500ps failed at 17446082500ps
        Offending '(current_phase === shutdown_e)'

$finish at simulation time          17446082500
           V C S   S i m u l a t i o n   R e p o r t
Time: 17446082500 ps
CPU Time:   2843.330 seconds;       Data structure size:  31.8Mb
Wed Sep 21 16:23:36 2022
=== sitest found errors in test sim/MAL-2673.outline/sting_StingSiFiveTuple_T_0156/sting/sifive/vector/vector_tgv_dev.conf:
[PutDutArchStateInfo][0] 17446073ns CSR_TIMER=872184 | PRV=3 | MSTATUS=0x8000000a000066aa | MTVEC=0x0000000080000400 | MCAUSE=0x8000000000000007 | VSTART=0 | VL=64 | SEW=8 | LMUL=m4 | VSEGELT=0
Error: ""/scratch/nicolasb/federation/builds_dbg/coreip_u8_minimal_vector/verilog/design/SiFive_MSHREntry.sv"", 970: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.mshrEntries_1: at time 17446082500 ps
assert failed (verification library): MSHR Entry Valid Non-Reusable Hang  @[MSHR_Mallard.scala 4251:14]

Fatal: ""/scratch/nicolasb/federation/builds_dbg/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", 562: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.mshrEntries_1.SiFive_MSHREntry_assert: at time 17446082500 ps

$finish called from file ""/scratch/nicolasb/federation/builds_dbg/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", line 562.


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 3489216 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 17,446,082,500 ps.

*Verdi* : Close all FSDB Files at 17,446,082,500 ps.
""/scratch/nicolasb/federation/vsrc/sim/common/../TestDriver.sv"", 531: TestDriver.assert_final_phase.final_error: started at 17446082500ps failed at 17446082500ps
        Offending '(current_phase === shutdown_e)'


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 3489216 simulation cycles (in TestDriver.report_phase_actions)
2022-09-21T16:24:38-0700: Error: simulation sim/MAL-2673.outline/sting_StingSiFiveTuple_T_0156/sting/sifive/vector/vector_tgv_dev.conf failed{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Optimize the tagID bits in the Maptables,,,,,,MAL-2672,126353,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,9/20/2022 11:11,9/20/2022 11:28,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,,,,This is tech debt to improve and optimize the bit usage of the TagID field in the Maptable ,Andrew Hanselman,John Ingalls,Warren Menezes,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,5bb6808b9ba2930990f81895,600773dcee80bd006f750bba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2010,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i01573:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV]Assertion Failure : make sure we don't match tag on a source that's marked ready,[TGV]Assertion Failure : mismatch tag ,Execution Unit (VexPipe),,,,MAL-2671,126325,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,9/20/2022 9:08,9/20/2022 11:06,9/28/2022 0:51,9/20/2022 11:05,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"We see the below error message 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_220_test_fails/federation/builds21/coreip_p670/verilog/design/SiFive_IssQEntry_124.sv"", 685: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.issueQueues_1.entries_4: at time 4975242500 ps
assert failed (verification library): make sure we don't match tag on a source that's marked ready  @[MallardUtil.scala 605:20]
Fatal: ""/scratch/ishitashah/tgv_regression/sign_220_test_fails/federation/builds21/coreip_p670/verilog/design/assertions/SiFive_IssQEntry_124_assert.sv"", 169: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.issueQueues_1.entries_4.SiFive_IssQEntry_124_assert: at time 4975242500 ps{noformat}

Last retired inst according to to trace:

core   0: 0x00000002c04de5f0 (0x00009582) c.jalr  a1

Pending inst according to to trace:

2c04de5f2:	018dbc2f          	amoadd.d	x24,x24,(x27)

From the waves the last retired instruction is

next_label_0_42_f52_c0_890():

  1040296694:	1e7fcfd7          	vmax.vx	v31,v7,x31
  1040296698:	00000617          	auipc	x12,0x0
  104029669c:	00e60613          	addi	x12,x12,14 # 10402966a6 <next_label_0_42_f53_c0_891>
  10402966a0:	9602                	jalr	x12

next_label_0_42_f53_c0_891():
  10402966a6:	aab716d7          	vfmsub.vv	v13,v14,v11

The next instruction to be executed should be #*10402966a6* *vfmsub.vv* but while tracing into waves next Dispatch Pc is *2c04de642*

next_label_0_63_f46_c0_1403():
   2c04de642:	aaf056d7          	vfmsub.vf	v13,f0,v15

*SHA:* [*e2b70c2*|https://simscope.internal.sifive.com/models/undefined--master--e2b70c2400b87912f265b7990e1aed6d818195d6]

*config:*coreip_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0239"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2162681160
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath* 

{{gamma25:/scratch/ishitashah/tgv_regression/sign_220_test_fails/federation/builds21/coreip_p670/sim/rerundir1_iss/iss_rerun.outline/sting_StingSiFiveTuple_T_0239/sting/sifive/vector/vector_tgv_dev.conf}}

*Waves:*

{{gamma25:/scratch/ishitashah/tgv_regression/sign_220_test_fails/federation/builds21/coreip_p670/sim/rerundir1_iss/iss_rerun.outline/sting_StingSiFiveTuple_T_0239/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb}}

!image-20220920-160756.png|width=1397,height=371!",David Kravitz,Ishita Shah,,,,,,,,,,,,,,5fd15143b4a74900763834e0,607e26355431a500701f5aed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,20/Sep/22 9:08 AM;ug:03c44be9-4fb2-457c-9f94-75fe46b7a209;image-20220920-160756.png;https://sifive.atlassian.net/secure/attachment/77980/image-20220920-160756.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i0152n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,05:52.4,"20/Sep/22 11:05 AM;5fd15143b4a74900763834e0;This has all the signs of being a duplicate to MAL-2654, MAL-2654, and MAL-2669",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] cleanup vector division flush/kill,,,,,,MAL-2670,126323,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/20/2022 8:55,9/26/2022 12:53,9/28/2022 0:51,9/22/2022 20:05,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-20T19:02:36.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/c368e0c93296517019c42426f104d061e5d06b77,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i01527:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26080/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion Failure :Physical register   0 set as ready twice ,[TGV] Assertion Failure :Physical register ,Instruction decode and dispatch ,Physical Register File,,,MAL-2669,126312,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Highest,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,9/20/2022 7:50,9/23/2022 11:11,9/28/2022 0:51,9/20/2022 15:40,,,,,,,,,,,,,RTL/RDU,,,,,,,,,0,TGV,,,"We see the below error message 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_220_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_PRA_5_assert.sv"", 207: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.vexPra.SiFive_PRA_5_assert: at time 12740062500 ps
Assertion failed: Physical register   0 set as ready twice (only first conflicting id shown)
    at PRF.scala:91 assert(!(readyVec.asUInt & setVec).orR, ""Physical register %%d set as ready twice (only first conflicting id shown)"", firstRegSetTwice)

Fatal: ""/scratch/ishitashah/tgv_regression/sign_220_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_PRA_5_assert.sv"", 210: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.vexPra.SiFive_PRA_5_assert: at time 12740062500 ps{noformat}

Debug info 

Last retired instruction

core   0: 0x000000098141ca16 (0x008000ef) jal     pc + 0x8

Pending instruction 

98141ca1a:	00000073          	ecall

From the waves, it seems like the conflictVec\[0] is asserted because 

   98141ca44:	f2d62457          	*vwmaccu.vv	v8,v12,v13*
   98141ca48:	c4edbc2f          	[amominu.d.aq|http://amominu.d.aq]	x24,x14,(x27)
   98141ca4c:	62960557          	vmseq.vv	v10,v9,v12
   98141ca50:	629c3457          	[*vmseq.vi*|http://vmseq.vi]	*v8,v9,-8*
   98141ca54:	00750533          	add	x10,x10,x7
   98141ca58:	17a2aad7          	vredmin.vs	v21,v26,v5
   98141ca5c:	0001                	nop
   98141ca5e:	4fb21bd7          	vfrsqrt7.v	v23,v27

Here 98141ca44 and 98141ca50 has same destination reg v8.

!image-20220920-144739.png|width=1226,height=492!

*SHA:* e2b70c2

*config*: coreip_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0198"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3548923928
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath* 

{{gamma25:/scratch/ishitashah/tgv_regression/sign_220_test_fails/federation/builds2/coreip_p670/sim/rerundir1_pra/pra_rerun.outline/sting_StingSiFiveTuple_T_0198/sting/sifive/vector/vector_tgv_dev.conf}}
Waves 

{{gamma25:/scratch/ishitashah/tgv_regression/sign_220_test_fails/federation/builds2/coreip_p670/sim/rerundir1_pra/pra_rerun.outline/sting_StingSiFiveTuple_T_0198/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb}}",Ishita Shah,Josh Smith,Nicolas Brunie,,,,,,,,,,,,,607e26355431a500701f5aed,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-8502,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,20/Sep/22 7:50 AM;ug:03c44be9-4fb2-457c-9f94-75fe46b7a209;image-20220920-144739.png;https://sifive.atlassian.net/secure/attachment/77969/image-20220920-144739.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-20T19:02:36.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/0eec63f6546b085dac7fff170392c88b86fd3e7d,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i014zr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26080/files],,,,,,,,,,,,,17:47.1,"20/Sep/22 10:17 AM;5acffeafaa802f2a797a955c;It looks like the fphrzred module is not remembering the tagID for its destination PR.  There’s no assignment of {{instTagInject_ISS.bits.tags(0).tagID}} in the block below.


{noformat}    when (fpHrzRedBroadcast) {
      fpHrzRedTagInject_ISS                  := true.B
      instMultiCycInject_ISS                 := true.B
      instTagInject_ISS.valid                := true.B
      instTagInject_ISS.bits.gid             := stagedFPHrzRedTag.bits.gid
      instTagInject_ISS.bits.globalID        := stagedFPHrzRedTag.bits.globalID
      instTagInject_ISS.bits.broadcasts(0)   := true.B
      instTagInject_ISS.bits.tags(0).prIdx       := fpHrzRedExDestInfo.prIdx
      instTagInject_ISS.bits.tags(0).monitorInIQ := true.B
      instTagInject_ISS.bits.disableCmpl         := stagedFPHrzRedTag.bits.disableCmpl
      instTagInjectKill_ISS                      := fpHrzRedStagedKillUnqual{noformat}

It looks like in this case, a reduction op issues with a destination prIdx of 0x0, but a tagID of 0x1 (mask RF?).  gid 0x1b issues in cycle 636870 down VexPipe 1.  However, when the reduction unit injects its tag, it injects with a tagID of 0x0 and this assertion gets thrown in the VEX main PRA.",20/Sep/22 10:21 AM;6065017e90e3950069cf01c5;I have a fix for this in another PR,20/Sep/22 10:21 AM;6065017e90e3950069cf01c5;this is a duplicate of an issue we are seeing in VTG,"20/Sep/22 10:22 AM;6065017e90e3950069cf01c5;[~accountid:5acffeafaa802f2a797a955c] , and you are right {{tagID}} = 1 corresponds to mask, which is not forwarded here, leading to vexPRA being updated rather than maskUnitPRA",20/Sep/22 10:27 AM;6065017e90e3950069cf01c5;[https://github.com/sifive/federation/pull/26192/commits/df17b9555e1b1d0d1bedbbb3f059ad1d0dfc5bb2|https://github.com/sifive/federation/pull/26192/commits/df17b9555e1b1d0d1bedbbb3f059ad1d0dfc5bb2|smart-link],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]:: Assertion:: fphrzredmod should always be valid 2-cycle after preOutValid,[TGV]:: Assertion:: fphrzredmod,Execution Unit (VexPipe),vector Floating point,,,MAL-2668,126285,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,9/20/2022 2:39,9/27/2022 10:31,9/28/2022 0:51,9/26/2022 17:47,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error:*

Error: ""/scratch/naverath/sep-20/federation/builds/coreip_p670/verilog/design/assertions/SiFive_VexPipe_1_assert.sv"", 523: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_1.SiFive_VexPipe_1_assert: at time 832302500 ps
Assertion failed: fphrzredmod should always be valid 2-cycle after preOutValid
    at VexPipe.scala:1837 assert(\!(Pipe(fphrzredmod.io.preOutValid, false.B, 2).valid && \!fphrzredmod.io.out.valid), ""fphrzredmod should always be valid 2-cycle after preOutValid"")

*SHA1::* 86de325502ba1ed1ba40b437898f54088019f12c
*Config::* coreip_p670
*Waves::* gamma25:://scratch/naverath/sep-20/federation/builds/coreip_p670/sim/sim/rat.outline/rat_default_T_0072/rat/default/waves.fsdb
*rerun. Outline::* /work/nicolasb/tgv_bug_outlines/rat/MAL-2668.outline


*Outline*

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": \[
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=._\.tag_array_.ext,0,1,32:._\.data_arrays_0_._ext,0,1,32:._\.syssram._ext,0,1,32:._\.island.\.lim\.syssram._ext,0,1,32:._\.tagged_tables_0_._ext,0,1,32:._\.base_table_0_.*ext,0,132"",
    ""+verbose""
  ],
  ""subdir"": ""rat_default_T_0072"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3364310042
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))

*Debug_info::*
Instruction-trace
    80005f90:	c13e7657          	vsetivli	a2,28,e32,m8,tu,mu
    80005f94:	0f0796d7          	vfredosum.vs	v13,v16,v15
    80005f98:	89018713          	addi	a4,gp,-1904 # 8000db50 <data0+0x50>
    80005f9c:	928180a3          	sb	s0,-1759(gp) # 8000dbe1 <data0+0xe1>
    80005fa0:	93e00693          	li	a3,-1730

!image-20220920-093708.png|width=1472,height=633!",Naveen Rathore,Nicolas Brunie,,,,,,,,,,,,,,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,20/Sep/22 2:39 AM;ug:00e334db-2e60-4fae-a5b5-d5d39244fe5c;image-20220920-093708.png;https://sifive.atlassian.net/secure/attachment/77958/image-20220920-093708.png,,,,,,,,,,,,,,,,86de325502ba1ed1ba40b437898f54088019f12c,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-25T14:29:51.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i014tr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26326/files],,,,,,,,,,,,,49:31.6,"20/Sep/22 3:49 PM;6065017e90e3950069cf01c5;This looks to be the issue discussed here: [https://github.com/sifive/federation/pull/26192#discussion_r974797375|https://github.com/sifive/federation/pull/26192#discussion_r974797375]

The assertion was too aggressive and needs to be defined properly.

[~accountid:6235105a3eacc50071ff07ec] , I am a bit surprised by the hash, it does not seem to come from a master. Was this a custom branch ? a PR branch ?","20/Sep/22 8:58 PM;6235105a3eacc50071ff07ec;Hi [~accountid:6065017e90e3950069cf01c5] 
While reproducing other signature, I cherry-picked your fixes related to MAL-2645

This is the reason, you are seeing this kind of Hash
","20/Sep/22 9:07 PM;6065017e90e3950069cf01c5;Hi [~accountid:6235105a3eacc50071ff07ec] , it makes sense. Thank you for the initiative. [~accountid:5e1a4f5ec578120daca5ff8e] has been tasked to refine this assertion, which has not been merged into master.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: LSTR address beat row same even odd calculation,Assertion Failure: LSTR address ,LSU (Load Store Unit),LSTPipe,,Refer https://github.com/sifive/arch-specs/blob/master/core/mallard_lsu_mas.adoc#loadstore-tag-lst-pipe,MAL-2667,126270,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,9/20/2022 0:08,9/22/2022 7:42,9/28/2022 0:51,9/20/2022 11:56,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,xprop,,,"*Error:*

{noformat}Error: ""/scratch/saurabhs/mallard_master_xprop_141/federation/builds/coreip_p550/verilog/design/SiFive_LSTPipe.sv"", 5200: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LSTPipes_0: at time 427442500 ps
assert failed (verification library): LSTR address beat row same even odd calculation  @[LSTPipe.scala 5891:16]{noformat}

At {{T:427422500ps}}, {{STPipes_0.SiFive_LSTPipe_assert.lstr_addrBeatRowSameEvenOdd}}, {{LSTPipes_0.SiFive_LSTPipe_assert._io_lstr_vAddrIdxOff_addrBeatRowEven_output}} & {{LSTPipes_0.SiFive_LSTPipe_assert._io_lstr_vAddrIdxOff_vAddrIdxOff_output[5]}} transition to xx, which triggers the assertion. 

Tracing back the source of xx, it comes from {{lsu.LSTPipes_0.lstr_vAddr_q[63:0]}} transitioning to xx. This comes from {{lsu.StQ.stqEntries_10.stqE_data_q_r_3[31:0]}} being uninitialized throughout the simulation. 

{{lsu.StQ.stqEntries_10.io_sdoVec_stqEntryUpdateData_0_earlyValid}} & {{lsu.StQ.stqEntries_10.io_sdoVec_stqEntryUpdateData_0_bits_byteEn[4]}} expected to assert together for {{stqE_data_q_r_3}} to be updated, is never seen happening.



*Dump Path*: {{verif04:/scratch/saurabhs/mallard_master_xprop_141/federation/builds/coreip_p550/sim/sim/SiFiveLSTPipe_assert.outline/rat_default_T_0165/rat/default}}

*Build*: coreip_p550

*Commit*: e2b70c2

*Regression*: master/nightly-mallard-xprop/141

*Simscope*: [https://simscope.internal.sifive.com/sigs/708/cmzy3kqeawla|https://simscope.internal.sifive.com/sigs/708/cmzy3kqeawla]

*rerun.outline*: 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.tag_array_.*ext,0,1,32:.*\\.data_arrays_0_.*ext,0,1,32:.*\\.syssram.*ext,0,1,32:.*\\.island.*\\.lim\\.syssram.*ext,0,1,32:.*\\.tagged_tables_0_.*ext,0,1,32:.*\\.base_table_0_.*ext,0,132""
  ],
  ""subdir"": ""rat_default_T_0165"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 441322112
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Saurabh Singh,,,,,,,,,,,,,,,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2405,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-21T14:17:15.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/26264,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i014qf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26264/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] add coverpoints for vector permutes,,,,,,MAL-2666,126254,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/19/2022 20:50,9/19/2022 20:55,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,"*What should be covered:*

* ensure multiple values of {{VLMAX - vl}} have been met for {{vslidedown.vx}} and {{vrgather.v[vx]}}
** +justification;+ the difference implies how many uops carry only data vs data + index
* ensure all possible LMUL have been met
* ensure out-of-order permutation have been executed
* ensure complex permutations have been blocked in issue because of unavailability of permute engine
* if permute engine + slide unit are available, ensure no simple slide has been blocked (assert + cover)
* ensure highest and lowest slide amounts have been covered for {{vslide*}}
** +justification;+ slide amount overflow have lead to bugs",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2625,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2625,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i014mv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] add coverpoints for vector reductions,,,,,,MAL-2665,126253,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/19/2022 20:45,9/19/2022 20:55,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,,,,"What should be covered:

* ensure all types of LMUL (1/8 to 8 ) have been encountered for all types of reductions (coverpoint or VTG review TBD)
* ensure all types of {{vl}} modulo values have been encountered (for both single width and widening)
** justification: different {{vl}} modulo value may lead to different sequencing scheme, we want to make sure all are covered",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2625,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2625,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i014mn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Assertion Failure: HWPF BPM retrain counter,Assertion Failure: HWPF BPM ,LSU (Load Store Unit),,,,MAL-2664,126249,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,9/19/2022 19:51,9/21/2022 7:46,9/28/2022 0:51,9/20/2022 11:05,,,,,,,,,,,,,RTL/HWPF,,,,,,,,,0,,,,"on engine allocation, retrain counter should reset to {{0}}. RTL is working as expected, however, due to the late identification of the engine allocation {{retrain counter overflow assertion}} was fired. This assertion is exposed due to changes from {{b9c380d : Add plusArg for disabling random blocking (#25845)}}



{{Error: assert failed (verification library): HWPF Entry BPM: retrain counter should not wrap on overflow unless finding pattern @[HwpfBitPattern.scala 558:16]}}

Assertion log location: {{/work/hunglunc/problem_2022_09_15/333/simulation.out}}
Waveform location: {{/work/hunglunc/problem_2022_09_15/333/waves.fsdb}}

Original place (gamma18) {{/scratch/perf/hunglunc/federation_04/builds_master_b9c380d/coreip_p650/sim/sim/sparta-checkpoint.outline/sparta-ubenchmarks/checkpoint_test/0075/333/}}",Binayak Tiwari,Hung-Lun Chen,I-Cheng Cheng,Josh Smith,,,,,,,,,,,,60a963ed8cbda700681b40c1,60ce876f624d7000695b9589,5d7bfdaa003e040c3e175060,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-21T07:47:14.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i014lr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26226/files],,,,,,,,,,,,,27:05.0,"21/Sep/22 7:27 AM;5acffeafaa802f2a797a955c;I know it was a simple change, but it would be useful if you added a short description of what the problem was and how we fixed it for these bugs tickets.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Fix bugs found in vlseg4e# tests,[TGV]  vlseg4e# tests,,,,,MAL-2663,126242,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,9/19/2022 18:07,9/25/2022 10:20,9/28/2022 0:51,9/23/2022 2:21,,,,,,,,,,,,,TGV_RTL/BAL,TGV_RTL/SEQ,,,,,,,,0,TGV,,,"*The outlines that found bugs:*

*vlseg4e8.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vlseg4e8.v"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vlseg4e8.v_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-1_VSETIVLI-1_FENCEbeforeVSETVL-1_VSETVL-0_FLMUL-0_Sample-10_AVL-16_INITFULLVREG-1_NoSelfCheck-1_LMUL-1_TGV-1_IMM-1_Zvfh-1_Zfh-1_NonzeroVstart-1"",
  ""seed"": {
    ""value"": 1013994432
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}

*vlseg4e32.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vlseg4e32.v"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vlseg4e32.v_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-1_VSETIVLI-1_FENCEbeforeVSETVL-1_VSETVL-0_FLMUL-0_Sample-10_AVL-16_INITFULLVREG-1_NoSelfCheck-1_LMUL-1_TGV-1_IMM-1_Zvfh-1_Zfh-1_NonzeroVstart-1"",
  ""seed"": {
    ""value"": 1703301249
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}

*vlseg4e64.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vlseg4e64.v"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vlseg4e64.v_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-1_VSETIVLI-1_FENCEbeforeVSETVL-1_VSETVL-0_FLMUL-0_Sample-10_AVL-16_INITFULLVREG-1_NoSelfCheck-1_LMUL-1_TGV-1_IMM-1_Zvfh-1_Zfh-1_NonzeroVstart-1"",
  ""seed"": {
    ""value"": 799981516
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}



h3. Fix:

*The fix to this issue introduced the new LTB allocation scheme, which separate the allocation and alignment constraint for LTB.*

# The allocation entry number ({{nBalAllocs}}) is calculated
## Non-segmented: {{ceil(1.0 * vlByte / tp.dBytes)}}
## Segmented: {{(nf + 1) * LMUL}}
# The vl byte number in memory ({{memSegVlBytes}}) is {{vlBytes * (nf + 1) }}
# The actual number of touched LTB entry number ({{nBalUops}}) is {{ceil(1.0 * memSegVlBytes / tp.dBytes)}}
# Align {{nBalAllocs}} to {{[1, 2, 4, 8]}} ({{balAlignedAllocSize}})
# LTB return the freelist ({{LTBFreeList}}) according to {{balAlignedAllocSize}}
# LSU construct the claimed LTB entry by masking-off the entries in {{LTBFreeList}} that exceeds {{nBalUops}}

*Other fixed bugs*

* Fix segmented LTB wakeup in {{coreip_p670}} config
* -Fix noRemapReq expression for segmented load store- (should be fixed in [https://github.com/sifive/federation/pull/26351|https://github.com/sifive/federation/pull/26351|smart-link])
* -Fix sequencer producing the same rd for segmented load uops-
* Fix vstart masking
* -Fix nthUop condition-
* Fix 2nd destination condition
* Some sequencer fixes are done in [https://github.com/sifive/federation/pull/26331|https://github.com/sifive/federation/pull/26331|smart-link], some are discarded b/c sequencer cannot fully support LMUL>1 segmented load yet.",Brad Wu,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,,62103777eb2978006893b778,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-23T02:20:52.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i014k7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"1. Checkout master
2. BUILD_DIR=builds ./generate-build coreip_p670
3. Run the following outline
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vlseg4e8.v"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vlseg4e8.v_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-1_VSETIVLI-1_FENCEbeforeVSETVL-1_VSETVL-0_FLMUL-0_Sample-10_AVL-16_INITFULLVREG-1_NoSelfCheck-1_LMUL-1_TGV-1_IMM-1_Zvfh-1_Zfh-1_NonzeroVstart-1"",
  ""seed"": {
    ""value"": 1013994432
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26223/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV/Crypto] Create RTL Library for SHA2 instruction extensions,,,,,,MAL-2662,126217,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,9/19/2022 13:44,9/21/2022 10:58,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Erdinc Ozturk,,,,,,,,,,,,,,,61ccb01d90cfd20071b96af2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2620,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-27T14:59:28.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,,,,,,,,,,,,,,,,2|i014ev:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] vmv.v.v stalled in issue queue,[TGV] vmv.v.v issue queue,Execution Unit (VexPipe),Issue Queue,,,MAL-2661,126205,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/19/2022 12:09,9/23/2022 9:13,9/28/2022 0:51,9/21/2022 21:08,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"visible on sha1 {{e2b70c2400b}}

config: {{coreip_p670}}

outline copied into {{/work/nicolasb/tgv_bug_outlines/vtg/MAL-2661.outline}}

*outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+verbose""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vfredosum.vs"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vfredosum.vs_Mask-7_Masking-1_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_NoSelfCheck-1_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-1_TGV-1_IMM-0_LdStAccFault-1_Zvfh-1_Zfh-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 4282876139
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",David Kravitz,Josh Smith,Nicolas Brunie,,,,,,,,,,,,,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i014c7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,08:39.9,"21/Sep/22 9:08 PM;5fd15143b4a74900763834e0;Investigation showed the `vmv.v.v` instruction was waiting for a `v0`, which was coming from a reduction operation. Cherry-picked the fix for MAL-2669, which got this outline to pass. Closing as duplicate.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LSU sends wrong load data to LTB,[TGV] LSU  LTB,LSU (Load Store Unit),,,,MAL-2660,126199,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,David Kravitz,5fd15143b4a74900763834e0,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,9/19/2022 11:55,9/23/2022 11:11,9/28/2022 0:51,9/21/2022 12:36,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"For this test case , i see LMUL = 1, EEW = 32, sew = 8. EMUL = 4 and VL = 10. The address accessed is {{0x81403000}} . 

I see the LSU sending correct number of ops back to the baler unit for the read request, but the vector reg WB of the baler unit is sending 0’s for the corresponding element location. 

Here as vl = 18 and EEW = 32, we have 10 elements to be updated, The rd = V16, so V16, V17 and V18\[63:0] will be updated.

the reg 16 → PRF id 1, 17 → PRF ID 0x58 and 18 → PRF ID 3.

on the vrfWB from baler i see

!Screen Shot 2022-09-19 at 16.17.27.png|width=1212,height=95!

From LSU i see the correct data being sent back to the baler

!Screen Shot 2022-09-19 at 16.18.44.png|width=1070,height=257!



To recreate this failure:

# clone federation and checkout the commit 55400d569538045bacd1daf09e0084d261f2d966
# build coreip_u8_minimal_vector and rerun the simulation using the outline 
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.l2_tlb_ram_ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0214"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3093770124
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



The waves and log files are at {{verif02:/scratch/verif/srivatsa/zq_enable_ta/builds/coreip_u8_minimal_vector/sim/sim/sting_tgv.outline/sting_StingSiFiveTuple_T_0214/sting/sifive/vector/vector_tgv_dev.conf}}",David Kravitz,Josh Smith,Srivatsa Yogendra,Vijith KS,,,,,,,,,,,,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,5a938e9c0913194d2d262658,5fa30ce971ab9e006a1d63d8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2646,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,19/Sep/22 4:19 PM;srivatsa;Screen Shot 2022-09-19 at 16.17.27.png;https://sifive.atlassian.net/secure/attachment/77916/Screen+Shot+2022-09-19+at+16.17.27.png,19/Sep/22 4:19 PM;srivatsa;Screen Shot 2022-09-19 at 16.18.44.png;https://sifive.atlassian.net/secure/attachment/77915/Screen+Shot+2022-09-19+at+16.18.44.png,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i014av:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,20:52.4,"19/Sep/22 12:20 PM;5acffeafaa802f2a797a955c;The VL is not known when gid 0x2a dispatches to the LSU.  If you look at {{io_dispReq_0_bits_vsetSrcTag_ready}} it’s 0, and {{io_dispReq_0_bits_vsetSrcTag_prIdx}} is 0xc (really 0x4 because the MSB is discarded for this purpose).  So the op has to wait in the LsIssQ for the VL to become known.

That happens a couple cycles later when {{io_vsrfWriteReq_WB_valid}} is asserted and {{io_vsrfWriteReq_WB_bits_idx}} == 0x4.

When the op with gid 0x2a issues, {{io_issReq_ISS_0_bits_payload_vector_vconfig_vl}} == 0xa, which appears to be correct. 

So I think the bug is probably somewhere else.",19/Sep/22 12:22 PM;5a938e9c0913194d2d262658;Ooh ok. Thanks josh. I’ll take a closer look ,19/Sep/22 4:19 PM;5a938e9c0913194d2d262658;I have updated the ticket description with the new failure. ,"21/Sep/22 12:35 PM;5fd15143b4a74900763834e0;After some investigation, decided to cherry-pick the commits to [https://github.com/sifive/federation/pull/26254|https://github.com/sifive/federation/pull/26254|smart-link] and re-run. With those commits, the correct data is sent to the Baler and VRF.

There’s a later ROB assert, which looks the same as [https://sifive.atlassian.net/browse/MAL-2679|https://sifive.atlassian.net/browse/MAL-2679|smart-link]. Will close this one as a duplicate of [https://sifive.atlassian.net/browse/MAL-2646|https://sifive.atlassian.net/browse/MAL-2646|smart-link].",21/Sep/22 12:36 PM;5fd15143b4a74900763834e0;Duplicate of MAL-2646.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: SiFive_FexPipe_assert: FEX pipe saw source replay from RR stage,Assertion Failure:FexPipe_assert,,,,,MAL-2659,126196,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Rakesh Palakurthi,62350e943eacc50071ff0753,Rakesh Palakurthi,62350e943eacc50071ff0753,9/19/2022 11:42,9/22/2022 7:42,9/28/2022 0:51,9/19/2022 16:15,,,,,,,,,,,,,RTL/FEX,RTL/LSU,,,,,,,,0,,,,"Test is failing with following error:

{noformat}Error: ""/scratch/rakeshp/mallard_0919/federation/builds/coreip_u8_ultra_minimal/verilog/design/assertions/SiFive_FexPipe_assert.sv"", 129: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.fex.exPipes_0.SiFive_FexPipe_assert: at time 20122622500 ps
Assertion failed: FEX pipe saw source replay from RR stage
    at FexPipe.scala:233 assert(!(instValid_RR && instSrcReplay_RR), ""FEX pipe saw source replay from RR stage"")

Fatal: ""/scratch/rakeshp/mallard_0919/federation/builds/coreip_u8_ultra_minimal/verilog/design/assertions/SiFive_FexPipe_assert.sv"", 131: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.fex.exPipes_0.SiFive_FexPipe_assert: at time 20122622500 ps
$finish called from file ""/scratch/rakeshp/mallard_0919/federation/builds/coreip_u8_ultra_minimal/verilog/design/assertions/SiFive_FexPipe_assert.sv"", line 131.{noformat}



fex.exPipes_0.SiFive_FexPipe_assert.instValid_RR = 1

fex.exPipes_0.SiFive_FexPipe_assert.instSrcInfo_RR_0_fwdCtl_stageSel\[1:0] = 1

fex.exPipes_0.SiFive_FexPipe_assert.instSrcInfo_RR_0_fwdCtl_pipeSel\[0] = 1

fex.exPipes_0.SiFive_FexPipe_assert.io_exPipeTagReplay_1_1 = 1



The below snippet PCL 0x8000a2f2 is in 4 iteration loop

{noformat}8000a2e8:	b2672687            	flw	fa3,-1242(a4) # 80023df8 <data2+0x12468>
8000a2ec:	8cf1b023          	    sd	a5,-1856(gp) # 8000c880 <_data_lma+0x80>
8000a2f0:	4711                	li	a4,4
8000a2f2:	c709                  	beqz	a4,8000a2fc <rat_entry+0x95ce>
8000a2f4:	c03785d3          	    fcvt.lu.s	a1,fa5,rne
8000a2f8:	177d                	addi	a4,a4,-1
8000a2fa:	bfe5                	j	8000a2f2 <rat_entry+0x95c4>
8000a2fc:	40e605bb          	    subw	a1,a2,a4{noformat}


Can you please check if is a Assertion on Pipeline issue?



Local run path with fsdb:

{{verif03:/scratch/rakeshp/mallard_0919/federation/builds/coreip_u8_ultra_minimal/sim/sim/rerun_fex.outline/rat_vm_default_T_0123/rat_vm/default}}



build: [+coreip_u8_ultra_minimal+|https://simscope.internal.sifive.com/tests/?regr=fed%2fmaster%2fnightly-mallard%2f361&build=coreip_u8_ultra_minimal.verilator]

simscope: [https://simscope.internal.sifive.com/sigs/1576/cn0bo50ogfyf|https://simscope.internal.sifive.com/sigs/1576/cn0bo50ogfyf]

rerun.outline:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat_vm"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.tag_array_.*ext,1,0,32:.*\\.data_arrays_0_.*ext,1,0,32:.*\\.syssram.*ext,1,0,32:.*\\.island.*\\.lim\\.syssram.*ext,1,0,32:.*\\.tagged_tables_0_.*ext,1,0,32:.*\\.base_table_0_.*ext,1,032""
  ],
  ""subdir"": ""rat_vm_default_T_0123"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3246265756
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



cc; [~accountid:6065017e90e3950069cf01c5]  [~accountid:624f6b22f813eb00692ee29a] [~accountid:5bb6808b9ba2930990f81895] ",John Ingalls,Josh Smith,Nicolas Brunie,Rakesh Palakurthi,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,62350e943eacc50071ff0753,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1795,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,e2b70c2,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-19T17:56:11.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/26217,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i014a7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26217/files],,,,,,,,,,,,,00:54.1,19/Sep/22 12:00 PM;5acffeafaa802f2a797a955c;[~accountid:5bb6808b9ba2930990f81895] Did you change something around the LSU replay signals recently?  This assertion was added a long time ago because it was expected that the FEX pipe would never see a replay from an FP load (or any possible forwarding source really) when the FEX op in the RR stage.  I guess this corresponds to the LDWB stage?,"19/Sep/22 12:11 PM;5bb6808b9ba2930990f81895;I didn’t think we did, but there are two possible things we merged recently that could be in this area (I’m stretching):

# [https://sifive.atlassian.net/browse/MAL-70|https://sifive.atlassian.net/browse/MAL-70|smart-link]
# [https://sifive.atlassian.net/browse/MAL-2010|https://sifive.atlassian.net/browse/MAL-2010|smart-link]",19/Sep/22 4:10 PM;5bb6808b9ba2930990f81895;This was caused by the removal of {{&& lsp.fastLoadFloat.B}} in the signal {{ldr_fexTag.head.valid}} in [https://github.com/sifive/federation/pull/22859/files#diff-b4ff7d158d241ceadc5d6f5a1f5157587f17c24eaeedc368605a12c017affbac|https://github.com/sifive/federation/pull/22859/files#diff-b4ff7d158d241ceadc5d6f5a1f5157587f17c24eaeedc368605a12c017affbac],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
MSHR Entry Valid Non-Reusable Hang failure in p550_fake_l3,MSHR ,,,,,MAL-2658,126144,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Bandan Bhoi,6137eb8f7eb35f00692df12a,Bandan Bhoi,6137eb8f7eb35f00692df12a,9/19/2022 3:04,9/22/2022 7:42,9/28/2022 0:51,9/19/2022 11:35,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"*Description*: The MSHR Valid Hang counter exceeds the hang threshold. {{mshrE_valid_q}} remains high after counter is reset, making the counter increment until the threshold is exceeded.

Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/361/builds/coreip_p550_fake_l3/verilog/design/SiFive_MSHREntry.sv"", 1043: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.mshrEntries_0: at time 26828722500 ps
assert failed (verification library): MSHR Entry Valid Non-Reusable Hang  @\[MSHR_Mallard.scala 4251:14]

!Screenshot 2022-09-19 144040.jpg|width=1355,height=547!



!detailed.jpg|width=1362,height=320!

 Here s1_neck and s1_kill signal is not matching, so that it seems to be {{mshrE_valid_q}} is stucked . 

Regression: fed/master/nightly-mallard/361 

Link:  [https://simscope.internal.sifive.com/sigs/743/cmz46vcj0k79|https://simscope.internal.sifive.com/sigs/743/cmz46vcj0k79]

config: p550_fake_l3

commit: e2b70c2

failure:  Assertion Failure: SiFive_MSHREntry_assert

rerun.outline:

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""sting"",
""raw_plusargs"": \[
""+cosim_scoreboard_trap_epc_count=128"",
""+axi_mem_latency_cycles=40"",
""+axi_mem_dither_cycles=20"",
""+amba_vip_select=2"",
""+gdi_amba_test_enable=1"",
""+gdi_tlc_test_enable=1"",
""""
],
""subdir"": ""sting_StingFpOpsTuple_T_0145"",
""subtest"": ""valtrix/fp_ops_frm_rne.conf"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 1340030069
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""program"": {
""reset_vector_scheme"": ""first_mem_periph_sys""
},
""uvm"": {
""set_config_string"": \[
""uvm_test_top,torture_read_inbound,10101010:80808080"",
""uvm_test_top,torture_inbound,10101010:80808080""
],
""testname"": ""torture_test""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))

dump directory: 

bandanb@verif04:/scratch/bandanb/nightly361-MSHREntryassert/federation/builds/coreip_p550_fake_l3/sim/sim/rerun.outline/sting_StingFpOpsTuple_T_0145/sting/valtrix/fp_ops_frm_rne.conf$",Bandan Bhoi,John Ingalls,,,,,,,,,,,,,,6137eb8f7eb35f00692df12a,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,VI-8453,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1638,,,,,,,,,,,,,,,,,,19/Sep/22 3:06 AM;ug:004d42dd-0155-4b41-a5e6-cb45649086fe;Screenshot 2022-09-19 144040.jpg;https://sifive.atlassian.net/secure/attachment/77839/Screenshot+2022-09-19+144040.jpg,19/Sep/22 12:40 PM;ug:004d42dd-0155-4b41-a5e6-cb45649086fe;compilation error fake l3.jpg;https://sifive.atlassian.net/secure/attachment/77905/compilation+error+fake+l3.jpg,19/Sep/22 3:06 AM;ug:004d42dd-0155-4b41-a5e6-cb45649086fe;detailed.jpg;https://sifive.atlassian.net/secure/attachment/77838/detailed.jpg,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-19T14:09:16.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/26206,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i013zz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26206/files],,,,,,,,,,,,,35:37.2,"19/Sep/22 11:35 AM;5bb6808b9ba2930990f81895;Fix in https://github.com/sifive/federation/pull/26206.
I was unable to reproduce the failing test due to a VCS error ""Variable Never Gets Set (VNGS)"", but the waves were enough for me to identify the issue even without rerunning.","19/Sep/22 12:40 PM;6137eb8f7eb35f00692df12a;Hi [~accountid:5bb6808b9ba2930990f81895] thank you for the update. After running this fix [https://github.com/sifive/federation/pull/26206|https://github.com/sifive/federation/pull/26206|smart-link] .on building p550_fake_l3 , compilation issue is arising. The screenshot of these errors are attached here. Please take a look. 

!compilation error fake l3.jpg|width=1350,height=589!",19/Sep/22 2:20 PM;5bb6808b9ba2930990f81895;The PR built-and-merged successfully… 🤷‍♂️ ,19/Sep/22 10:47 PM;6137eb8f7eb35f00692df12a;Thanks [~accountid:5bb6808b9ba2930990f81895] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Wakeup to LSU only when all mask data in VMB *and* all store data in STB,,,,,,MAL-2657,126174,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/19/2022 7:49,9/23/2022 16:52,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"*Row 166* with same title in TGV schedule [smartsheet|https://app.smartsheet.com/sheets/qq6hr6GFM8whfgG9PRMr88h625G6C7pFWH7mwhc1?view=gantt], under section “Unit-stride masked store”",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2213,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-26T17:07:02.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2213,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0146n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV]:: COSIM VS RTL WRDST MISMATCH for instruction vfredosum.vs(PC=0x0000000022c557cc),[TGV]:: COSIM VS RTL WRDST MISMATCH,Execution Unit (VexPipe),Vector ,,,MAL-2656,126173,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Nicolas Brunie,6065017e90e3950069cf01c5,Abhishek Kumar,620ee634a715c6006914e852,Abhishek Kumar,620ee634a715c6006914e852,9/19/2022 7:26,9/23/2022 11:11,9/28/2022 0:51,9/21/2022 19:21,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error::*

**

{noformat}[COSIM-ERROR][0] COSIM VS RTL WRDST MISMATCH
[COSIM-ERROR][0] COSIM VS RTL WRINFO MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [640658] InstInfo: VLD=1 | PC=0x0000000022c557cc | INSN=0x0f411057 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r3=0x0000_0000_3fdf_ffff_0000_0000_7fc0_0000 mask=0000ffff | READY=1 | CSR_TIMER=640658 | PRV=3 | MSTATUS=0x8000000a000066aa | MTVEC=0x0000000080000400 | MCAUSE=0x8000000000000007 | VSTART=0 | VL=4 | SEW=32 | LMUL=m1 | VSEGELT=0
[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000022c557cc | INSN=0x0f411057 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r0=0x0000_0000_3fdf_ffff_0000_0000_7fc0_0000 mask=0000000f

[COSIM-ERROR][0] m_dut:  en=true r3=0x0000_0000_3fdf_ffff_0000_0000_7fc0_0000 mask=0000ffff
[COSIM-ERROR][0] m_sim:  en=true r0=0x0000_0000_3fdf_ffff_0000_0000_7fc0_0000 mask=0000000f{noformat}



*Debug info:*:

according to the instruction <*vfredosum.vs v0, v20, v2*> , the correct value should be in r0 but rtl is updating this value in r3 register.

Cosim log:

core   0: 0x0000000022c557cc (0x0f411057) vfredosum.vs v0, v20, v2
core   0: 3 0x0000000022c557cc (0x0f411057) e32 m1 l4 v0  0x000000003fdfffff000000007fc00000

Design trace::
C                   0:     640658 \[1] pc=\[0000000022c557cc] W\[r 0=0000000000000000]\[0] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[0f411057] vfredosum.vs v0, v20, v2

C                   0:     640656 vrf\[ 3]=\[000000003fdfffff000000007fc00000]\[ffff]



*SHA1::* {{51f6ba6e3334168d83269325eac4207db426199f}}
*Config::* coreip_p670
*Waves::* verif03:///scratch/abhishekk/vector_debug/sting0246/federation/builds/coreip_p670/sim/rerundir1/rerun.outline/sting_StingSiFiveTuple_T_0246/sting/sifive/vector/vector_tgv_dev.conf



*Rerun.outline:*

Outline copied in {{/work/nicolasb/tgv_bug_outlines/sting/MAL-2656.outline}}


*outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+pl2_randomEtoEIEnable=1"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0246"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 131302877
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Abhishek Kumar,Josh Smith,Kira Tsao,Nicolas Brunie,,,,,,,,,,,,620ee634a715c6006914e852,5acffeafaa802f2a797a955c,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2645,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb --rundir=rerundir1 --local,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-20T19:02:36.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,No,,,,,,,,,,,,2|i0146f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26080/files],,,,,,,,,,,,,17:49.0,20/Sep/22 6:17 AM;5e1a4f5ec578120daca5ff8e;I think this is the issue we had in ROB before and start seeing again recently. Not sure [https://sifive.atlassian.net/browse/MAL-2661|https://sifive.atlassian.net/browse/MAL-2661|smart-link] is also the same issue. I’ll look into this.,20/Sep/22 6:22 AM;5acffeafaa802f2a797a955c;Which issue in the ROB?,"20/Sep/22 6:34 AM;5e1a4f5ec578120daca5ff8e;[~accountid:5acffeafaa802f2a797a955c] this ticket had the similar issue  [https://sifive.atlassian.net/browse/MAL-2509|https://sifive.atlassian.net/browse/MAL-2509|smart-link]

Correct data is updating incorrect destination register.","20/Sep/22 7:05 AM;620ee634a715c6006914e852;seeing similar issue in this also: [https://simscope.internal.sifive.com/sigs/2388/cn0g0bz9c9q5|https://simscope.internal.sifive.com/sigs/2388/cn0g0bz9c9q5]
following are the observations: 

# the instruction at which the error is coming is <vfredosum.vs v0, v16, v24>  . cosim is updating the value in r0 register which is correct but rtl is doing so in r27

# simulation.out is giving an assertion failed message

""Assertion failed: Physical register   0 set as ready twice (only first conflicting id shown)
    at PRF.scala:91 assert(\!(readyVec.asUInt & setVec).orR, ""Physical register %%d set as ready twice (only first conflicting id shown)"", firstRegSetTwice)""",20/Sep/22 10:26 AM;5acffeafaa802f2a797a955c;[~accountid:6065017e90e3950069cf01c5] is it possible/likely that this is the same problem as [https://sifive.atlassian.net/browse/MAL-2669|https://sifive.atlassian.net/browse/MAL-2669|smart-link]?,"20/Sep/22 10:31 AM;6065017e90e3950069cf01c5;we have several fixes in flight for reduction (kill was not properly qualified), linked to [https://sifive.atlassian.net/browse/MAL-2645|https://sifive.atlassian.net/browse/MAL-2645|smart-link] and [https://sifive.atlassian.net/browse/MAL-2654|https://sifive.atlassian.net/browse/MAL-2654|smart-link], this is highly likely the same issue. I will try to merge this PR and [https://sifive.atlassian.net/browse/MAL-2669|https://sifive.atlassian.net/browse/MAL-2669|smart-link] today.",20/Sep/22 1:04 PM;6065017e90e3950069cf01c5;test is passing reported fault time with [https://github.com/sifive/federation/pull/26262|https://github.com/sifive/federation/pull/26262|smart-link],21/Sep/22 7:20 PM;6065017e90e3950069cf01c5;passed after  11379573 cycles \! (closing as duplicate of [https://sifive.atlassian.net/browse/MAL-2645|https://sifive.atlassian.net/browse/MAL-2645|smart-link] ) ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Frontend Timing : TLB response Access Exception (ae.inst) based on current pcVA,,,,,,MAL-2655,126151,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,Vishad Viplav,623e520c94742a00683f710a,Vishad Viplav,623e520c94742a00683f710a,9/19/2022 4:35,9/19/2022 9:26,9/28/2022 0:51,,,,,,,,,,,,,,RTL/Frontend,Timing,,,,,,,,0,,,,"Hi,

This is one of the paths internal to frontend unit which has high net lengths due to logic distributed in multiple hierarchies. (Core IFU region → CSR Tile → ITLB → flop near Core IFU)

Startpoint : ifu/pcVA_F1_reg\[*]/CK

Endpoint : ifu/tlbResp_F2_ae_inst_reg/D

Based on my understanding

The pcVA is checked with the 8 pmp entries in CSR (greater than/lesser than operations in a prioritized manner), and one of the pmp entries selected. One of the configuration bits ('x') from the selected entry is anded with some other signals. This is then grouped in a 49 bit bus, where the other 48 bits come from TLB entries (superpage and sectored) and all the bits are ored among themselves and then flopped in a F2 flop. 

The next stage is a single OR operation with other exception signals and then flopped in F3, from where it is used in different paths like ITagMiss based paths.



One of the solutions could be to flop the final configuration bit from the selected pmp entry (*refill_prot_x*) and only do oring between the 48 bits from TLB entires in F2 stage (px_array) and flop it separately. The final remaining or could be shifted to F3 stage . The OR gate which could be broken between cycles is colored in yellow (near *tlbResp_F2*)

This would help in getting a better path topology

in F2, we may have ; Core IFU region → CSR tile travel

and then in F3, the final oring could happen near core IFU region so the travel would be from CSR tile to Core IFU with the other leg coming from ITLB side.



Thanks,



Current Path timing  for Healdsburg

21 logic gates (assuming 8*21 ps) and 180 ps wire delay → ~85ps slack at 3.6Ghz",John Ingalls,Josh Smith,Vaibhav Gupta,Vishad Viplav,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,623e4830b75ca80070580145,623e520c94742a00683f710a,,,,,,,,,,,,,,,,,,,MAL-1972,MAL-1330,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2486,,,,,,,,,,,19/Sep/22 4:36 AM;ug:519a710a-c989-4f27-af37-bfaa49b5eb6c;IFU critical paths (mallard) - TLB.png;https://sifive.atlassian.net/secure/attachment/77843/IFU+critical+paths+%28mallard%29+-+TLB.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0141j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,55:01.7,"19/Sep/22 4:36 AM;623e520c94742a00683f710a;!IFU critical paths (mallard) - TLB.png|width=1180,height=451!",19/Sep/22 7:55 AM;5acffeafaa802f2a797a955c;[~accountid:623e520c94742a00683f710a] could you please also upload a text file with the timing report for this path?,19/Sep/22 8:38 AM;5bb6808b9ba2930990f81895;We can/should also distribute copies of the necessary CSRs into/from the FEU’s {{ShadowCSR}} module.,"19/Sep/22 9:26 AM;623e520c94742a00683f710a;Hi,

The path has 7 high cap buffers/inverters which is expected due to physical travel (~615 microns)

The greater than/lesser than operation takes 6 gates

Final endpoint gets placed near ITLB 

|Point|Cell|Load|Incr Delay|Path|Coordinate|Comments| |
|ifu/pcVA_F1_reg\[25]/CK|HDBULT06_FSDPQ_CAQF3Y2_6| |0|-0.01|(238.70,258.76)| | |
|ifu/pcVA_F1_reg\[25]/Q|HDBULT06_FSDPQ_CAQF3Y2_6|0|0.03|0.01|(238.47,258.63)| | |
|IP_HFSBUF_89_1081848/X|HDBULT06_BUF_CAQSY2R_14|0.02|0.01|0.02|(239.69,260.52)| | |
|ctmi_313332/X|HDBULT06_MUX2_MM_2|0.01|0.06|0.08|(233.06,345.62)|First Mux (vaddr) - between pfQ and pcVA| |
|IO_ZBUF_294_inst_1350639/X|HDBULT06_BUF_CAQSY2R_14|0.02|0.03|0.11|(232.76,409.20)| | |
|IP_HFSBUF_2517_1070559/X|HDBULT06_BUF_CAQSMY4_15|0.03|0.02|0.12|(232.55,433.67)| | |
|IP_HFSBUF_28_1093476/X|HDBULT06_BUF_CA3QY2R_6|0.01|0.1|0.22|(69.83,434.40)| | |
|IP_HFSINV_2207_1070557/X|HDBULT06_INV_CB3QDCY2_8|0.02|0.02|0.24|(30.93,433.25)| | |
|IP_HFSINV_1822_1070555/X|HDBLVT06_INV_CAQSKR_12|0.01|0.03|0.27|(17.94,433.25)| | |
|ctmi_795325/X|HDBULT06_AO2BB2_CA3QV1_1|0|0.03|0.3|(18.62,422.96)|Comparison starts with pmp_0_addr (bits 25,26)| |
|ctmi_362504/X|HDBULT06_NR2_MM_1|0|0.02|0.32|(23.20,418.07)|bits 25,26, 27 and 28| |
|IO_ctmTdsLR_1_1295539/X|HDBULT06_AOAI211_CBQ_1|0|0.02|0.34|(21.07,424.00)|bits 22,23,24,25,26, 27 and 28| |
|IO_ctmTdsLR_2_1295540/X|HDBULT06_AOI21_CB3QV1_1|0|0.02|0.36|(22.16,419.18)|bits 22,23,24,25,26,27,28,29,30,31,32 and 33| |
|ctmi_362475/X|HDBULT06_OAI31_CA3Q_1|0|0.01|0.38|(21.96,424.64)|bits 12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32 and 33| |
|ctmi_362473/X|HDBULT06_MAJI3B_MM_1|0|0.03|0.4|(22.76,424.90)|bits 12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33 and 36| |
|ctmi_362472/X|HDBLVT06_NR2B_CB3Q_1|0|0.03|0.43|(28.76,422.75)|Mux to determine res_?_hit| |
|IO_ctmTdsLR_4_1121310/X|HDBULT06_AOI21_CAQV1_4|0.01|0.02|0.45|(22.77,425.27)| | |
|FO_ZBUF_949_f_inst_1518442/X|HDBLVT06_BUF_CA3QY2R_8|0.03|0.02|0.46|(37.46,433.56)| | |
|FO_ctmTdsLR_1_1528657/X|HDBLVT06_OA21B_CB3Q_1|0|0.09|0.56|(192.16,460.12)|Access from TLB entries| |
|IO_ctmTdsLR_2_1366910/X|HDBULT06_OAI21_MM_4|0|0.01|0.57|(191.29,460.28)|Hit based priority muxing completed for reg_pmp| |
|ifu/tlbResp_F2_ae_inst_reg/D|HDBLVTLL06_FSDPQ_CAQV1SU3_4| |0|0.57|(193.26,460.97)| | |

Thanks,",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Assertion:: Vex PRF write should only be enabled for a valid result ,[TGV] Assertion:: Vex PRF write,Execution Unit (VexPipe),PRF ,,,MAL-2654,126142,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Nicolas Brunie,6065017e90e3950069cf01c5,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,9/19/2022 2:52,9/20/2022 19:50,9/28/2022 0:51,9/19/2022 16:15,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error:*

Error: ""/scratch/naverath/sep-19/federation/builds/coreip_p670/verilog/design/assertions/SiFive_VexPipe_1_assert.sv"", 562: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_1.SiFive_VexPipe_1_assert: at time 6465402500 ps
Assertion failed: Vex PRF write should only be enabled for a valid result
at VexPipe.scala:2057 assert(\!(io.rfWriteReq_WB(i).valid && \!instValid_WB(i)), ""Vex PRF write should only be enabled for a valid result"")

*Debug-Info:*
Last retired instruction 
core   0: 0x00000000c094130c (0x000280e7) jalr    t0

Pending Instruction trace::
c094139c:	00100073          	ebreak

00000000c09413a0 <next_label_0_124_f65_c0_1250>:
next_label_0_124_f65_c0_1250():
*c09413a0:	3a8a34d7*          	[*vslideup.vi*|http://vslideup.vi]	*v9,v8,20*
c09413a4:	0a9345d7          	vsub.vx	v11,v9,t1
c09413a8:	162e92d7          	vfredmin.vs	v5,v2,v29
c09413ac:	d406b8d3          	fcvt.h.w	fa7,a3,rup
c09413b0:	5208a7d7          	vid.v	v15
c09413b4:	6e200dd7          	vmslt.vv	v27,v2,v0
*c09413b8:	b6a054d7          	vfnmacc.vf	v9,ft0,v10*

Problem seems to with destination register v9 and It is affected by PC=0xc09413b8: , PC=0xc09413a0:

!image-20220919-094940.png|width=1733,height=681!



*SHA1::* dd07843201ffecfee82977a15f47e5fa44273934
*Config::* coreip_p670
*Waves::* gamma25::/scratch/naverath/sep-19/federation/builds/coreip_p670/sim/sim/rerun.outline_vex_assert/sting_StingSiFiveTuple_T_0081/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb
rerun. Outline:: Outline copied to /work/nicolasb/tgv_bug_outlines/sting/MAL-2654.outline
",David Kravitz,Naveen Rathore,Nicolas Brunie,,,,,,,,,,,,,5fd15143b4a74900763834e0,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2645,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,19/Sep/22 2:35 PM;ug:03996552-4b14-4132-be2b-a08c9c621951;2eb8a11f-e1fc-4a0c-a52c-ef35a0d5fbf5;https://sifive.atlassian.net/secure/attachment/77912/2eb8a11f-e1fc-4a0c-a52c-ef35a0d5fbf5,19/Sep/22 2:52 AM;ug:00e334db-2e60-4fae-a5b5-d5d39244fe5c;image-20220919-094940.png;https://sifive.atlassian.net/secure/attachment/77835/image-20220919-094940.png,19/Sep/22 2:20 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220919-212049.png;https://sifive.atlassian.net/secure/attachment/77911/image-20220919-212049.png,,,,,,,,,,,,,,dd07843201ffecfee82977a15f47e5fa44273934,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-20T19:02:36.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,,,,No,,,,,,,,,,,,2|i013zj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26080/files],,,,,,,,,,,,,30:10.7,"19/Sep/22 5:30 AM;5fd15143b4a74900763834e0;We also have [https://sifive.atlassian.net/browse/MAL-2645|https://sifive.atlassian.net/browse/MAL-2645|smart-link] with the same assertion, but maybe it’s different units. Bouncing to [~accountid:6065017e90e3950069cf01c5] for more investigation","19/Sep/22 2:20 PM;6065017e90e3950069cf01c5;[~accountid:5fd15143b4a74900763834e0] this looks like the same issue: wrongfully killed fp hrz red op because kill on start was badly qualified.

!image-20220919-212049.png|width=2181,height=646!",19/Sep/22 2:35 PM;5fd15143b4a74900763834e0;Feel free to close as duplicate once you're convinced,"19/Sep/22 2:39 PM;6065017e90e3950069cf01c5;I am running the fix, once it concludes I will either eat my hat or close it as duplicate.","19/Sep/22 4:15 PM;6065017e90e3950069cf01c5;test passing, closing this as a duplicate of [https://sifive.atlassian.net/browse/MAL-2645|https://sifive.atlassian.net/browse/MAL-2645|smart-link] , should be fixed by [https://github.com/sifive/federation/pull/26192|https://github.com/sifive/federation/pull/26192|smart-link] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Set accumulator unused PRA bits before first uop dispatches to Issue Queue,[TGV] Set accumulator,Instruction decode and dispatch ,PRF ,,,MAL-2653,126126,,Bug,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Andrew Hanselman,609d7e1f5998a6006800dcc5,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,9/19/2022 1:58,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/RDU,TGV_RTL/SEQ,,,,,,,,0,TGV,,,"*Error:*

Error: ""/scratch/naverath/sep-19/federation/builds/coreip_u8_minimal_vector/verilog/design/SiFive_StQEntry.sv"", 415: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.StQ.stqEntries_0: at time 3586622500 ps

*SHA1::* dd07843201ffecfee82977a15f47e5fa44273934
*Config::* coreip_u8_minimal_vector
*Waves::* gamma25::/scratch/naverath/sep-19/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline_stq_hang/rat_default_T_0164/rat/default/waves.fsdb
rerun. Outline:: Outline copied to /work/nicolasb/tgv_bug_outlines/rat/MAL-2653.outline


*Outline*

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": \[
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+verbose""
],
""subdir"": ""rat_default_T_0164"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 2638793007
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))

*Debug-Info::*
Following are the set of instructions after last retired-PC 0x80007114


*Pending Instruction *

pc=\[0000000080007110]   mulhu   tp, a0, a4
pc=\[0000000080007114]   vsetivli zero, 22, e32, m8, tu, mu
pc=\[0000000080007118]   vmsgt.vx v11, v16, a1
pc=\[000000008000711c]   lui     s1, 0xbc6
pc=\[0000000080007120]   addiw   s1, s1, 334
pc=\[0000000080007124]   lui     t4, 0xbc6
pc=\[0000000080007128]   addiw   t4, t4, 334
pc=\[000000008000712c]   mulhsu  a2, t5, a1
pc=\[0000000080007130]   mulhsu  s0, a0, a5
pc=\[0000000080007134]   addi    a4, gp, -1912
pc=\[0000000080007138]   c.add   zero, sp
pc=\[000000008000713a]   c.add   zero, sp
pc=\[000000008000713c]   fsub.d  fa3, fs1, fa2
pc=\[0000000080007140]   ld      ra, 104(a4)
pc=\[0000000080007144]   ld      a0, -1976(gp)
pc=\[0000000080007148]   slli    a4, a0, 0
pc=\[000000008000714c]   auipc   a2, 0x134
pc=\[0000000080007150]   sb      a5, 1632(a2)
pc=\[0000000080007154]   vsetivli s1, 20, e8, m1, tu, mu
pc=\[0000000080007158]   fsw     fs1, -1780(gp)
pc=\[000000008000715c]   vssub.vv v8, v24, v16
pc=\[0000000080007160]   add     zero, zero, sp
pc=\[0000000080007164]   sb      a1, -1941(gp)
pc=\[0000000080007168]   [c.li|http://c.li]    a2, 4
pc=\[000000008000716a]   c.addi  a2, -1
pc=\[000000008000716c]   li      zero, 781
pc=\[0000000080007170]   c.bnez  a2, pc - 6
\[ 8]=\[a2807f127f8ec049f880efffff8101c9]\[ffff]
pc=\[000000008000716a]   c.addi  a2, -1
pc=\[000000008000716c]   li      zero, 781
pc=\[0000000080007170]   c.bnez  a2, pc - 6
pc=\[000000008000716a]   c.addi  a2, -1
pc=\[000000008000716c]   li      zero, 781
pc=\[0000000080007170]   c.bnez  a2, pc - 6
pc=\[000000008000716a]   c.addi  a2, -1
pc=\[000000008000716c]   li      zero, 781
pc=\[0000000080007170]   c.bnez  a2, pc - 6
pc=\[0000000080007172]   auipc   sp, 0x16c
pc=\[0000000080007176]   lh      a0, -1844(gp)
pc=\[000000008000717a]   sd      s1, -1754(sp)
pc=\[000000008000717e]   ld      s0, 608(gp)
pc=\[0000000080007182]   c.ld    a1, 216(s0)
pc=\[0000000080007184]   addi    a2, gp, -1976
pc=\[0000000080007188]   c.fld   fs1, 64(a2)
pc=\[000000008000718a]   jal     t4, pc + 0x6e
pc=\[00000000800071f8]   bge     a5, a1, pc - 106
pc=\[000000008000718e]   auipc   s0, 0x52
pc=\[0000000080007192]   fld     fa3, -1912(gp)
pc=\[0000000080007196]   ld      tp, -398(s0)
pc=\[000000008000719a]   li      a1, -1170
pc=\[000000008000719e]   fsw     fs1, -1872(gp)
pc=\[00000000800071a2]   sw      s1, -1948(gp)
pc=\[00000000800071a6]   li      zero, 336
pc=\[00000000800071aa]   auipc   s0, 0x56
pc=\[00000000800071ae]   lui     t3, 0xaae30
pc=\[00000000800071b2]   addi    s0, s0, -314
pc=\[00000000800071b6]   add     zero, zero, sp
pc=\[00000000800071ba]   c.ld    a0, 240(s0)
pc=\[00000000800071bc]   addi    a1, t3, -455
pc=\[00000000800071c0]   flw     fa5, -1804(gp)
pc=\[00000000800071c4]   addi    a4, gp, -1824
pc=\[00000000800071c8]   c.add   zero, sp
pc=\[00000000800071ca]   c.ld    s1, 56(a4)
pc=\[00000000800071cc]   lui     s0, 0xbc6
pc=\[00000000800071d0]   addiw   s0, s0, 334
pc=\[00000000800071d4]   lui     a2, 0xbc6
pc=\[00000000800071d8]   addiw   a2, a2, 334
pc=\[00000000800071dc]   lui     a4, 0xbc6
pc=\[00000000800071e0]   addiw   a4, a4, 334
pc=\[00000000800071e4]   lui     t3, 0xbc6
pc=\[00000000800071e8]   addiw   t3, t3, 334
pc=\[00000000800071ec]   lui     t6, 0xbc6
pc=\[00000000800071f0]   addiw   t6, t6, 334
pc=\[00000000800071f4]   jal     a3, pc + 0x8
pc=\[00000000800071fc]   addiw   a3, a0, 21
pc=\[0000000080007200]   c.add   zero, sp
pc=\[0000000080007202]   fld     fa3, -1816(gp)
pc=\[0000000080007206]   ld      a2, 616(gp)
pc=\[000000008000720a]   auipc   s1, 0x1c7
pc=\[000000008000720e]   c.add   zero, sp
pc=\[0000000080007210]   ld      t5, -98(s1)
pc=\[0000000080007214]   vslide1up.vx v16, v8, a0
pc=\[0000000080007218]   add     zero, zero, sp
pc=\[000000008000721c]   c.ld    a0, 8(a2)
pc=\[000000008000721e]   lui     sp, 0xbc6
pc=\[0000000080007222]   addiw   sp, sp, 334
pc=\[0000000080007226]   lui     s0, 0xbc6
pc=\[000000008000722a]   addiw   s0, s0, 334
pc=\[000000008000722e]   lui     s1, 0xbc6
pc=\[0000000080007232]   addiw   s1, s1, 334
pc=\[0000000080007236]   lui     a2, 0xbc6
\[16]=\[807f127f8ec049f880efffff8101c937]\[ffff]
pc=\[000000008000723a]   addiw   a2, a2, 334
pc=\[000000008000723e]   lui     a4, 0xbc6
pc=\[0000000080007242]   addiw   a4, a4, 334
pc=\[0000000080007246]   lui     s6, 0xbc6
pc=\[000000008000724a]   addiw   s6, s6, 334
pc=\[000000008000724e]   lui     t4, 0xbc6
pc=\[0000000080007252]   addiw   t4, t4, 334
pc=\[0000000080007256]   blt     zero, a5, pc - 410
pc=\[00000000800070bc]   c.addi  a5, -1
pc=\[00000000800070be]   li      s1, 883
pc=\[00000000800070c2]   auipc   a2, 0x53
pc=\[00000000800070c6]   fsd     fa1, -1442(a2)
pc=\[00000000800070ca]   c.bnez  a0, pc + 12
pc=\[00000000800070d6]   auipc   s1, 0x1a1
pc=\[00000000800070da]   addi    a4, a0, -6
pc=\[00000000800070de]   lh      a3, 600(gp)
pc=\[00000000800070e2]   mulw    s4, a1, a5
pc=\[00000000800070e6]   sh      a3, 600(gp)
pc=\[00000000800070ea]   sb      a5, -696(s1)
pc=\[00000000800070ee]   add     zero, zero, sp
pc=\[00000000800070f2]   sw      s4, -1948(gp)
pc=\[00000000800070f6]   ld      a2, 600(gp)
pc=\[00000000800070fa]   c.add   zero, sp
pc=\[00000000800070fc]   c.ld    s0, 24(a2)
pc=\[00000000800070fe]   slli    a2, a5, 9
pc=\[0000000080007102]   auipc   s1, 0xa7
pc=\[0000000080007106]   addi    s1, s1, -1074
pc=\[000000008000710a]   c.fsd   fa4, 144(s1)
pc=\[000000008000710c]   srai    a3, a1, 2
pc=\[0000000080007110]   mulhu   tp, a0, a4
pc=\[0000000080007114]   vsetivli zero, 22, e32, m8, tu, mu",Andrew Hanselman,David Kravitz,John Ingalls,Naveen Rathore,Nicolas Brunie,,,,,,,,,,,609d7e1f5998a6006800dcc5,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,dd07843201ffecfee82977a15f47e5fa44273934,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i013vz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,32:14.3,"19/Sep/22 5:32 AM;5fd15143b4a74900763834e0;StQ entry hangs could really be anything, so this will need more digging before I can identify the responsible component","23/Sep/22 8:29 AM;5fd15143b4a74900763834e0;[~accountid:609d7e1f5998a6006800dcc5] can you please look into this? The “first instruction not issued” is a {{vmsgt.vx v11, v16, a1}} with LMUL=8, SEW=32b, tu, mu, at PC=80007118 (time=1,723,042,500). It looks like src3 is marked valid but never goes ready. The instruction supposed to be producing {{v11}} is the same one executed (and apparently retired) around 50 cycles earlier.","23/Sep/22 1:41 PM;609d7e1f5998a6006800dcc5;iLong story short, it looks like the PRA information flopped into the issue queue for low uop CSID (uop 0, 1, …) can be incorrect when a uop in the sequence dispatches to the IQ before the final uop makes it through REN. The final uop is the uop which sets the unused ready bits for the PRA. When a uop dispatches to the IssQ before these unused bits are set, the information loaded into the issue queue is incorrect. This results in the uops being able to complete properly. If the first uop to dispatch (with the bad IQ accumulator ready bits copy) is the last to issue, then the it does not properly identify itself as being the uop to issue the full result wakeup. That resulted in the next instruction hanging on old-destination data not being marked ready.

Fix looks something like… 

# passing the unused ready bit set request to the issue queue, and capturing that information there. 
# Or doing unused ready set earlier during the first uop REN.

[~accountid:6065017e90e3950069cf01c5] does the sequencer bundle the total sequence length in ovldImm or some other field for some sequences? I could use that here for accumulator sequences to allow for setting unused ready bits with the first uop.","24/Sep/22 8:20 PM;6065017e90e3950069cf01c5;[~accountid:609d7e1f5998a6006800dcc5]  I try to maintain of list of the meaning of {{ovldImm}} in a comment in the source code

For some operations such as complex permute, this field is indeed used to carry the last {{uop}} id. This is used to tell the permute engine how many uops should be expected.

[https://github.com/sifive/federation/blob/master/block-tgv-sifive/src/main/scala/core/tgv/VectorSequencer.scala#L63|https://github.com/sifive/federation/blob/master/block-tgv-sifive/src/main/scala/core/tgv/VectorSequencer.scala#L63]

{noformat}  // overloaded immediate value
  // - vslide(up/down).vi slide amount (rs1 field may be overloaded for LMUL > 1)
  // - right byte shift amount for vzext / vsext (when LMUL > 1 else must be 0)
  // - the parity of the processed half for vs2_wide ops (0: low part, 1: high part)
  // - last id of the uop in a complex operation sequence (vslide(up/down).vx, vrgather, vcompress for LMUL > 1)
  // - for simple reduction 0: first uop in the sequence (use vd as tail, also valid for single uop), 1: non-first uop in the sequence (should use vs1 as tail)
  // - for complex reduction: variation of underlying generic uop
  // -     0: not a complex reduction
  // -     1: simple reduction
  // -     2: vertical 2-source reduction (vl is extended over 2 vector inputs)
  // -     3: horizontal 1-source partial reduction
  // -     4: single-source folding reduction (halving vl)
  // -     5: wide fcvt
  // -     6: scalar-scalar -> scalar reduction
  // -     7: VL>1 vfred[min/max] scalar-scalar -> scalar reduction
  val ovldImm = UInt(VectorPayloadConsts.ovldImmW.W){noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
High logic depth inside IssQ for Healdsburg,,,,,,MAL-2652,126102,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,,Julian Bailey,629ab2a89bc7150068d00cdf,Sumit Jha,623e366950bb2b0070b7d28e,Sumit Jha,623e366950bb2b0070b7d28e,9/18/2022 23:37,9/22/2022 3:54,9/28/2022 0:51,,,,,,,,,,,,,,RTL/IEX,Timing,,,,,,,,0,,,,"Hi Julian,

As discussed, for Healdsburg we are seeing very high logic depth inside Issue queues in IEX (~30-33 gates). On top of it we are increasing IssQ pipes from 4 → 7 which essentially doubles the wire delay compared to P650. Taking this increased wire delay and other margins into the account we won’t be able to meet these paths.

Can we start looking into the direction of reducing the gate count by ~5 gates on these paths? Bypassing exPipes for multicycle path info could be one such area to explore. Another could be optimisation of age matrix calculation.

In the mean time we are doing following PD trials at our end to see the impact on path depth:

# Changing IssQ entries from 24 → 20 → 16.
# Removing crossIssQ 

Thanks

Sumit",John Ingalls,Josh Smith,Sumit Jha,Vaibhav Gupta,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,623e366950bb2b0070b7d28e,623e4830b75ca80070580145,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2138,,,,,,,,,,,20/Sep/22 9:35 PM;ug:4ab0b3d8-6319-476f-94ae-6101f288a486;IssQ timing rpt.docx;https://sifive.atlassian.net/secure/attachment/77994/IssQ+timing+rpt.docx,18/Sep/22 11:37 PM;ug:4ab0b3d8-6319-476f-94ae-6101f288a486;Screenshot 2022-09-19 at 12.06.17 PM.png;https://sifive.atlassian.net/secure/attachment/77819/Screenshot+2022-09-19+at+12.06.17+PM.png,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i013qn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,45:52.7,19/Sep/22 6:45 AM;5acffeafaa802f2a797a955c;[~accountid:623e366950bb2b0070b7d28e] Could you please also upload a text file with the timing report for the path you are talking about?,"19/Sep/22 6:48 AM;5acffeafaa802f2a797a955c;Another thing we could experiment with is changing the {{ageOrder}} parameter in {{IssQParams}} to {{false}}.  This will change the issue queue selection from age-matrix-based to a very simple priority mux where entry 0 has the highest priority.

This would obviously hurt performance, but it would give us a lower bound on the gate depth for picking an instruction from the issue queue.","20/Sep/22 9:36 PM;623e366950bb2b0070b7d28e;[~accountid:5acffeafaa802f2a797a955c] attached the report.

-Sumit",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Assertion Failure: SiFive_HwpfBitPattern_assert,Assertion Failure: HwpfBitPattern_assert,,,,,MAL-2651,126100,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,Deepika S K,622a9d30c4d0fe0069575ac9,Deepika S K,622a9d30c4d0fe0069575ac9,9/18/2022 23:29,9/22/2022 7:42,9/28/2022 0:51,9/21/2022 21:38,,,,,,,,,,,,,RTL/HWPF,,,,,,,,,0,xprop,,,"*Error :*  The following error is observed in {{nigtly-mallard-650-xprop/7}} 

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nigtly-mallard-650-xprop-coreip_mallard_p650-test-nightly-xprop/7/builds/coreip_p650/verilog/design/SiFive_HwpfBitPattern.sv"", 1855: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.hwpf.bpmEntries_0: at time 546422500 ps
assert failed (verification library): HWPF Entry BPM: duplicate valid pf address generated back to back  @[HwpfBitPattern.scala 394:15]{noformat}

{{hwpf.bpmEntries_0.dis_nextAddr_q_bits[43:0]}} and {{hwpf.bpmEntries_0.dis_nextAddr_q_valid}} are uninitialized, resulting in the above assertion fail.

*Waves :* 

!image-20220919-062133.png|width=100%!

----

*Dump Path :* {{verif02: /scratch/deepikas/mallard-650-xprop-7/federation/builds/coreip_p650/sim/sim/hwpf.outline/hart0/error0/inject_ecc_error/ecc_flush_discard_nmi}}

*Simscope link :* [https://simscope.internal.sifive.com/sigs/3836/cmyvtx1ch2vf|https://simscope.internal.sifive.com/sigs/3836/cmyvtx1ch2vf]

*Steps to reproduce :* 

* git checkout {{ca4ee6f}}
* build {{coreip_p650}}
* rerun.outline : 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""inject_ecc_error/ecc_flush_discard_nmi"",
  ""raw_plusargs"": [
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,2,0,32:.*\\.l1dcTagArray.*ext,0,0,8,0"",
    ""+disable_ecc_asserts=1"",
    ""+gdi_nmi_enable=1"",
    ""+gdi_testname=nmi_drive_vectors_seq"",
    ""+disable_cache_checker=0"",
    ""+hwpfCSR_setVal=3782319938979071"",
    ""+hwpf2CSR_setVal=18335"",
    ""+pl2_scb_enable_state_check=0"",
    ""+pl2_scb_enable_data_check=0"",
    ""+ecc_err_inject_mailbox=1""
  ],
  ""subdir"": ""hart0/error0"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3870654908
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""reset_vector_scheme"": ""first_periph_sys_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Deepika S K,John Ingalls,Rakesh Palakurthi,,,,,,,,,,,,,622a9d30c4d0fe0069575ac9,5bb6808b9ba2930990f81895,62350e943eacc50071ff0753,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,18/Sep/22 11:29 PM;ug:0c84c1d9-358d-4f68-993a-932052da7479;image-20220919-062133.png;https://sifive.atlassian.net/secure/attachment/77818/image-20220919-062133.png,,,,,,,,,,,,,,,,ca4ee6fc8c7f723e9951d7f295cd7dd47b70c454 ,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-21T21:38:08.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i013q7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26229/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] cleanup vmv<n>R bad nf checks in RDU REN stage,,,,,,MAL-2650,126075,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/18/2022 9:00,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,RTL/RDU,,,,,,,,,0,,,,"[https://github.com/sifive/federation/pull/26152/files#r973151477|https://github.com/sifive/federation/pull/26152/files#r973151477]



{{RDU.scala}} contains a cover point

{noformat}        ccover(!validVmvrNF,  ""INVALID_VMVR_NFIELD"", ""invalid vmvr NF"")
        ccover(!validNF,  ""INVALID_NF_FIELD"", ""invalid vmvNr/vlNeEr/vsNr NF""){noformat}

Which may never be reached. Make sure it is reachable of change it to an {{assert}}",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2625,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-25T12:19:37.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2625,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,,,,,,,,,,,,,,,,2|i013kv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
Tracking activities related to the addition of cover points and assertions in TGV VEX,,,,,,MAL-2649,126074,,Epic,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/18/2022 8:58,9/26/2022 16:21,9/28/2022 0:51,9/18/2022 8:59,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,duplicated of [https://sifive.atlassian.net/browse/MAL-2625|https://sifive.atlassian.net/browse/MAL-2625|smart-link],Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-12,,[TGV] VEX/MU milestone - cover points and assertions,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,grey,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i013kn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LSU doesn't send enough data to LTB,[TGV] LSU  LTB,LSU (Load Store Unit),,,,MAL-2647,126072,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Yohann Rabefarihy,61730c9cbcb57400683f15a6,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,9/18/2022 7:44,9/18/2022 21:26,9/28/2022 0:51,9/18/2022 21:26,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"I’m sure there’s a more-precise root-cause for this somewhere in the LSU, but don’t know what that is just yet. The instruction is a {{vle64.v}} with LMUL=1. However, SEW is set by the previous {{vsetvli}} as e8, and {{vl}}=16, so this becomes and EMUL=8 load. The LSU only sends 6 data beats and then stops, resulting in a ROB hang for gid 52 (0x34).

Assembly code is 

{noformat}    80000da2:	42c1                li	t0,16
    80000da4:	0002f2d7          	vsetvli	t0,t0,e8,m1,tu,mu,d1
    80000da8:	00004297          	auipc	t0,0x4
    80000dac:	7f028293          	addi	t0,t0,2032 # 80005598 <in_0>
    80000db0:	0202f807          	vle64.v	v16,(t0){noformat}


Failure message is 

{noformat}Error: ""/scratch/verif/davidk2/milestones/builds/coreip_u8_minimal_vector/verilog/design/SiFive_RDU.sv"", 3736: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu: at time 2386662500 ps
assert failed (verification library): stall_REN Hang  @[RDU.scala 1410:9]
Error: ""/scratch/verif/davidk2/milestones/builds/coreip_u8_minimal_vector/verilog/design/SiFive_ROB.sv"", 4264: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob: at time 2386662500 ps
assert failed (verification library): ROB Retire Hang around entry 52   @[ROB.scala 790:9]
Fatal: ""/scratch/verif/davidk2/milestones/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", 708: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert: at time 2386662500 ps{noformat}


Outline will be copied to {{/work/nicolasb/tgv_bug_outlines/vtg/<this ticket>.outline}}. Waves/etc can be seen w/o a rerun in {{davidk2@gamma13:/scratch/verif/davidk2/milestones/builds/coreip_u8_minimal_vector/sim/sim/milestone7_case_1.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vle64.v}}",David Kravitz,John Ingalls,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2584,MAL-2642,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,e2b70c2400b87912f265b7990e1aed6d818195d6,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/26024,,,n/a,,,,,,,,,Simulation-Directed,Simulation-VTG,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i013k7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"Check out https://github.com/sifive/federation/commit/e2b70c2400b87912f265b7990e1aed6d818195d6
Build `coreip_u8_minimal_vector`
Run sitest with `/work/nicolasb/tgv_bug_outlines/vtg/<this ticket>.outline`",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,08:26.4,18/Sep/22 1:08 PM;5bb6808b9ba2930990f81895;This is likely due to the same thing as we are working on in [https://sifive.atlassian.net/browse/MAL-2584|https://sifive.atlassian.net/browse/MAL-2584|smart-link] / [https://github.com/sifive/federation/pull/26024|https://github.com/sifive/federation/pull/26024|smart-link].,18/Sep/22 9:26 PM;5bb6808b9ba2930990f81895;these hangs are fixed by https://github.com/sifive/federation/pull/26024,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LSU sends wrong load data to LTB,[TGV] LSU LTB,LSU (Load Store Unit),,,,MAL-2646,126061,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Cannot Reproduce,Srivatsa Yogendra,5a938e9c0913194d2d262658,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,9/17/2022 20:54,9/23/2022 9:17,9/28/2022 0:51,9/21/2022 17:49,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"I’m sure there’s a more-precise root-cause for this somewhere in the LSU, but don’t know what that is just yet. For an LMUL=2 load, the first register {{v20}} is loaded correctly, but the second register {{v21}} is not. All the wrong data is delivered by the LSU. I do not see anything resembling the correct data coming in from L1D in the period shortly before the failure, so suspect something is up in the VAGU/LdQ/MSHR area.


Failing instruction is 

{noformat}C                   0:      35281 [1] pc=[0000000080003162] W[r 0=0000000000000000][0] R[r 5=00000000800065a8] R[r 0=0000000000000000] inst=[0202ea07] vle32.v v20, (t0){noformat}


Failure signature is

{noformat}[COSIM-ERROR][0] COSIM VS RTL WRDATA MISMATCH
[COSIM-ERROR][0] COSIM VS RTL WRINFO MISMATCH
[MMC_ERROR]: [receiveCosimTrans] Load was illegal
[MMC_ERROR]: [receiveCosimTrans] Load was illegal
[MMC_ERROR]: [receiveCosimTrans] Load was illegal
[MMC_ERROR]: [receiveCosimTrans] Load was illegal
[COSIM-ERROR][0] m_dut_inst_item: [35281] InstInfo: VLD=1 | PC=0x0000000080003162 | INSN=0x0202ea07 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r20=0xdff3_d06e_a610_6ebe_5b78_0b5d_30a1_1ec5 mask=0000ffff en=true r21=0x0000_0013_0001_a801_0002_80e7_0002_b283 mask=0000ffff | READY=1 | CSR_TIMER=35281 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080004890 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=8 | SEW=32 | LMUL=m2 | VSEGELT=0
[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000080003162 | INSN=0x0202ea07 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r20=0xdff3_d06e_a610_6ebe_5b78_0b5d_30a1_1ec5 mask=0000ffff en=true r21=0x4a7a_c4b7_8efa_9eab_08b0_d6ba_a3e8_48e9 mask=0000f7ff

[COSIM-ERROR][0] m_dut:  en=true r20=0xdff3_d06e_a610_6ebe_5b78_0b5d_30a1_1ec5 mask=0000ffff en=true r21=0x0000_0013_0001_a801_0002_80e7_0002_b283 mask=0000ffff
[COSIM-ERROR][0] m_sim:  en=true r20=0xdff3_d06e_a610_6ebe_5b78_0b5d_30a1_1ec5 mask=0000ffff en=true r21=0x4a7a_c4b7_8efa_9eab_08b0_d6ba_a3e8_48e9 mask=0000f7ff{noformat}



Outline will be copied to {{/work/nicolasb/tgv_bug_outlines/vtg/<this ticket>.outline}}",David Kravitz,John Ingalls,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2660,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,e2b70c2400b87912f265b7990e1aed6d818195d6,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i013hr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"Check out https://github.com/sifive/federation/commit/e2b70c2400b87912f265b7990e1aed6d818195d6
Build `coreip_u8_minimal_vector`
Run sitest with `/work/nicolasb/tgv_bug_outlines/vtg/<this ticket>.outline`",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Sep/22 5:49 PM;5fd15143b4a74900763834e0;Due to all the turbulence around MAL-2558 and it's various PRs -- merged, closed, or reverted -- closing this bug as not reproducible. New tickets will be filed based on the tip of master and milestone 7 tests (VTG). This plan was agreed by [~accountid:5a938e9c0913194d2d262658] and [~accountid:5fd15143b4a74900763834e0]

For reference, the PRs are:
https://github.com/sifive/federation/pull/26079
https://github.com/sifive/federation/pull/26254
https://github.com/sifive/federation/pull/26305
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Vex PRF write should only be enabled for a valid result,[TGV] Vex PRF write ,Execution Unit (VexPipe),PRF ,,,MAL-2645,126057,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,9/17/2022 18:27,9/22/2022 23:29,9/28/2022 0:51,9/20/2022 15:43,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"When running on master branch for p670

{{./sitest @../../../test-outlines/vtg-tgv-tests.outline}}

there are two failing tests{{ vfredosum.vs}} and {{vfwredosum.vs}}
It is an assertion for both cases: 

{{VexPipe.scala:2057 assert(!(io.rfWriteReq_WB(i).valid && !instValid_WB(i)), ""Vex PRF write should only be enabled for a valid result"")}}

{{[clazo@gamma04 sim]$ ./sitest @sim/rerun_failures.outline/rerun_failures.outline}}
{{Loading module for ruby 2.7.2.}}
{{2022-09-17T10:01:56-0700: Generating test list}}
{{2022-09-17T10:01:56-0700: Finished generating test list}}
{{2022-09-17T10:01:56-0700: Deduping unique builds}}
{{2022-09-17T10:01:57-0700: Finished deduping unique builds}}
{{2022-09-17T10:01:57-0700: Running test sim/rerun_failures.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vfredosum.vs}}
{{2022-09-17T10:01:57-0700: Running test sim/rerun_failures.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfwredosum.vs}}
{{=== sitest found errors in test sim/rerun_failures.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfwredosum.vs:}}
{{Reset m_pl2_mmc_inner_agents de}}
{{Error: ""/scratch/clazo/work_dir/federation_2/builds/coreip_p670/verilog/design/assertions/SiFive_VexPipe_1_assert.sv"", 562: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_1.SiFive_VexPipe_1_assert: at time 276082500 ps}}
{{Assertion failed: Vex PRF write should only be enabled for a valid result}}
{{ at VexPipe.scala:2057 assert(!(io.rfWriteReq_WB(i).valid && !instValid_WB(i)), ""Vex PRF write should only be enabled for a valid result"")}}
{{Fatal: ""/scratch/clazo/work_dir/federation_2/builds/coreip_p670/verilog/design/assertions/SiFive_VexPipe_1_assert.sv"", 564: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_1.SiFive_VexPipe_1_assert: at time 276082500 ps}}
{{$finish called from file ""/scratch/clazo/work_dir/federation_2/builds/coreip_p670/verilog/design/assertions/SiFive_VexPipe_1_assert.sv"", line 564.}}
{{*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 55216 simulation cycles (in TestDriver.report_phase_actions)}}
{{*Verdi* WARNING: fsdbDumpflush - The FSDB file has not been created.}}
{{*Verdi* WARNING: fsdbDumpFinish - The FSDB file has not been created.}}
{{""/scratch/clazo/work_dir/federation_2/vsrc/sim/common/../TestDriver.sv"", 531: TestDriver.assert_final_phase.final_error: started at 276082500ps failed at 276082500ps}}
{{ Offending '(current_phase === shutdown_e)'}}
{{*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 55216 simulation cycles (in TestDriver.report_phase_actions)}}
{{2022-09-17T10:04:39-0700: Error: simulation sim/rerun_failures.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfwredosum.vs failed}}
{{=== sitest found errors in test sim/rerun_failures.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vfredosum.vs:}}
{{Reset m_pl2_mmc_inner_agents de}}
{{Error: ""/scratch/clazo/work_dir/federation_2/builds/coreip_p670/verilog/design/assertions/SiFive_VexPipe_1_assert.sv"", 562: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_1.SiFive_VexPipe_1_assert: at time 351962500 ps}}
{{Assertion failed: Vex PRF write should only be enabled for a valid result}}
{{ at VexPipe.scala:2057 assert(!(io.rfWriteReq_WB(i).valid && !instValid_WB(i)), ""Vex PRF write should only be enabled for a valid result"")}}
{{Fatal: ""/scratch/clazo/work_dir/federation_2/builds/coreip_p670/verilog/design/assertions/SiFive_VexPipe_1_assert.sv"", 564: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_1.SiFive_VexPipe_1_assert: at time 351962500 ps}}
{{$finish called from file ""/scratch/clazo/work_dir/federation_2/builds/coreip_p670/verilog/design/assertions/SiFive_VexPipe_1_assert.sv"", line 564.}}
{{*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 70392 simulation cycles (in TestDriver.report_phase_actions)}}
{{*Verdi* WARNING: fsdbDumpflush - The FSDB file has not been created.}}
{{*Verdi* WARNING: fsdbDumpFinish - The FSDB file has not been created.}}
{{""/scratch/clazo/work_dir/federation_2/vsrc/sim/common/../TestDriver.sv"", 531: TestDriver.assert_final_phase.final_error: started at 351962500ps failed at 351962500ps}}
{{ Offending '(current_phase === shutdown_e)'}}
{{*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 70392 simulation cycles (in TestDriver.report_phase_actions)}}
{{2022-09-17T10:05:11-0700: Error: simulation sim/rerun_failures.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vfredosum.vs failed}}
{{Error: some simulations failed}}",Cristóbal Ramirez Lazo,David Kravitz,Josh Smith,Kira Tsao,Nicolas Brunie,Shaka Kao,,,,,,,,,,62632262d7f1b80069c030b8,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2654,MAL-2656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,18/Sep/22 8:38 PM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;Xnip2022-09-19_11-33-49-20220919-033349.jpg;https://sifive.atlassian.net/secure/attachment/77811/Xnip2022-09-19_11-33-49-20220919-033349.jpg,18/Sep/22 8:51 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220919-035101.png;https://sifive.atlassian.net/secure/attachment/77813/image-20220919-035101.png,19/Sep/22 9:07 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220919-160644.png;https://sifive.atlassian.net/secure/attachment/77879/image-20220919-160644.png,19/Sep/22 9:07 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220919-160724.png;https://sifive.atlassian.net/secure/attachment/77880/image-20220919-160724.png,19/Sep/22 9:33 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220919-163336.png;https://sifive.atlassian.net/secure/attachment/77886/image-20220919-163336.png,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @../../../test-outlines/vtg-tgv-tests.outline,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-20T19:02:36.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/b667cb1735347e4b934b6e0c44d8fbd50185169f,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i013gv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26080/files],,,,,,,,,,,,,40:28.8,"17/Sep/22 7:40 PM;5e1a4f5ec578120daca5ff8e;[~accountid:62632262d7f1b80069c030b8] , I’m not seeing any errors on current latest master with testing {{vfredosum.vs}}/{{vfwredosum.vs}} through VTG, they are both passing. Can you provide the commit that you are using? And it will be good if you can also provide the rerun.outline.

The commit I’m using is:

{noformat}commit e2b70c2400b87912f265b7990e1aed6d818195d6 (HEAD -> master, origin/master, origin/HEAD)
Author: John Ingalls <43973001+ingallsj@users.noreply.github.com>
Date:   Sat Sep 17 12:22:23 2022 -0700

    [MAL-2010] LSU: trim tagID/prIdx bits to used size (#26168){noformat}","17/Sep/22 8:21 PM;62632262d7f1b80069c030b8;[~accountid:5e1a4f5ec578120daca5ff8e]  I am using :


{noformat}[clazo@gamma04 rerun_failures.outline]$ git log
commit e2b70c2400b87912f265b7990e1aed6d818195d6 (HEAD -> master, origin/master, origin/HEAD)
Author: John Ingalls 43973001+ingallsj@users.noreply.github.com
Date:   Sat Sep 17 12:22:23 2022 -0700
[MAL-2010] LSU: trim tagID/prIdx bits to used size (#26168){noformat}

Here the rerun.outline

/scratch/clazo/work_dir/federation_2/builds/coreip_p670/sim/sim/rerun_failures.outline

I will do a new clone a run it again to double check.","17/Sep/22 9:02 PM;5fd15143b4a74900763834e0;[~accountid:62632262d7f1b80069c030b8], please copy the rerun.outline to {{/work/nicolasb/tgv_bug_outlines/vtg/MAL-2645.outline}} or add {{a}} and {{b}} if there are two different ones","17/Sep/22 11:23 PM;62632262d7f1b80069c030b8;[~accountid:5e1a4f5ec578120daca5ff8e] I double check with a fresh clone, and it is failing. [~accountid:5fd15143b4a74900763834e0]  I copied the rerun.outline to the Nicolas folder ({{/work/nicolasb/tgv_bug_outlines/vtg/MAL-2645.outline}} )","18/Sep/22 5:40 AM;5e1a4f5ec578120daca5ff8e;I can re-produce the fail now. And I also tried to revert my PR: [https://github.com/sifive/federation/pull/26066|https://github.com/sifive/federation/pull/26066|smart-link] but I still see the same fail. So it’s not causing by that PR.

I did some quick debugging it seems the issue may be in VRDU/ROB since the rename/mapTable looks correct and unrelated to flush because there’s no flush occurs. Was there any changes in above modules recently? Something may missing take care of {{vfphrzred}} ","18/Sep/22 8:38 PM;5e1a4f5ec578120daca5ff8e;One of the fails is ROB hangs.  The ROB seems skip the FP horizontal reduction sum uop.

gid: {{0x12d}} is the {{fphrzred}} uop, and in ROB the commit pointer switch to {{0x12e}}

!Xnip2022-09-19_11-33-49-20220919-033349.jpg|width=1386,height=374!","18/Sep/22 8:51 PM;6065017e90e3950069cf01c5;On the instance I am seeing the problem seem to be that the stagedKill is not properly qualified and prevent tag injection whereas it should not have (stagedKill was set by an invalid tag when operation started),

!image-20220919-035101.png|width=1382,height=711!","18/Sep/22 9:04 PM;6065017e90e3950069cf01c5;I think the fp hrz red is “too fast” and will sometimes broadcast a tag the next cycle after starting a reduction.

If so, the badly qualified kill may kill tag broadcast, but not kill the result forward, leading to PRF write without valid tag. There could be other side effets.","18/Sep/22 9:06 PM;5e1a4f5ec578120daca5ff8e;[~accountid:6065017e90e3950069cf01c5] it looks like instKill_EX happen at the same time with fpHrzRedStart but the execution not been kill property. And just like you point out, I speculate the tag injection. Maybe the preOutValid is the root cause.","18/Sep/22 9:49 PM;6065017e90e3950069cf01c5;I prototyped a fix here, [https://github.com/sifive/federation/pull/26192|https://github.com/sifive/federation/pull/26192|smart-link] 

{{preOutValid}} is not to blame, but kill require more qualification for sure. (the reduction add can be pretty fast)","19/Sep/22 7:46 AM;5e1a4f5ec578120daca5ff8e;[~accountid:6065017e90e3950069cf01c5] , I switch to your PR but still getting ROB hang assertion, which I was point out in my early comment. I’m not sure this is a different issue or not. Here’s the error message:

{noformat}Error: ""/scratch/kirat/kyoto/federation/builds/coreip_p670/verilog/design/SiFive_ROB.sv"", 76967: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob: at time 2329002500 ps
assert failed (verification library): ROB Retire Hang around entry 361   @[ROB.scala 790:9]{noformat}

And the rerun.outline:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+verbose""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vfredosum.vs"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vfredosum.vs_Mask-7_Masking-1_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_NoSelfCheck-1_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-1_TGV-1_IMM-0_LdStAccFault-1_Zvfh-1_Zfh-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 4282876139
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}","19/Sep/22 9:07 AM;6065017e90e3950069cf01c5;[~accountid:5e1a4f5ec578120daca5ff8e] , it may be a different results:

the last instruction to require is 

!image-20220919-160644.png|width=1890,height=237!

The next instruction is a {{vslide1up.vx}}, followed by some other vector instructions

!image-20220919-160724.png|width=1378,height=347!","19/Sep/22 9:33 AM;6065017e90e3950069cf01c5;It looks like the uarch is stalled waiting for a flush that never comes:

!image-20220919-163336.png|width=1956,height=584!

I think we may want to file another bug for this","19/Sep/22 9:40 AM;5acffeafaa802f2a797a955c;That means an instruction that we know will cause a flush went through REN stage, but never retired.  So some older instruction is likely not retiring, preventing the flush from happening.","19/Sep/22 10:44 AM;6065017e90e3950069cf01c5;It looks like there is a {{vmv}} stuck in entry 0 of issQ 0 (gid {{169}},  {{funct7}}=0x2f)

The previous {{vslide1up}} properly issued from issQ 1 (gid {{169}}, {{funct7=0x1d}}) and reached WB","19/Sep/22 12:06 PM;6065017e90e3950069cf01c5;I think the {{vmv.v.v}} is wrongfully waiting on the {{vs2}} input. I will open a different ticket, this is definitely not the same bug.",19/Sep/22 12:11 PM;6065017e90e3950069cf01c5;New issue logged as [https://sifive.atlassian.net/browse/MAL-2661|https://sifive.atlassian.net/browse/MAL-2661|smart-link] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] p670 elaboration broken because (exception in segmented RTL for multiple nLDPipes),[TGV] p670 elaboration broken ,,,,,MAL-2644,126037,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/16/2022 16:45,9/23/2022 9:14,9/28/2022 0:51,9/16/2022 19:28,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"Configuration: {{p670}}

federation SHA1: {{ab71a1ea854c78fe0ba64d5f473b7321b92cfaae}}

command {{make verilog}}

Error:

{noformat}Exception in thread ""main"" java.lang.IndexOutOfBoundsException: 1
        at ... ()
        at sifive.enterprise.tgv.LoadBuffer.$anonfun$new$112(LoadBuffer.scala:415)
        at sifive.enterprise.tgv.LoadBuffer.$anonfun$new$112$adapted(LoadBuffer.scala:415)
        at scala.collection.immutable.Range.map(Range.scala:59)
        at sifive.enterprise.tgv.LoadBuffer.$anonfun$new$111(LoadBuffer.scala:415)
        at chisel3.internal.prefix$.apply(prefix.scala:48)
        at sifive.enterprise.tgv.LoadBuffer.$anonfun$new$110(LoadBuffer.scala:415)
        at chisel3.internal.plugin.package$.autoNameRecursively(package.scala:33)
        at sifive.enterprise.tgv.LoadBuffer.$anonfun$new$109(LoadBuffer.scala:415)
        at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:190){noformat}",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-16T19:01:23.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i013cf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26176/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]: Fix Reset value of floating point Maptable,,,,,,MAL-2643,126033,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,9/16/2022 16:15,9/21/2022 13:24,9/28/2022 0:51,9/20/2022 13:02,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,,,,The tagID in the FEX maptable is 0 and should be initialized to 1,Warren Menezes,,,,,,,,,,,,,,,600773dcee80bd006f750bba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-20T11:12:00.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i013bj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26231/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] hang waiting for LSU replay during LTB establish,[TGV] hang waiting LSU LTB establish,LSU (Load Store Unit),,,,MAL-2642,126029,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,9/16/2022 15:42,9/20/2022 10:48,9/28/2022 0:51,9/18/2022 19:54,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"I see a vsetResolvStall assertion, firing. 

{noformat}Error: ""/scratch/verif/srivatsa/zq_enable_ta/builds/coreip_u8_minimal_vector/verilog/design/SiFive_RDU.sv"", 3728: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu: at time 17297342500 ps
assert failed (verification library): vsetResolveStall_ID Hang  @[RDU.scala 1237:11]{noformat}

Looking at the instructions, the vsetvl instruction is depending on load values from LSU, and seems like the LSU request being sent out has the wrong address calculated.

!Screen Shot 2022-09-16 at 15.33.12.png|width=1347,height=880!

From the above screenshot:

1 → the read req coming into the LSU through lsu DISP

2 → The PRF being read for the instruction with address 0x24edc0b0 

3 → The read request being sent out to memory with address 0x24edc0c0 , there is a back to back request to this memory untill the assertion is fired. 

There is a rob retire hang assertion also fired, which im guessing is because of the same cause 

{noformat}Error: ""/scratch/verif/srivatsa/zq_enable_ta/builds/coreip_u8_minimal_vector/verilog/design/SiFive_ROB.sv"", 4264: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob: at time 17297342500 ps
assert failed (verification library): ROB Retire Hang around entry 42   @[ROB.scala 790:9]{noformat}


To recreate this failure, 

# clone federation and checkout the commit 3b0a62a0e3720e8d085644cdac1805adab989a07
# build coreip_u8_minimal_vector and rerun the simulation using the outline 
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.l2_tlb_ram_ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0214"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3093770124
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



The generated waves are at location {{verif02:/scratch/verif/srivatsa/zq_enable_ta/builds/coreip_u8_minimal_vector/sim/sim2/sting_tgv.outline/sting_StingSiFiveTuple_T_0214/sting/sifive/vector/vector_tgv_dev.conf}}",David Kravitz,John Ingalls,Srivatsa Yogendra,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2647,,,MAL-2558,MAL-2584,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,16/Sep/22 3:42 PM;srivatsa;Screen Shot 2022-09-16 at 15.33.12.png;https://sifive.atlassian.net/secure/attachment/77782/Screen+Shot+2022-09-16+at+15.33.12.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/26024,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i013an:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,04:32.7,17/Sep/22 9:04 PM;5fd15143b4a74900763834e0;I know there is stuff in Bullet’s MicroOp.scala that makes sure {{vset*}} instructions are not counted as vector loads. Not exactly sure (at this hour) about the details or if that’s relevant to this bug. Just throwing it out there.,"18/Sep/22 1:08 PM;5bb6808b9ba2930990f81895;Sounds like there are two buggy behaviors in this one test: the hang assertions, and the address title.

# I looked at the hangs, and I think they are due to the same thing as we are working on in [https://sifive.atlassian.net/browse/MAL-2584|https://sifive.atlassian.net/browse/MAL-2584|smart-link] / [https://github.com/sifive/federation/pull/26024|https://github.com/sifive/federation/pull/26024|smart-link].
# [~accountid:61730c9cbcb57400683f15a6] did put an address generation fix in [https://github.com/sifive/federation/pull/26079|https://github.com/sifive/federation/pull/26079|smart-link] for [https://sifive.atlassian.net/browse/MAL-2558|https://sifive.atlassian.net/browse/MAL-2558|smart-link].","18/Sep/22 7:54 PM;5bb6808b9ba2930990f81895;The hang is fixed by https://github.com/sifive/federation/pull/26024.

There was still a ""COSIM VS RTL WRDATA MISMATCH"" after cherry-picking the fix commits, but that can be a new Jira ticket based on Federation main master after merging the fix branch PR.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: Flush Newer delayed,,,,,,MAL-2641,126024,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Lucas Garcia,63126758b433b060db56126f,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,9/16/2022 14:07,9/27/2022 17:07,9/28/2022 0:51,,,,,,,,,,,,,,Performance,RTL/LSU,,,,,,,,0,,,,"[https://sifive.atlassian.net/browse/MAL-1638|https://sifive.atlassian.net/browse/MAL-1638|smart-link] waits to flush-newer for out-of-order claim full until the instruction in LSTO is the Oldest in the ROB.

[https://sifive.atlassian.net/browse/SPARTA-1694?focusedCommentId=390349|https://sifive.atlassian.net/browse/SPARTA-1694?focusedCommentId=390349|smart-link] shows that waiting even _later_ to do this would barely reduce performance but would meaningfully reduce flushes in some outlier workloads.

The data that [~accountid:5e1372d362aed90daa48f7b1] presented shows a knee in the curve at waiting seven times before flushing, i.e. a three-bit counter.

We can add this counter functionality as an enable within {{lsto_flushNewerEnable}}, and in such a logic structure that it is still disable-able by the existing chicken bits.  The counter can be reset by the existing signal {{robRetirePtrMoved}} in LSU.",I-Cheng Cheng,John Ingalls,,,,,,,,,,,,,,5d7bfdaa003e040c3e175060,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,MAL-1638,MAL-758,,,MAL-1826,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-27T14:59:57.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,,,,,,,,,,,,,,,,2|i0139j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] LTB does not use bypass for old dest data when it should,[TGV] LTB fail,LSU (Load Store Unit),,,,MAL-2640,126012,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,9/16/2022 12:16,9/17/2022 20:59,9/28/2022 0:51,9/17/2022 20:59,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"After getting some updates to milestone 7 tests, we started seeing failures where tail-undisturbed was getting the wrong data from the VRF before merging it with incoming load data.",David Kravitz,,,,,,,,,,,,,,,5fd15143b4a74900763834e0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2210,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/tree/milestone7_fail_sep15,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-16T14:50:15.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2210,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/687b48c96940e7d6cf059c84ba9fc852628314de,,,n/a,,,,,,,,,Simulation-Directed,Simulation-VTG,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i0136v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"Checkout https://github.com/sifive/federation/tree/milestone7_fail_sep15
Build `coreip_u8_minimal_vector`
Run the outline with this ticket number in `/work/nicolasb/tgv_bug_outlines/vtg/`",,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26162/files],,,,,,,,,,,,,,17/Sep/22 8:59 PM;5fd15143b4a74900763834e0;Fixed by [~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Move fcsr_rm pipeline register inside VexPipe,,,,,,MAL-2639,126011,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,9/16/2022 12:00,9/22/2022 23:29,9/28/2022 0:51,9/19/2022 8:12,,,,,,,,,,,,,TGV_RTL/RDU,TGV_RTL/Top,TGV_RTL/VEX,Timing,,,,,,0,,,,"Move {{fcsr_rm_q }}pipeline register located in TGV top module inside {{VexPipe}}.

Also remove unnecessary writing inside {{VRDU  }}( {{vectorCmd.fcsr_rm := io.fcsr_rm}} ) since it is overwritten in {{VexPipe}}",Cristóbal Ramirez Lazo,,,,,,,,,,,,,,,62632262d7f1b80069c030b8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2586,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-19T01:10:08.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,28652afd23ea58f0c2209b1ee745e3ac4f479d69,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i0136n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26186/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][RVV 7.8] Connect segmented mux to STB,,,,,,MAL-2638,126007,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,9/16/2022 11:39,9/22/2022 23:29,9/28/2022 0:51,9/22/2022 0:09,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,,Brad Wu,,,,,,,,,,,,,,,62103777eb2978006893b778,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2403,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-22T00:08:38.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2403,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i0135r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26166/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Healdsburg Coremark variation with disableClockGate,Healdsburg Coremark variation,,,,,MAL-2637,126006,,Bug,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Steffen Kunze,62cbe3403d382dfc9c5f3078,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,9/16/2022 10:58,9/27/2022 15:41,9/28/2022 0:51,,,,,,,,,,,,,,Performance,,,,,,,,,0,,,,"I’m seeing a consistent variation in Coremark score of a few thousandths between tests {{useries_coremark_tuned}} and {{disableClockGate/useries_coremark_tuned}}.

This could be evidence of a clock gating bug… somewhere.

Dhrystone is always the same, so at least there’s that.



Steps to reproduce:

* branch: master
* commit: {{461ccff845f36de5945db82a4539c15d4f459a87}}
* config: coreip_healdsburg
* test outline: {{benchmark_scores.outline}}",Adam George,Brian Grayson,John Ingalls,Josh Smith,Julian Bailey,Steffen Kunze,,,,,,,,,,61b2a458657a0500706b9c39,5e1371705361330daaeaf389,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,62cbe3403d382dfc9c5f3078,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Requires further investigation,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{branch={count=1, dataType=branch}, json={""cachedValue"":{""errors"":[],""summary"":{""branch"":{""overall"":{""count"":1,""lastUpdated"":null,""dataType"":""branch""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Software-Benchmark,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i0135j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,11:19.1,"16/Sep/22 11:11 AM;629ab2a89bc7150068d00cdf;Thx John, although Dhrystone is only 300 odd instructions so easier to debug 🙂 Will take a look on tuesday…","22/Sep/22 3:38 AM;629ab2a89bc7150068d00cdf;I have managed to re-run these and notice a slight variation between the coremark runs on the latest RTL:
Commit Hash: b8d3b7535f16657c9660f7b02ad69e4bc92ca721

* Coremark Disable Clock Gate: 10.008
* Coremark Clock Gated: 10.007


Will look into this as it is still present.",26/Sep/22 3:28 AM;629ab2a89bc7150068d00cdf;Assigning to Steffen ,"27/Sep/22 10:04 AM;62cbe3403d382dfc9c5f3078;I’ve been digging through the waves today, here are my observations so far:

* I see instructions getting dispatched to IEX in different order at 6,140,782.5ns
* On the previous two cycles a different amount of instructions is passed from IFU->RDU on the imemResp interfaces 5/6/7
* I suspected this was because of redirect being high at 6,140,542.5ns in IFU in the clockgated waves (it’s low in the not clockgated waves)
* This different redirect is caused by a difference in the nlpHit values
* The read rtn data from nlpTagArray1 doesn’t match between the two sets of waves at 6,140,502.5ns where the tags are compared
* There isn’t a valid read to nlpTagArray RAM at that time (in either set of waves) so the read data is random if I understand right? May need to check if this is deterministic based on the test seed.

[~accountid:5bb6808b9ba2930990f81895] Do you think this redirect is relevant or could I be following a dead end here?

Waves on gamma03:

/scratch/skunze/federation/builds/coreip_healdsburg/sim/sim/benchmark_scores.outline/disableClockGate/useries_coremark_tuned/waves.fsdb

/scratch/skunze/federation/builds/coreip_healdsburg/sim/sim/benchmark_scores.outline/useries_coremark_tuned/waves.fsdb","27/Sep/22 11:01 AM;5bb6808b9ba2930990f81895;[~accountid:61b2a458657a0500706b9c39] could this be a result of / related to either:

# optimizations saving power on NLP reads, or
# similar to clock gating bugs a while ago in the branch predictors?","27/Sep/22 1:52 PM;5acffeafaa802f2a797a955c;[~accountid:5e1371705361330daaeaf389] Didn’t you have some luck with using the waveform diff tool?  I’m curious if that could speed up narrowing things down here again.

I don’t believe the {{disableClockGate}} bits have any effect on things like the BDP and NLP read disable optimizations.","27/Sep/22 3:40 PM;5e1371705361330daaeaf389;Yes, I found nCompare helpful when I was originally looking into this.

I documented some notes here: {{/home/briang/howto/verdi_nCompare}}

I haven’t used the tool besides that one time, which was a few months ago, so I’m not a great resource if questions come up. I don’t know if the DV team uses nCompare.

Have you looked at this via the outline file {{benchmark_clockgate.outline}}? That will let you know which of all the clock gate bits was the one that caused the perf difference, which can help you figure out what block to look at. At one point, there were I think two different clock gating bugs, that appeared as more and more was clock gated.

[https://sifive.atlassian.net/browse/MAL-1868|https://sifive.atlassian.net/browse/MAL-1868|smart-link] is the bug from last time we hit one of these.

Reach out to me if you want more pointers on what I did, and I’ll see if I can remember or re-figure it out\!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] adapt vstart masking to segmented loads,,,,,,MAL-2636,126002,122846,Sub-task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/16/2022 10:32,9/16/2022 10:33,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"Segmented loads have a different masking index schemed compare to unti-strided loads.

Mask chunk id is {{uopId / (number of segments) = uopId / (nf +1)}} rathen than {{uopId}} directly",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2398,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0134n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,122846,TGV: load/store faults vstart,To Do
[TGV][backlog] allow early free of temporary physical registers at writer retire,,,,,,MAL-2635,125997,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Lowest,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/16/2022 10:12,9/16/2022 10:15,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/Top,,,,,,,,,0,,,,"Currently vector temporary register (used for reduction in particular) are handled as any physical registers:

* destination is allocated from freeList / ready-to-allocate registers in {{REN}}
* registers is free-ed by ROB at retire when the next write to the original arch index retires

The second part ensure that no reads on the physical registers are pending. It is not necessary for temporary registers, once the ROB group containing the instruction writing them retires, no other read can occur (read of temporary registers are made by other uops sequenced from the same original insn, never by other insn) so the temporary PR could be free earlier when writer retires.",Andrew Hanselman,Josh Smith,Nicolas Brunie,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0133r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Add instruction tracing to Mallard front end,,,,,,MAL-2634,125889,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Adam George,61b2a458657a0500706b9c39,Adam George,61b2a458657a0500706b9c39,Adam George,61b2a458657a0500706b9c39,9/15/2022 18:08,9/19/2022 12:06,9/28/2022 0:51,,,,,,,,,,,,,,RTL/Frontend,,,,,,,,,0,,,,Currently branch flushes cannot easily be traced in the Mallard generator so this will add globalID starting in F0 and propagating through dispatch. I have some preliminary work done here but it will take some time to integrate with the current logic.,Adam George,Chia-I Chen,Fu-Ching Yang,I-Cheng Cheng,Josh Smith,,,,,,,,,,,61b2a458657a0500706b9c39,61aaafab977c5b007241043c,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,74b232fdd6140f0f883ccbcc03bc248aa3c3b8ba,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i012gf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,00:30.7,"18/Sep/22 11:00 PM;61aaafab977c5b007241043c;[~accountid:61b2a458657a0500706b9c39], what are you planning to do?

e.g., there will be a prediction id for each prediction, and also a mapping between prediction id and globalID.

or you’re going to move the starting point of globalID from decode to fetch?","19/Sep/22 11:54 AM;61b2a458657a0500706b9c39;Fetch would assign the globalID in F0 and pass it to dispatch. 

","19/Sep/22 12:02 PM;5acffeafaa802f2a797a955c;The globalID needs to be different for every macro-instruction.  I’m not sure how we would assign it any earlier than F3 stage, because that’s where we actually see individual instructions instead of an entire fetch group.

Unless we rely on globalIDs not being contiguous, and we generate some “base” ID for each fetch group in F0, and increment it by the maximum possible number of instructions per fetch group. Then in F3 each instruction gets an ID of the base plus some offset.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV][LSU-Baler] Vector Store op does not retire,[TGV][LSU-Baler] Vector Store op ,LSU (Load Store Unit),,,,MAL-2633,125883,,Bug,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,Vijith KS,5fa30ce971ab9e006a1d63d8,Vijith KS,5fa30ce971ab9e006a1d63d8,9/15/2022 17:48,9/22/2022 7:20,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"Path: verif05:/scratch/verif/vijithk/workspace1/federation/build/lsu_baler_unit/VcsSimulate/VcsSimulate__lsu_tb_test__s3743585872__d618abc6b7cbb3dd59bd52f5a9de215d



Baler receives a vector load with GID 'h10, and destination VRF 'h2d. And a few cycles later received gid 'h11 which is a vector store op, and source data register 'h2d (same as the load destination). 

Baler does issue a read request for 'h2d after the WB, and also receives a response. Although the op has been resolved by the LSU, it never completes the store. If I disable this register dependency in our stimulus, all the hangs go away (as compared to 16/150 hangs).

SHA: 8640a250f5afa035e83580e609c7c83787f77aff
To open waves: verdi -elab ../../VcsCompile/VcsCompile__coverage_0__d6dcba6275f976045553480d89f1ade4/simv.daidir/kdb.elab++ -ssf waves.fsdb &",John Ingalls,Vijith KS,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5fa30ce971ab9e006a1d63d8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Unit Test,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i012f3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,". ./scripts/load-wake
wake build /work/vijithk/plan_baler_2.json --step VcsSimulate/VcsSimulate__lsu_tb_test__s3743585872__d618abc6b7cbb3dd59bd52f5a9de215d",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV][LSU-Baler] SDFPX request should match an entry,[TGV][LSU-Baler] SDFPX request ,LSU (Load Store Unit),,,,MAL-2632,125877,,Bug,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,Vijith KS,5fa30ce971ab9e006a1d63d8,Vijith KS,5fa30ce971ab9e006a1d63d8,9/15/2022 17:12,9/22/2022 7:20,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"Path: verif05:/scratch/verif/vijithk/workspace2/federation/build/lsu_baler_unit/VcsSimulate/VcsSimulate__lsu_tb_test__s3309371709__a168daa0ab97bb3c0ddad8ce0cef2ebc

The test fails with the above mentioned assertion. The LSU micro-op for a vector store is dispatch just a couple of cycles before the assertion, and the LSU issues request for the data, which then triggers this assertion. The Baler has not yet received the Store uop. I know that [~accountid:5fd15143b4a74900763834e0] mentioned that this logic is still a WIP, but I wanted to keep a ticket for DV tracking purposes for now.

SHA: c5ac50b458cde0e165f536566b224b4975628881
To open waveform: verdi -elab ../../VcsCompile/VcsCompile__coverage_0__d6dcba6275f976045553480d89f1ade4/simv.daidir/kdb.elab++ -ssf waves.fsdb &",David Kravitz,John Ingalls,Vijith KS,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,5fa30ce971ab9e006a1d63d8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Unit Test,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i012dr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,". ./scripts/load-wake
wake build /work/vijithk/plan_baler.json --step VcsSimulate/VcsSimulate__lsu_tb_test__s3309371709__a168daa0ab97bb3c0ddad8ce0cef2ebc",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV][LSU-Baler] SD Pipe must not issue data multiple times to the same StQEntry,[TGV][LSU-Baler] SD Pipe StQEntry,LSU (Load Store Unit),,,,MAL-2631,125875,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Vijith KS,5fa30ce971ab9e006a1d63d8,Vijith KS,5fa30ce971ab9e006a1d63d8,9/15/2022 16:51,9/22/2022 7:20,9/28/2022 0:51,9/15/2022 23:30,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"Path: verif05:/scratch/verif/vijithk/workspace2/federation/build/lsu_baler_unit/VcsSimulate/VcsSimulate__lsu_tb_test__s1007773001__b8a805f75232083efc17e02ce370eec9

The test fails with the above mentioned assertion when the StoreQ is sent data for h39 from Baler for a Unit Stride store operation. 


SHA: c5ac50b458cde0e165f536566b224b4975628881
To open waveform: verdi -elab ../../VcsCompile/VcsCompile__coverage_0__d6dcba6275f976045553480d89f1ade4/simv.daidir/kdb.elab++ -ssf waves.fsdb &",John Ingalls,Vijith KS,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5fa30ce971ab9e006a1d63d8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2628,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,c5ac50b458cde0e165f536566b224b4975628881,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-16T04:45:21.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/26139,,,n/a,,,,,,,,,Simulation-Unit Test,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i012dj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"source scripts/load-wake
wake build /work/vijithk/plan_baler.json --step VcsSimulate/VcsSimulate__lsu_tb_test__s1007773001__b8a805f75232083efc17e02ce370eec9",,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26139/files],,,,,,,,,,,,,30:57.0,"15/Sep/22 4:55 PM;5fa30ce971ab9e006a1d63d8;This is probably one of the first few bugs reported with the new D/I unit bench flow, along with test planner - please provide any feedback/missing steps for bug reproduction 🙂 
The provided hash has around 90% fail rate with the mentioned assertion",15/Sep/22 11:30 PM;5bb6808b9ba2930990f81895;Worked great\!  👏 ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Implement Fetch Width Prediction,,,,,,MAL-2630,125872,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,9/15/2022 16:17,9/16/2022 12:06,9/28/2022 0:51,,,,,,,,,,,,,,Power,RTL/Frontend,,,,,,,,0,,,,"Healdsburg is currently targeting a very wide fetch datapath from the Instruction Cache (currently 48B).  However, it’s very likely that a taken branch/jump is seen somewhere in the middle of the fetch group, meaning that the bytes fetched after the taken branch/jump are thrown away.

A technique for reducing wasted ICache reads is “Fetch Width Prediction”.  Basically, predicting how many useful bytes will be fetched before the first predicted taken branch/jump.  One basic scheme for this is to augment the Next Line Predictor (NLP).  The NLP entry can be trained with information about the target fetch group of an NLP hit.  So if an NLP on fetch group A jumps to a fetch group B which only has say 20 useful bytes, the NLP entry which fetch group A hit can be trained with that information.

The things to consider are that the prediction can be wrong especially if a fetch group is ended by a conditional branch.  A conditional branch could be taken one time, causing a fetch width prediction less than the max, and the next time that branch is seen it could be predicted not taken.  Then the predicted fetch width could be too small, meaning we under-fetched, and need to redirect the fetch pipeline to keep going.",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Front End,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i012cv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,8,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Sep/22 4:17 PM;5acffeafaa802f2a797a955c;[~accountid:5e1371705361330daaeaf389] did you already make a SPARTA ticket for this?  I forget.

Edit: Nevermind, found [https://sifive.atlassian.net/browse/SPARTA-2217|https://sifive.atlassian.net/browse/SPARTA-2217|smart-link]. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Fix assertion for simple vslide to reflect new optimizations,,,,,,MAL-2629,125870,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,9/15/2022 16:05,9/22/2022 13:53,9/28/2022 0:51,9/22/2022 13:53,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Current code in Tilemaker for Mallard generator has the following 

{noformat}        params.tgv.vexPipes.map(p => {
          require(
            p.pipe.hasCmplxFullPerm == p.issq.hasVCmplxPerm && (p.pipe.hasSimpleSlide || p.pipe.hasCmplxFullPerm) == p.issq.hasVSimpleSlide,
            ""IssQ slide/cmplxPerm support must be compatible with corresponding pipeline capabilities"",
          )}){noformat}

This only looks at per pipe. Need changes so that simple vslides are issued to a pipe that has only simple vslide instanced. Hence if there is complex permute in one pipe and simple slide in the other. Have all simple vslide issued to the simple vslide pipe. 



 ",Nicolas Brunie,Warren Menezes,,,,,,,,,,,,,,6065017e90e3950069cf01c5,600773dcee80bd006f750bba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2515,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,,,,,,,,,,,,,2|i012cf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LSU SD Pipe must not issue data multiple times to the same StQEntry  @[StoreQ.scala 1269:18],[TGV] LSU SD Pipe StQEntry  ,LSU (Load Store Unit),,,,MAL-2628,125867,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,9/15/2022 15:37,9/20/2022 10:49,9/28/2022 0:51,9/15/2022 23:30,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"{noformat}=== sitest found errors in test sim2/rerun.outline/vector/vlseg2e_v:
Reset m_pl2_mmc_inner_agents  ca
Error: ""/scratch/sols/tgv/federation/builds/e82431dbf2a/coreip_u8_minimal_vector/verilog/design/SiFive_StQEntry.sv"", 414: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.StQ.stqEntries_15: at time 270322500 ps
assert failed (verification library): SD Pipe must not issue data multiple times to the same StQEntry  @[StoreQ.scala 1269:18]

Fatal: ""/scratch/sols/tgv/federation/builds/e82431dbf2a/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_StQEntry_assert.sv"", 199: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.StQ.stqEntries_15.SiFive_StQEntry_assert: at time 270322500 ps

$finish called from file ""/scratch/sols/tgv/federation/builds/e82431dbf2a/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_StQEntry_assert.sv"", line 199.{noformat}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vlseg2e_v"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Waveform: verif06:/scratch/sols/tgv/federation/builds/e82431dbf2a/coreip_u8_minimal_vector/sim/sim2/rerun.outline/vector/vlseg2e_v",Alexandre Solomatnikov,John Ingalls,,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2631,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/8ff7f2a5cb8ff40a59a5deee7639a9ae652e3fcb,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-16T04:45:21.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/26139,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i012br:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26139/files],,,,,,,,,,,,,15:47.7,"15/Sep/22 7:15 PM;5bb6808b9ba2930990f81895;This assertion is that each StoreQ Entry receives data only once; this was true for scalar stores.
Will segmented stores move pre- or post-transposed data to the StoreQ?","15/Sep/22 7:23 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;{quote}This assertion is that each StoreQ Entry receives data only once; this was true for scalar stores.
Will segmented stores move pre- or post-transposed data to the StoreQ?{quote}

There is no segment store in this case.

I am not sure it even gets to the simple vector store.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"LSU FV: RTL assertion fail ""LDR_STLDF_check_fail_wrong_select_StqDcd""",,,,,,MAL-2627,125827,,Question,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Abhishek Anand,622a7ed2f1e55c0070f301a9,Abhishek Anand,622a7ed2f1e55c0070f301a9,Abhishek Anand,622a7ed2f1e55c0070f301a9,9/15/2022 9:11,9/19/2022 20:39,9/28/2022 0:51,9/19/2022 20:39,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"Hi John, I am observing a fail for following RTL assert at [https://github.com/sifive/federation/blob/951e709aad19e7ab20a27c752f4c7c00b4398b23/mallard/src/main/scala/core/mallard/LDPipe.scala#L2145|https://github.com/sifive/federation/blob/951e709aad19e7ab20a27c752f4c7c00b4398b23/mallard/src/main/scala/core/mallard/LDPipe.scala#L2145]:LSUPreReplayTestharnessFPV.lsu.LDPipes.LDPipes_0.SiFive_LDPipe_assert_0.*assert__verif_library_lsuAssert__LDR_STLDF_check_fail_wrong_select_StqDcd*

Cycle-by-cycle description:

* Cycle#3:

* LST0: Store Instruction in RR with GID 0x8
* LST1: Load Instruction in RR with GID 0x9

* Cycle#4

* LST0: Store instruction in RR with GID 0xa
* LST1: Load instruction in RR with GID 0xe

* Cycle#5:

* LST0: Instruction with GID 0x8 has lstr_vAddr\[12:0] = 0x1eee and lstr_pAddrTag\[24:0] = 0x90_4000
* LST1: Instruction with GID 0x9 has lstr_vAddr\[12:0] = 0x1eee and lstr_pAddrTag\[24:0] = 0x90_4000

* Cycle#6:

* LST0: Instruction with GID 0xa has lstr_vAddr\[12:0] = 0x1ef2 and lstr_pAddrTag\[24:0] = 0x10_4002
* LST1: Instruction with GID 0xe has lstr_vAddr\[12:0] = 0x1ef5 and lstr_pAddrTag\[24:0] = 0x90_4000

* Cycle#8

* STQ 0x0 is used by Instruction with GID 0x8
* LDQ 0x1 is used by instruction with GID 0x9

* Cycle#9:

* STQ 0x1 is used by Instruction with GID 0xa
* LDQ 0x2 is used by instruction with GID 0xe
* Instruction with GID 0x9 is in LDR stage (ldqNdx_valid is unset)

* Cycle#10

* Instruction with GID 0xe is in LDR stage (ldqNdx_valid is set)
* ldr_stldfStqDcd = 0x1; ldr_stldfStqEntryNewestOlderByteSatisfyVAMatchWithoutLsto.validIndexOneHot = 0x2 (this mismatch is causing fail)

Please use following command to open he waveform (Verif03):

{noformat}cd /scratch/abhisheka/federation3/build/formal/lsu_prereplay_fpv && verdi -f /scratch/abhisheka/federation3/build/formal/lsu_prereplay_fpv/vsrcs.F -ssf /scratch/abhisheka/federation3/Waveforms/LDR_STLDF_check_fail_wrong_select_StqDcd.fsdb -sswr /scratch/abhisheka/federation3/mallard/scripts/verdi/LSU.rc -top LSUPreReplayTestharnessFPV &{noformat}",Abhishek Anand,John Ingalls,,,,,,,,,,,,,,622a7ed2f1e55c0070f301a9,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2626,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Formal,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,,,,,,,,,,,,,2|hzn90b:4,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,45:51.5,"15/Sep/22 9:45 PM;5bb6808b9ba2930990f81895;I’m seeing the same behavior as [https://sifive.atlassian.net/browse/MAL-2626|https://sifive.atlassian.net/browse/MAL-2626|smart-link] in the MSHR Entries contents changing.  We should fix that first, since it could very likely be causing this too.","16/Sep/22 4:38 AM;622a7ed2f1e55c0070f301a9;Hi John, 

Same comment as [https://sifive.atlassian.net/browse/MAL-2626|https://sifive.atlassian.net/browse/MAL-2626|smart-link] . 

Sym_pAddr for this waveform is 0x1c8_6700.

Commands to open Waves:

{{cd /scratch/abhisheka/federation3/build/formal/lsu_prereplay_fpv && verdi -f /scratch/abhisheka/federation3/build/formal/lsu_prereplay_fpv/vsrcs.F -ssf /scratch/abhisheka/federation3/LDR_STLDF_check_fail_wrong_select_StqDcd.fsdb -sswr /scratch/abhisheka/federation3/mallard/scripts/verdi/LSU.rc -top LSUPreReplayTestharnessFPV &}}",19/Sep/22 7:37 AM;5bb6808b9ba2930990f81895;Is this still present after we resolved[https://sifive.atlassian.net/browse/MAL-2626|https://sifive.atlassian.net/browse/MAL-2626|smart-link]?,"19/Sep/22 8:39 PM;622a7ed2f1e55c0070f301a9;Hi John, this is also now not failing and going beyond the previous failing depth (currently running at cycle#11). I was waiting for the results from over-night run before closing this one off.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"LSU FV: RTL assertion fail ""LSTO_Older_Hazard_on_VAHash_mismatch_PA_match_LdQ_should_Wait_for_MSHR_Dependency""",,,,,,MAL-2626,125826,,Question,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Abhishek Anand,622a7ed2f1e55c0070f301a9,Abhishek Anand,622a7ed2f1e55c0070f301a9,9/15/2022 9:08,9/19/2022 7:31,9/28/2022 0:51,9/19/2022 7:30,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"Hi John, I am observing a fail for following RTL assert at [https://github.com/sifive/federation/blob/951e709aad19e7ab20a27c752f4c7c00b4398b23/mallard/src/main/scala/core/mallard/LSTPipe.scala#L5987|https://github.com/sifive/federation/blob/951e709aad19e7ab20a27c752f4c7c00b4398b23/mallard/src/main/scala/core/mallard/LSTPipe.scala#L5987]:LSUPreReplayTestharnessFPV.lsu.LSTPipes_0.SiFive_LSTPipe_assert_0.assert__verif_library_lsuAssert__*LSTO_Older_Hazard_on_VAHash_mismatch_PA_match_LdQ_should_Wait_for_MSHR_Dependency*Cycle-by-cycle description:

* Cycle #7

* Instruction with LSTO with index 0x0 and instruction in LSTM match PA but have different VA
* lstm_mshrWaitForDependency is de-asserted because lstm_xcpt is asserted
* Instruction in LSTO re-uses MSHR from a previous instruction

* Cycle#8

* lsto_prevMshrWaitForDependency_q is de-asserted causing the assertion to fail

*Should the assertion be enabled for an instruction which received lstm_xcpt ?* PFA the screenshot. Please use following command to open Verdi (on Verif03):

{noformat}cd /scratch/abhisheka/federation3/build/formal/lsu_prereplay_fpv && verdi -f /scratch/abhisheka/federation3/build/formal/lsu_prereplay_fpv/vsrcs.F -ssf /scratch/abhisheka/federation3/Waveforms/LSTO_Older_Hazard_on_VAHash_mismatch_PA_match_LdQ_should_Wait_for_MSHR_Dependency.fsdb -sswr /scratch/abhisheka/federation3/mallard/scripts/verdi/LSU.rc -top LSUPreReplayTestharnessFPV &{noformat}",Abhishek Anand,John Ingalls,,,,,,,,,,,,,,622a7ed2f1e55c0070f301a9,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2627,,,,,,,15/Sep/22 9:07 AM;ug:050bebe1-2a7f-4cf6-8275-6818dba1d89c;Screenshot 2022-09-15 at 1.33.46 PM.png;https://sifive.atlassian.net/secure/attachment/77724/Screenshot+2022-09-15+at+1.33.46+PM.png,15/Sep/22 9:17 PM;John.Ingalls;image-20220916-041651.png;https://sifive.atlassian.net/secure/attachment/77758/image-20220916-041651.png,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Formal,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,,,,,,,,,,,,,2|hzn90b:3,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,17:28.1,"15/Sep/22 9:17 PM;5bb6808b9ba2930990f81895;I’m seeing some odd behavior in the waves: the {{mshrE_pAddrTag_q}} inside _other_ MSHR Entries is changing, even when the register is not supposed to be enabled.  This leads to spurious MSHR reuse matches.  For example, in MSHR Entry #1:

!image-20220916-041651.png|width=430,height=80!

even though only MSHR Entry #3 is supposed to be established in that cycle with pAddrTag=0x6caacd.

Is this a bug in the tool / simulator?","16/Sep/22 4:32 AM;622a7ed2f1e55c0070f301a9;Hi John, 

In FV, we have an abstraction on mshrE_pAddrTag_q. We only store 1 bit to determine whether the store pAddr is same as sym_pAddr (tracked address in FV). Depending on this 1-bit flop, we constrain the mshrE_pAddrTag_q (same as sym_pAddr if set, else anything other than sym_pAddr). The assumption here is that the instruction on different pAddr are independent of each other. 

However, this particular assert seems to have not been qualified earlier with ({{fv_lsto_paddr && fv_lsto_vAddrSynonym}}). I have consequently added the qualifier and re-ran the assert. It’s failing at same depth as earlier (cycle#10).

Please use following command to open new waves (sym_pAddr == 0x64_37c7):

{{cd /scratch/abhisheka/federation3/build/formal/lsu_prereplay_fpv && verdi -f /scratch/abhisheka/federation3/build/formal/lsu_prereplay_fpv/vsrcs.F -ssf /scratch/abhisheka/federation3/LSTO_Older_Hazard_on_VAHash_mismatch_PA_match_LdQ_should_Wait_for_MSHR_Dependency.fsdb -sswr /scratch/abhisheka/federation3/mallard/scripts/verdi/LSU.rc -top LSUPreReplayTestharnessFPV &}}","17/Sep/22 5:09 PM;5bb6808b9ba2930990f81895;I’m still seeing in those waves multiple MSHRs that are reusable with the same physical address.  This messes with the MSHR reuse dependency tracking logic.

I think we need to remove the qualification {{fv_lstm_paddr && fv_lstm_vAddrSynonym}} on this assertion: [https://github.com/sifive/federation/blob/e2b70c2400b87912f265b7990e1aed6d818195d6/mallard/src/main/scala/core/mallard/LSTPipe.scala#L5926-L5927|https://github.com/sifive/federation/blob/e2b70c2400b87912f265b7990e1aed6d818195d6/mallard/src/main/scala/core/mallard/LSTPipe.scala#L5926-L5927]

{noformat}  lsuAssert(PopCount(lstm_mshrDcdVAPAMatchReusable) <= 1.U(log2Ceil(nMSHRs).W), ""LSTM should only match 1 reusable MSHR""){noformat}","19/Sep/22 7:30 AM;622a7ed2f1e55c0070f301a9;Thanks for debugging the waves and your comments John\! I added the following constraints to the _mshrE_pAddrTag_q_ abstraction model and the previously failing assertion is now not failing and is running at cycle#11 (fail was at cycle#10).

1. For non-tracked addresses, the physical address stored in MSHRs should be unique.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
tracking activities adding cover points in TGV's VEX/MU,,,,,,MAL-2625,125825,,Epic,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/15/2022 9:01,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1665,MAL-2650,MAL-2665,MAL-2666,MAL-2717,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-7,,[TGV] VEX/MU milestone - cover points,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,purple,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0123b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
Tracking activities related to LLP closure for TGV,,,,,,MAL-2624,125816,,Epic,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/15/2022 8:07,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2586,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-5,,[TGV] VEX/MU milestone - LLP,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,dark_teal,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0121b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
Tracking activities related to code refactoring in VEX/MU,,,,,,MAL-2623,125815,,Epic,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/15/2022 8:03,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2588,MAL-1947,MAL-1808,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-14,,[TGV] VEX/MU milestone - code refactoring,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,dark_orange,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i01213:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
prefetch_cmo_directed test failed on configs p550 and p650,prefetch_cmo_directed test fail,,,,,MAL-2621,122903,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Bandan Bhoi,6137eb8f7eb35f00692df12a,Bandan Bhoi,6137eb8f7eb35f00692df12a,8/17/2022 3:33,9/22/2022 5:50,9/28/2022 0:51,9/15/2022 7:51,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,EC_CC_CMO,,,"*Description*:  Here prefetch operation is failing on configs p550 and p650 . Initially data present in memory was{{ 0xeb7d7f3f}}.  then data written to memory is{{ 0xeb8bcf08}}. But after prefetch operation data read from memory is  {{0xeb8bcf08}} instead of {{ 0xeb7d7f3f}}. So here expected data is not coming.

!asm.txt.jpg|width=1219,height=594!

!runasm.jpg|width=1366,height=599!



*Regression*: 	fed/master/RIT-mallard/386

*Link* : [https://simscope.internal.sifive.com/sigs/2116/cm7hgw42m0pf|https://simscope.internal.sifive.com/sigs/2116/cm7hgw42m0pf]

*Test* : sting_StingMemorySubsystemTuple_T_0212/sting/sifive/memory/prefetch_cmo_directed.conf

*configs*:  p550, p650

*commit*: 86883c9

*rerun.outline*: 

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""sting"",
""raw_plusargs"": \[
""+enable_irritation"",
""+cosim_scoreboard_trap_epc_count=128"",
""+axi_mem_latency_cycles=40"",
""+axi_mem_dither_cycles=20"",
""+amba_vip_select=2"",
""+gdi_amba_test_enable=1"",
""+gdi_tlc_test_enable=1"",
""""
],
""subdir"": ""sting_StingMemorySubsystemTuple_T_0212"",
""subtest"": ""sifive/memory/prefetch_cmo_directed.conf"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 2709612235
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""program"": {
""reset_vector_scheme"": ""first_mem_periph_sys""
},
""uvm"": {
""set_config_string"": \[
""uvm_test_top,torture_read_inbound,10101010:80808080"",
""uvm_test_top,torture_inbound,10101010:80808080""
],
""testname"": ""torture_test""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))

*Dump Directory*: 

bandanb@gamma27:/scratch/bandanb/RIT-387-CMO/federation/builds/coreip_p550/sim/sim/rerun.outline/sting_StingMemorySubsystemTuple_T_0212/sting/sifive/memory/prefetch_cmo_directed.conf",Bandan Bhoi,John Ingalls,Karthikeyan K,Rakesh Palakurthi,Sai Maddali,,,,,,,,,,,6137eb8f7eb35f00692df12a,5bb6808b9ba2930990f81895,5e0dd16e8dfdd40ec488ea2d,62350e943eacc50071ff0753,61d5cd480586a200695d2581,,,,,,,,,,,,,,,,,,MAL-1540,,,,VI-8307,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,17/Aug/22 10:55 AM;ug:004d42dd-0155-4b41-a5e6-cb45649086fe;asm.txt.jpg;https://sifive.atlassian.net/secure/attachment/76034/asm.txt.jpg,17/Aug/22 11:08 AM;ug:004d42dd-0155-4b41-a5e6-cb45649086fe;c test runasm.jpg;https://sifive.atlassian.net/secure/attachment/76039/c+test+runasm.jpg,18/Aug/22 12:12 AM;ug:004d42dd-0155-4b41-a5e6-cb45649086fe;prefetchRTL.jpg;https://sifive.atlassian.net/secure/attachment/76077/prefetchRTL.jpg,17/Aug/22 10:55 AM;ug:004d42dd-0155-4b41-a5e6-cb45649086fe;runasm.jpg;https://sifive.atlassian.net/secure/attachment/76035/runasm.jpg,21/Aug/22 8:39 PM;ug:004d42dd-0155-4b41-a5e6-cb45649086fe;simulation.out.jpg;https://sifive.atlassian.net/secure/attachment/76255/simulation.out.jpg,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{repository={count=6, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":6,""lastUpdated"":""2022-09-25T22:45:44.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":6,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/26098,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00kdb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26098/files],,,,,,,,,,,,,51:16.3,"17/Aug/22 11:08 AM;6137eb8f7eb35f00692df12a;By running with equivalent c program cmo_tests/cmo_prefetch/cmo_prefetch.c, test is failing at L54  of [federation/cmo_prefetch.c at master · sifive/federation (github.com)|https://github.com/sifive/federation/blob/master/software/tests/cmo_tests/cmo_prefetch/cmo_prefetch.c]. 

For this equivalent C program test, dump directory is 

bandanb@gamma27:/scratch/bandanb/cmotest-equivqlent/federation/builds/coreip_p550/sim/sim/rerun.outline/hart0/cmo_isa_prefetch_rand_all/single_core/cmo_tests/cmo_prefetch$

!c test runasm.jpg|width=1360,height=581!",17/Aug/22 8:28 PM;6137eb8f7eb35f00692df12a;Hi [~accountid:5e0dd16e8dfdd40ec488ea2d] Could you please take a look on this failure?,"17/Aug/22 9:51 PM;5e0dd16e8dfdd40ec488ea2d;[~accountid:6137eb8f7eb35f00692df12a] looks like prefetch ops has been enabled in mallard recently in [https://github.com/sifive/federation/pull/24601|https://github.com/sifive/federation/pull/24601|smart-link] & looks like it supports only {{prefetch.r}} instruction for time being. I think this could be causing the issue, as the test check all the 3 prefetch ops - {{prefetch.r}}, {{prefetch.w}} & {{prefetch.i}}. Could you please confirm on the same? If that’s the case, then I believe, we need not do anything as this issue would be transient till they enable support for other two instructions. Thanks\!","18/Aug/22 12:12 AM;6137eb8f7eb35f00692df12a;[~accountid:5e0dd16e8dfdd40ec488ea2d] Thanks for the update. I checked these two signals {{allPFModules_idle}} and {{cmd}} from [L|http://LdQEstablish.SV]SU module, When {{allPFModules_idle}}=0, only {{prefetch.r}} operation is supported  by the{{ cmd}} signal which is encoded as {{4'b0010}}.

!prefetchRTL.jpg|width=1361,height=570!","18/Aug/22 9:35 AM;6137eb8f7eb35f00692df12a;Hi [~accountid:5bb6808b9ba2930990f81895]  the recently updated PR [https://github.com/sifive/federation/pull/24601|https://github.com/sifive/federation/pull/24601|smart-link]  is only supporting {{prefetch.r}} operation but not supporting other two prefetch ops -  {{prefetch.w}} & {{prefetch.i}}. Because of this issue, prefetch_cmo_directed test is failing. Requesting to kindly take a look on this issue. ","21/Aug/22 7:42 PM;5bb6808b9ba2930990f81895;Mallard supports all of {{prefetch.r/w/i}} after [https://github.com/sifive/federation/pull/24601|https://github.com/sifive/federation/pull/24601|smart-link].

In the waves, I see this {{prefetch}} instruction successfully allocate the L1 Data Cache:
{{C0:      91246 [1] pc=[00000010000e09a4] W[r 0=0000000000000000][0] R[r 5=00000000fffffd80] R[r 0=0000000000000000] inst=[2812e013] ori     zero, t0, 641}}

What check is failing in this test?","21/Aug/22 8:39 PM;6137eb8f7eb35f00692df12a;According to simulation.out , data in memory is :0xeb7d7f3f and  Data written to memory: 0xeb8bcf08. But after prefetch operation ,expected data is 0xeb7d7f3f.. But at  

{{C0:  91050 [1]    pc=[00000010000e0a44] W[r 0=0000000000000000][0] R[r 7=00000000eb7d7f3f] R[r10=00000000eb8bcf08] inst=[02a38063] beq     t2, a0, pc + 32}} when checking for the expected data , the prefetch operation is not success and it is getting the updated memory data. The screenshot of simulation.out is attached here. 

!simulation.out.jpg|width=1361,height=412!

In the waveform , i checked that {{logic [4:0] cmd}} is a 5 bit signal. when this value is 2, it corresponds to {{prefetch.r}} and when its value is 3, it corresponds to {{prefetch.w}}. In the waveform i checked that it is never getting 3 value. That is the reason i expected that {{prefetch.w}} is not supporting.","21/Aug/22 9:36 PM;5bb6808b9ba2930990f81895;Ah, I see what the test is trying to do:

# prefetch
# fence
# store to mailbox to change data deliberately incoherently

This test is relying on microarchitecture-specific behavior from Bullet.  But, in the RISC-V ISA memory model, prefetches are not memory reads, and thus are not subject to fence ordering.

In Mallard, we support multiple memory requests, so we cand and do send both the prefetch (#1) and the store (#3) almost in parallel because the fence (#2) doesn’t include prefetches in its ordering predecessor set.

For this test to check like this in Mallard, we need to set this LSU Chicken CSR ({{0x7c2}}) bit:

{noformat}forceFenceFullMatch  //[14]: Force all FENCEs upgrade{noformat}",22/Aug/22 10:41 AM;6137eb8f7eb35f00692df12a;Thank you [~accountid:5bb6808b9ba2930990f81895] for the update.,"12/Sep/22 2:51 AM;5e0dd16e8dfdd40ec488ea2d;[~accountid:5bb6808b9ba2930990f81895] - I still see the same behaviour even after setting [this|https://github.com/sifive/federation/blob/ffbdff0b89e7c5528202299aa9f61b7631fc4a5b/mallard/src/main/scala/core/mallard/LSU.scala#L2834] LSU chicken bit. It seem to only promote different variant of fences into a full fence. But, does it also order the prefetches? Because, prefetches (Acc. to [this|https://github.com/riscv/riscv-CMOs/blob/master/specifications/cmobase-v1.0.1.pdf] spec) aren’t expected to honour any of the {{fence}} instructions.","13/Sep/22 12:00 PM;5bb6808b9ba2930990f81895;Hmm, I still think it should… can you please share waves with {{forceFenceFullMatch=1}} for us to look?","14/Sep/22 4:05 AM;5e0dd16e8dfdd40ec488ea2d;Sure [~accountid:5bb6808b9ba2930990f81895] . Here’s the waveform dump path -

{noformat}verif04: /scratch/verif/karthikeyank/fed/new-pf-build/coreip_p550/sim/rerun-waves-verbose/rerun.outline/hart0/cmo_isa_prefetch_r/single_core/cmo_tests/cmo_prefetch{noformat}","14/Sep/22 5:24 PM;5bb6808b9ba2930990f81895;Okay, thanks, I see two things in those waves:

# Yes, the LSU chicken bit {{forceFenceFullMatch=1}} is having the desired effect: the Fence is now waiting for the Prefetch.  So yes, keep doing that, it’s working\!
# I noticed that the RTL calculation of the Prefetch address was wrong.  Can you please try this [https://github.com/sifive/federation/pull/26098|https://github.com/sifive/federation/pull/26098|smart-link] and let us know if this fixes the test, still with {{forceFenceFullMatch=1}}?","14/Sep/22 7:57 PM;5e0dd16e8dfdd40ec488ea2d;Sure, given a run w/ the fix. Will let you know once it completes. Thanks\!",14/Sep/22 9:30 PM;5e0dd16e8dfdd40ec488ea2d;[~accountid:5bb6808b9ba2930990f81895] - It’s passing now w/ the fix provided. Thanks a lot\!,"15/Sep/22 3:34 AM;61d5cd480586a200695d2581;As we hit with RTL Issue, hence we moved VI ==> MAL.

[~accountid:5e0dd16e8dfdd40ec488ea2d] pls push the local test updates.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV/Crypto] Create RTL Library for AES instruction extensions under block-aes-sive subrepo,,,,,,MAL-2620,125799,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,9/15/2022 3:10,9/23/2022 10:23,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,This task is a subtask for creating an RTL library for cryptographic instruction extensions which will be included in P670 Panda release. All relevant info can be found here: [https://sifive.atlassian.net/wiki/spaces/CIP/pages/2365063813/Crypto+Instruction+Extensions|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2365063813/Crypto+Instruction+Extensions|smart-link] ,Erdinc Ozturk,Josh Smith,Nicolas Brunie,,,,,,,,,,,,,61ccb01d90cfd20071b96af2,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2662,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-23T10:07:24.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,,,,,,,,,,,,,2|i011xj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/block-aes-sifive/pull/15/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Fix full initialization of PRF,,,,,,MAL-2619,125774,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,9/15/2022 0:19,9/16/2022 12:02,9/28/2022 0:51,9/15/2022 19:04,,,,,,,,,,,,,RTL/IEX,,,,,,,,,0,,,,In PRF scala the write request is not fully initialized,Warren Menezes,,,,,,,,,,,,,,,600773dcee80bd006f750bba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2010,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-15T05:02:32.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i011s7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26104/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] fixing FP order reduction sum flush,,,,,,MAL-2618,125753,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,9/14/2022 19:14,9/22/2022 23:49,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"For not making the flopped flush complicated and fixing the potential issue, {{fphrzredmod}} integration in {{VexPipe}} need to mimic the fix [https://github.com/sifive/federation/pull/26080|https://github.com/sifive/federation/pull/26080|smart-link] ",Kira Tsao,Nicolas Brunie,,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2542,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i011nj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Review clock enable conditions in IEX pipes,,,,,,MAL-2617,125747,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Eleni Maragkoudaki,62e422de0b4bf7ad924bc51a,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,9/14/2022 17:37,9/27/2022 10:43,9/28/2022 0:51,,,,,,,,,,,,,,Power,RTL/IEX,,,,,,,,0,,,,"The {{ExPipe}} module for the IEX pipes has pretty basic clock enable conditions for many of the pipeline registers.  For example the RR stage registers:

{noformat}  // -----------------------------------------------------------------------
  // RR stage
  // -----------------------------------------------------------------------
  // Flop issue request into RR stage
  // Note: Issue queue has responsibility of clearing valid bit if instruction is flushed during issue
  val instValid_RR            = RegNext(io.issReq_ISS.valid && !io.issReq_ISS.bits.flush, false.B)
  val instSrcInfo_RR          = RegEnable(io.issReq_ISS.bits.srcInfo,       io.issReq_ISS.valid)
  val instDestInfo_RR         = RegEnable(io.issReq_ISS.bits.destInfo.head, io.issReq_ISS.valid)
  val instPayload_RR          = RegEnable(io.issReq_ISS.bits.payload,       io.issReq_ISS.valid)
  val instCmovSrcInfo_RR      = RegEnable(io.issReq_ISS.bits.predSrcInfo,   io.issReq_ISS.valid)
  val instSrcReplayed_RR      = RegEnable(instSrcReplay_ISS,                io.issReq_ISS.valid)
  val f2iReplayed_RR          = RegEnable(f2iReplay_ISS,                    io.issReq_ISS.valid)
  val mulOpReplay_RR          = RegEnable(mulOpReplay_ISS,                  io.issReq_ISS.valid)
  val sciePipelinedReplay_RR  = RegEnable(sciePipelinedReplay_ISS,          io.issReq_ISS.valid)
  val scieMcReplayed_RR       = RegEnable(scieMcReplay_ISS,                 io.issReq_ISS.valid)
  val instMultiCycInject_RR   = RegNext(instMultiCycInject_ISS, false.B){noformat}

All of those registers just use the ISS stage valid bit as a load enable.  However, some of those registers are actually bundles with multiple fields.  And there are certainly some fields/registers which don’t need to be enabled for every valid instruction because they may be “don’t care” for some types of instructions.

We should review the RR, EX, and WB pipeline registers to see if there are some values which can have better load enables to reduce clock power and unnecessary toggling of the data path. An example picture from the PowerArtist GUI is attached to illustrate the many elements of some of those bundles, and the relative dynamic power consumed by each.",Eleni Maragkoudaki,John Ingalls,Josh Smith,Julian Bailey,,,,,,,,,,,,62e422de0b4bf7ad924bc51a,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14/Sep/22 5:38 PM;jsmith;ExPipe_power.png;https://sifive.atlassian.net/secure/attachment/77673/ExPipe_power.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i011m7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,3,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,22:22.2,"27/Sep/22 10:22 AM;62e422de0b4bf7ad924bc51a;It seems like there isn't much that can be done to save power.
I made some changes to enable some branch fields of the payload only for branch instructions and there was a small decrease in power for these registers but the overall core power increased by 0.01mW.
I think the only thing that can be done and have some impact is to clock gate the 32 bits out of the 64 of the src/dst registers for 32-bit operations. The other registers aren’t big enough to save power when clk gated.","27/Sep/22 10:43 AM;5acffeafaa802f2a797a955c;Yeah, that’s about what I would expect.

The other thing that came up yesterday is the instruction payload.  It may be possible for use to compress the payload a bit more than it is today.  For example, some fields of the instruction payload could be combined into one, and then used for different purposes based on the instruction type.  We already do some of this today with the branch part of the payload I think.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] Test and enable Cross issue for IssQ module,,,,,,MAL-2616,125742,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,9/14/2022 17:14,9/27/2022 11:02,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/ISS,,,,,,,,,0,,,,Need to enable the Cross Issue feature in the IssQ module,Warren Menezes,,,,,,,,,,,,,,,600773dcee80bd006f750bba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1866,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-26T13:44:30.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,,,,,,,,,,,,,,,,2|i011l3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV][RVV 7.8] Cleanup segmented LTB entries after last uop reached WB,,,,,,MAL-2615,125705,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,9/14/2022 9:49,9/16/2022 12:06,9/28/2022 0:51,9/15/2022 15:28,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"Discussion thread: [#26051 (comment)|https://github.com/sifive/federation/pull/26051#discussion_r970059486]
Reuse per-LTB-entry write counter for segmented uop counter after segmented data are fully-written to LTB.

The counter updates are performed in the WB stage so that it don't need to handle the replayed uop case.
Segmented uop update the counter located at the base entry of the segmented LTB group. If the first uop update the counter, it set the base uop count (encoded in {{ovldImm}}) to the counter, the following uops substrate the counter. The segmented LTB group will be freed once the counter is 0.",Brad Wu,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,,,,,,,,,,,62103777eb2978006893b778,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2403,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,"{repository={count=4, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":4,""lastUpdated"":""2022-09-16T10:47:03.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":4,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2403,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i011cv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26118/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Baler issue queue: issue some uops twice,,,,,,MAL-2614,125696,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,9/14/2022 7:58,9/22/2022 13:23,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"Some uops, for example a unit-stride LMUL=1 masked load, will need to issue two times. First, to move the mask from the mask RF to the VMB. Second, to move the load data from LTB to VRF. There’s similar functionality in the LSIssQ, so hopefully this does not involve much new development.",David Kravitz,,,,,,,,,,,,,,,5fd15143b4a74900763834e0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2612,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{branch={count=1, dataType=branch}, json={""cachedValue"":{""errors"":[],""summary"":{""branch"":{""overall"":{""count"":1,""lastUpdated"":null,""dataType"":""branch""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2612,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i011b3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Sep/22 8:00 AM;5fd15143b4a74900763834e0;In terms of scheduling, this one would be useful ahead of [https://sifive.atlassian.net/browse/MAL-2613|https://sifive.atlassian.net/browse/MAL-2613|smart-link] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] Baler issue queue: pick 2 uops / cycle,,,,,,MAL-2613,125695,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,9/14/2022 7:55,9/14/2022 7:59,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"Modify the Baler issue queue to pick up to 2 uops per cycle. The max number picked should equal {{nBalerPipes}}. We should probably have chicken bits to restrict to just one per cycle, and maybe one to force in-order behavior. Chicken bits could be a separate ticket if desired.",David Kravitz,John Ingalls,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2612,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2612,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i011av:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Baler Issue Queue modifications,,,,,,MAL-2612,125693,,Epic,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,9/14/2022 7:50,9/14/2022 9:29,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,Will file under this epic all the work to be done for the Baler issue queue,David Kravitz,John Ingalls,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2209,,,MAL-2613,MAL-2614,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-13,,[TGV] Baler Issue Queue modifications,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,dark_green,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i011af:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV]:: COSIM VS RTL WRDST MISMATCH for instruction vseq.vx(PC=0x00000000800037d0),[TGV]:: COSIM VS RTL WRDST MISMATCH ,,,,,MAL-2611,125685,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,David Kravitz,5fd15143b4a74900763834e0,Abhishek Kumar,620ee634a715c6006914e852,Abhishek Kumar,620ee634a715c6006914e852,9/14/2022 6:16,9/16/2022 8:39,9/28/2022 0:51,9/15/2022 4:48,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error::*

\[COSIM-ERROR]\[0] COSIM VS RTL WRDST MISMATCH
\[COSIM-ERROR]\[0] COSIM VS RTL WRINFO MISMATCH
\[COSIM-ERROR]\[0] m_dut_inst_item: \[61013] InstInfo: VLD=1 | PC=0x00000000800037d0 | INSN=0x6207c757 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r8=0xffff_ffff_ffff_ffff_ffff_ffff_fffc_0000 mask=0000ffff | READY=1 | CSR_TIMER=61013 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x000000008000ac24 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=18 | SEW=8 | LMUL=m2 | VSEGELT=0
\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x00000000800037d0 | INSN=0x6207c757 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r14=0xffff_ffff_ffff_ffff_ffff_ffff_fffc_0000 mask=00000000

\[COSIM-ERROR]\[0] m_dut:  en=true r8=0xffff_ffff_ffff_ffff_ffff_ffff_fffc_0000 mask=0000ffff
\[COSIM-ERROR]\[0] m_sim:  en=true r14=0xffff_ffff_ffff_ffff_ffff_ffff_fffc_0000 mask=00000000

*Debug-Trace::*

In Cosim:: 

Before the instruction execution , the values of operand were

core   0: 0x00000000800037ae (0x000017fd) c.addi  a5, -1
core   0: 3 0x00000000800037ae (0x17fd) x15 0x0000000000000002

core   0: 0x00000000800037b4 (0x4e874057) vmsbc.vx (args unknown)
core   0: 3 0x00000000800037b4 (0x4e874057) e8 m2 l18 v0  0xfffffffffffffffffffffffffffc0000

The executed instruction :

core   0: 0x00000000800037d0 (0x6207c757) vmseq.vx v14, v0, a5
core   0: 3 0x00000000800037d0 (0x6207c757) e8 m2 l18 v14 0xfffffffffffffffffffffffffffc0000

Design::
instead of r14 , design is updating the correct value in r8

C                   0:      61013 \[1] pc=\[00000000800037d0] W\[r 0=0000000000000000]\[0] R\[r15=0000000000000002] R\[r 0=0000000000000000] inst=\[6207c757] vmseq.vx v14, v0, a5

C                   0:      60812 vrf\[ 8]=\[fffffffffffffffffffffffffffc0000]\[ffff]



*SHA1:: fb9aaf434eb33089f6868d10d598d8076f628954*
*Config::* coreip_p670
*Waves::* verif03:scratch/abhishekk/vector_debug/rat_0034/federation/builds/coreip_p670/sim/rerundir1/rerun.outline/rat_default_T_0034/rat/default
*Rerun.outline::*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.tag_array_.*ext,1,0,32:.*\\.data_arrays_0_.*ext,1,0,32:.*\\.syssram.*ext,1,0,32:.*\\.island.*\\.lim\\.syssram.*ext,1,0,32:.*\\.tagged_tables_0_.*ext,1,0,32:.*\\.base_table_0_.*ext,1,032""
  ],
  ""subdir"": ""rat_default_T_0034"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1224041750
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Abhishek Kumar,David Kravitz,,,,,,,,,,,,,,620ee634a715c6006914e852,5fd15143b4a74900763834e0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2565,MAL-2554,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb --rundir=rerundir1 --local,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i0118n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,46:46.9,"14/Sep/22 7:46 AM;5fd15143b4a74900763834e0;[~accountid:620ee634a715c6006914e852], does that commit hash have Andrew Hanselman’s fixes for the mask-producing instructions (MAL-2554 and MAL-2565)? It can be related if there was one earlier in the trace. Just trying to narrow down possibilities before I investigate.",15/Sep/22 12:28 AM;620ee634a715c6006914e852;The test is passing on the latest master (which already has the fix given in MAL_2554 and MAL-2565). we can resolve this issue now,"15/Sep/22 3:04 AM;620ee634a715c6006914e852;This also holds true for the error : [https://simscope.internal.sifive.com/sigs/703/cmrob3od1g3u|https://simscope.internal.sifive.com/sigs/703/cmrob3od1g3u]

It is passing with the latest master",15/Sep/22 4:48 AM;5fd15143b4a74900763834e0;Closing as duplicate of MAL_2554 and MAL-2565.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]:: Assertion::  make sure we don't match tag on a source that's marked ready,[TGV]:: Assertion::  mismatch tag ,Execution Unit (VexPipe),Issue Queue,,,MAL-2610,125677,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Andrew Hanselman,609d7e1f5998a6006800dcc5,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,9/14/2022 2:33,9/15/2022 9:04,9/28/2022 0:51,9/15/2022 9:04,,,,,,,,,,,Panda DR,,TGV_RTL/RDU,TGV_RTL/VEX,,,,,,,,0,TGV,,,"*Error:*

Error: ""/scratch/naverath/sep-14/federation/builds/coreip_p670/verilog/design/SiFive_IssQEntry_124.sv"", 685: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.issueQueues_1.entries_3: at time 1192902500 ps
assert failed (verification library): make sure we don't match tag on a source that's marked ready  @\[MallardUtil.scala 605:20]
Fatal: ""/scratch/naverath/sep-14/federation/builds/coreip_p670/verilog/design/assertions/SiFive_IssQEntry_124_assert.sv"", 169: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.issueQueues_1.entries_3.SiFive_IssQEntry_124_assert: at time 1192902500 ps

*SHA1::* beee1929d2319bbb068ac8ae7bc001ae91f878b8
*Config::* coreip_p670
*Waves::* gamma25:://scratch/naverath/sep-14/federation/builds/coreip_p670/sim/sim/rat.outline/rat_default_T_0525/rat/default/waves.fsdb
*rerun. Outline::* outline copy into: /work/nicolasb/tgv_bug_outlines/rat/MAL-2610.outline

*Debug-Info::*
Last retired instruction::

C0:      59520 \[1] pc=\[00000000800068a8] W\[f10=ffffffff00003500]\[1] R\[r 8=000000008000c5d8] R\[r 0=0000000000000000] inst=\[00003448] c.fld   fa0, 168(s0)

Here looks like problematic Gid is 0x13a and Corresponding trace for this Gid is::
800068aa:	0a847653          	fsub.d	fa2,fs0,fs0
800068ae:	cdc60613          	addi	a2,a2,-804 # 8000c578 <fromhost+0x38>
800068b2:	3a874057          	vslideup.vx	v0,v8,a4
",Andrew Hanselman,David Kravitz,Naveen Rathore,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,5fd15143b4a74900763834e0,6235105a3eacc50071ff07ec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,15/Sep/22 9:03 AM;ug:03c2888a-5ac7-445d-b700-4a271a824946;image-20220915-154229.png;https://sifive.atlassian.net/secure/attachment/77723/image-20220915-154229.png,,,,,,,,,,,,,,,,beee1929d2319bbb068ac8ae7bc001ae91f878b8,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,50fa9a945a46f96b1d3b19e03b059ecdb763a096,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i0116v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,45:18.3,"14/Sep/22 7:45 AM;5fd15143b4a74900763834e0;[~accountid:6235105a3eacc50071ff07ec], does that commit hash have Andrew Hanselman’s fixes for the mask-producing instructions (MAL-2554 and MAL-2565)? It can be related if there was one earlier in the trace. Just trying to narrow down possibilities before I investigate.","14/Sep/22 8:27 PM;6235105a3eacc50071ff07ec;Hi [~accountid:5fd15143b4a74900763834e0] 
Yes it is having Andrew fixes in this git commit hash.","15/Sep/22 7:34 AM;5fd15143b4a74900763834e0;[~accountid:609d7e1f5998a6006800dcc5], even though this commit has your fixes, it still looks suspicious to me. The uop in this issue queue entry is the 2nd (of what should be 4) from this instruction

{noformat}    800068bc:	af002057          	vnmsub.vv	v0,v0,v16{noformat}

Architectural {{v1}} is mapped to prIdx 0x0. The instruction producing {{v0}}-{{v3}} is probably

{noformat}    800068b2:	3a874057          	vslideup.vx	v0,v8,a4{noformat}

so it could also be a permute problem.

Can you please check it out? Waves/disassembly/etc are in {{davidk2@gamma13:/scratch/verif/davidk2/MAL-2610/builds/coreip_p670/sim/sim/MAL-2610.outline/rat_default_T_0525/rat/default}}","15/Sep/22 9:03 AM;609d7e1f5998a6006800dcc5; This is a duplicate of [https://sifive.atlassian.net/browse/FED-2188|https://sifive.atlassian.net/browse/FED-2188|smart-link] where permutation tag broadcast was statically signaling tagID of the Main VRF (v1-v31). It’s passing with the fix PR from that JIRA.

!image-20220915-154229.png|width=2213,height=859!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]:: COSIM VS RTL WRDST MISMATCH for vrgatherei16.vv,[TGV]:: COSIM VS RTL WRDST MISMATCH ,Execution Unit (VexPipe),Vector ,,,MAL-2609,125648,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Nicolas Brunie,6065017e90e3950069cf01c5,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,9/13/2022 22:40,9/16/2022 12:02,9/28/2022 0:51,9/14/2022 17:02,,,,,,,,,,,,,TGV_RTL/RDU,TGV_RTL/VEX,,,,,,,,0,TGV,,,"*Error::*

\[COSIM-ERROR]\[0] COSIM VS RTL WRDST MISMATCH
\[COSIM-ERROR]\[0] COSIM VS RTL WRINFO MISMATCH
\[COSIM-ERROR]\[0] m_dut_inst_item: \[80843] InstInfo: VLD=1 | PC=0x00000000800078d2 | INSN=0x3b880057 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r1=0x0f0f_0f0f_0f0f_7dd1_dada_dada_dada_dada mask=0000ffff en=true r3=0xdada_dada_dada_dada_0000_0000_0000_0000 mask=0000ffff | READY=1 | CSR_TIMER=80843 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x000000008000b160 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=24 | SEW=8 | LMUL=m4 | VSEGELT=0
\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x00000000800078d2 | INSN=0x3b880057 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r0=0xdada_dada_dada_dada_0000_0000_0000_0000 mask=0000ffff en=true r1=0x0f0f_0f0f_0f0f_7dd1_dada_dada_dada_dada mask=000000ff
\[COSIM-ERROR]\[0] m_dut:  en=true r1=0x0f0f_0f0f_0f0f_7dd1_dada_dada_dada_dada mask=0000ffff en=true r3=0xdada_dada_dada_dada_0000_0000_0000_0000 mask=0000ffff
\[COSIM-ERROR]\[0] m_sim:  en=true r0=0xdada_dada_dada_dada_0000_0000_0000_0000 mask=0000ffff en=true r1=0x0f0f_0f0f_0f0f_7dd1_dada_dada_dada_dada mask=000000ff

*SHA1::* beee1929d2319bbb068ac8ae7bc001ae91f878b8
*Config::* coreip_p670
*Waves::* gamma25:://scratch/naverath/sep-14/federation/builds/coreip_p670/sim/sim/rat.outline/rat_default_T_0058/rat/default/waves.fsdb
*rerun. Outline::* outline copy into: /work/nicolasb/tgv_bug_outlines/rat/MAL-2609.outline


*Outline::*

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": \[
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+MEM_ERROR_INJECT=._\.tag_array_.ext,1,0,32:._\.data_arrays_0_._ext,1,0,32:._\.syssram._ext,1,0,32:._\.island.\.lim\.syssram._ext,1,0,32:._\.tagged_tables_0_._ext,1,0,32:._\.base_table_0_.*ext,1,032"",
""+verbose""
],
""subdir"": ""rat_default_T_0058"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 2879896008
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))

*Debug-Info::*
Looks like prfMap_0 pointing to r3 instead of r1 and Later it leads to update to r3 register at retire time.

!image-20220914-053958.png|width=1829,height=708!",Naveen Rathore,Nicolas Brunie,,,,,,,,,,,,,,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13/Sep/22 10:40 PM;ug:00e334db-2e60-4fae-a5b5-d5d39244fe5c;image-20220914-053958.png;https://sifive.atlassian.net/secure/attachment/77611/image-20220914-053958.png,,,,,,,,,,,,,,,,beee1929d2319bbb068ac8ae7bc001ae91f878b8,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/50fa9a945a46f96b1d3b19e03b059ecdb763a096,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i0110f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,02:29.7,"14/Sep/22 5:02 PM;6065017e90e3950069cf01c5;I think this is a duplicate of [https://sifive.atlassian.net/browse/FED-2188|https://sifive.atlassian.net/browse/FED-2188|smart-link]  fixed by [~accountid:600773dcee80bd006f750bba] , 

When I apply the [fix|https://github.com/sifive/federation/commit/50fa9a945a46f96b1d3b19e03b059ecdb763a096], the test passes, and the reported git commit was (one) before Warren’s fix.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: out-of-order replay before Fence untrains HWPF,,,,,,MAL-2608,125637,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,9/13/2022 19:47,9/23/2022 10:07,9/28/2022 0:51,9/14/2022 17:06,,,,,,,,,,,,,RTL/HWPF,RTL/LSU,,,,,,,,0,,,,"Our ""TwinJet"" and Large-Stride HWPF engines need training loads to be executed in-order. I'm seeing a scenario where LSU replays for LoadQ/MSHR fullness right before an in-order instruction (like a {{fence}}) cause a repeat replay, causing out-of-order execution and eventually the HWPF to un-train in what should be a simple in-order workload (the load addresses should all be ready well ahead of time).

I found this while working on [https://sifive.atlassian.net/browse/MAL-1638|https://sifive.atlassian.net/browse/MAL-1638|smart-link].  The scenario has three instructions: load A, load B to the next stride, and Fence.

# load A replays due to LoadQ/MSHR full capacity
# load B and Fence replay due to older-in-order-replay
# load A re-issues behind the replaying Fence, replaying again due to {{iss_olderInOrderReplay}}
# load B re-issues but does not replay, causing the HWPF to un-train
# load A finally re-issues",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,MAL-1638,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1621,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Load/Store,Prefetch,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-14T21:04:18.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/26097,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i010xz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26097/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] testing mask agnostic policy across all insns supported by VEX,,,,,,MAL-2607,125610,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Shaka Kao,5f94696c29bd8a006f94f0e1,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/13/2022 15:13,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2606,,,VI-8283,VI-8305,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2606,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i010s7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Various item required to close VEX/MU design and not fitting in other categories,,,,,,MAL-2606,125609,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/13/2022 15:11,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2607,MAL-1926,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-1,,[TGV] VEX/MU milestone - miscellaneous items ,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,dark_grey,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i010rz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
support of uops/tag replay in TGV vector execution pipeline,,,,,,MAL-2605,125608,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/13/2022 15:07,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2206,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-4,,[TGV] VEX/MU milestone - support of uops/tag replay in VexPipe,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,dark_blue,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i010rr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
high priority technical debt for TGV vector execution pipeline,,,,,,MAL-2604,125607,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/13/2022 15:02,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,MAL-2542,MAL-2388,MAL-2220,MAL-2389,MAL-2374,MAL-1626,MAL-1749,MAL-2139,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-9,,[TGV] VEX/MU miletone - VexPipe tech debt,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,orange,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i010rj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV][RVV 7.8] Wakeup segmented load uops in BalerIssQ after data are all written to LTB,,,,,,MAL-2602,125562,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,9/13/2022 9:12,9/16/2022 12:02,9/28/2022 0:51,9/14/2022 9:46,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"Implement the wakeup logic for segmented load. The flow is look like this

# When LSU established segmented LTB, set the {{segLock}} bit to true to all the allocated entries.
# When segmented load uops are dispatched to BalerIssQ, the LTB tag will be set with {{uopID=0}}
# If {{segLock}} is true, LTB entry will not set {{ltbWake_LDR}} if it received all the data.
# After LTB received the last data write to the segmented LTB entry group (same gid), these entrys' {{segLock}} will be set to false.
# In the next cycle, wakeup all the segmented uops in BalerIssQ with the same gid by asserting {{ltbSegWake}}. (wake tag is set to {{uopID=0}}, see 2.)

LTB PRA logic is also tuned to support the segmented load

# If the LTB PRA read request has {{isSeg}} tagged, it only matches {{gid}} and not {{uopID}} in LTB entries
# If {{segLock}} is true in the LTB entry, set the read response to false, because LTB is yet to receive all the data for segmented load



The outilne to check the basic functionality of segmented load wakeup

*vlseg2e.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vlseg2e_v"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Brad Wu,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,,,,,,,,,,,62103777eb2978006893b778,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2403,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,"{repository={count=5, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":5,""lastUpdated"":""2022-09-16T10:47:03.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":5,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2403,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,100,,,,,,,,,,,,,,,2|i010hj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion Failed: ROB cmplCnt underflow on entry 20,[TGV] Assertion Failed: ROB cmplCnt underflow,Scalar ROB,,,,MAL-2601,125547,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Cannot Reproduce,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,9/13/2022 7:59,9/16/2022 8:39,9/28/2022 0:51,9/14/2022 14:29,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"We see the below assertion from ROB block 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_214_test_fails/federation/builds2_cherry/coreip_u8_minimal_vector/verilog/design/SiFive_ROB.sv"", 4192: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob: at time 26602042500 ps
assert failed (verification library): ROB cmplCnt underflow on entry 20  @[ROB.scala 648:11]

Fatal: ""/scratch/ishitashah/tgv_regression/sign_214_test_fails/federation/builds2_cherry/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", 636: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert: at time 26602042500 ps{noformat}

The last instruction executed is the load instruction *ld      t1, -1628(t1)* there was a call to the exception handler. The assertion is seen while executing the handler snippet.

{noformat}call_handle_trap_exception_mac():
    80000548:	00000697          	auipc	x13,0x0
    8000054c:	01068693          	addi	x13,x13,16 # 80000558 <addr_0_77_handle_exception_mac>
    80000550:	0006b683          	ld	x13,0(x13)
    80000554:	00c0006f          	j	80000560 <addr_0_77_handle_exception_mac_end>

0000000080015b58 <handle_exception_mac>:
handle_exception_mac():
    80015b58:	          711d                	addi	x2,x2,-96
    80015b5a:	          ec86                	sd	x1,88(x2)
{noformat}

 *SHA:* 1855181

*config:* coreip_u8_minimal_vector

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0238"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2065118744
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Dumppath 

{{gamma25:/scratch/ishitashah/tgv_regression/sign_214_test_fails/federation/builds2_cherry/coreip_u8_minimal_vector/sim/rerundir1_rob/rob_rerun.outline/sting_StingSiFiveTuple_T_0238/sting/sifive/vector/vector_tgv_dev.conf}}

Asm File

{{gamma25:/scratch/ishitashah/tgv_regression/sign_214_test_fails/federation/builds2_cherry/coreip_u8_minimal_vector/sim/rerundir1_rob/rob_rerun.outline/sting_StingSiFiveTuple_T_0238/sting/sifive/vector/vector_tgv_dev.conf/asm.txt}}",David Kravitz,Ishita Shah,Josh Smith,,,,,,,,,,,,,5fd15143b4a74900763834e0,607e26355431a500701f5aed,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i010e7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,59:33.8,14/Sep/22 2:29 AM;607e26355431a500701f5aed;I tried cherry-picking [https://github.com/sifive/federation/commit/9f13bd5ca5c6f9dc59fcfefb2ba7cc33a8d3ac06|https://github.com/sifive/federation/commit/9f13bd5ca5c6f9dc59fcfefb2ba7cc33a8d3ac06|smart-link]  Disabling perm engine. But I still see the failure.,"14/Sep/22 8:59 AM;5fd15143b4a74900763834e0;Thanks, I will try to look at it again today, but if some of the signals are missing, it will be difficult to pin down.","14/Sep/22 2:29 PM;5fd15143b4a74900763834e0;I was looking forward to figuring this out, but when I reran with a newer clone (64f4a9e0f4a134f6f2758a3416aa99e288a8f937), the outline passed. Going to close this as not reproducible for now. Feel free to file again once the regression latency has been reduced to a reasonable delay.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Properly handle pre-`vstart` data as if mask-undisturbed in Baler,,,,,,MAL-2600,125543,122846,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/13/2022 7:42,9/22/2022 23:29,9/28/2022 0:51,9/16/2022 20:37,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2398,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-16T20:36:30.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/76a08d049e9a6f3a74f302052018b7958df34944,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i010db:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26057/files],,,,,,,,,,,,,,13/Sep/22 7:43 AM;6065017e90e3950069cf01c5;Not sure the parent task is correct as this task will handle data after {{vstart}} has been modified,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,122846,TGV: load/store faults vstart,Done
[TGV] Correlation: Reduction failure,[TGV] Correlation: Reduction failure,,,,,MAL-2594,125487,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Ian Chuang,61aaae1d9615eb006f5ff922,Ian Chuang,61aaae1d9615eb006f5ff922,9/12/2022 23:02,9/27/2022 6:03,9/28/2022 0:51,9/21/2022 7:13,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Failing tests*

Some vector reduction microbenchmarks fail with the nonspecific error message. For example, 

* 0080202 vfredmaxvs_e16_m8_vlmax
* 0080225 vfwredosumvs_e16_m8_vlmax
* 0080270 vwredsumvs_e8_m8_vlmax

The list of the workload ID of the failed cases 

{noformat}0080/202
0080/206
0080/210
0080/214
0080/225
0080/227
0080/229
0080/231
0080/264
0080/266
0080/268
0080/270{noformat}

*Federation SHA*

fb9aaf434eb33089f6868d10d598d8076f628954

*Error messages*

{noformat}top.sifive_test_results_pkg.report_status.unnamedblk2@(t=96649): FAILED: Test Result Registered Name [top.TestDriver.testHarness.i_TF] Index ID [4] Done [1] Success [0] Exit Code [2]
top.sifive_test_results_pkg.report_status@(t=96649): done:          2, registered:          2, success:          1
[96000] %Error: TestDriver.sv:451: Assertion failed in top.TestDriver.run_phase
%Error: /scratch/jenkins/archived-builds/performance-regression/score_guard_pcs/524/vsrc/sim/common/../TestDriver.sv:451: Verilog $stop
Stopping...
C                   0:      11803 [1] pc=[00000000800008e2] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00000001] DASM(00000001)
C                   0:      11803 [1] pc=[00000000800008e4] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[0000bffd] DASM(0000bffd)
[SetCurrentPhase][de] Name: shutdown_e Val: 5
*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 47825 simulation cycles (in top.TestDriver.report_phase_actions)
*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 47825 simulation cycles (in top.TestDriver.report_phase_actions){noformat}

*Reproducing*

To reproduce bugs, please follow the following steps in your Federation clone:

# Replace the {{checkpoint_list}} in {{$FEDERATION/test-outlines/sparta-checkpoint.outline}} with the following list: 
{noformat}checkpoint_list = %w[ 
0080/202 
0080/206 
0080/210 
0080/214 
0080/225 
0080/227 
0080/229 
0080/231 
0080/264 
0080/266 
0080/268 
0080/270 
]{noformat}
# Run the sitest as normal but with the outline
{{./sitest @../../../test-outlines/sparta-checkpoint.outline +verbose}}",David Kravitz,Ian Chuang,Nicolas Brunie,Zhen Wei,,,,,,,,,,,,5fd15143b4a74900763834e0,61aaae1d9615eb006f5ff922,6065017e90e3950069cf01c5,5e49f622a17f930c9b94b6cd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,sitest @/scratch/yorkm/wspace/fed/software/tests/vector_bw/vector_bw.outline --wave=fsdb,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i0101r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,35:47.7,13/Sep/22 2:15 AM;61aaae1d9615eb006f5ff922;I am checking the program since I see the core is trapped into the exception handler. Hold on to dive into the bug investigation on the design. ,16/Sep/22 10:35 AM;6065017e90e3950069cf01c5;Any update on your exception investigation [~accountid:61aaae1d9615eb006f5ff922]  ?,"19/Sep/22 2:47 AM;61aaae1d9615eb006f5ff922;I saw accesses to invalid address space, which causes being trapped in an exception handler. I’ve already had a fix but am still seeing errors there. 

I will continue working on the investigation though. ","19/Sep/22 7:44 AM;6065017e90e3950069cf01c5;Thank you [~accountid:61aaae1d9615eb006f5ff922] , Let us know when you think you have reached what looks like a RTL bug.",20/Sep/22 9:06 PM;61aaae1d9615eb006f5ff922;The exception is still present after I fixed an address offest bug. [~accountid:6065017e90e3950069cf01c5] [~accountid:5e1a4f5ec578120daca5ff8e] would you have a chance to look into this? ,20/Sep/22 9:09 PM;6065017e90e3950069cf01c5;I can try to look at this tomorrow. could you give more information on the exception you are seeing ?,"20/Sep/22 11:05 PM;61aaae1d9615eb006f5ff922;I suspect the vector load whole register triggers the exception. 
{{80000c46:   02828487            vl1r.v  v9,(t0)}}",21/Sep/22 5:23 AM;5fd15143b4a74900763834e0;The whole-vector load and store instructions have their own category in the RVV spec (7.9 and not 7.4 with the other unit-stride ops) and are not implemented yet. You should not be running those for the time being.,"21/Sep/22 7:11 AM;5e49f622a17f930c9b94b6cd;Yeah we hadn’t seen the RTL Milestone sheet when I was writing the test generator, so I mis-used the instruction for initializing testing data into vector registers. We’ll get this done in the other way. I’m going to close this ticket for now – and will hand over the new generated tests to DV team before we do correlation. Sorry for the false alarm [~accountid:6065017e90e3950069cf01c5] [~accountid:5fd15143b4a74900763834e0] [~accountid:5e1a4f5ec578120daca5ff8e].","21/Sep/22 7:13 AM;5e49f622a17f930c9b94b6cd;The simulation failures were not caused by reduction instructions, confirmed by Ian. Will fix the tests and hand over them to DV team before new round of correlation.","21/Sep/22 7:48 PM;61aaae1d9615eb006f5ff922;The sim failure is caused by the vector load whole register but not reduction instructions for sure. 

We can close this ticket, and you can refer to it when you will be verifying vector load whole register instructions. ",21/Sep/22 9:09 PM;6065017e90e3950069cf01c5;Thank you for looking into it [~accountid:61aaae1d9615eb006f5ff922] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Review number of RHF and ROB clock regions,,,,,,MAL-2592,125443,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Won't Do,Wenxiang Ding,630025328cdffa3a9a2b5ca9,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,9/12/2022 16:59,9/21/2022 9:36,9/28/2022 0:51,9/19/2022 14:51,,,,,,,,,,,,,Power,RTL/RDU,,,,,,,,0,,,,"Currently the RHF and the ROB both have a parametrizable number of clock gating regions.  However, the default is that the RHF has 2 regions and the ROB has 4 regions.  For P650 we can probably be more power efficient with more clock gating regions because the RHF and the ROB have a large number of entries (192 RHF entries and 160 ROB entries).

We should do some PowerArtist experiments with increasing the number of regions in the RHF and ROB to see if we can reduce power even more.",Josh Smith,Wenxiang Ding,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,630025328cdffa3a9a2b5ca9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,19/Sep/22 3:13 PM;4d95f112-6430-4a88-a66f-ff5c8ee51ed7;P650_ROB-RHF-Power VS Clock Gating Regions_Result (2b42cbae-a2f8-4d31-b705-bff3811f1ed6).txt;https://sifive.atlassian.net/secure/attachment/77913/P650_ROB-RHF-Power+VS+Clock+Gating+Regions_Result+%282b42cbae-a2f8-4d31-b705-bff3811f1ed6%29.txt,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00zsf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,2,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,03:02.8,"16/Sep/22 12:03 PM;630025328cdffa3a9a2b5ca9;PowerArtist Experiments Result:

[^P650_ROB-RHF-Power VS Clock Gating Regions_Result (2b42cbae-a2f8-4d31-b705-bff3811f1ed6).txt]

||*ROB - Clock Gating Region Number*||*Total Power (mW)*||
|4|7.624|
|8|7.616|
|16|7.669|

||*RHF - Clock Gating Region Number*||*Total Power (mW)*||
|2|1.824|
|4|1.781|
|8|1.772|",19/Sep/22 2:51 PM;630025328cdffa3a9a2b5ca9;The benefit is too small. Not change for now.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Improve signal naming and clock gating in MapTable,,,,,,MAL-2591,125441,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Wenxiang Ding,630025328cdffa3a9a2b5ca9,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,9/12/2022 16:27,9/23/2022 7:31,9/28/2022 0:51,,,,,,,,,,,,,,Power,RTL/RDU,,,,,,,,0,,,,"There are a handful of pipeline registers inside of the {{MapTable}} class that end up getting unhelpful signal names in the generated verilog.

For example:

{noformat}  io.mapReq_DIS  := (enable_DIS zip io.mapReq_REN).map{ case (e, r) => RegEnable(r, e) }
  io.mapResp_DIS := (enable_DIS zip   mapResp_REN).map{ case (e, r) => RegEnable(r, e) }{noformat}

Leads to verilog such as:

{noformat}    r_srcValid_0 <= enable_DIS_0 ? io_mapReq_REN_0_srcValid_0 : r_srcValid_0;	// @[MapTable.scala:125:40, Reg.scala:19:16, :20:{18,22}]
    r_srcValid_1 <= enable_DIS_0 ? io_mapReq_REN_0_srcValid_1 : r_srcValid_1;	// @[MapTable.scala:125:40, Reg.scala:19:16, :20:{18,22}]
    r_srcValid_2 <= enable_DIS_0 ? io_mapReq_REN_0_srcValid_2 : r_srcValid_2;	// @[MapTable.scala:125:40, Reg.scala:19:16, :20:{18,22}]
    r_srcARIdx_0 <= enable_DIS_0 ? io_mapReq_REN_0_srcARIdx_0 : r_srcARIdx_0;	// @[MapTable.scala:125:40, Reg.scala:19:16, :20:{18,22}]
    r_srcARIdx_1 <= enable_DIS_0 ? io_mapReq_REN_0_srcARIdx_1 : r_srcARIdx_1;	// @[MapTable.scala:125:40, Reg.scala:19:16, :20:{18,22}]
    r_srcARIdx_2 <= enable_DIS_0 ? io_mapReq_REN_0_srcARIdx_2 : r_srcARIdx_2;	// @[MapTable.scala:125:40, Reg.scala:19:16, :20:{18,22}]
    r_destValid_0 <= enable_DIS_0 ? io_mapReq_REN_0_destValid_0 : r_destValid_0;	// @[MapTable.scala:125:40, Reg.scala:19:16, :20:{18,22}]
    r_destARIdx_0 <= enable_DIS_0 ? io_mapReq_REN_0_destARIdx_0 : r_destARIdx_0;	// @[MapTable.scala:125:40, Reg.scala:19:16, :20:{18,22}]
    r_destPRIdx_0 <= enable_DIS_0 ? io_mapReq_REN_0_destPRIdx_0 : r_destPRIdx_0;	// @[MapTable.scala:125:40, Reg.scala:19:16, :20:{18,22}]{noformat}

We should modify the chisel source so that the verilog signal names are more helpful/recognizable. We can probably use the {{.suggestName()}} chisel API.

Also, we don’t precisely enable the DIS stage flops internal to the MapTable.  For example, each instruction has 3 source lookups (on the Integer side), but not all instructions need all 3 sources.  We should optimize the clock enables for the DIS stage flops so that we don’t load them for unneeded sources.",Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-15T14:16:41.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,,,,,,,,,,,,,,,,2|i00zrz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,3,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
Work around extra 2:1 mux for out-of-bounds array accesses in PRF/PRA,,,,,,MAL-2590,125440,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Julian Bailey,629ab2a89bc7150068d00cdf,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,9/12/2022 16:17,9/27/2022 6:38,9/28/2022 0:51,,,,,,,,,,,,,,RTL/FEX,RTL/IEX,Timing,,,,,,,0,,,,"Right now with SFC and MFC, chisel array accesses to arrays which are not powers-of-2 will include an extra 2:1 mux to return element 0 when the read index is out-of-bounds.

For example in the PRF:

{noformat}  io.readData := io.bankData(entryIndex) & Fill(pp.xLen, bankRdMask){noformat}

Yields verilog like so when {{bankData}} has, for example, 52 entries:

{noformat}  assign io_readData = (entryIndex > 6'h33 ? io_bankData_0 : _GEN_0) & {64{bankRdMask}};	// @[Bitwise.scala:77:12, PRF.scala:187:42, Reg.scala:19:16]{noformat}

This is especially bad on things like the PRF read ports because those tend to be really congested and timing critical.

My understanding is that this extra 2:1 mux is inserted by the FIRRTL compiler (SFC or MFC) due to legacy reasons, and wholesale removing it causes simulation failures in some designs.  This will probably require eventual updates to the design so we can remove it from MFC.

In the meantime, we should work with the CIRCT team to see if there’s some way we can perhaps annotate the chisel in specific critical spots to prevent MFC from inserting these muxes.",Josh Smith,Julian Bailey,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2418,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00zrr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,04:54.0,"13/Sep/22 1:04 AM;629ab2a89bc7150068d00cdf;No problem, who on the CIRCT team should I contact?

Nevermind, I have gone for the CIRCT slack channel ","13/Sep/22 7:45 AM;629ab2a89bc7150068d00cdf;{quote}A link to the relevent discussion in slack
[https://sifive.slack.com/archives/C017XQGLZ41/p1663057003108659|https://sifive.slack.com/archives/C017XQGLZ41/p1663057003108659|smart-link] 


Andrew Lenharth:
There is a strong desire from  designers that firrtl not introduce constructs which can introduce 'x' in the resulting code.  An out-of-bounds access does that, which is why traditionally there is a guard.  If you are going to assert that a particular access is safe, you have to be able to prove this even for power-on pre-reset behavior with both x-initialized registers and randomly initialized registers.Generally, the extend the mux to a power of two is a lower-critical path, but potentially larger solution.  From work with synthesis engines, there are some interesting interactions with using mux-cells, but for the default code-generation case, this doesn't matter too much.  The PPA studies [@Michael Ruff|https://sifive.slack.com/team/U038LRLK7QA] and Hideto and I did seem to say we can do the power-of-two extension rather than the bounds check and be usually better off.

This is a code generation issue.  The existing codegen was done for SFC compatibility, but now that the firrtl spec has been clarified and PPA studies are done, the compiler should do this for you.  We were waiting to do this change until things settled down as what value you extend the mux with affects existing (buggy) code which depends on particular out-of-bounds behavior.  If you are willing to sigh up to track down and fix those simulation failures, we can fix this behavior in the next release (this Friday?  next week at the latest).{quote}","13/Sep/22 7:50 AM;629ab2a89bc7150068d00cdf;Temporary plan of action:


# Try running synthesis on the IEX PRF as-is
# Manually extend the array and try running synthesis again
# What I’d also like to see would probably be hacking the verilog to just do what I’m asking for, and see if it’s better in any way compared to 2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
Improve clock gating in Fetch Queue,,,,,,MAL-2589,125437,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Ankit Berde,62ed7a25d49df231b6289198,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,9/12/2022 15:30,9/21/2022 13:59,9/28/2022 0:51,,,,,,,,,,,,,,Power,RTL/Frontend,,,,,,,,0,,,,"Currently the fetch queue uses a simple {{AltQueue}}, which doesn’t allow for different clock enables on different parts of the data.  Since the P650 fetch width is 24 Bytes, there’s a large amount of flops dedicated to the instruction opcodes.  However, we don’t always fetch the maximum of 24 Bytes in each fetch group.

We should modify the fetch queue to be able to have different clock enables for different parcels (chunks of 2 Bytes) of opcodes, and make use of the {{validMask}} and {{killMask}} parts of the {{FetchGroup}} to more tightly control the clock enables.  This would likely mean creating a new {{FetchQueue}} module instead of using one of the library Queue classes.",Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00zrb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,5,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] factoring vlMask as byteMask before local bitmask expansion,,,,,,MAL-2588,125432,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/12/2022 14:35,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"[https://github.com/sifive/federation/pull/26022#discussion_r968761261|https://github.com/sifive/federation/pull/26022#discussion_r968761261]

An expanded {{vlMask}} bitmask is used in a lot of places in the execution pipeline. It should be factorize as a byte-mask (expanded based on {{vsew}}) and expanded locally in each unit to a bitmask, this way the number of interface wires in most modules would be reduced.",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,MAL-2623,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00zq7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Mallard IFU will continuously replay transaction if TLB miss occurs and PTW interface is not ready,,,,,,MAL-2587,125431,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Ankit Berde,62ed7a25d49df231b6289198,Adam George,61b2a458657a0500706b9c39,Adam George,61b2a458657a0500706b9c39,9/12/2022 14:11,9/22/2022 14:57,9/28/2022 0:51,,Panda DR,,,,,,,,,,,,Power,RTL/Frontend,,,,,,,,0,,,,"While debugging a different failure I noticed the IFU was not idling after a TLB miss. If the table walk interface is not ready the cycle after a miss occurs in F2, the FSM in TLB_Mallard.scala stays in the {{s_request}} state. In this state asserting the {{kill}} port on the TLB module resets the FSM to idle, which in turn clears the F0 stall control allowing fetching to resume before the table walk response. 
The {{kill}} signal is coded to always be asserted, unless F2 is valid. It's not quite clear how this logic is supposed to work yet.

This does not appear to have any functional impact however it does impact power consumption as the data array is always accessed in F1. Additionally there is a possible 4-cycle perf impact depending on the alignment of the ptw.req.ready signal and the TLB state.",Adam George,John Ingalls,Josh Smith,,,,,,,,,,,,,61b2a458657a0500706b9c39,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12/Sep/22 2:12 PM;ug:01650d64-a562-4979-b0d5-81324bf03bd0;tlb_miss_activity.png;https://sifive.atlassian.net/secure/attachment/77479/tlb_miss_activity.png,,,,,,,,,,,,,,,,74b232fdd6140f0f883ccbcc03bc248aa3c3b8ba,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Inspection,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00zpz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingCSRTuple_T_0009"",
  ""subtest"": ""valtrix/csrs/hypervisor/vsatp/vsatp_uacc_illegal.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1484172013
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",3,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,35:32.9,12/Sep/22 2:35 PM;5acffeafaa802f2a797a955c;Just a reminder to tag stuff like this with the {{Power}} component label.,"13/Sep/22 2:30 PM;5acffeafaa802f2a797a955c;Which test were you running when you saw this?  It would be good to know that so we can reproduce this issue.  I’m not sure if we’d hit this that much in random testing, or it might take a while to find a test to use.","13/Sep/22 3:18 PM;61b2a458657a0500706b9c39;A testcase outline with the failure is in the ‘Bug Info’ tab.
I’ve also copied it to gamma10:/scratch/verif/adamg/testcase/MAL-2587/

A sting regression of 10 tests should hit this with an appropriate assertion. 
The torture tests never have TLB misses.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] fix IO timing for fcsr_rm input to TGV's VexPipes,,,,,,MAL-2586,125430,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/12/2022 14:01,9/21/2022 15:12,9/28/2022 0:51,9/16/2022 9:44,,,,,,,,,,,,,Timing,,,,,,,,,0,,,,"From synthesis report: [https://sifive.atlassian.net/wiki/spaces/CIP/pages/2361196550/p670+synthesis+with+Zvfh+support+Sept+6th+2022|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2361196550/p670+synthesis+with+Zvfh+support+Sept+6th+2022|smart-link] 

*Critical path analysis:*

* Path from {{io_fcsr_rm}}(input) to long latency pipeline first stage registers
* -753ps of negative slack ( \! ) 

{noformat}func       #619   #907    io_fcsr_rm*    vex/exPipes_*/llpOutUnMasked_mod/WALLACE_CSA_*UMMY_OP*_groupi\/retime_s*_*_reg      3    -0.753  -0.744 60-61   2.65  2.67    0.0;0.0               {noformat}

This path may appear in this run because of an issue with retiming (poor stage balance), but breaking I/O timing may help retiming overall.

*Hint for optimization:* flop rounding-mode before inputting it to the arithmetic vector units",Brian Grayson,Cody Croxton,David Forbis,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,Michael White,Nicolas Brunie,,,,,,,5e1371705361330daaeaf389,5e1371930242870e996efde2,626058bb60d67c0068d9259c,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2093,MAL-2624,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2639,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-16T08:53:42.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,82f0b4372407bd4b2a96790e4b0c829b1b87d46a,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00zpr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26136/files],,,,,,,,,,,,,34:07.8,"12/Sep/22 2:34 PM;5acffeafaa802f2a797a955c;If {{fcsr_rm}} is just coming from the CSRFile, make sure to use the FEX {{shadowCSR}} module to do this.  Like we did with the FEX chicken bits:

{noformat}  // Shadow CSRs
  val customCSRs = new MallardCustomCSRs
  val fexShadowCSRs: Seq[(Int, UInt, BigInt)] = Seq(
    (customCSRs.chickenCSRId, customCSRs.chickenPlusarg, customCSRs.chickenCSRResetVal),
  )

  mp.allShadowCSRs.appendAll(fexShadowCSRs.map(_._1))

  val shadowCSR = Module(new ShadowCSR(mp = mp, csrList = fexShadowCSRs.map(_._1), resetVal = Some(fexShadowCSRs.map(_._3)), lastStop = false))

  shadowCSR.io.csrWriteIn    := io.fexShadowCSRWriteIn
  shadowCSR.io.plusargIn.get := WireInit(VecInit(fexShadowCSRs.map(_._2)))
  io.fexShadowCSRWriteOut    := shadowCSR.io.csrWriteOut
  
  val chickenBits    = shadowCSR.io.csrData.get(0).asTypeOf(new ChickenCSR)
  val fexChickenBits = chickenBits.FEXChickenBits.asTypeOf(new FEXChickenBits){noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][backlog] LSU: optimize Baler re-wakeup LsIssQ for precise VLTB claim size,,,,,,MAL-2585,125424,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Yohann Rabefarihy,61730c9cbcb57400683f15a6,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,9/12/2022 12:59,9/12/2022 13:16,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"[https://github.com/sifive/federation/pull/25972|https://github.com/sifive/federation/pull/25972|smart-link] added the signal {{ltbFull}} from the VLTB to the LsIssQ for power savings, to avoid replaying and immediately re-issuing, just to find out whether an entry has freed, banging away over and over down the LSTPipe.  But, there will be cases where LTB cannot satisfy a size>1 claim, yet it is not full.  {{ltbFull}} only helps avoid ""banging away"" when the claim size was a single entry.

We could get more precise about this for size>1 claim, only re-issuing when sufficient VLTB entries have freed.",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2192,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2569,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00zof:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,5,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
"[TGV] assert ""LTB entry already in use"" in milestone 7 test","[TGV] assert ""LTB entry already in use""",LSU (Load Store Unit),LTB,,,MAL-2584,125421,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Yohann Rabefarihy,61730c9cbcb57400683f15a6,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,9/12/2022 12:14,9/18/2022 21:34,9/28/2022 0:51,9/18/2022 21:34,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"Seems like an assertion fires when the LTB entry is reallocated, when its already in use. 


{noformat}Error: ""/scratch/verif/srivatsa/milestone7/builds/52fe1c42bf00acdfd9b8dd7cf7ae01da67a66f4e/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LTBEntry_6_assert.sv"", 85: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.bal.ltb.ltbEntries_6.SiFive_LTBEntry_6_assert: at time 2242282500 ps
Assertion failed: LTB entry already in use
    at LoadBuffer.scala:152 assert(!ltbE_entryValid_q, ""LTB entry already in use""){noformat}

previously 7 vle32.v instructions are retired, and 5 vle16.v instructions are in the queue. 

in the instruction list i see

{noformat} 45301b3a:	01000393          	li	t2,16 <----- assertion fires after retire of
 45301b3e:	007282b3          	add	t0,t0,t2

0000000045301b42 <address_alligned_2_15_0_hv_0>:
  45301b42:	0202d807          	vle16.v	v16,(t0)
  45301b46:	0202d807          	vle16.v	v16,(t0) <--- GID 2b of of inst in PC 0x45301b46 is sent to BAL last
  45301b4a:	0202d807          	vle16.v	v16,(t0)
  45301b4e:	0202d807          	vle16.v	v16,(t0)
  45301b52:	0202d807          	vle16.v	v16,(t0)
  45301b56:	42c04537          	lui	a0,0x42c04
{noformat}



To recreate this failure:

# clone federation and checkout the commit 5d753d32704b3fe0409567eeff7734dad7959744
# build coreip_u8_minimal_vector and rerun the test using the outline 
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""t0010"",
  ""subtest"": ""sifive/regress.d/vector/tgv_milestone/vector_tgv_milestone_7_l2.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 4282876139
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""all""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

The generated waves are at the 
{{verif02:/scratch/verif/srivatsa/milestone7/builds/52fe1c42bf00acdfd9b8dd7cf7ae01da67a66f4e/coreip_u8_minimal_vector/sim/sim/milestone_7.outline/t0010/sting/sifive/regress.d/vector/tgv_milestone/vector_tgv_milestone_7_l2.conf}}",David Kravitz,John Ingalls,Srivatsa Yogendra,Yohann Rabefarihy,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,5a938e9c0913194d2d262658,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,,MAL-2569,,,,,,,,,,,,MAL-2558,MAL-2647,MAL-2642,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5d753d32704b3fe0409567eeff7734dad7959744,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=4}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":4,""lastUpdated"":""2022-09-18T20:28:22.000-0700"",""stateCount"":4,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":4,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/26024,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,4,0,,,,100,,,No,,,,,,,,,,,,2|i00znr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26024/files],,,,,,,,,,,,,11:21.2,"12/Sep/22 3:11 PM;5fd15143b4a74900763834e0;Starting at time 2,242,062,500, there are two LMUL=4 claims from the LSU: gid 2a and 2b. The first claims LTB entries 0..3, while the second one claims entries 4..7. So far, so good.

-2 cycles after the first claim, the LSU establishes entries 1 and 2 with gid 2a. What happened to entries 0 and 3?-
Correction: LSU establishes entries 0 and 1, but not 2 and 3. Why not?

After 2 idle cycles (at the LTB), the LSU establishes entries 4..7 with gid 2b. Immediately after those 4 cycles of establish, the LSU tries to establish entry 6 again, this time with gid 2a. That causes the assert.

While entries 4..7 are being established, the tags for gid 2a entries 0 and 1 arrive, followed by data. Should we add an assertion that checks for data arriving to a not-established entry? I can work on that in parallel with the LSU team taking a look at their side of this bug. Assigning to [~accountid:5bb6808b9ba2930990f81895] to start, he can bounce to [~accountid:61730c9cbcb57400683f15a6] if appropriate

Trying to add a little more info here: The issue queue seems to be re-issuing gid=2a, and it seems to kind of know (or maybe gets lucky?) that it’s already established 2 of its entries. As it tries to establish the next two entries, the lsto_vltbClaimedVec_q is still sitting on the claims from gid=2b, and the LSTPipe tries to establish entry 6, which was already established by 2b. Are we getting into _Hamlet_ territory, yet?

Feels like the eqn for lstm_vltbClaimedVec_q needs to keep around a set of claims that have been partially established, but I’m not exactly sure where that should come from. Maybe the answer could be in not interrupting the 2a establish with the 2b establish?","12/Sep/22 8:46 PM;5bb6808b9ba2930990f81895;Yeah, we’ll work on this in [https://github.com/sifive/federation/pull/26024|https://github.com/sifive/federation/pull/26024|smart-link] 

We need to handle the case of a uop replaying _after_ the first uop claimed the VLTB entries. Furthermore, in P670, an op can replay from one LSTPipe then re-issue out-of-order to the _other_ LSTPipe\!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Read request/response between LSU and VMB,,,,,,MAL-2583,125417,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Lance Huang,62aae145188d08006fe3031f,Lance Huang,62aae145188d08006fe3031f,Lance Huang,62aae145188d08006fe3031f,9/12/2022 11:45,9/16/2022 12:02,9/28/2022 0:51,9/16/2022 5:31,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,,,,"Implementation of functionality of 

(1) Mask read request from LST-pipe/ SD-pipe in LSU 

* For LST-pipe: Request must be issued after VMB wakeup LSU issue queue, {{lsIss}} stage
* For SD-pipe: Request would be issued in the {{sdrr}} stage

(2) Response from VMB

* For LST-pipe: Get mask from VMB at the next cycle of request, {{lsrr}} stage 
* For SD-pipe: Get mask at {{sdfp}} stage. Then do bit-per-element ↔︎ byte-mask conversion for store byte-enable generation. Besides, byte-enable at {{sdo}} stage also needs the same mux to select either scalar or vector type data mask

Timing diagram referenced from [https://github.com/sifive/federation/pull/25536|https://github.com/sifive/federation/pull/25536|smart-link], it describes the relationship between LST-pipe/VMB readReq/readResp 

!image-20220913-062635.png|width=1162,height=227!",Lance Huang,Nicolas Brunie,,,,,,,,,,,,,,62aae145188d08006fe3031f,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2212,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12/Sep/22 11:27 PM;ug:0dd24ee2-4861-4b73-a7bf-84811d0e5f03;image-20220913-062635.png;https://sifive.atlassian.net/secure/attachment/77522/image-20220913-062635.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-15T13:28:25.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2212,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00zmv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26028/files],,,,,,,,,,,,,,"13/Sep/22 11:07 AM;62aae145188d08006fe3031f;Proposed by [~accountid:6065017e90e3950069cf01c5] 

Further optimization could be: 

* Move bpe ↔︎ byte-mask LUT from LSU-side to VMB-side. LSU can request mask with uop ID, and get smaller mask data for per uop 
* It could reduce interface data bit width from VLEN to VLENB",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU coverage: AMO replay when LoadQ and StoreQ are full,,,,,,MAL-2582,125409,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,9/12/2022 10:56,9/16/2022 17:14,9/28/2022 0:51,9/12/2022 11:18,,,,,,,,,,,,,Coverage,RTL/LSU,,,,,,,,0,,,,"When both the LoadQ and StoreQ are full, an AMO (Atomic Memory Operation) or SC (Store Conditional) instruction may fail to replay (to retry to claim the LoadQ and StoreQ entry), and thus fail to execute (perform the memory modifying operation) or return data, causing the subsequent dependent instruction to hang.  Instead, the AMO/SC instruction simply falls off the end of the LSTPipe.

I found this by RTL inspection while looking in this area for MAL-2569, so this must be a very rare scenario to have slipped all our simulation, formal, and emulation verification for years.",John Ingalls,Josh Smith,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-50,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-12T22:20:44.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,CAT-B,,Medium,"When both the LoadQ and StoreQ are full, an AMO (Atomic Memory Operation) or SC (Store Conditional) instruction may fail to replay to retry to claim the LoadQ and StoreQ entry, and thus fail to execute (perform the memory modifying operation) or return data, causing the subsequent dependent instruction to hang.",Low,all Mallard cores,,,hang after AMO or SC when LoadQ and StoreQ are full,"Set the LSU Chicken CSR (0x7c2) bit \[52] ""lsIssForceInOrderWaitNonSpec"" to Force In-Order ops to wait before issuing until all older ops are committed and retired (at least from the LoadQ).",,,,,,,,,,,https://github.com/sifive/federation/pull/26021,,,n/a,,,,,,,,,Inspection,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,Yes,,,,,,,,,,,,2|i00zl3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26021/files],,,,,,,,,,,,,11:28.8,"12/Sep/22 11:11 AM;5bb6808b9ba2930990f81895;Edit: nevermind, I was reading my own logic wrong.  We’re good here, but this is a worthwhile coverpoint at least\!",12/Sep/22 11:11 AM;5acffeafaa802f2a797a955c;Should this be a bug instead of a task?,"12/Sep/22 11:16 AM;5bb6808b9ba2930990f81895;It was originally, but nevermind, I got myself worried for no reason, we're good here.  There's nothing wrong, I just got confused in my own logic\!  I'll write coverage for this at least, so this is a task to write coverage, and not a bug.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] refactor vconfig vl/vtype update in scalar ID/REN,,,,,,MAL-2581,125405,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/12/2022 9:50,9/12/2022 9:53,9/28/2022 0:51,,,,,,,,,,,,,,RTL/RDU,,,,,,,,,0,,,,"Following [https://sifive.atlassian.net/browse/MAL-2550|https://sifive.atlassian.net/browse/MAL-2550|smart-link]  it appears that the logic to manage {{vconfig}} {{vl}}/ {{vtype}} update in scalar {{ID}} and {{REN}} is pretty hard to read and understand.

This logic:

* propagates vector config change (within the same stage and between stages)
* patches vector config during rewind (once the {{vset}} color is matched)
* patches vector config for {{vmv<n>r}} instructions (without affecting next decoding stage config)
* …



Suggestion from improvements:

* [~accountid:5acffeafaa802f2a797a955c] [https://sifive.atlassian.net/browse/MAL-2550?focusedCommentId=391192|https://sifive.atlassian.net/browse/MAL-2550?focusedCommentId=391192|smart-link] ",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00zk7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV]:: COSIM VS RTL WRDST MISMATCH for vmsleu.vi(PC=0x8000284c),[TGV]:: COSIM VS RTL WRDST MISMATCH ,,,,,MAL-2580,125350,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Andrew Hanselman,609d7e1f5998a6006800dcc5,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,9/11/2022 23:41,9/16/2022 12:02,9/28/2022 0:51,9/12/2022 14:43,Panda DR,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"*Error::*

\[COSIM-ERROR]\[0] COSIM VS RTL WRDST MISMATCH
\[COSIM-ERROR]\[0] COSIM VS RTL WRINFO MISMATCH
\[COSIM-ERROR]\[0] m_dut_inst_item: \[30468] InstInfo: VLD=1 | PC=0x000000008000284c | INSN=0x720f34d7 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r1=0xffff_ffff_ffff_ffff_ffff_ffff_ffff_fffd mask=0000ffff | READY=1 | CSR_TIMER=30468 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x000000008000ae30 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=16 | SEW=64 | LMUL=m8 | VSEGELT=0
\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x000000008000284c | INSN=0x720f34d7 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r9=0xffff_ffff_ffff_ffff_ffff_ffff_ffff_fffd mask=0000ffff
\[COSIM-ERROR]\[0] m_dut:  en=true r1=0xffff_ffff_ffff_ffff_ffff_ffff_ffff_fffd mask=0000ffff
\[COSIM-ERROR]\[0] m_sim:  en=true r9=0xffff_ffff_ffff_ffff_ffff_ffff_ffff_fffd mask=0000ffff

*SHA1::*  0f9bc9c1462a454ca9120368ba5eb27c177e45a7
*Config::* coreip_u8_minimal_vector
*waves::* gamma25:://scratch/naverath/sep-12/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline_wrdst/rat_default_T_0233/rat/default/waves.fsdb
*Rerun.outline::*  Outline copied to /work/nicolasb/tgv_bug_outlines/rat/MAL-2580.outline


*Outline:*

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": \[
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+MEM_ERROR_INJECT=._\.tag_array_.ext,0,1,32:._\.data_arrays_0_._ext,0,1,32:._\.syssram._ext,0,1,32:._\.island.\.lim\.syssram._ext,0,1,32:._\.tagged_tables_0_._ext,0,1,32:._\.base_table_0_.*ext,0,132"",
""+verbose""
],
""subdir"": ""rat_default_T_0233"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 700168490
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))

*Debug_info::  Here Dest-Register coming as r1 instead of r9*
 Instruction trace::
80002848:	01b076d7          	vsetvli	a3,zero,e64,m8,tu,mu
8000284c:	720f34d7          	[vmsleu.vi|http://vmsleu.vi]	v9,v0,-2


!image-20220912-064047.png|width=1594,height=426!",David Kravitz,Naveen Rathore,Nicolas Brunie,,,,,,,,,,,,,5fd15143b4a74900763834e0,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11/Sep/22 11:41 PM;ug:00e334db-2e60-4fae-a5b5-d5d39244fe5c;image-20220912-064047.png;https://sifive.atlassian.net/secure/attachment/77427/image-20220912-064047.png,,,,,,,,,,,,,,,,0f9bc9c1462a454ca9120368ba5eb27c177e45a7,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00z7z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,20:26.2,12/Sep/22 11:20 AM;5fd15143b4a74900763834e0;This looks like another example of the same root cause as [https://sifive.atlassian.net/browse/MAL-2554|https://sifive.atlassian.net/browse/MAL-2554|smart-link] and [https://sifive.atlassian.net/browse/MAL-2555|https://sifive.atlassian.net/browse/MAL-2555|smart-link] (and others). Will confirm when [~accountid:609d7e1f5998a6006800dcc5] has a branch ready for testing,"12/Sep/22 2:43 PM;5fd15143b4a74900763834e0;Confirmed that the proposed fix for MAL-2554 and MAL-2555 fixes the ""writes wrong register"" problem. There is a later PRA assert, but [~accountid:609d7e1f5998a6006800dcc5] is seeing it in his runs, too.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] TGV mask agnostic & tail elements,[TGV] TGV mask agnostic & tail elements,,,,,MAL-2579,125310,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Showstopper,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Zhiqiang Hao,5d02d411febd110bc78aabc3,Zhiqiang Hao,5d02d411febd110bc78aabc3,9/9/2022 23:18,9/16/2022 12:02,9/28/2022 0:51,9/12/2022 15:58,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"So based on this table, when vta=0, vma=1, only {{Inactive Elements}} is agnostic

!Screen Shot 2022-09-09 at 10.51.53 PM.png|width=440,height=269!

And according to the spec, {{inactive(x) = body(x) && !mask(x)}}
So it seems that the elems in the tail should be leaved as {{undisturbed}}



However in a run with vta=0 & vma=1, I saw a different behavior

{noformat}int main()
{
  asm volatile(""vsetvli x0, %0, e32, m1, tu, ma"" :: ""r""(-1));
  asm volatile(""vmv.v.x v0, %0"" :: ""r""(0x99999999));
  asm volatile(""vmv.v.x v1, %0"" :: ""r""(0xdeadbeef));
  asm volatile(""vmv.v.x v2, %0"" :: ""r""(0x0));
  asm volatile(""vsetvli x0, %0, e8, m1, tu, ma"" :: ""r""(3));
  asm volatile(""vslide1up.vx v2, v1, %0, v0.t"" :: ""r""(0x33));
  return 0;
}{noformat}

So before {{vslide1up.vx}}, v2\[*]=0x0

For vl=3, vta=0 & vma=1, all elems other than first 3 should be undisturbed

However, in TGV:

{noformat}C                   0:       9659 [1] pc=[000000008000082e] W[r 0=0000000000000000][0] R[r15=0000000000000233] R[r 0=0000000000000000] inst=[3817e157] vslide1up.vx v2, v1, a5, v0.t
C                   0:       9657 vrf[ 2]=[00ffff0000ffff0000ffff0000ffff33][ffff]{noformat}

So tail elems is also affected by vma even when vta=0



How to recreate:

Branch: {{zq_vma_fail}} 

Config: {{coreip_u8_minimal_vector}}

Rerun:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""test1"",
  ""raw_plusargs"": [
    ""+verbose""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 4282876139
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""hartid"": 0,
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Nicolas Brunie,Srivatsa Yogendra,Zhiqiang Hao,,,,,,,,,,,,,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,VI-8283,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,09/Sep/22 11:18 PM;13f0526d-b3f4-476a-b0c7-c545f550508c;Screen Shot 2022-09-09 at 10.51.53 PM.png;https://sifive.atlassian.net/secure/attachment/77415/Screen+Shot+2022-09-09+at+10.51.53+PM.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-12T15:57:44.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/96d7fcb0368dfa9c7aed367152de7840abb6bc83,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00yz3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26022/files],,,,,,,,,,,,,04:49.7,"09/Sep/22 11:20 PM;5d02d411febd110bc78aabc3;[~accountid:5dbc8d4f3a09190c2ad5f41d] [~accountid:5a938e9c0913194d2d262658] - This is a blocker for [https://sifive.atlassian.net/browse/VI-8283|https://sifive.atlassian.net/browse/VI-8283|smart-link]

As for now, there seems to be no way to verify my spike change before this one is fixing",10/Sep/22 1:04 AM;5a938e9c0913194d2d262658;Cc [~accountid:5fd15143b4a74900763834e0] ,"12/Sep/22 7:00 AM;6065017e90e3950069cf01c5;The test is passing on the indicated branch, is there an extra step required to reproduce the failure ?","12/Sep/22 8:02 AM;5d02d411febd110bc78aabc3;[~accountid:6065017e90e3950069cf01c5] - the test will pass as for now spike doesn’t support ma, so I turn that on, and the test is not a self-checking test. But the wdata doesns’t match the spec","12/Sep/22 8:03 AM;6065017e90e3950069cf01c5;[~accountid:5d02d411febd110bc78aabc3] , is there a way for me to use your spike version locally and see the cosim mismatch ?","12/Sep/22 8:50 AM;5d02d411febd110bc78aabc3;[~accountid:6065017e90e3950069cf01c5] 

{noformat}--- a/mk/common/base.mk
+++ b/mk/common/base.mk
@@ -37,8 +37,8 @@ firrtl_tool_src_root := $(rocketchip_root)/firrtl
 rat_root := $(federation_root)/rat
 rat_tgv_root := $(federation_root)/rat_for_tgv
 hca_root := $(federation_root)/csrc/hca
-spike_dir := /sifive/tools/sifive/spike/spike_build_2022.09.05
-spike_cosim_dir := /sifive/tools/sifive/spike-cosim/spike_build_2022.09.05
+spike_dir := /work/zhiqiangh/spike_vl_vtype/spike
+spike_cosim_dir := /work/zhiqiangh/spike_vl_vtype/spike-cosim{noformat}

After changing this, do a {{make sim}} and regenerate vcs sim again (sitest with no nobuild)

Then you’ll see (when run with {{+enable_spike_cosim}})

{noformat}[COSIM-ERROR][0] COSIM VS RTL WRDATA MISMATCH
[COSIM-ERROR][0] COSIM VS RTL WRINFO MISMATCH

[COSIM-ERROR][0] m_dut_inst_item: [9659] InstInfo: VLD=1 | PC=0x000000008000082e | INSN=0x3817e157 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r2=0x00ff_ff00_00ff_ff00_00ff_ff00_00ff_ff33 mask=0000ffff | READY=1 | CSR_TIMER=9659 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x0000000080000500 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=3 | SEW=8 | LMUL=m1 | VSEGELT=0

[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x000000008000082e | INSN=0x3817e157 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r2=0x0000_0000_0000_0000_0000_0000_00ff_ff33 mask=00000007{noformat}



{noformat}[COSIM-ERROR][0] m_dut:  en=true r2=0x00ff_ff00_00ff_ff00_00ff_ff00_00ff_ff33 mask=0000ffff
[COSIM-ERROR][0] m_sim:  en=true r2=0x0000_0000_0000_0000_0000_0000_00ff_ff33 mask=00000007{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion Failure: A delayed flush cannot be valid simultaneously with a complex sequence start,[TGV] Assertion Failure:  delayed flush ,,,,,MAL-2578,125249,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,9/9/2022 6:29,9/16/2022 12:02,9/28/2022 0:51,9/12/2022 8:47,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"We see the below error from Vector Permute Engine block 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_212_test_fails/federation/builds2_cherry/coreip_p670/verilog/design/assertions/SiFive_VectorPermuteEngine_assert.sv"", 109: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_1.vperm_permEngMod.SiFive_VectorPermuteEngine_assert: at time 1068282500 ps
Assertion failed: A delayed flush cannot be valid simultaneously with a complex sequence start.
    at VectorPermuteEngine.scala:534 assert(!(cmplxStartUnqual && flush), ""A delayed flush cannot be valid simultaneously with a complex sequence start."")
Fatal: ""/scratch/ishitashah/tgv_regression/sign_212_test_fails/federation/builds2_cherry/coreip_p670/verilog/design/assertions/SiFive_VectorPermuteEngine_assert.sv"", 111: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_1.vperm_permEngMod.SiFive_VectorPermuteEngine_assert: at time 1068282500 ps{noformat}

SHA: [+4a7e0fa+|https://simscope.internal.sifive.com/models/undefined--master--4a7e0fa80b4dd8970d52d7393c5c37b81513325e]

config: coreip_p670

rerun.outline

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""rat_default_T_0640"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2331554635
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Dumppath 

{{gamma25:/scratch/ishitashah/tgv_regression/sign_212_test_fails/federation/builds2_cherry/coreip_p670/sim/rerundir1_vectorper/vectorper_rerun.outline/rat_default_T_0640/rat/default}}",David Kravitz,Ishita Shah,Nicolas Brunie,,,,,,,,,,,,,5fd15143b4a74900763834e0,607e26355431a500701f5aed,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/9f13bd5ca5c6f9dc59fcfefb2ba7cc33a8d3ac06,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i00ylr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,22:49.7,09/Sep/22 7:22 AM;5fd15143b4a74900763834e0;Permute engine should definitely get a 1st look from [~accountid:6065017e90e3950069cf01c5] ,09/Sep/22 12:52 PM;6065017e90e3950069cf01c5;I think this is a duplicate of [https://sifive.atlassian.net/browse/MAL-2564|https://sifive.atlassian.net/browse/MAL-2564|smart-link] (it seems to be fixed by the PR I am working on).,12/Sep/22 8:46 AM;6065017e90e3950069cf01c5;Fixed by [https://github.com/sifive/federation/pull/25951|https://github.com/sifive/federation/pull/25951|smart-link] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Implement checkpointing for faster rewind recovery,,,,,,MAL-2577,125247,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,9/9/2022 6:09,9/12/2022 11:51,9/28/2022 0:51,,,,,,,,,,,,,,Performance,RTL/RDU,,,,,,,,0,,,,"Currently after a pipeline flush, all of the RHF entries must be rewound before any new instructions can be renamed.  This may take a considerable number of cycles if the ROB was close to full and the branch was very old.

We should implement checkpoints of the Map Table + Free List + assorted other things, so that checkpoints are taken periodically.  After a flush, we will:

* Look for the oldest valid checkpoint that is _younger_ than the flush
* Restore from that checkpoint if we found one
* Rewind the rest of the way from the checkpoint to the point of the flush from the RHF+ROB



The frequency of checkpoints being taken should be related to how many RHF entries we can rewind in the time between a flush and new instructions making it to the REN stage.  In the Mallard generator, instructions will take 4 cycles (F1-F3, ID) before hitting REN stage.  If we can rewind 8 RHF entries per cycle that’s about 32 RHF entries that can be rewound before possibly needing to stall new instructions due to the rewind still finishing.  So we should try to take checkpoints roughly after every 32 RHF entries have been allocated.

4 or 5 total checkpoints is probably reasonable, and they will be allocated in FIFO order.  Once all have been allocated, we will just continue overwriting the oldest one.  Overwriting valid checkpoints is functionally fine, it just means that if we have a very old flush, we may need to restore from a checkpoint which is further away and spend more time rewinding.

The core should still be able to function properly even if checkpointing is completely disabled (through a chicken bit for example), by simply falling back to rewinding everything.",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Josh Smith,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Mid Core,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00ylb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,14,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,38:45.4,"09/Sep/22 6:38 AM;5e1371705361330daaeaf389;We need to think about it, but I think overwriting the OLDEST may not be the best policy – a bunch of mispredicts are going to be load-miss-dependent, which means a fairly common case of flushes will be flushing almost everything, in which case by replacing all of our oldest checkpoints, we will need to rewind even more in the slow manner.

I don’t know if it makes sense to be smarter (“hold on to a checkpoint younger than the youngest load miss”) or if we should just add a few more checkpoints so that we have roughly (xPRF)/(32) checkpoints. IIRC, a checkpoint is not that much state – ~300 bits or so for 32*9 bits – so the “easy button” may be the safest.","09/Sep/22 6:53 AM;5acffeafaa802f2a797a955c;{quote}We need to think about it, but I think overwriting the OLDEST may not be the best policy – a bunch of mispredicts are going to be load-miss-dependent, which means a fairly common case of flushes will be flushing almost everything, in which case by replacing all of our oldest checkpoints, we will need to rewind even more in the slow manner.{quote}

I’m not really trying to come up with a complicated scheme of tracking the oldest incomplete load or something.   I would guess that statistically, most branch mispredictions are going to come from younger branches (because they’ve had less time to resolve), so covering those with checkpoints would be better. Overwriting the oldest just means that we’d have to recover from the next oldest checkpoint, and eat a handful more cycles rewinding.  It’s been a few years, but I did spend some time at my last job trying to find ways to be more intelligent with the checkpoint allocation, and I couldn’t find a way to make the extra benefit meaningful (or in some cases it was just worse than the basic thing).

{quote}IIRC, a checkpoint is not that much state – ~300 bits or so for 32*9 bits – so the “easy button” may be the safest.{quote}

No, it’s quite a bit more than that.  The checkpoint contains _both_ Map Tables (2 * 32 * ~9 bits), _both_ Free Lists (2 * ~300 bits), plus a few extra small things",09/Sep/22 6:58 AM;5acffeafaa802f2a797a955c;And I haven’t even really thought much about how the addition of the vector unit affects this…,"09/Sep/22 7:07 AM;5e1371705361330daaeaf389;That’s all true, checkpoints are much bigger than I mentioned\!

I’m still concerned about the {{mcf}} situation though, where the whole machine is typically filled up waiting for a ~150-cycle load to come back so that its dependent branch can resolve.

We can use Dabble to get the distance distribution from bottom-of-ROB to a mispredicting branch to get some clarity on this, although we can’t (yet) know how many speculative instructions/destinations younger than the branch are valid at the time of mispredict. [https://sifive.atlassian.net/browse/SPARTAOPEN-123|https://sifive.atlassian.net/browse/SPARTAOPEN-123|smart-link]  created for this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV]:: COSIM VS RTL WRDATA MISMATCH for vfredosum.vs (PC=0x0000000040440256 ),[TGV]:: COSIM VS RTL WRDATA MISMATCH ,Execution Unit (VexPipe),Vector ,,,MAL-2576,125245,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Abhishek Kumar,620ee634a715c6006914e852,Abhishek Kumar,620ee634a715c6006914e852,9/9/2022 5:16,9/16/2022 12:02,9/28/2022 0:51,9/11/2022 19:14,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"*Error::*

\[COSIM-ERROR]\[0] m_dut_inst_item: \[358531] InstInfo: VLD=1 | PC=0x0000000040440256 | INSN=0x0ed515d7 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r11=0x0000_0001_0000_0001_0000_0001_ff10_75bf mask=0000ffff | READY=1 | CSR_TIMER=358531 | PRV=3 | MSTATUS=0x8000000a000066aa | MTVEC=0x0000000080000400 | MCAUSE=0x8000000000000007 | VSTART=0 | VL=4 | SEW=32 | LMUL=m1 | VSEGELT=0
\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x0000000040440256 | INSN=0x0ed515d7 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r11=0x7fc0_0000_7fc0_0000_7fc0_0000_fb10_75bf mask=0000000f

\[COSIM-ERROR]\[0] m_dut:  en=true r11=0x0000_0001_0000_0001_0000_0001_ff10_75bf mask=0000ffff
\[COSIM-ERROR]\[0] m_sim:  en=true r11=0x7fc0_0000_7fc0_0000_7fc0_0000_fb10_75bf mask=0000000f



*Debug-info::*

Cosim log::   values prior to the execution of the instruction  <vfredosum.vs> are:-

*v11 0x7fc000007fc000007fc000007fc00000*    
*v13 0x00000000000000000000000000000001*    
*v10 0xfffffffffb1075bffffffffffb1075bf*    



core   0: 0x0000000040440256 (0x0ed515d7) vfredosum.vs v11, v13, v10
core   0: 3 0x0000000040440256 (0x0ed515d7) e32 m1 l4 *v11 0x7fc000007fc000007fc00000fb1075bf*

Design trace:: In rtl log , seeing the instruction < *vfredosum.vs v11, v13, v10*> getting executed multiple times .It seems the value in both cosim and rtl are matching at every execution of the instruction  apart from once instance which is given below:

{noformat}C                   0:     358531 [1] pc=[0000000040440256] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[0ed515d7] vfredosum.vs v11, v13, v10
C                   0:     358531 [1] pc=[000000004044025a] W[r 0=0000000000000000][0] R[r30=fffffffffffff809] R[r 0=0000000000000000] inst=[d7af6b57] vwadd.wx v22, v26, t5
C                   0:     358531 [1] pc=[000000004044025e] W[r 6=0000000000000000][1] R[r 5=0000000089c00000] R[r 0=0000000000000000] inst=[00c28303] lb      t1, 12(t0)
C                   0:     358468 vrf[19]=[356d15e56ada2bcbd5b45797ab68af2f][ffff]
C                   0:     358473 vrf[13]=[00000000000000000000000000000001][ffff]
C                   0:     358488 vrf[11]=[000000010000000100000001ff1075bf][ffff]
C                   0:     358483 vrf[22]=[0001672dc24cf80800014e5b8499f808][ffff]
C                   0:     358484 vrf[23]=[00d0150d00b0780800ccaa1a023477f9][ffff]
{noformat}

The last execution is: 

C                   0:     362430 \[1] pc=\[0000000040440256] W\[r 0=0000000000000000]\[0] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[0ed515d7] vfredosum.vs v11, v13, v10
C                   0:     362406 vrf\[11]=\[*7fc000007fc000007fc00000fb1075bf*]\[ffff]



*SHA1::* {{ba9dee0fd96a069732337565e9c5604df8a9e08e}}
*Config::*  coreip_u8_minimal_vector
*waves::* verif03::///scratch/abhishekk/vector_debug/sting0063/federation/builds/coreip_u8_minimal_vector/sim/rerundir1/rerun.outline/sting_StingSiFiveTuple_T_0063/sting/sifive/vector/vector_tgv_dev.conf

*rerun. Outline::*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0063"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 376939241
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Abhishek Kumar,David Kravitz,Kira Tsao,,,,,,,,,,,,,620ee634a715c6006914e852,5fd15143b4a74900763834e0,5e1a4f5ec578120daca5ff8e,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb --rundir=rerundir1 --local,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i00ykv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,28:49.2,"09/Sep/22 7:28 AM;5fd15143b4a74900763834e0;[~accountid:5e1a4f5ec578120daca5ff8e], please check this out. Maybe it’s a duplicate or cousin of [https://sifive.atlassian.net/browse/MAL-2562|https://sifive.atlassian.net/browse/MAL-2562|smart-link].","11/Sep/22 7:13 PM;5e1a4f5ec578120daca5ff8e;Confirmed this is the duplicate issue of [https://sifive.atlassian.net/browse/MAL-2562|https://sifive.atlassian.net/browse/MAL-2562|smart-link],  can be resolved after cherry-pick the commit from [https://github.com/sifive/federation/pull/25943|https://github.com/sifive/federation/pull/25943|smart-link] 

Mark this to resolved.",11/Sep/22 10:12 PM;620ee634a715c6006914e852;I reran the test with the given fix . it is still failing. is there any mistake i am doing while running?,"11/Sep/22 10:27 PM;5e1a4f5ec578120daca5ff8e;[~accountid:620ee634a715c6006914e852] , I did the following things.

{noformat}git co ba9dee0fd96a069732337565e9c5604df8a9e08e
git cherry-pick 9303a82a0eaf4fd31b971ce0cca04210c64070d5
./scripts/quick-submodule-update
BUILD_DIR=builds ./generate-build coreip_u8_minimal_vector
cd builds/coreip_u8_minimal_vector/
make sim
./sitest @rerun.outline{noformat}

And the test then got passed for sure.



{noformat}*** PASSED *** finished after 5474565 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 27,372,822,500 ps.
*Verdi* : Close all FSDB Files at 27,372,822,500 ps.
$finish at simulation time          27372822500
           V C S   S i m u l a t i o n   R e p o r t 
Time: 27372822500 ps
CPU Time:   6678.700 seconds;       Data structure size:  35.2Mb
Sun Sep 11 10:47:58 2022
-W- test [sim/rerun.outline/sting_StingSiFiveTuple_T_0063/sting/sifive/vector/vector_tgv_dev.conf] effective cpulimit_multiplier (12.0) set too high, actual walltime: 6485.1 seconds vs timeout 18000 seconds!
2022-09-11T10:48:02-0700: Simulation sim/rerun.outline/sting_StingSiFiveTuple_T_0063/sting/sifive/vector/vector_tgv_dev.conf complete, passed{noformat}



You can check within my path.

{{gamma25:/scratch/kirat/kyoto/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0063/sting/sifive/vector/vector_tgv_dev.conf/}}",12/Sep/22 3:57 AM;620ee634a715c6006914e852;Thanx [~accountid:5e1a4f5ec578120daca5ff8e] . The test is passing ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] COSIM VS RTL WRDST SIZE MISMATCH for VMV4R.V,[TGV] COSIM VS RTL WRDST SIZE MISMATCH ,,,,,MAL-2575,125239,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,9/9/2022 2:18,9/16/2022 12:02,9/28/2022 0:51,9/12/2022 14:50,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"*Error::*

\[COSIM-ERROR]\[0] COSIM VS RTL WRDST SIZE MISMATCH
\[COSIM-ERROR]\[0] COSIM VS RTL WRINFO MISMATCH
\[COSIM-ERROR]\[0] m_dut_inst_item: \[25328] InstInfo: VLD=1 | PC=0x0000000080003d22 | INSN=0x9e01b857 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r16=0x0000_0000_66d7_46bc_0000_0000_cdae_8cbc mask=0000ffff | READY=1 | CSR_TIMER=25328 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x000000008000b5d0 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=9 | SEW=8 | LMUL=m2 | VSEGELT=0
\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x0000000080003d22 | INSN=0x9e01b857 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r16=0x0000_0000_cdae_8cbc_0000_0000_cdae_8cbc mask=00000f0f en=true r17=0x0000_0000_0000_0000_0000_0000_0000_0000 mask=00000000 en=true r18=0x0000_0000_0000_0000_0000_0000_0000_0000 mask=00000000 en=true r19=0x0000_0000_0000_0000_0000_0000_0000_0000 mask=00000000
\[COSIM-ERROR]\[0] m_dut:  en=true r16=0x0000_0000_66d7_46bc_0000_0000_cdae_8cbc mask=0000ffff
\[COSIM-ERROR]\[0] m_sim:  en=true r16=0x0000_0000_cdae_8cbc_0000_0000_cdae_8cbc mask=00000f0f en=true r17=0x0000_0000_0000_0000_0000_0000_0000_0000 mask=00000000 en=true r18=0x0000_0000_0000_0000_0000_0000_0000_0000 mask=00000000 en=true r19=0x0000_0000_0000_0000_0000_0000_0000_0000 mask=00000000

*Debug-Info::*
As per instruction definition, This instruction suppose to update 4 registers.
{{vmv4r.v v4, v8   #  Copy v4=v8; v5=v9; v6=v10; v7=v11}}

Here SEW=8, LMul=2, Vl=9 and Last vset instruction
core   0: 0x0000000080003d00 (0xc014f457) vsetivli s0, 9, e8, m2, tu, mu
26344 core   0: 3 0x0000000080003d00 (0xc014f457) x8  0x0000000000000009

core   0: 0x0000000080003d22 (0x9e01b857) vmv4r.v v16, v0
core   0: 3 0x0000000080003d22 (0x9e01b857) e8 m2 l9 v16 0x0000000066d7465e0000000066d7465e v17 0x00000000000000000000000000000000 v18 0x00000000000000000000000000000000 v19 0x00000000000000000000000000000000



From design:
C0:      25328 \[1] pc=\[0000000080003d22] W\[r 0=0000000000000000]\[0] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[9e01b857] vmv4r.v v16, v0
C0:      25261 vrf\[16]=\[0000000066d746bc00000000cdae8cbc]\[ffff]

!image-20220909-091517.png|width=1672,height=420!



*SHA1::*  861c7283bca9a101dbc356e63b9171d575b1712a
*Config::* coreip_p670
*Waves::* gamma25:://scratch/naverath/sep-9/federation/builds/coreip_p670/sim/sim/rerun.outline_wrdst/rat_default_T_0019/rat/default/waves.fsdb
*rerun. Outline::*  Outline copied to /work/nicolasb/tgv_bug_outlines/rat/MAL-2575.outline

*Outline*

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": \[
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+verbose""
],
""subdir"": ""rat_default_T_0019"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 3383762484
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",David Kravitz,Kira Tsao,Naveen Rathore,,,,,,,,,,,,,5fd15143b4a74900763834e0,5e1a4f5ec578120daca5ff8e,6235105a3eacc50071ff07ec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,09/Sep/22 2:18 AM;ug:00e334db-2e60-4fae-a5b5-d5d39244fe5c;image-20220909-091517.png;https://sifive.atlassian.net/secure/attachment/77375/image-20220909-091517.png,,,,,,,,,,,,,,,,861c7283bca9a101dbc356e63b9171d575b1712a,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-12T15:29:42.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,No,,,,,,,,,,,,2|i00yjj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26005/files],,,,,,,,,,,,,34:07.4,"09/Sep/22 7:34 AM;5fd15143b4a74900763834e0;Sorry, [~accountid:5e1a4f5ec578120daca5ff8e]. Another one for you to look at. If it involves some of the recent work around stalls/rewinds and updates to vtype/vl, try to involve Josh/Nicolas/Andrew or whoever you need.","12/Sep/22 12:18 AM;5e1a4f5ec578120daca5ff8e;After tracing, this is a duplicate issue of [https://sifive.atlassian.net/browse/MAL-2550|https://sifive.atlassian.net/browse/MAL-2550|smart-link]. The {{vl}} has been overwritten in Mallard RDU so the sequencer only sequence 1 uop. ",12/Sep/22 2:50 PM;5fd15143b4a74900763834e0;Duplicate of MAL-2550,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Vector load store uop generation,,,,,,MAL-2574,125234,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,9/9/2022 0:37,9/22/2022 23:28,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/ISS,TGV_RTL/RDU,TGV_RTL/SEQ,,,,,,,0,,,,"We decided to sequence load store uops in VectorSequencer instead of using the dedicated VectorLoadStoreSequencer introduced in [https://sifive.atlassian.net/browse/MAL-2476|https://sifive.atlassian.net/browse/MAL-2476|smart-link].  For now, we don’t touch the sequencer logic until we have a concrete idea about the uop sequencing scheme for index/segmented load store instruction.

Also, the multi-issuing scheme similar to LsIssQ will be introduced to BalerIssQ: we want the first uop  of masked load in BalerIssQ issuing into 2 sub-uops, one for VMB allocation/fill uop and one for the regular LTB data read uop.



The Baler operation can be decoded from uop using the combination of srcInfo tag, csid and opcode in the following table.

||Op type||src0: main PRF||src1: mask PRF||src2: LTB||dest||csid||masked||Note||
|LTB+VMB|v|v|v|v|0|v|First masked load uop, before balerIssQ|
|LTB+VMB: LTB data|v|v|v|v|0|v|First masked load uop, after balerIssQ|
|LTB+VMB: VMB| |v| | |0|v|First masked load uop, after balerIssQ|
|LTB data masked|v|v|v|v|>0|v| |
|LTB data unmasked|v| |v|v|#| | |
|VIB|v| | | |#| | |
|STB+VMB|v|v| | |0|v|First masked store uop|
|STB|v| | | |#|#| |",Brad Wu,,,,,,,,,,,,,,,62103777eb2978006893b778,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2209,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-09T15:03:21.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2209,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,,,,,,,,,,,,,,,,2|i00yif:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] LSU: fill 1's after first fault element,,,,,,MAL-2573,125203,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,9/8/2022 19:11,9/27/2022 16:15,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,,,,"For fault-only-first loads:

# the faulting and subsequent elements should return all 1’s from the LSU.  Do this similarly to how we implemented Store Conditional Fail in the LDPipe and LoadQ.  This is good for simplicity, mimicking an existing function for easier implementation and minimal extra cost.  This is also good for performance: a faulted load will not need to request or wait for data.
# the faulting element should also report exception {{TYPE_SYNC}} from [https://sifive.atlassian.net/browse/MAL-2451|https://sifive.atlassian.net/browse/MAL-2451|smart-link] ",David Kravitz,John Ingalls,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,MAL-2451,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-27T17:52:10.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,,,,,,,,,,,,,,,,2|i00ybj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,5,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,00:19.0,08/Sep/22 7:18 PM;5bb6808b9ba2930990f81895;[~accountid:5fd15143b4a74900763834e0] or [~accountid:5a938e9c0913194d2d262658] can you please point me to a good test that I can use to bring this up next week?,08/Sep/22 8:00 PM;5fd15143b4a74900763834e0;{{federation/test-outlines/tgv_milestone/milestone_5.outline}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
https://sifive.atlassian.net/browse/MAL-2571,,,,,,MAL-2572,125150,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Declined,Josh Smith,5acffeafaa802f2a797a955c,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,9/8/2022 10:34,9/9/2022 8:46,9/28/2022 0:51,9/8/2022 10:35,,,,,,,,,,,,,TGV_RTL/MU,,,,,,,,,0,,,,,Andrew Hanselman,,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00y13:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Mask accumulator allocation correlation,,,,,,MAL-2571,125149,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,9/8/2022 10:33,9/21/2022 7:00,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/RDU,TGV_RTL/VEX,,,,,,,,0,,,,"Address workaround introduced in the fix for [https://sifive.atlassian.net/browse/MAL-2556|https://sifive.atlassian.net/browse/MAL-2556|smart-link] , specifically:

* modify accumulator config from (1 color, 16 entries) back to (1 colors, 8 entries)
* only allow ROB groups to contain 1 accumulator instruction",Andrew Hanselman,,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00y0v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Sep/22 6:56 AM;609d7e1f5998a6006800dcc5;After discussion with [~accountid:5e137458efa19b0e976b5c7a] the first step will be to align with Dabble (only allow one accumulator macro-op per ROB group). With this change, we can reduce the size of the accumulator buffer back to a 1-color-8-entries config without the possibility of stalls identified in MAL-2556. This is justified by the common vector kernel having only 1 or 2 mask instructions per loop, so there is not significant performance impact. This grouping behavior should be revisited if the accumulators end up being used by other vector instructions because of the additional usage pressure.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
Update CODEOWNERS for performance team,,,,,,MAL-2570,125139,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Benoy Alexander,5e1370feefa19b0e976b5c24,Benoy Alexander,5e1370feefa19b0e976b5c24,Benoy Alexander,5e1370feefa19b0e976b5c24,9/8/2022 8:39,9/9/2022 8:46,9/28/2022 0:51,9/8/2022 9:35,,,,,,,,,,,,,Documentation,,,,,,,,,0,,,,Add [~accountid:5e1370feefa19b0e976b5c24] and [~accountid:5e1371705361330daaeaf389] to JSONs,Benoy Alexander,,,,,,,,,,,,,,,5e1370feefa19b0e976b5c24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-08T09:31:32.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00xyn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] stall_REN asserts due to RDU dispatch-to-TGV blockage during high-LMUL load loop,[TGV] stall_REN asserts RDU dispatch-to-TGV blockage during high-LMUL load loop,Instruction decode and dispatch ,Dispatch ,,,MAL-2569,125055,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,9/7/2022 16:51,9/27/2022 1:52,9/28/2022 0:51,9/12/2022 20:45,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,TGV,,,"After applying a fix for [https://sifive.atlassian.net/browse/MAL-2567|https://sifive.atlassian.net/browse/MAL-2567|smart-link], the next problem is a stall hang in scalar RDU. It looks like there’s no more room for macro instructions to go to TGV for sequencing. Title should be updated when a root cause is determined.

Outline is 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector_bw/bw_read.data8KB_m4_align32B"",
  ""raw_plusargs"": [
    ""+profile"",
    ""+verbose"",
    ""+disable_axi4_shuffling=1""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 491263
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi"",
    ""mem"": ""memory_mem0"",
    ""data_mem"": ""memory_mem0"",
    ""text_mem"": ""memory_mem0""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Alexandre Solomatnikov,Brad Wu,David Kravitz,John Ingalls,Josh Smith,Nicolas Brunie,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,62103777eb2978006893b778,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,MAL-2567,,,,MAL-2584,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2585,,,,,MAL-2558,,,,,,,,,,,07/Sep/22 6:28 PM;sols;MAL-2569.png;https://sifive.atlassian.net/secure/attachment/77302/MAL-2569.png,08/Sep/22 10:07 AM;ug:57c1528d-c032-4679-8e67-960f3039970a;image-20220908-170530.png;https://sifive.atlassian.net/secure/attachment/77343/image-20220908-170530.png,,,,,,,,,,,,,,,"5c3614b57afbe45b58195e9cee92d6a4214cab53, plus cherry-pick of 5088253 (MAL-2567 fix)",No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=4}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":4,""lastUpdated"":""2022-09-27T00:58:07.000-0700"",""stateCount"":4,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":4,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25972,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,4,0,,,,100,,,No,,,,,,,,,,,,2|i00xfz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"Check out specified commit plus cherry-pick
Build coreip_p670
In federation/software/tests, do $ ln -s /work/nicolasb/tgv_bug_outlines/MAL-2558/vector_bw
Run sitest with /work/nicolasb/tgv_bug_outlines/<this ticket>
Outline also pasted on main page",,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26440/files],,,,,,,,,,,,,28:55.5,"07/Sep/22 6:28 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;Baler issue queue fills up but entries are being set as ready because pipe tags are not sent:

!MAL-2569.png|width=1752,height=948!","07/Sep/22 7:47 PM;5fd15143b4a74900763834e0;Is it because data isn’t coming from the LSU, or something else?",07/Sep/22 8:45 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;I don’t know because I don’t know how {{ltbWake_LDR}} is supposed to work.,"08/Sep/22 9:59 AM;62103777eb2978006893b778;What I see is that balerIssQ are enqueued with GID=\[168, 169] and LTB are established with GID=\[16d, 16e, 16f…]. So uops in balerIssQ will never wake by LTB.","08/Sep/22 10:07 AM;62103777eb2978006893b778;There are lsto establishment for GID=\[168, 169] when all the LTB entries are busy, so it seems like the freelist problem or LSU is not blocking from allocating LTB when there is not free LTB entry.

!image-20220908-170530.png|width=1269,height=832!","08/Sep/22 10:21 AM;5fd15143b4a74900763834e0;According to [~accountid:5bb6808b9ba2930990f81895], this should be handled similar to exhaustion of MSHR or LdQ entries. The LSU will flush a younger instruction, which should (eventually) free up entries, and the older instruction can replay.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] coreip_livermore_vector has compile errors,[TGV] coreip_livermore_vector ,,,,,MAL-2568,125034,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,9/7/2022 15:28,9/9/2022 8:47,9/28/2022 0:51,9/8/2022 7:49,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"When trying to build {{coreip_livermore_vector}} on master (commit 8a36ed6d091a12619d6a02b0bbccaf72c5804c2e) I get the following compile error:

{noformat}Platform-Level Interrupt Map (2 hart contexts, 132 interrupts):                                                                                                                  
  [1, 5) => ccache                                                                     
  [5, 132) => subsystem                                                                                                                                                          
  [132, 133) => beu                                 
                                                                                                                                                                                 
Exception in thread ""main"" java.lang.IndexOutOfBoundsException: 1 is out of bounds (min 0, max 0)
        at ... ()                                                                                                                                                                
        at sifive.enterprise.tgv.LoadBuffer.$anonfun$new$64(LoadBuffer.scala:271)
        at scala.collection.immutable.Vector1.map(Vector.scala:1872)                                                                                                             
        at scala.collection.immutable.Vector1.map(Vector.scala:375)                                                                                                              
        at sifive.enterprise.tgv.LoadBuffer.$anonfun$new$63(LoadBuffer.scala:271)           
        at chisel3.Data.$anonfun$$colon$eq$1(Data.scala:782)                                                                                                                     
        at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)      
        at chisel3.internal.prefix$.apply(prefix.scala:31)                                      
        at chisel3.Data.$colon$eq(Data.scala:782)                                                                                                                                
        at sifive.enterprise.tgv.LoadBuffer.$anonfun$new$62(LoadBuffer.scala:271)                                                                                                
        at sifive.enterprise.tgv.LoadBuffer.$anonfun$new$62$adapted(LoadBuffer.scala:271)
{noformat}



It’s referring to this line:

{noformat}  io.ltbWake_LDR.zipWithIndex.foreach { case (w, i) => w := ltb_entriesWake.map { _(i) }.orR }{noformat}

There’s a dimension mismatch between {{io.wake_LDR}} from {{LTBEntry}} and {{io.ltbWake_LDR}} from {{LoadBuffer}} .  {{LTBEntry.io.wake_LDR}} is a {{Vec(lsp.nLDPipes, Bool())}} and {{LoadBuffer.io.ltbWake_LDR}} is {{Vec(lsp.nLSPipes, Bool())}}",David Kravitz,John Ingalls,Josh Smith,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8a36ed6d091a12619d6a02b0bbccaf72c5804c2e,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-07T23:37:34.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/69b707f253bac8818958036f36b01badddd30e67,,,n/a,,,,,,,,,Inspection,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00xc7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,04:56.9,"07/Sep/22 4:04 PM;5fd15143b4a74900763834e0;This *used to* work, b/c all the livermore configs compiled when I checked it in the first time. Will fix it.",08/Sep/22 7:49 AM;5fd15143b4a74900763834e0;Corrected the bad param,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LTB assertion fires after claim when no entries are available,[TGV] LTB assertion ,LSU (Load Store Unit),,,,MAL-2567,125024,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,9/7/2022 12:18,9/12/2022 23:03,9/28/2022 0:51,9/8/2022 7:50,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"This is another bug found by the Dabble team trying to run correlation on vector loads (see [https://sifive.atlassian.net/browse/MAL-2558|https://sifive.atlassian.net/browse/MAL-2558|smart-link]).


{noformat}Error: ""/scratch/verif/davidk2/MAL-2558/builds/coreip_p670/verilog/design/assertions/SiFive_LoadBuffer_assert.sv"", 80: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.bal.ltb.SiFive_LoadBuffer_assert: at time 189042500 ps
Assertion failed: LTB doesn't reserve the right number of entries
    at LoadBuffer.scala:255 assert(PopCount(io.vltb_lstrVecFreeNdxVec(ls)) === 1.U << io.lstrVec_vltbClaim(ls).bits, ""LTB doesn't reserve the right number of entries""){noformat}


In this case, LSTPipe0 claims the last 4 entries. 2 cycles later, LSTPipe1 also tries to claim 4 entries. The LTB responds with an all-0 vector because no entries are available. The assertion fires because the response didn’t supply as many entries as the request. The assertion needs to allow for an all-0 response when the LTB is fully claimed OR when the request is for more entries than are available. It might be tough to dial that in exactly.

It’s also unclear – until this is fixed – whether the LSTPipes do the right thing when their claim requests cannot be filled.",Alexandre Solomatnikov,Brian Grayson,David Kravitz,Fu-Ching Yang,Ian Chuang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Yohann Rabefarihy,York Ma,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,61aaae1d9615eb006f5ff922,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,61730c9cbcb57400683f15a6,610ff6b6fc68c1006924d7bd,,,,,,,,,,,,,,,,,MAL-2569,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2558,,,,,,,,,,,,,,,,,,,,,,,,,,,5c3614b57afbe45b58195e9cee92d6a4214cab53,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-07T23:19:40.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/4c8dcdc4e499d51f645e965a0a341ec77c13d88b,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00x9z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"Same as MAL-2558, except with this outline:

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector_bw/bw_read.data8KB_m4_align32B"",
  ""raw_plusargs"": \[
    ""+profile"",
    ""+verbose"",
    ""+disable_axi4_shuffling=1""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 491263
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi"",
    ""mem"": ""memory_mem0"",
    ""data_mem"": ""memory_mem0"",
    ""text_mem"": ""memory_mem0""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,01:02.9,07/Sep/22 5:01 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;Can [https://github.com/sifive/federation/pull/25935|https://github.com/sifive/federation/pull/25935|smart-link]  be merged?,"07/Sep/22 5:20 PM;5fd15143b4a74900763834e0;Actually, I want to add coverage before merging","08/Sep/22 7:50 AM;5fd15143b4a74900763834e0;Fixed the assertion to handle the case where the LTB is entirely (or mostly) full, and unable to satisfy a claim request.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Pre-read one entry below RAS top for forwarding,,,,,,MAL-2566,125016,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,9/7/2022 10:56,9/12/2022 12:32,9/28/2022 0:51,,,,,,,,,,,,,,Performance,RTL/Frontend,,,,,,,,0,,,,"Currently, the RAS is able to forward the top entry to the NLP so that we can predict returns from F1 stage.  However, the RAS is not actually updated until the return gets to F3 stage (the RAS is popped at the end of F3 stage).  So if we have short function calls and hit a second return in F1 before the first return updates the RAS, we cannot forward the entry below the top entry to the second return.  This means that the second return will have to predict from the RAS in F3 stage and cause a redirect.  There is essentially a 2 cycle window where we cannot forward to a second return, because a first return has not passed F3 stage yet.

We can modify the RAS to be able to read one entry below the top entry, so that we can forward to a second return in the F1 stage.

Currently, the {{coreip_healdsburg}} configuration is hitting this scenario in the main Dhrystone loop where one return has to redirect from the F3 stage.",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Branch Prediction,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00x87:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,4,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,07:27.2,07/Sep/22 11:06 AM;5acffeafaa802f2a797a955c;[~accountid:5e13709185a8c90ecac9beb2] FYI,"07/Sep/22 12:07 PM;5e1371705361330daaeaf389;A similar but different way of implementing this is, F1 has its own idea of the RAS pointer, and on a pop, it adjusts its pointer and reads out the NEW potential TOS entry. F3 then adjusts reality, and on an F3 redirect, it corrects the F1 shadow pointer to be correct.

This approach should work even in the presence of RET-RET-RET, instead of just RET-RET, and may have longer legs going forward. Of course, F1 pushes would need to update the F1 TOS shadow also.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Assertion failed: Physical register 95 set as ready twice (only first conflicting id shown),[TGV] Assertion failed: Physical register ,Execution Unit (VexPipe),PRF ,,,MAL-2565,124996,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Highest,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,9/7/2022 6:35,9/16/2022 12:02,9/28/2022 0:51,9/13/2022 12:30,,,,,,,,,,,Panda DR,,RTL/RDU,,,,,,,,,0,TGV,,,"We see the below assertion failure from PRA block 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_210_test_fails/federation/builds2_cherry/coreip_p670/verilog/design/assertions/SiFive_PRA_5_assert.sv"", 207: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.vexPra.SiFive_PRA_5_assert: at time 1285302500 ps
Assertion failed: Physical register  95 set as ready twice (only first conflicting id shown)

    at PRF.scala:88 assert(!(readyVec.asUInt & setVec).orR, ""Physical register %%d set as ready twice (only first conflicting id shown)"", firstRegSetTwice)
Fatal: ""/scratch/ishitashah/tgv_regression/sign_210_test_fails/federation/builds2_cherry/coreip_p670/verilog/design/assertions/SiFive_PRA_5_assert.sv"", 210: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.vexPra.SiFive_PRA_5_assert: at time 1285302500 ps{noformat}

The last vector instruction executed here was *vsub.vx v0,v0,s0*

*SHA:* [+ba9dee0+|https://simscope.internal.sifive.com/models/undefined--master--ba9dee0fd96a069732337565e9c5604df8a9e08e]

*config:* coreip_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.tag_array_.*ext,1,0,32:.*\\.data_arrays_0_.*ext,1,0,32:.*\\.syssram.*ext,1,0,32:.*\\.island.*\\.lim\\.syssram.*ext,1,0,32:.*\\.tagged_tables_0_.*ext,1,0,32:.*\\.base_table_0_.*ext,1,032""
  ],
  ""subdir"": ""rat_default_T_0732"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1643561827
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Dumppath 

{{gamma25:/scratch/ishitashah/tgv_regression/sign_210_test_fails/federation/builds2/coreip_p670/sim/rerundir1_pra/pra_rerun.outline/rat_default_T_0732/rat/default}}",Andrew Hanselman,Ishita Shah,Nicolas Brunie,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,607e26355431a500701f5aed,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2611,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12/Sep/22 7:21 PM;ug:03c2888a-5ac7-445d-b700-4a271a824946;Screen Shot 2022-09-12 at 9.14.08 PM-20220913-021702.png;https://sifive.atlassian.net/secure/attachment/77489/Screen+Shot+2022-09-12+at+9.14.08+PM-20220913-021702.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-13T12:30:13.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,1433f5ee603f998625fb5daf6da3e829d0d34a77,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00x3z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26037/files],,,,,,,,,,,,,14:02.9,"07/Sep/22 7:54 AM;607e26355431a500701f5aed;This seems to be a duplicate of Jira [https://sifive.atlassian.net/browse/MAL-2554|https://sifive.atlassian.net/browse/MAL-2554|smart-link]  

[~accountid:609d7e1f5998a6006800dcc5], can you confirm?","07/Sep/22 8:14 AM;609d7e1f5998a6006800dcc5;At a glance, it appears to be the same issue. I’ll test the same fix against this.","12/Sep/22 7:21 PM;609d7e1f5998a6006800dcc5;Looks like there is something else going on with this issue. There is a sequence of 4 uops that use accumulator 6. Something is updating the issue queue copies of the accumulator PRA vector (middle). So when the 3rd and 4th uops issue, both are marked as full result broadcasts, and eventually write to the main VRF in WB. I will continue looking at the issue queue / execution pipe logic tomorrow to see why this is.

!Screen Shot 2022-09-12 at 9.14.08 PM-20220913-021702.png|width=1869,height=1021!",12/Sep/22 10:52 PM;609d7e1f5998a6006800dcc5;Passing with fix: [https://github.com/sifive/federation/pull/26037|https://github.com/sifive/federation/pull/26037|smart-link] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]:: Assertion:: Vector permute engine should only be flushed during complex permutations,[TGV]:: Assertion:: Vector permute engine,Execution Unit (VexPipe),Vector ,,,MAL-2564,124981,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,9/7/2022 1:35,9/16/2022 12:02,9/28/2022 0:51,9/12/2022 6:30,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error:*

Error: ""/scratch/naverath/sep-7/federation/builds/coreip_p670/verilog/design/assertions/SiFive_VectorPermuteEngine_assert.sv"", 151: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_1.vperm_permEngMod.SiFive_VectorPermuteEngine_assert: at time 471402500 ps
Assertion failed: Vector permute engine should only be flushed during complex permutations.
at VectorPermuteEngine.scala:1073 assert(\!flush || isStarted || cmplxStartUnqual, ""Vector permute engine should only be flushed during complex permutations."")

*SHA1::* bb033141e423df466764abf7a1c20233f2f2db05
*config::* coreip_p670
*waves::* gamma25:://scratch/naverath/sep-7/federation/builds/coreip_p670/sim/sim/rerun.outline_assert_1/rat_default_T_0928/rat/default/waves.fsdb
*rerun.outline::* Outline copied to /work/nicolasb/tgv_bug_outlines/rat/MAL-2564.outline

!image-20220907-083711.png|width=1380,height=364!



*Outline::*

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": \[
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+MEM_ERROR_INJECT=._\.tag_array_.ext,1,0,32:._\.data_arrays_0_._ext,1,0,32:._\.syssram._ext,1,0,32:._\.island.\.lim\.syssram._ext,1,0,32:._\.tagged_tables_0_._ext,1,0,32:._\.base_table_0_.*ext,1,032"",
""+verbose"",
""+verbose""
],
""subdir"": ""rat_default_T_0928"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 2515041189
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",Naveen Rathore,Nicolas Brunie,,,,,,,,,,,,,,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,07/Sep/22 1:37 AM;ug:00e334db-2e60-4fae-a5b5-d5d39244fe5c;image-20220907-083711.png;https://sifive.atlassian.net/secure/attachment/77233/image-20220907-083711.png,08/Sep/22 12:39 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220908-073949.png;https://sifive.atlassian.net/secure/attachment/77334/image-20220908-073949.png,,,,,,,,,,,,,,,bb033141e423df466764abf7a1c20233f2f2db05,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-12T06:30:41.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/9f13bd5ca5c6f9dc59fcfefb2ba7cc33a8d3ac06,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00x0n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/25951/files],,,,,,,,,,,,,39:51.0,"08/Sep/22 12:39 AM;6065017e90e3950069cf01c5;The flush happens right as the complex sequence is finishing, now that the flush is delayed by one cycle to improve timing it comes after the unit has been freed.

!image-20220908-073949.png|width=1610,height=332!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[TGV]:: Assertion::  vnmsub.vv instruction not completed, It leads to LdQEntry FSM Hang",[TGV]:: Assertion::  vnmsub.vv instruction ,LSU (Load Store Unit),,,,MAL-2563,124979,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Andrew Hanselman,609d7e1f5998a6006800dcc5,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,9/7/2022 1:15,9/16/2022 12:02,9/28/2022 0:51,9/13/2022 12:46,,,,,,,,,,,Panda DR,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error::*

Error: ""/scratch/naverath/sep-7/federation/builds/coreip_p670/verilog/design/SiFive_LdQEntry.sv"", 1028: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LdQ.ldqEntries_0: at time 2321162500 ps
assert failed (verification library): LdQEntry FSM Hang  @\[LoadQ.scala 2466:14]

*Debug-Info::*
Last retired PC:
core   0: 0x0000000080002148 (0x00d74963) blt     a4, a3, pc + 18

Next instruction after that
8000214c:	af842057          	vnmsub.vv	v0,v8,v24

*SHA1::*  bb033141e423df466764abf7a1c20233f2f2db05
*Config::* coreip_p670
*waves::* gamma25:://scratch/naverath/sep-7/federation/builds/coreip_p670/sim/sim/rerun.outline_assert/rat_default_T_0705/rat/default/waves.fsdb
*rerun. Outline::* Outline copied to /work/nicolasb/tgv_bug_outlines/rat/MAL-2563.outline


*outline*

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": \[
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+MEM_ERROR_INJECT=._\.tag_array_.ext,1,0,32:._\.data_arrays_0_._ext,1,0,32:._\.syssram._ext,1,0,32:._\.island.\.lim\.syssram._ext,1,0,32:._\.tagged_tables_0_._ext,1,0,32:._\.base_table_0_.*ext,1,032"",
""+verbose"",
""+verbose""
],
""subdir"": ""rat_default_T_0705"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 1104104229
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",Andrew Hanselman,David Kravitz,Naveen Rathore,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,5fd15143b4a74900763834e0,6235105a3eacc50071ff07ec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,bb033141e423df466764abf7a1c20233f2f2db05,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,f4843d8c71b937e104871c528e54050a832626d3,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,,,,No,,,,,,,,,,,,2|i00x07:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,28:16.9,"08/Sep/22 2:28 PM;5fd15143b4a74900763834e0;There’s a reasonable chance that the root cause is the same as [https://sifive.atlassian.net/browse/MAL-2554|https://sifive.atlassian.net/browse/MAL-2554|smart-link], which we don’t have a fix for yet. Assigning to [~accountid:609d7e1f5998a6006800dcc5] so he can test his fix against this, too.","13/Sep/22 12:46 PM;609d7e1f5998a6006800dcc5;There is a previous {{vmsbc}} instruction that writes v0 as well. This is an accumulator instruction and has the same destination field corruption that occurs in [https://sifive.atlassian.net/browse/MAL-2554|https://sifive.atlassian.net/browse/MAL-2554|smart-link]. It broadcasts a wakeup for the incorrect destination physical register. This causes the {{vnmsub.vv}} instruction, executing in tail/mask undisturbed policy, to be waiting on the old destination data indefinitely. I’m closing this as a duplicate.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]::  COSIM VS RTL WRDATA MISMATCH for vfredosum.vs (PC=0x42100c46),[TGV]::  COSIM VS RTL WRDATA MISMATCH,Execution Unit (VexPipe),Vector ,,,MAL-2562,124958,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,9/6/2022 21:51,9/16/2022 12:02,9/28/2022 0:51,9/7/2022 23:07,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error::*


*Error::*

\[COSIM-ERROR]\[0] m_dut_inst_item: \[189546] InstInfo: VLD=1 | PC=0x0000000042100c46 | INSN=0x0e9615d7 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r11=0x8c3f_7e38_aa31_4596_8c3f_7e38_ff3e_e39d mask=0000ffff | READY=1 | CSR_TIMER=189546 | PRV=3 | MSTATUS=0x8000000a000066aa | MTVEC=0x0000000080000400 | MCAUSE=0x8000000000000007 | VSTART=0 | VL=4 | SEW=32 | LMUL=m1 | VSEGELT=0
\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x0000000042100c46 | INSN=0x0e9615d7 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r11=0x803f_fffe_e851_3c16_803f_ffff_3fff_ffff mask=0000000f
\[COSIM-ERROR]\[0] m_dut:  en=true r11=0x8c3f_7e38_aa31_4596_8c3f_7e38_ff3e_e39d mask=0000ffff
\[COSIM-ERROR]\[0] m_sim:  en=true r11=0x803f_fffe_e851_3c16_803f_ffff_3fff_ffff mask=0000000f

*Debug-Info::*   Cosim seems correct to me as per Instruction defination
  *v11 0x803ffffee8513c16803fffff00400000*
  *v12 0x3ffffffe3ffffffe3fffffff3fffffff*
  *v 9 0x00000000000000000000000000000000*


 core   0: 0x0000000042100c46 (0x0e9615d7) vfredosum.vs v11, v9, v12   //Error Instruction
core   0: 3 0x0000000042100c46 (0x0e9615d7) e32 m1 l4 *v11 0x803ffffee8513c16803fffff3fffffff* 

  

Design -trace::  
    C                   0:     189546 \[1] pc=\[0000000042100c46] W\[r 0=0000000000000000]\[0] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[0e9615d7] vfredosum.vs v11, v9, v12
    C                   0:     189544 vrf\[11]=\[*8c3f7e38aa3145968c3f7e38ff3ee39d*]\[ffff]



*SHA1::* ba9dee0fd96a069732337565e9c5604df8a9e08e
*Config::* coreip_u8_minimal_vector
*waves::* gamma25:://scratch/naverath/sep-6/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline_wrdata/sting_StingSiFiveTuple_T_0278/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb
*rerun. Outline::*  Outline copied to /work/nicolasb/tgv_bug_outlines/sting/MAL-2562.outline

",Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Kira Tsao,Naveen Rathore,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1a4f5ec578120daca5ff8e,6235105a3eacc50071ff07ec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,07/Sep/22 10:02 AM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220907-170211.png;https://sifive.atlassian.net/secure/attachment/77272/image-20220907-170211.png,,,,,,,,,,,,,,,,ba9dee0fd96a069732337565e9c5604df8a9e08e,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-07T23:06:02.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00wvj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,38:42.4,07/Sep/22 5:38 AM;5fd15143b4a74900763834e0;[~accountid:5e1a4f5ec578120daca5ff8e] can you give this a quick look? Is it possibly the same problem we’ve seen before?,"07/Sep/22 9:55 AM;5e1a4f5ec578120daca5ff8e;[~accountid:5fd15143b4a74900763834e0] this looks like a true bug while FP order reduction going to write prf and tag injection fail due to conflict, but the data switch due to next calculation just started. I’ll try to provide a fix for this.","07/Sep/22 10:02 AM;5e1a4f5ec578120daca5ff8e;!image-20220907-170211.png|width=1216,height=266!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU ISSQ: 1st part of unrolled instruction getting replayed 1 cycle after 2nd part replays is causing both replayed parts to be re-issued in LST Pipe separately,LSU ISSQ: LST Pipe ,,,,,MAL-2561,124949,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Abhishek Anand,622a7ed2f1e55c0070f301a9,Abhishek Anand,622a7ed2f1e55c0070f301a9,9/6/2022 20:41,9/8/2022 14:04,9/28/2022 0:51,9/7/2022 9:00,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"This issue was discussed over slack; adding conversation below:

----


Hi John, I am observing following scenario (in ISSQ FV TB) where both parts of unrolled instructions are getting replayed:

* Cycle#4 (2nd cycle after reset):
** ISS_0_earlyValid asserted with GID = 0x9 and index = 0x3
* Cycle#7
** 1st part of unrolled instruction is in LSTR stage
* Cycle#8
** 2nd part of unrolled instruction is in LSTR stage and gets replayed
* Cycle#9
** Replayed part from cycle#8 is sent on ISS_1_earlyValid
** 1st part of instruction is in LSTO stage and gets replayed
* Cycle#10
** Replayed part from cycle#9 is sent on ISS_0_earlyValid

Is this as expected ? Should both parts be allowed to be replayed separately ? If so, how does the 1st part not get unrolled again ? 

----

[*Abhishek Anand*|https://app.slack.com/team/U036KPCQS90]  [17 hours ago|https://sifive.slack.com/archives/D03G028ECNR/p1662459075807059?thread_ts=1662458052.943749&cid=D03G028ECNR]
Please use following command to open the waves (on machine verif03):

{noformat}verdi -f /scratch/abhisheka/federation3/builds/fpv_mallard_lsu_issq/sim/fpv/CoreIPSubsystemVerifTestHarness.WithLSUIssqFormal.F -f /scratch/abhisheka/federation3/builds/fpv_mallard_lsu_issq/sim/compile_opts.f -f /scratch/abhisheka/federation3/builds/fpv_mallard_lsu_issq/sim/fpv/CoreIPSubsystemVerifTestHarness.WithLSUIssqFormal.sitest_blackboxes.F -ssf /scratch/abhisheka/federation3/Waveforms/Both_parts_of_unrolled_replayed.fsdb -sswr /scratch/abhisheka/federation3/Waveforms/Both_parts_of_unrolled_replayed.rc -top SiFive_MallardCore &{noformat}

[*John Ingalls*|https://app.slack.com/team/UD9NTT7FU]  [8 hours ago|https://sifive.slack.com/archives/D03G028ECNR/p1662492831796189?thread_ts=1662458052.943749&cid=D03G028ECNR]
in Cycle#9, the 1st piece replaying from LSTO should cause the 2nd piece to also replay back to the LsIssQ, from wherever it is.

[*John Ingalls*|https://app.slack.com/team/UD9NTT7FU]  [8 hours ago|https://sifive.slack.com/archives/D03G028ECNR/p1662492875418459?thread_ts=1662458052.943749&cid=D03G028ECNR]
If that's not happening, then that is a bug.  Looks like I forgot / might need to add signals {{iss_unrollOrderReplay}} and {{iss_unrollLstmXcpt}}.

[*John Ingalls*|https://app.slack.com/team/UD9NTT7FU]  [8 hours ago|https://sifive.slack.com/archives/D03G028ECNR/p1662492890128719?thread_ts=1662458052.943749&cid=D03G028ECNR]
Can you please open a Jira bug ticket for this?  Good find\!",Abhishek Anand,,,,,,,,,,,,,,,622a7ed2f1e55c0070f301a9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-70,,,,,,,,,,,,,,,,,,06/Sep/22 8:41 PM;ug:050bebe1-2a7f-4cf6-8275-6818dba1d89c;Screenshot 2022-09-06 at 3.37.44 PM.png;https://sifive.atlassian.net/secure/attachment/77217/Screenshot+2022-09-06+at+3.37.44+PM.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-07T21:01:24.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25906,,,n/a,,,,,,,,,Formal,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00wtj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LSU: multiple uop Load must wait to Resolve until all pieces hazards clear,[TGV] LSU:,LSU (Load Store Unit),,,,MAL-2560,124896,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,9/6/2022 14:18,9/8/2022 21:06,9/28/2022 0:51,9/7/2022 17:30,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"{noformat}Error: ""/scratch/sols/tgv4/federation/builds/892b1e15e15/coreip_u8_minimal_vector/verilog/design/SiFive_LdQEntry.sv"", 747: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LdQ.ldqEntries_2: at time 293462500 ps
assert failed (verification library): LdQEntry must resolve before ROB entry commits  @[LoadQ.scala 2373:16]

Fatal: ""/scratch/sols/tgv4/federation/builds/892b1e15e15/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LdQEntry_assert.sv"", 176: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LdQ.ldqEntries_2.SiFive_LdQEntry_assert: at time 293462500 ps

$finish called from file ""/scratch/sols/tgv4/federation/builds/892b1e15e15/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LdQEntry_assert.sv"", line 176.{noformat}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vle-vse"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Waveform: gamma11:/scratch/sols/tgv4/federation/builds/892b1e15e15/coreip_u8_minimal_vector/sim/sim2/tgv_vle-vse.outline/vector/vle-vse

Note: test passed at [https://github.com/sifive/federation/commit/892b1e15e15f2f57fa521b8aa81701adfdc786e9|https://github.com/sifive/federation/commit/892b1e15e15f2f57fa521b8aa81701adfdc786e9|smart-link] ",Alexandre Solomatnikov,Yohann Rabefarihy,,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2008,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/983ba5e407f4630c0133b744fe29db99ea759fac,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-08T07:30:46.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25939,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00win:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: remove StqWG look-ahead for LDArb L1dcData arbitration,,,,,,MAL-2559,124865,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,9/6/2022 10:14,9/21/2022 9:40,9/28/2022 0:51,9/8/2022 9:34,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"The {{HoldForLDArbBubble}} mechanism from [https://sifive.atlassian.net/browse/MAL-427|https://sifive.atlassian.net/browse/MAL-427|smart-link] is blocking forward progress in [https://sifive.atlassian.net/browse/MAL-1638|https://sifive.atlassian.net/browse/MAL-1638|smart-link].

The scenario that arises in [https://sifive.atlassian.net/browse/MAL-1638|https://sifive.atlassian.net/browse/MAL-1638|smart-link] is a circular dependency where a LoadQ (or its MSHR) has a non-STLDFwdable hazard (or MSHR dependency) on a StoreQ (or its MSHR), and a stream of repeatedly replaying newer load instructions in the LSTPipe blocks StqWG from writing the L1 D-Cache.",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,MAL-427,MAL-2492,,,MAL-1638,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Load/Store,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-21T20:08:39.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25962,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,,,,,,,,,,,,,2|i00wbr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,2,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26222/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Correlation: unit-stride bandwidth read test failures,[TGV] Correlation: unit-stride bandwidth ,Execution Unit (VexPipe),,,,MAL-2558,124860,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Yohann Rabefarihy,61730c9cbcb57400683f15a6,York Ma,610ff6b6fc68c1006924d7bd,York Ma,610ff6b6fc68c1006924d7bd,9/6/2022 9:32,9/27/2022 6:03,9/28/2022 0:51,9/13/2022 8:51,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"*Failing tests*

Bandwidth read tests using LMUL=2/4/8 unit-stride vector load

* 0065117 v128_mb_mem_rvv.bw_read.data8KB_m2_align32B
* 0065118 v128_mb_mem_rvv.bw_read.data8KB_m4_align32B
* 0065119 v128_mb_mem_rvv.bw_read.data8KB_m8_align32B



*Federation SHA*

474d014f6adc25dc98c09903a949c079c50c9955



*Error messages*

LMUL=2/4 tests’ failing signature:

{noformat}Assertion failed: LTB entry already in use

    at LoadBuffer.scala:152 assert(!ltbE_entryValid_q, ""LTB entry already in use""){noformat}

LMUL=8 test’s failing signature:

{noformat}assert failed (verification library): stall_REN Hang  @[RDU.scala 1409:9]{noformat}



*Reproducing*

To reproduce bugs, please follow the following steps in your Federation clone:

# Replace the {{wkld_list}} in {{$FEDERATION/test-outlines/sparta-checkpoint.outline}} with the following list:

{noformat}checkpoint_list = %w[
0080/117
0080/118
0080/119
]{noformat}
# Run the sitest as normal but with the outline

{noformat}./sitest @../../../test-outlines/sparta-checkpoint.outline{noformat}",Alexandre Solomatnikov,David Kravitz,Ian Chuang,John Ingalls,Josh Smith,York Ma,Zhen Wei,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,61aaae1d9615eb006f5ff922,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,610ff6b6fc68c1006924d7bd,5e49f622a17f930c9b94b6cd,,,,,,,,,,,,,,,,MAL-2537,,,,,,,,,,,,MAL-2642,,,MAL-2584,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2567,MAL-2569,MAL-2675,,,,,,,,,,,,,,,,,,,,,474d014f6adc25dc98c09903a949c079c50c9955,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,sitest @/scratch/yorkm/wspace/fed/software/tests/vector_bw/vector_bw.outline --wave=fsdb,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{repository={count=6, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":6,""lastUpdated"":""2022-09-21T15:54:35.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":6,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/26024,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,1,,,,,,,No,,,,,,,,,,,,2|i00wan:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26079/files],,,,,,,,,,,,,51:33.9,"06/Sep/22 9:51 AM;5acffeafaa802f2a797a955c;Could you fill out more information, like the git hash and the simulation error message output?","06/Sep/22 10:07 AM;5fd15143b4a74900763834e0;Also, please copy the outline file into {{/work/nicolasb/tgv_bug_outlines/MAL-2558.outline}}","06/Sep/22 10:27 AM;5fd15143b4a74900763834e0;{{/scratch}} disks are machine-specific, so we would normally need more information there, too. Because you copied the outline file, I’ll try to replicate in my own work area. Thanks for posting the commit hash, too","06/Sep/22 11:25 AM;5fd15143b4a74900763834e0;It looks like there’s not a single outline file, but a whole directory of outlines, because my run is throwing a series of errors like this

{noformat}=== sitest found errors in test sim/MAL-2558.outline/vector_bw/bw_read.data8KB_m1_align32B:
Error: cannot find test named vector_bw/bw_read.data8KB_m1_align32B
2022-09-06T11:20:40-0700: Error: simulation sim/MAL-2558.outline/vector_bw/bw_read.data8KB_m1_align32B failed
2022-09-06T11:20:40-0700: Running test sim/MAL-2558.outline/vector_bw/bw_write.data8KB_m1_align32B{noformat}

Is it possible to upload (call it MAL-2558a.outline or something) a single rerun.outline file that {{sitest}} can run?","06/Sep/22 7:23 PM;61aaae1d9615eb006f5ff922;[~accountid:610ff6b6fc68c1006924d7bd], these tests are only present in your environment and you didn’t release them to Federation, right? Could you pack the outline and the source code for [~accountid:5fd15143b4a74900763834e0] to reproduce in his environment? ","06/Sep/22 8:00 PM;610ff6b6fc68c1006924d7bd;[~accountid:5fd15143b4a74900763834e0] I copied the whole bundle of the test programs to {{/work/nicolasb/tgv_bug_outlines/MAL-2558}} , as the sub directory {{vector_bw}}. We use a “test factory” to generate a bundle of test programs having the same structure but differ in attributes settings (such as lmul). In {{vector_bw}}, each sub directory contains a test program with associated test information. The outline file to execute these tests is {{vector_bw/vector_bw.outline}}. To run the test in federation, the directory {{vector_bw}} should be copied (or soft linked) to {{federation/software/tests }} directory. Hope this helps.

BTW, there are also errors in vector store but is outside the scope of this jira.","07/Sep/22 10:55 AM;5fd15143b4a74900763834e0;LSTPipe0 claims 2 entries at 188,842,500; the LTB responds with a {{ClaimedVec}} of 0x0000c000 (entries 14 & 15). Starting 2 cycles later, LSTPipe0 establishes entry 14, and then entry 15 with gid 0x166. It should have stopped there, but then continues and mistakenly establishes entry 15 again for gid 0x164.

This can be replicated by cloning 5c3614b57afbe45b58195e9cee92d6a4214cab53, building {{coreip_p670}}, creating the softlink described in the note below, and running {{sitest}} with this outline:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector_bw/bw_read.data8KB_m2_align32B"",
  ""raw_plusargs"": [
    ""+profile"",
    ""+verbose"",
    ""+disable_axi4_shuffling=1""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3093770124
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi"",
    ""mem"": ""memory_mem0"",
    ""data_mem"": ""memory_mem0"",
    ""text_mem"": ""memory_mem0""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}","09/Sep/22 12:44 AM;5e49f622a17f930c9b94b6cd;Hi all, I just updated steps for you easier to reproduce failures. Chatted with [~accountid:61730c9cbcb57400683f15a6], I changed ticket name to “what tests are failing” instead of “what asserts are triggered”. It would be easier for us to communicate and track things. We could re-open this ticket, once the same tests unfortunately fail again in the future.","09/Sep/22 7:26 AM;5fd15143b4a74900763834e0;[~accountid:5e49f622a17f930c9b94b6cd] what you’re describing sounds more like an Epic, and we could report individual assertions as Bugs that are children of the Epic. That makes it easier for RTL and DV to know about specific bugs and their fixes, rather than piling everything into a long doomscroll of a single Jira ticket. We could repurpose this Bug into that Epic, and have already filed 2 specific bugs as related. Those could become children if the plan makes sense to you","09/Sep/22 8:53 PM;5e49f622a17f930c9b94b6cd;[~accountid:5fd15143b4a74900763834e0] That makes sense to me. But hold on a second, I believe we’re discussing a better flow to co-work these failures with DV team.",13/Sep/22 8:51 AM;5bb6808b9ba2930990f81895;We are continuing to work on this in [https://sifive.atlassian.net/browse/MAL-2584|https://sifive.atlassian.net/browse/MAL-2584|smart-link] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion Failed: ROB cmplCnt underflow on entry ,[TGV] Assertion Failed: ROB cmplCnt underflow,Instruction decode and dispatch ,Scalar ROB,,,MAL-2557,124856,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Highest,Duplicate,David Kravitz,5fd15143b4a74900763834e0,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,9/6/2022 9:00,9/7/2022 17:43,9/28/2022 0:51,9/6/2022 19:07,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"We see the below assertion failure from ROB block 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_210_test_fails/federation/builds2/coreip_p670/verilog/design/SiFive_ROB.sv"", 19158: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob: at time 14291742500 ps
assert failed (verification library): ROB cmplCnt underflow on entry 20  @[ROB.scala 648:11]
Fatal: ""/scratch/ishitashah/tgv_regression/sign_210_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_ROB_assert.sv"", 1210: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert: at time 14291742500 ps{noformat}

The last instruction executed was *fnmsub.d ft4,ft4,fa0,fa1* and *lb t2,3(a0)*

{noformat}C0:     714462 [1] pc=[000000010110a72a] W[f 4=421f01c100800000][1] R[f 4=c12f7fc000000000] R[f10=40df800000000000] inst=[5aa2224b] fnmsub.d ft4, ft4, fa0, fa1
C0:     714462 [1] pc=[000000010110a72e] W[r 7=0000000000000000][1] R[r10=0000000088d00000] R[r 0=0000000000000000] inst=[00350383] lb      t2, 3(a0){noformat}

*SHA:* [+ba9dee0+|https://simscope.internal.sifive.com/models/undefined--master--ba9dee0fd96a069732337565e9c5604df8a9e08e]

*config:* coreip_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0204"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 328643954
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath*

{{gamma25:/scratch/ishitashah/tgv_regression/sign_210_test_fails/federation/builds2/coreip_p670/sim/rerundir1_rob/rob_rerun.outline/sting_StingSiFiveTuple_T_0204/sting/sifive/vector/vector_tgv_dev.conf}}

*Tempdasm file*

{{gamma25:/scratch/ishitashah/tgv_regression/sign_210_test_fails/federation/builds2/coreip_p670/sim/rerundir1_rob/rob_rerun.outline/sting_StingSiFiveTuple_T_0204/sting/sifive/vector/vector_tgv_dev.conf/temp.dasm}}",David Kravitz,Ishita Shah,Josh Smith,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,5fd15143b4a74900763834e0,607e26355431a500701f5aed,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{repository={count=1, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-06T19:08:51.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00w9r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,07:34.1,"06/Sep/22 7:07 PM;5fd15143b4a74900763834e0;This is another symptom of the MAL-2546 bug. I cherry-picked the commit in https://github.com/sifive/federation/pull/25866, and the test passed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] REN stall,[TGV] REN stall,Instruction decode and dispatch ,Dispatch ,,,MAL-2556,124834,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/6/2022 5:59,9/16/2022 6:36,9/28/2022 0:51,9/13/2022 8:54,,,,,,,,,,,Panda DR,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"Derived from: [https://sifive.atlassian.net/browse/MAL-2478|https://sifive.atlassian.net/browse/MAL-2478|smart-link] 

new error encountered: stall assertion firing at time {{2278322500 ps}}

{noformat}Error: ""/scratch/jenkins/archived-builds/performance-regression/score_guard_pcs/515/builds/coreip_p670/verilog/design/SiFive_RDU.sv"", 6379: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu: at time 2278322500 psassert failed (verification library): stall_REN Hang  @[RDU.scala 1409:9]
Fatal: ""/scratch/jenkins/archived-builds/performance-regression/score_guard_pcs/515/builds/coreip_p670/verilog/design/assertions/SiFive_RDU_assert.sv"", 772: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.SiFive_RDU_assert: at time 2278322500 ps
$finish called from file ""/scratch/jenkins/archived-builds/performance-regression/score_guard_pcs/515/builds/coreip_p670/verilog/design/assertions/SiFive_RDU_assert.sv"", line 772.{noformat}

 The pattern is like 

{noformat}# with LMUL 1, SEW 64, VL max
vmsne.vv v0, v0, v0
vmsne.vv v0, v0, v0
vmsne.vv v0, v0, v0{noformat}

Waveform: `{{scratch/nicolasb/federation/sparta/study/0080/188/waves.fsdb}}

Command to reproduce: {{/work/sparta/scripts/run_rtlsim.sh -v latest -c p67 -p 0080/188 -s vcs -w}}",Andrew Hanselman,Brian Grayson,Fu-Ching Yang,Ian Chuang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,Kathlene Magnus,Nicolas Brunie,,,,,,,609d7e1f5998a6006800dcc5,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,61aaae1d9615eb006f5ff922,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,5e137458efa19b0e976b5c7a,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2478,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,06/Sep/22 5:59 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;Snipaste_2022-08-23_15-09-40.png;https://sifive.atlassian.net/secure/attachment/77180/Snipaste_2022-08-23_15-09-40.png,06/Sep/22 5:59 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220825-035048.png;https://sifive.atlassian.net/secure/attachment/77181/image-20220825-035048.png,06/Sep/22 5:59 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220825-035254.png;https://sifive.atlassian.net/secure/attachment/77182/image-20220825-035254.png,06/Sep/22 5:59 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220825-035457.png;https://sifive.atlassian.net/secure/attachment/77183/image-20220825-035457.png,06/Sep/22 5:59 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220825-065512.png;https://sifive.atlassian.net/secure/attachment/77184/image-20220825-065512.png,06/Sep/22 5:59 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220825-065901.png;https://sifive.atlassian.net/secure/attachment/77185/image-20220825-065901.png,06/Sep/22 5:59 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220825-152851.png;https://sifive.atlassian.net/secure/attachment/77186/image-20220825-152851.png,06/Sep/22 5:59 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220825-153101.png;https://sifive.atlassian.net/secure/attachment/77187/image-20220825-153101.png,08/Sep/22 10:25 AM;ug:03c2888a-5ac7-445d-b700-4a271a824946;image-20220908-172509.png;https://sifive.atlassian.net/secure/attachment/77344/image-20220908-172509.png,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-08T10:42:05.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,32e58cb8d4449bad74bdaf11ec3790b329f8a385,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00w5b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,11:38.6,"07/Sep/22 10:11 AM;609d7e1f5998a6006800dcc5;As far as I can tell, the stall logic is behaving “correctly”. The accumulators do not have any additional virtual allocation space, so when a single ROB group contains a lot of instructions that require accumulators, the stall occurs and the ROB group cannot be closed. Because it can’t be closed, those same entries cannot be freed by the accumulator completion pointer in the ROB. A easy fix currently is to increase the number of accumulators to something like 16, with full intention of decreasing this again later. This stall can only occur when an open ROB group exists, it is not being closed, and REN is stalling on not enough free resources. 16 should be enough for P670 because an open group could at most claim 6 accumulators (group size - 1), DIS has no valid instructions (otherwise group would close), REN claims 4, for a total of 10 indexes required to make sure a REN stall does not close an open group.

Ideally, we just increase the # of colors for the accumulator to increase the virtual index space, but the accumulator PRA and IQ logic is implemented differently than S2V/V2S. This makes it difficult to just increase virtual entries. [https://sifive.atlassian.net/browse/MAL-2102?searchSessionId=4319b0f0-234b-4f02-aa6c-be125f4775ad&searchObjectId=118969&searchContainerId=11628&searchContentType=issue|https://sifive.atlassian.net/browse/MAL-2102?searchSessionId=4319b0f0-234b-4f02-aa6c-be125f4775ad&searchObjectId=118969&searchContainerId=11628&searchContentType=issue|smart-link] should address this properly by separating the PRA from the physical accumulator and adding IQ logic to block based on current free pointer.","08/Sep/22 7:43 AM;609d7e1f5998a6006800dcc5;[~accountid:5e1374fb7a22c90da0c60495] [~accountid:5e137458efa19b0e976b5c7a] Is this something Dabble had to deal with? And maybe requires a fix for? I think the proper solution is to change the configuration of the accumulators from (1 color, 8 entries) to (2 colors, 8 entries). This would give scalar REN enough resources to avoid this from happening. In the back of my mind, I’m still thinking through what it would take to move this from scalar REN to vector REN entirely, but I don’t have the bandwidth for that right now.",08/Sep/22 8:07 AM;5e137458efa19b0e976b5c7a;[~accountid:609d7e1f5998a6006800dcc5] we handle this in Dabble by only allowing one mask producing instruction per ROB entry so the deadlock is avoided. I believe this restriction was put in place because we thought that an instruction’s mask accumulator would be identified with its ROB ID.,"08/Sep/22 10:25 AM;609d7e1f5998a6006800dcc5;With 16 entries available in scalar REN, the core slowly makes its way through the stream of compares: 

!image-20220908-172509.png|width=1915,height=1085!",08/Sep/22 10:44 AM;609d7e1f5998a6006800dcc5;Merged temporary fix that increases # of accumulators to 16 so that this isn't blocking anyones progress. Will revisit with more data on possible alternatives.,08/Sep/22 10:44 AM;609d7e1f5998a6006800dcc5;[https://sifive.atlassian.net/browse/MAL-2571|https://sifive.atlassian.net/browse/MAL-2571|smart-link] ,"12/Sep/22 10:50 PM;61aaae1d9615eb006f5ff922;[~accountid:609d7e1f5998a6006800dcc5]'s fix helps lots of the microbenchmarks working on RTL, but there are some of the newly added microbenchmarks are failing due to the same stall_REN assertion. I reopened this ticket for status tracking. You can use the same way you did to reproduce the failed cases before. 

The workload ID of those failed cases are 

{noformat}0080/191
0080/192
0080/195
0080/196
0080/199
0080/200
0080/234
0080/235
0080/238
0080/240
0080/242
0080/244
0080/246
0080/248
0080/250
0080/251
0080/254
0080/255
0080/258
0080/259{noformat}",13/Sep/22 8:54 AM;61aaae1d9615eb006f5ff922;Ah. I see the assertion disappears with federation SHA 9e281e63185. I am going to close it for now. 😃 ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]:: Assertion:: assert(PopCount(prfWrSel(i).asUInt) <= 1.U),[TGV]:: Assertion:: assert(PopCount(prfWrSel(i).asUInt) <= 1.U),,,,,MAL-2555,124830,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Andrew Hanselman,609d7e1f5998a6006800dcc5,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,9/6/2022 3:26,9/16/2022 12:02,9/28/2022 0:51,9/9/2022 10:27,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error:*

Error: ""/scratch/naverath/sep-6/federation/builds/coreip_p670/verilog/design/assertions/SiFive_PPAOptimizedPRF_5_assert.sv"", 1142: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.prf.SiFive_PPAOptimizedPRF_5_assert: at time 770282500 ps
Assertion failed
at PRF.scala:324 assert(PopCount(prfWrSel(i).asUInt) <= 1.U)

*SHA1:*: ba9dee0fd96a069732337565e9c5604df8a9e08e
*config::* coreip_p670
*waves::* gamma25:://scratch/naverath/sep-6/federation/builds/coreip_p670/sim/sim/rerun.outline_assert_1/rat_default_T_0377/rat/default/waves.fsdb
*rerun. Outline::* Outline copied to /work/nicolasb/tgv_bug_outlines/rat/MAL-2555.outline


*Outline*

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": \[
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+MEM_ERROR_INJECT=._\.tag_array_.ext,0,1,32:._\.data_arrays_0_._ext,0,1,32:._\.syssram._ext,0,1,32:._\.island.\.lim\.syssram._ext,0,1,32:._\.tagged_tables_0_._ext,0,1,32:._\.base_table_0_.*ext,0,132"",
""+verbose""
],
""subdir"": ""rat_default_T_0377"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 3565252679
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",David Kravitz,Naveen Rathore,Nicolas Brunie,,,,,,,,,,,,,5fd15143b4a74900763834e0,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2554,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ba9dee0fd96a069732337565e9c5604df8a9e08e,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00w4f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,27:25.9,"09/Sep/22 10:27 AM;5fd15143b4a74900763834e0;After surfing some waves, and consulting with [~accountid:609d7e1f5998a6006800dcc5], we have determined this has the same root cause as MAL-2554. Closing as a duplicate",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]:: Assertion:: make sure we don't match tag on a source that's marked ready,[TGV]:: Assertion:: ,Execution Unit ,Iss Queue,,,MAL-2554,124820,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Highest,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,9/6/2022 2:35,9/21/2022 8:54,9/28/2022 0:51,9/13/2022 12:41,,,,,,,,,,,Panda DR,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error::*

Error: ""/scratch/naverath/sep-6/federation/builds/coreip_p670/verilog/design/SiFive_IssQEntry_108.sv"", 667: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.issueQueues_0.entries_0: at time 597082500 ps
assert failed (verification library): make sure we don't match tag on a source that's marked ready  @\[MallardUtil.scala 605:20]
Fatal: ""/scratch/naverath/sep-6/federation/builds/coreip_p670/verilog/design/assertions/SiFive_IssQEntry_108_assert.sv"", 134: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.issueQueues_0.entries_0.SiFive_IssQEntry_108_assert: at time 597082500 ps

*SHA1::* ba9dee0fd96a069732337565e9c5604df8a9e08e
*Config::* coreip_p670
*Waves::* gamma25::/scratch/naverath/sep-6/federation/builds/coreip_p670/sim/sim/rerun.outline_assert/rat_default_T_0972/rat/default/waves.fsdb
*rerun. Outline::* Outline copied to /work/nicolasb/tgv_bug_outlines/rat/MAL-2554.outline


*Outline*

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": \[
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+MEM_ERROR_INJECT=._\.tag_array_.ext,0,1,32:._\.data_arrays_0_._ext,0,1,32:._\.syssram._ext,0,1,32:._\.island.\.lim\.syssram._ext,0,1,32:._\.tagged_tables_0_._ext,0,1,32:._\.base_table_0_.*ext,0,132"",
""+verbose"",
""+verbose""
],
""subdir"": ""rat_default_T_0972"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 1432110735
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",Andrew Hanselman,Ishita Shah,Josh Smith,Naveen Rathore,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,609d7e1f5998a6006800dcc5,607e26355431a500701f5aed,5acffeafaa802f2a797a955c,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2555,MAL-2611,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,12/Sep/22 1:19 PM;ug:03c2888a-5ac7-445d-b700-4a271a824946;Screen Shot 2022-09-12 at 3.13.02 PM-20220912-201634.png;https://sifive.atlassian.net/secure/attachment/77475/Screen+Shot+2022-09-12+at+3.13.02+PM-20220912-201634.png,07/Sep/22 7:42 AM;ug:03c2888a-5ac7-445d-b700-4a271a824946;image-20220907-143554.png;https://sifive.atlassian.net/secure/attachment/77260/image-20220907-143554.png,,,,,,,,,,,,,,,ba9dee0fd96a069732337565e9c5604df8a9e08e,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-21T06:53:41.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,f4843d8c71b937e104871c528e54050a832626d3,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i00w27:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/25983/files],,,,,,,,,,,,,06:57.4,"06/Sep/22 9:06 AM;607e26355431a500701f5aed;This assertion is also seen for the core: *coreip_u8_minimal_vector*

*SHA:* [+ba9dee0+|https://simscope.internal.sifive.com/models/undefined--master--ba9dee0fd96a069732337565e9c5604df8a9e08e]

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.tag_array_.*ext,1,0,32:.*\\.data_arrays_0_.*ext,1,0,32:.*\\.syssram.*ext,1,0,32:.*\\.island.*\\.lim\\.syssram.*ext,1,0,32:.*\\.tagged_tables_0_.*ext,1,0,32:.*\\.base_table_0_.*ext,1,032""
  ],
  ""subdir"": ""rat_default_T_0675"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1463807795
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}","07/Sep/22 7:42 AM;609d7e1f5998a6006800dcc5;Uop sequences that use accumulators can have any uop write the final full register result, if executed out of order. The renamed destination register needs to be the same for all of the uops. This is done correctly in REN using the {{noRemapReq}} flag, but this causes the freelist to not properly stage the info into DIS for use during payload construction. Still thinking about how to best fix this. Probably pass in an additional flag for staging information to DIS properly. This bug resulted in a uop having old destination PR 0, and new destination PR 0. So the source tag ready was set twice by its own wakeup.

!image-20220907-143554.png|width=1236,height=1085!","12/Sep/22 1:19 PM;609d7e1f5998a6006800dcc5;Properly patched mapping with fix in [https://github.com/sifive/federation/pull/26025|https://github.com/sifive/federation/pull/26025|smart-link] :

!Screen Shot 2022-09-12 at 3.13.02 PM-20220912-201634.png|width=2003,height=480!

Note that all source infos (src 0/1, mask, old dest data 0/1) use prev mapping when applicable, and destination info (rd) uses the new mapping.

Still hitting an assertion on this test that I am triaging, but it does make it past the assertion from the initial ticket filing:

{noformat}Error: ""/scratch/verif/andrewh/mal-2554/builds/HEAD/coreip_p670/verilog/design/assertions/SiFive_PRA_5_assert.sv"", 207: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.vexPra.SiFive_PRA_5_assert: at time 682982500 ps                                                                                                                             
Assertion failed: Physical register  28 set as ready twice (only first conflicting id shown)

    at PRF.scala:88 assert(!(readyVec.asUInt & setVec).orR, ""Physical register %%d set as ready twice (only first conflicting id shown)"", firstRegSetTwice)


Fatal: ""/scratch/verif/andrewh/mal-2554/builds/HEAD/coreip_p670/verilog/design/assertions/SiFive_PRA_5_assert.sv"", 210: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.vexPra.SiFive_PRA_5_assert: at time 682982500 ps                                                                                                                             
$finish called from file ""/scratch/verif/andrewh/mal-2554/builds/HEAD/coreip_p670/verilog/design/assertions/SiFive_PRA_5_assert.sv"", line 210.{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]:: Assertion : VectorIotaUnit got un-ordered csid= 2 and previous csid= 0,[TGV]:: Assertion : VectorIotaUnit ,Execution Unit ,,,,MAL-2553,124815,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,9/6/2022 1:42,9/23/2022 11:11,9/28/2022 0:51,9/9/2022 14:57,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error*

Error: ""/scratch/naverath/sep-6/federation/builds/coreip_p670/verilog/design/assertions/SiFive_VectorIotaUnit_assert.sv"", 71: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_0.iotamod.SiFive_VectorIotaUnit_assert: at time 1623902500 ps
Assertion failed: VectorIotaUnit got un-ordered csid= 2 and previous csid= 0
at VectorIotaUnit.scala:64 assert(\!unOrderCsid, s""VectorIotaUnit got un-ordered csid=%%d and previous csid=%%d"", io.tgvVectorCmd.bits.csid, prevCsid)

*SHA1::* ba9dee0fd96a069732337565e9c5604df8a9e08e
*Config::* coreip_p670
*waves::* gamma25::./scratch/naverath/sep-6/federation/builds/coreip_p670/sim/sim/rerun.outline/rat_default_T_0976/rat/default/waves.fsdb
*rerun. Outline::* Outline copied to /work/nicolasb/tgv_bug_outlines/rat/MAL-2553.outline

*Outline*

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": \[
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+MEM_ERROR_INJECT=._\.tag_array_.ext,0,1,32:._\.data_arrays_0_._ext,0,1,32:._\.syssram._ext,0,1,32:._\.island.\.lim\.syssram._ext,0,1,32:._\.tagged_tables_0_._ext,0,1,32:._\.base_table_0_.*ext,0,132"",
""+verbose"",
""+verbose""
],
""subdir"": ""rat_default_T_0976"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 878247997
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))



Fix:

The cause of this issue is the bug in the locking mechanism in {{IssQ}} that ensure the in-order issuing for {{viota}} uops.

We decided to remove the in-order issuing constraint for {{viota}} and let {{VectorIotaUnit}} calculate the base count for every uop, thus the internal counter state is not required. 

The performance of {{viota}} is also improved because {{viota}} uops can now be issued OoO.",Brad Wu,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Naveen Rathore,Nicolas Brunie,,,,,,,,,62103777eb2978006893b778,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ba9dee0fd96a069732337565e9c5604df8a9e08e,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-11T10:04:06.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00w13:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,56:27.4,"09/Sep/22 2:56 PM;62103777eb2978006893b778;The cause of this issue is the bug in the locking mechanism in {{IssQ}} that ensure the in-order issuing for {{viota}} uops.

We decided to remove the in-order issuing constraint for {{viota}} and let {{VectorIotaUnit}} calculate the base count for every uop, thus the internal counter state is not required. 

The performance of {{viota}} is also improved because {{viota}} uops can now be issued OoO.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Healdsburg IssQ assertion: make sure we don't match tag on a source that's marked ready,Healdsburg IssQ assertion: ,,,,,MAL-2552,124782,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Cannot Reproduce,Julian Bailey,629ab2a89bc7150068d00cdf,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,9/5/2022 14:39,9/6/2022 10:47,9/28/2022 0:51,9/6/2022 9:59,,,,,,,,,,,,,RTL/IEX,,,,,,,,,0,,,,"I just hit this trying to run Coremark on Healdsburg.

{noformat}=== sitest found errors in test sim/benchmark_scores.outline/useries_coremark_tuned:
Error: ""/scratch/verif/johni/MAL-1638_master/federation/builds/coreip_healdsburg/verilog/design/SiFive_IssQEntry_96.sv"", 1202: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.iex.issueQueues_4.entries_14: at time 877282500 ps
assert failed (verification library): make sure we don't match tag on a source that's marked ready  @[MallardUtil.scala 605:20]{noformat}

* branch: master
* commit: ce81ceec86925c32b3f31672b910b01adfbc30f3
** Date:   Mon Aug 29 09:53:36 2022 -0700
* config: {{coreip_healdsburg}}
* test: {{./sitest @$federation/test-outlines/benchmark_scores.outline}}",John Ingalls,Julian Bailey,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,629ab2a89bc7150068d00cdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ce81ceec86925c32b3f31672b910b01adfbc30f3,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Software-Benchmark,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00vtr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,47:09.7,"06/Sep/22 9:59 AM;5bb6808b9ba2930990f81895;Newer RTL does not encounter this anymore, so I guess (hope) this got fixed by something else.  If it didn't, then we'll reopen this or open a new ticket.",06/Sep/22 10:47 AM;629ab2a89bc7150068d00cdf;Thanks [~accountid:5bb6808b9ba2930990f81895] I was just re-running the outline 🙂 Let me know\!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: LDArb timing-relaxed way enables should include selected way in MAL-2191,Assertion Failure: LDArb timing-relaxed ,LSU (Load Store Unit),LDPipes,,,MAL-2551,124773,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,John Ingalls,5bb6808b9ba2930990f81895,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,9/5/2022 6:18,9/9/2022 7:37,9/28/2022 0:51,9/5/2022 6:53,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"*Error:*

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/356/builds/coreip_p650_tiny_drq_nrq/verilog/design/SiFive_LDPipe.sv"", 5382: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LDPipes.LDPipes_1: at time 129882500 ps
assert failed (verification library): LDArb timing-relaxed way enables should include selected way in MAL-2191  @[LDPipe.scala 1848:16]{noformat}

The above assertion is triggered for {{lsu.LDPipes.LDPipes_1.io_ldArb_reqWinner_earlyValid}} asserted when {{lsu.LDPipes.LDPipes_1.io_ldArb_reqWinner_bits_wayEnVec[3:0] = 0xe }}& {{lsu.LDPipes.LDPipes_1.io_ldArb_reqWinner_bits_metaInfo_wayVec[3:0] = 0x1.}}

*Dump for quick look:*

{noformat}verif04:/scratch/saurabhs/mallard_master_356_xprop_137/federation/builds/coreip_p650_tiny_drq_nrq/sim/sim/LDPipe_assert.outline/torture_torture_T_0494/torture/torture{noformat}


To reproduce:

* Checkout commit: *ed83f90*
* Build *coreip_p650_tiny_drq_nrq*
* *rerun.outline*:
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""torture"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+clock_periph=2"",
    ""+clock_div0=2"",
    ""+clock_div1=2"",
    ""+clock_div2=2"",
    ""+clock_div3=2"",
    ""+clock_div4=2"",
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+enable_spike_cosim"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcTagArray.*ext,1,0,32:.*\\.cc_banks.*ext,1,0,20:.*\\.cc_dir_ext,0,1,32:.*\\.RamBank.*ext,1,0,25:.*\\.l2_tlb_ram_ext,1,0,25:.*\\.icTagArray.*ext,1,0,15:.*\\.icWayPredArray.*ext,1,0,32:.*\\.icDataArray.*ext,1,0,20:.*\\.TagRAM_ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+cosim_scoreboard_stall_time=1000000""
  ],
  ""subdir"": ""torture_torture_T_0494"",
  ""subtest"": ""torture"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 60202149
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""2000000""
  },
  ""program"": {
    ""torture_inbound"": true,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_inbound,8000e400:8000e800%20000400:20000800"",
      ""uvm_test_top,torture_read_inbound,20000000:20000240%8000c998:8000e108""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",John Ingalls,Josh Smith,Saurabh Singh,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2548,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2191,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-05T13:57:10.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25860,,,n/a,,,,,,,,,Simulation-Torture,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,No,,,,,,,,,,,,2|i00vrr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,42:57.1,05/Sep/22 6:42 AM;5acffeafaa802f2a797a955c;There was already a ticket filed for this same assertion in [https://sifive.atlassian.net/browse/MAL-2548|https://sifive.atlassian.net/browse/MAL-2548|smart-link] ,05/Sep/22 6:51 AM;607e26f781e7b900681be48c;[~accountid:5acffeafaa802f2a797a955c] I’ll close this as duplicate of [https://sifive.atlassian.net/browse/MAL-2548|https://sifive.atlassian.net/browse/MAL-2548|smart-link] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]:: COSIM VS RTL MCAUSE MISMATCH for vmv1r.v (PC=0x80009d3a),[TGV]:: COSIM VS RTL MCAUSE MISMATCH,,,,,MAL-2550,124772,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,9/5/2022 5:56,9/16/2022 12:02,9/28/2022 0:51,9/12/2022 15:32,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"*Error::*

\[COSIM-ERROR]\[0] COSIM VS RTL MCAUSE MISMATCH
\[COSIM-ERROR]\[0] Dut state: CSR_TIMER=73502 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x000000008000a274 | MCAUSE=0x0000000000000002 | VSTART=0 | VL=16 | SEW=16 | LMUL=m2 | VSEGELT=0
\[COSIM-ERROR]\[0] Cosim state: CSR_TIMER=0 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x000000008000a274 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=16 | SEW=16 | LMUL=m2 | VSEGELT=0

*Debug-Info::*
+Cosim-trace+
core   0: 0x0000000080009d30 (0x00967057) vsetvli zero, a2, e16, m2, tu, mu
core   0: 0x0000000080009d36 (0x0809b703) ld      a4, 128(s3)
core   0: 3 0x0000000080009d36 (0x0809b703) x14 0x4e11efb71aa3bfa7 mem 0x000000008000c0e8-0x000000008000c0e8
core   0: 0x0000000080009d3a (0x9ef03557) vmv1r.v v10, v15
core   0: 3 0x0000000080009d3a (0x9ef03557) e16 m2 l16 v10 0x8007ffffffffffff00000000000030

+Design-trace::+
C                   0:      73501 \[1] pc=\[0000000080009d36] W\[r14=4e11efb71aa3bfa7]\[1] R\[r19=000000008000c068] R\[r 0=0000000000000000] inst=\[0809b703] ld      a4, 128(s3)
C                   0:      73689 \[1] pc=\[000000008000a274] W\[r 5=0000000000004000]\[1] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[00006291] c.lui   t0, 0x4

*SHA1::*  6d12f8efc63fb9eebec7fd21991ea8ff0dc59cb1
*Config::* coreip_p670
*waves::* gamma25:://scratch/naverath/sep-5/federation/builds/coreip_p670/sim/sim/rat.outline/rat_default_T_0172/rat/default/waves.fsdb
*rerun. Outline:*   Outline copied to /work/nicolasb/tgv_bug_outlines/sting/MAL-2550.outline

*Outline*

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": \[
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+verbose""
],
""subdir"": ""rat_default_T_0172"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 3785334332
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",David Kravitz,Josh Smith,Kira Tsao,Naveen Rathore,Nicolas Brunie,,,,,,,,,,,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,5e1a4f5ec578120daca5ff8e,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,05/Sep/22 11:59 PM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220906-064703.png;https://sifive.atlassian.net/secure/attachment/77162/image-20220906-064703.png,06/Sep/22 7:38 PM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220907-023828.png;https://sifive.atlassian.net/secure/attachment/77210/image-20220907-023828.png,,,,,,,,,,,,,,,6d12f8efc63fb9eebec7fd21991ea8ff0dc59cb1,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-12T15:29:42.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00vrj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26005/files],,,,,,,,,,,,,59:12.6,"05/Sep/22 11:59 PM;5e1a4f5ec578120daca5ff8e;The {{mcause}} is 2 so the dut and cosim become diverge and the reason is the last {{vmv1r.v}} been treated as illegal instruction.

After debugging, we found the patched {{vlmul_mag}} in [REN stage|https://github.com/sifive/federation/blob/master/mallard/src/main/scala/core/mallard/RDU.scala#L1332] has been overwritten because of {{vsetColorMatch_ID}}
Then the {{xcptVector_REN}} raised

!image-20220906-064703.png|width=1516,height=184!","06/Sep/22 2:09 AM;5e1a4f5ec578120daca5ff8e;I have a small [fix|https://github.com/sifive/federation/pull/25869] that can make the {{vmv1r}} been executed and retired correctly, but another unrelated(maybe) assertion will trigger.

{noformat}Error: ""/scratch/kirat/karuizawa/federation/builds/coreip_p670/verilog/design/SiFive_LDPipe.sv"", 15800: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LDPipes.LDPipes_1: at time 1480722500 ps
assert failed (verification library): LDArb timing-relaxed way enables should include selected way in MAL-2191  @[LDPipe.scala 1848:16]{noformat}","06/Sep/22 2:25 AM;6235105a3eacc50071ff07ec;Hi [~accountid:5e1a4f5ec578120daca5ff8e] 
This issue already fixed on master with [https://sifive.atlassian.net/browse/MAL-2548|https://sifive.atlassian.net/browse/MAL-2548|smart-link] 
Please create PR for this fix.","06/Sep/22 2:30 AM;5e1a4f5ec578120daca5ff8e;[~accountid:6235105a3eacc50071ff07ec] 

Sure. Let me try to cherry-pick the commit and see if the test pass or not then create the PR.","06/Sep/22 5:50 AM;6065017e90e3950069cf01c5;[~accountid:5e1a4f5ec578120daca5ff8e] , could you also trace the stall signals ({{stall_ID}} and {{stall_REN}}) ?","06/Sep/22 7:38 PM;5e1a4f5ec578120daca5ff8e;[~accountid:6065017e90e3950069cf01c5] here’s the stall signals

!image-20220907-023828.png|width=1342,height=244!",06/Sep/22 7:40 PM;5e1a4f5ec578120daca5ff8e;[~accountid:6235105a3eacc50071ff07ec] after my quick fix and cherry-pick the fix of [https://sifive.atlassian.net/browse/MAL-2548|https://sifive.atlassian.net/browse/MAL-2548|smart-link] this test can be passed. But we may need further investigation of this quick fix to ensure the functionality is correct.,06/Sep/22 11:29 PM;6065017e90e3950069cf01c5;Thank you [~accountid:5e1a4f5ec578120daca5ff8e] ,"09/Sep/22 10:29 AM;5fd15143b4a74900763834e0;Can we get this closed? If not, what is the blocker?","09/Sep/22 10:32 AM;5e1a4f5ec578120daca5ff8e;[~accountid:5fd15143b4a74900763834e0] The PR is still under review but didn’t get any update. The commit last time is not the best way to fix, but I push another one. I prefer letting Josh to take a look of my latest commit.","09/Sep/22 10:34 AM;5fd15143b4a74900763834e0;Please tag [~accountid:5acffeafaa802f2a797a955c] in a comment in your PR so he gets a notification to take a look. If there’s something specific you want to ask, that could help focus his attention to your concern(s).","09/Sep/22 10:49 AM;5acffeafaa802f2a797a955c;I don’t really like the way that {{extVConfig_ID/REN}} is being handled, with a bunch of sequential {{when()}} blocks:

{noformat}      extVConfig_ID := extVConfig_REN(i)

      // if REN stage is enabled (ID nor REN stalled), we propagate the vl/type/vstartZero values
      // determined during ID to the REN (per lane)
      when (enable_REN.take(i+1).reduce(_ || _)) {
        newVlVtype_ID             := true.B
        extVConfig_ID.vtype.valid := preVCfg_ID(i).vtype.valid
        extVConfig_ID.vl.valid    := preVCfg_ID(i).vl.valid
        when (preVCfg_ID(i).vtype.valid) {
          extVConfig_ID.vtype.bits := preVCfg_ID(i).vtype.bits
        }
        when (preVCfg_ID(i).vl.valid) {
          extVConfig_ID.vl.bits := preVCfg_ID(i).vl.bits
        }
        newVStartZero_ID         := true.B
        extVConfig_ID.vstartZero := preVCfg_ID(i).vstartZero
      }

      when (vsetColorMatch_ID(i)) {
        newVlVtype_ID       := true.B
        extVConfig_ID.vtype := preVCfg_ID(i).vtype
        extVConfig_ID.vl    := preVCfg_ID(i).vl
      }

      when (loadVConfig_REN) {
        newVlVtype_ID       := true.B
        extVConfig_ID.vl    := Pipe(vsetPRAReadValid_ID, io.vsrfReadResp.get.vl,           0)
        extVConfig_ID.vtype := Pipe(vsetPRAReadValid_ID, io.vsrfReadResp.get.vtype.unpack, 0)
      }

      when (resetVStartAfterFlush) {
        newVStartZero_ID         := true.B
        extVConfig_ID.vstartZero := (io.vstart.get === 0.U) || rob.io.hasV
      }

      // https://github.com/riscv/riscv-v-spec/blob/53ea56e3a36e86b9f65caa38a1c78425d94580fa/v-spec.adoc#vector-start-index-csr-vstart
      // Normally, vstart is only written by hardware on a trap on a vector instruction, with the vstart value representing the element
      // on which the trap was taken (either a synchronous exception or an asynchronous interrupt),
      // and at which execution should resume after a resumable trap is handled.
      when (io.robExcReq_E1.valid) {
        newVStartZero_ID         := true.B
        extVConfig_ID.vstartZero := Mux(io.robExcReq_E1.bits.vFaultElem.get.valid, io.robExcReq_E1.bits.vFaultElem.get.bits === 0.U,
                                                                                   io.vstart.get === 0.U)
      }{noformat}

Because the {{vsetColorMatch_ID}} {{when}} block comes after the {{enable_REN}} block, that’s why we’re overriding vconfig for instructions in REN even though they are stalling in REN.

Can we also fix this bug by just re-ordering those two {{when()}} blocks?","09/Sep/22 10:54 AM;5e1a4f5ec578120daca5ff8e;[~accountid:5acffeafaa802f2a797a955c] ok, I just think the blocks that having these sequences because of some reasons. I’ll try to provide a fix from just reordering these blocks. Thanks for the suggestion.","12/Sep/22 2:12 AM;5e1a4f5ec578120daca5ff8e;It can’t be fixed by just changing the order b/c the {{enable_REN}} trigger first but followed by {{stall_REN}}, and the {{vsetColorMatch_ID(i)}} is trigger while {{stall_REN}} occurs.

I tried using {{enable_REN}} block to qualify {{vsetColorMatch_ID(i)}} in this [PR|https://github.com/sifive/federation/pull/26005], the issue can be fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: SiFive_RDU_assert : More than one JALR detected in ID stage  ,Assertion Failure: RDU_assert :,,,,,MAL-2549,124770,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Adam George,61b2a458657a0500706b9c39,Rakesh Palakurthi,62350e943eacc50071ff0753,Rakesh Palakurthi,62350e943eacc50071ff0753,9/5/2022 5:37,9/8/2022 21:38,9/28/2022 0:51,9/6/2022 11:15,,,,,,,,,,,Panda DR,,RTL/Frontend,,,,,,,,,0,,,,"Test is failing with below error:

{noformat}COSIM-WARNING][0] COSIM VS RTL LOAD_INFO size mismatch. COSIM: 0 vs DUT: 1
Error: ""/scratch/rakeshp/mallard_0905/fix_run/federation/builds/coreip_p55_3w_high_perf/verilog/design/SiFive_RDU.sv"", 3599: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu: at time 6275162500 ps
assert failed (verification library): More than one JALR detected in ID stage  @[RDU.scala 667:9]

Fatal: ""/scratch/rakeshp/mallard_0905/fix_run/federation/builds/coreip_p55_3w_high_perf/verilog/design/assertions/SiFive_RDU_assert.sv"", 386: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.SiFive_RDU_assert: at time 6275162500 ps

$finish called from file ""/scratch/rakeshp/mallard_0905/fix_run/federation/builds/coreip_p55_3w_high_perf/verilog/design/assertions/SiFive_RDU_assert.sv"", line 386.
{noformat}



local run path:

verif03:/scratch/rakeshp/mallard_0905/fix_run/federation/builds/coreip_p55_3w_high_perf/sim/sim/rerun.outline/sting_StingPmpTuple_T_0217/sting/valtrix/algorithms/pmp/load_acc_fault_usrd_pmp_regn_tor_xxxwnr.conf



build:  [+coreip_p55_3w_high_per+|https://simscope.internal.sifive.com/tests/?regr=fed%2fmaster%2fnightly-mallard%2f356&build=coreip_p55_3w_high_perf.vcs]

simscope:  [https://simscope.internal.sifive.com/sigs/749/cmn3ry1m6et6|https://simscope.internal.sifive.com/sigs/749/cmn3ry1m6et6]



rerun.outline:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingPmpTuple_T_0217"",
  ""subtest"": ""valtrix/algorithms/pmp/load_acc_fault_usrd_pmp_regn_tor_xxxwnr.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 651656482
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Adam George,Josh Smith,Megan Wachs,Rakesh Palakurthi,,,,,,,,,,,,61b2a458657a0500706b9c39,5acffeafaa802f2a797a955c,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,62350e943eacc50071ff0753,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2508,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ed83f90,Requires further investigation,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-06T11:13:44.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,It might be worth knowing what versions this impacts but we aren't going to publish it for customers,CAT-D,,,,,,,,,,1. BRC: Should not Publish,,,,,,,,,,f76cb8a,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00vr3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,27:09.9,05/Sep/22 6:27 PM;61b2a458657a0500706b9c39;Can you populate the ‘Affects Commit’ field?,05/Sep/22 11:02 PM;61b2a458657a0500706b9c39;This is an assertion issue. The second JALR is due to a misaligned branch target. The assertion needs to check for replay on each of the opcodes.,06/Sep/22 11:15 AM;61b2a458657a0500706b9c39;Qualified assertion with per-instruction replay attribute.,06/Sep/22 11:30 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;this is marked as Resolved Done but unclear to me that the fix has hit master yet? Can the PR that fixed it be linked with this ticket number? (EDIT: I think you did the right thing just looking too soon for the Jira automation. apologies),"08/Sep/22 9:38 PM;61b2a458657a0500706b9c39;Sorry, I made a quick edit to the PR immediately after creating it to fix the linking issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion::: LDArb timing-relaxed way enables should include selected way in MAL-2191,Assertion::: LDArb timing-relaxed,,,,,MAL-2548,124755,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,9/5/2022 0:54,9/8/2022 14:04,9/28/2022 0:51,9/5/2022 10:48,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"*Error::*

*Error::*

Error: ""/scratch/naverath/sep-5/federation/builds/coreip_p670/verilog/design/SiFive_LDPipe.sv"", 5433: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LDPipes.LDPipes_1: at time 9017622500 ps
assert failed (verification library): LDArb timing-relaxed way enables should include selected way in MAL-2191  @\[LDPipe.scala 1848:16]
Fatal: ""/scratch/naverath/sep-5/federation/builds/coreip_p670/verilog/design/assertions/SiFive_LDPipe_assert.sv"", 447: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LDPipes.LDPipes_1.SiFive_LDPipe_assert: at time 9017622500 ps
$finish called from file ""/scratch/naverath/sep-5/federation/builds/coreip_p670/verilog/design/assertions/SiFive_LDPipe_assert.sv"", line 447.

*config::* coreip_p670
*SHA1::*  6d12f8efc63fb9eebec7fd21991ea8ff0dc59cb1
*waves::* gamma25:://scratch/naverath/sep-5/federation/builds/coreip_p670/sim/sim/rerun.outline_wrdata/sting_StingSiFiveTuple_T_0294/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb
*rerun. Outline:* Outline copied to /work/nicolasb/tgv_bug_outlines/sting/MAL-2548.outline

*Outline*

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""sting"",
""raw_plusargs"": \[
""+cosim_scoreboard_trap_epc_count=128"",
""+cosim_scoreboard_stall_time=1000000"",
""+axi_mem_latency_cycles=40"",
""+axi_mem_dither_cycles=20"",
""+amba_vip_select=2"",
""+gdi_amba_test_enable=1"",
""+gdi_tlc_test_enable=1"",
""+pl2_randomBlockDirWrFifoEnable=1"",
"""",
""+verbose"",
""+verbose""
],
""subdir"": ""sting_StingSiFiveTuple_T_0294"",
""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 338927020
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""reset_vector_scheme"": ""first_mem_periph_sys""
},
""uvm"": {
""set_config_string"": \[
""uvm_test_top,torture_read_inbound,10101010:80808080"",
""uvm_test_top,torture_inbound,10101010:80808080""
],
""testname"": ""torture_test""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",David Kravitz,I-Cheng Cheng,Josh Smith,Naveen Rathore,,,,,,,,,,,,5fd15143b4a74900763834e0,5d7bfdaa003e040c3e175060,5acffeafaa802f2a797a955c,6235105a3eacc50071ff07ec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2551,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2191,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6d12f8efc63fb9eebec7fd21991ea8ff0dc59cb1,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-05T13:57:10.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25860,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00vnr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,58:07.1,05/Sep/22 4:58 AM;5fd15143b4a74900763834e0;I don’t believe this is a TGV-specific bug,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] transform multiple of VLEN vslide* into rename-only,,,,,,MAL-2547,124753,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Lowest,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/5/2022 0:50,9/5/2022 6:44,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,,,,"For {{vslideup.vi}}, and {{vslidedown.vi}}, it could be determined during sequencing that the bit slide amount is a multiple of VLEN: {{rs1 * SEW = k * VLEN}}, in such cases it might be possible to perform the operation only through proper register renaming.",Josh Smith,Nicolas Brunie,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00vnb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Div output not killed properly,[TGV] Div output,Execution Unit ,,,,MAL-2546,124725,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,9/4/2022 21:03,9/8/2022 12:27,9/28/2022 0:51,9/8/2022 12:27,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"Even after cherry-picking the fix(es) for [https://sifive.atlassian.net/browse/MAL-2535|https://sifive.atlassian.net/browse/MAL-2535|smart-link], [https://sifive.atlassian.net/browse/MAL-2538|https://sifive.atlassian.net/browse/MAL-2538|smart-link], and [https://sifive.atlassian.net/browse/MAL-2541|https://sifive.atlassian.net/browse/MAL-2541|smart-link], still seeing ROB completion count underflows.

I’m not an expert in the divider completion behavior, but it looks like a flush is coming shortly after {{divRunning}} deasserts. It looks like the first time {{divTagInjecting}} asserts, the completion is successfully blocked by {{divStagedKillUnqual}}. However, 2 cycles later, {{divTagInjecting}} asserts again and the kill signal is no longer around.

My theory is that {{divKill}} never asserts because {{divRunning}} has already deasserted. Maybe the equation should also include {{divOutValid}}?",David Kravitz,Nicolas Brunie,,,,,,,,,,,,,,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Commit is 5262ccaeb83 plus cherry picks of the commits for the div fix PR,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-06T19:08:52.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/81df08abc3e07a96e5baf40fb34a1ccedcba86a6,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,100,,,No,,,,,,,,,,,,2|i00vhb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Sep/22 9:06 PM;5fd15143b4a74900763834e0;Well, that posted prematurely. This is how the work area was built:

{noformat}0f7447064ff (HEAD -> master) [MAL-2535] review feedback: refactoring
12666ab0a81 [MAL-2538] fixing div kill on start
449ce547734 [MAL-2535] fixing div kill qualification during div tag injection
4519f157fa0 Merge branch 'master' of github.com:sifive/federation
5262ccaeb83 (origin/master, origin/HEAD) [MAL-2539] Don't blame banked freelist if not stalled there (#25834){noformat}


And an outline:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0066"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 848474627
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Outline copied to /work/nicolasb/tgv_bug_outlines/sting/MAL-2546.outline",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU timing feasibility: Sum-Addressed-Decoder (SAD) read L1DC Way Predictor,,,,,,MAL-2545,124724,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,9/4/2022 21:02,9/6/2022 9:13,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,Timing,,,,,,,,0,,,,"The L1 D-Cache Way Predictor is a top design critical path in our microarchitecture,.  Now that it is built using flops in Healdsburg [https://sifive.atlassian.net/browse/MAL-1131|https://sifive.atlassian.net/browse/MAL-1131|smart-link], we could speed it up by using the [https://en.wikipedia.org/wiki/Sum-addressed_decoder|https://en.wikipedia.org/wiki/Sum-addressed_decoder|smart-link] logic technique.  We couldn’t do this before using SRAMs from the foundry which didn’t have SAD-indexed options.

In the timing report in [https://sifive.atlassian.net/browse/MAL-1906|https://sifive.atlassian.net/browse/MAL-1906|smart-link], it looks like it's ~60% of the cycle before even _starting_ the adder in the LSTA stage, because we also do data steering from LDF too.

We could:

# at least pull some mux control setup forward from the LSTR stage into LSTA, essentially pre-decoding some select bits, at the cost of more flops.
# Try performing the whole L1 D-Cache Way Predictor read, allowing us plenty of time to reinstate {{wayPredMatchL1dcDataEn=true}} in the P650 and Healdsburg configs after [https://sifive.atlassian.net/browse/MAL-2191|https://sifive.atlassian.net/browse/MAL-2191|smart-link], and expand the {{vAddrHashBits}} from 4 to 7.
I'm unsure about the feasibility of this traverse+SAD+read in 40% of a cycle, but I agree it's worth trying as a feasibility study.

Similarly, we could also use this for faster indexing into the L1 D-Cache Tag and/or L1 DTLB flop arrays.",Brian Grayson,John Ingalls,Shuzhi Hou,,,,,,,,,,,,,5e1371705361330daaeaf389,5bb6808b9ba2930990f81895,6287d9ec0685de006fd36743,,,,,,,,,,,,,,,,,,,,MAL-1906,MAL-1131,MAL-2191,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00vh3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,20,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] VRDU clock gating improvement,,,,,,MAL-2544,124674,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,9/2/2022 17:02,9/9/2022 7:17,9/28/2022 0:51,9/9/2022 7:17,,,,,,,,,,,,,Power,TGV_RTL/RDU,,,,,,,,0,,,,"When running Dhrystone, {{vrduClockEn_q }}had some switching activity because the corresponding {{keepAwake }}includes {{io_flushReq_valid}}, but this should be valid only in the case that something in RHF needs to be flushed
There is already a signal called {{rhfRewindStart }}which is enabled only when something in RHF needs to be flushed. So, this will be included instead of {{io_flushReq_valid}} to keep awake the VRDU module.

!image-20220903-000720.png|width=3416,height=1128!",Cristóbal Ramirez Lazo,,,,,,,,,,,,,,,62632262d7f1b80069c030b8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,02/Sep/22 5:09 PM;ug:0b24fe9c-e6cb-459c-8913-16efe143c42c;image-20220903-000720.png;https://sifive.atlassian.net/secure/attachment/77010/image-20220903-000720.png,02/Sep/22 5:11 PM;ug:0b24fe9c-e6cb-459c-8913-16efe143c42c;p670_dhrystone-20220902-235213.PNG;https://sifive.atlassian.net/secure/attachment/77011/p670_dhrystone-20220902-235213.PNG,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-09T07:14:44.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,a03589778d3bf1a4220b0dbb3f14c535d76ea6ce,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,100,,,,,,,,,,,,,,,2|i00v5z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Sep/22 5:11 PM;62632262d7f1b80069c030b8;!p670_dhrystone-20220902-235213.PNG|width=2533,height=530!

After the modification, all clocks (vrdu, baler, vex, and x2y) are Idle when running Dhrystone. Waiting for the PowerArtists results.","08/Sep/22 10:18 AM;62632262d7f1b80069c030b8;On 09/08/2022 power results for Dhrystone are the following:

{adf:display=block}
{""type"":""table"",""attrs"":{""isNumberColumnEnabled"":false,""layout"":""default"",""localId"":""dbb6fef5-64b3-46e6-8dba-204aba7df38b""},""content"":[{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Instance: /SiFive_CoreIPSubsystem""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Power Unit: mW""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Category                         ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Internal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Switching""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Leakage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Total""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""register""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""31.606""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""2.488""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""10.066""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""44.160""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""logic                             ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""32.483""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""49.794""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""11.072""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""93.349""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""memory""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""34.555""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.066""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""31.732""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""66.353""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""clock""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""6.671""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""19.553""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.386""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""26.610""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Subtotal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""105.315""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""71.901""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""53.256""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""230.472""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Percentage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""45.70%""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""31.20%""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""23.11%""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""100.00%""}]}]}]}]}
{adf}

{adf:display=block}
{""type"":""table"",""attrs"":{""isNumberColumnEnabled"":false,""layout"":""default"",""localId"":""8774ec39-33e1-4887-aa87-e93fd0bf28d2""},""content"":[{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Power Unit: mW""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Category                         ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Internal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Switching""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Leakage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Total""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""register""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.093""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.000""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""1.594""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""1.687""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""logic                             ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.093""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.157""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""3.057""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""3.307""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""clock""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.022""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.085""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.060""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.167""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Subtotal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.208""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.242""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""4.711""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""5.161""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Percentage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""4.03%"",""marks"":[{""type"":""strong""}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""4.69%%"",""marks"":[{""type"":""strong""}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""91.28%"",""marks"":[{""type"":""strong""}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""100.00%"",""marks"":[{""type"":""strong""}]}]}]}]}]}
{adf}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
WG + HYP : data traffic in HS mode not denied from sideband,WG + HYP : data traffic in HS mode,,,,,MAL-2543,124643,,Bug,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Abderrahmane Sensaoui,5e0d62b80242870e996e9bee,Mohammed El Harhar,5f1eda46170ffc0023b1ebf7,Mohammed El Harhar,5f1eda46170ffc0023b1ebf7,9/2/2022 10:25,9/23/2022 12:49,9/28/2022 0:51,,,,,,,,,,,,,,RTL/Tile,,,,,,,,,0,,,,"In HS mode, test mlwid tagged transaction read/write into sideband through wgchecker. 

Read mismatch has been noticed with data leak. Sequence is Read(operation 1,denied) => Write(operation 2, denied) => REad(operation 3,denied). Read mismatch during operation 3.   

Worldguard checker configuration : wid trusted in read-write mode, wid 3 in read-write mode
Slot range : \[0x0800_0000,0x083c_000]
Test address : 0x0800_1000 (initialized to 0x5555)
Transaction wid : 1
core mode : HS

Transaction sequence :

* Step 1 : Read at 0x0800_1000 with wid 1 
** => Read 0x0000 as epxected since denied read,
** => wg error register updated with ack=1,opcode=0(read),addres=0x0800_1000
* Step 2 : Write 0xAAAA at 0x0800_1000
* Step 3 Read at 0x0800_1000
** => Mismtach on read 0xAAAA, expected to read 0x0000 as wid=1 is not allowed
** => wg error register remains with ack=1,opcode=0,addres=0x0800_1000 from step 1 (ack not clear from step 1)",Abderrahmane Sensaoui,Anthony Hung,Megan Wachs,Mohammed El Harhar,,,,,,,,,,,,5e0d62b80242870e996e9bee,5a81f04f2fa8952d487e916b,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,5f1eda46170ffc0023b1ebf7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6a081aeb366b24bcfc722e002108c1ca68456e58,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00uz3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"
hash : 6a081aeb366b24bcfc722e002108c1ca68456e58
configuration : coreip_u8_maxed_out

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""worldguard/tests/wg_hyp/hs_traffic"",
  ""subdir"": ""hyp_traffic00"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1791095845
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""env"": ""abi"",
    ""cppmacros"": [
      ""LOG_LEVEL=LOG_NONE""
    ]
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,19:07.3,13/Sep/22 11:19 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;[~accountid:5e0d62b80242870e996e9bee]  any update on this ticket (asking for BRC),13/Sep/22 11:20 AM;5e0d62b80242870e996e9bee;[~accountid:557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66] not yet. Planning to work on all mallard WG ticket this week,"14/Sep/22 1:28 AM;5e0d62b80242870e996e9bee;I do not see any read after you write 0xAAAA at 0x0800_1000
this write is denied (I can see the denied bit on TL channel D). 
the error register is not updated because ack was not acknowledged.

Maybe you can help me understand what the software code is like (cc [~accountid:5a81f04f2fa8952d487e916b] )","17/Sep/22 1:35 PM;5a81f04f2fa8952d487e916b;{noformat}       // Switch non-trusted wid        
       goto_priv(PRIV_HS);
       if _DEBUG {printf(""\n HS mode  "");}      
    
       // checks read
       data=*pword[1];
       if (is_wgchecker_bypass)
       {
           if ( data != 0x5555 )        
             EXIT(); 
       }
       else
       {
           if ( data != 0x0000 )
             EXIT(); 
       }
    
       *pword[1]=0xAAAA;                

       // checks read
       data=*pword[1];

       if (is_wgchecker_bypass)
       {
           if ( data != 0xAAAA )
             EXIT();
       }
       else
       {
           if ( data != 0x0000 )
             EXIT();
       }
{noformat}

[~accountid:5e0d62b80242870e996e9bee] the above is the source code:

# line 6 is read
# line 18 is write
# line 21 is read","17/Sep/22 1:39 PM;5a81f04f2fa8952d487e916b;[~accountid:5e0d62b80242870e996e9bee] the following shows the read / write / read instructions at addr 0x800_1000:



{noformat}
36680:C                   0:      43125 [1] pc=[00000000800097e4] W[r15=0000000008001000][1] R[r 8=0000000080125238] R[r 0=0000000000000000] inst=[f3843783] ld      a5, -200(s0)
36681:C                   0:      43155 [1] pc=[00000000800097e8] W[r15=0000000000000000][1] R[r15=0000000008001000] R[r 0=0000000000000000] inst=[0000439c] c.lw    a5, 0(a5)
36690:C                   0:      43546 [1] pc=[0000000080009824] W[r15=0000000008001000][1] R[r 8=0000000080125238] R[r 0=0000000000000000] inst=[f3843783] ld      a5, -200(s0)
36693:C                   0:      43553 [1] pc=[000000008000982e] W[r 0=0000000000000000][0] R[r15=0000000008001000] R[r14=000000000000aaaa] inst=[0000c398] c.sw    a4, 0(a5)
36694:C                   0:      43554 [1] pc=[0000000080009830] W[r15=0000000008001000][1] R[r 8=0000000080125238] R[r 0=0000000000000000] inst=[f3843783] ld      a5, -200(s0)
36695:C                   0:      43554 [1] pc=[0000000080009834] W[r15=000000000000aaaa][1] R[r15=0000000008001000] R[r 0=0000000000000000] inst=[0000439c] c.lw    a5, 0(a5)
{noformat}","22/Sep/22 9:36 AM;5a81f04f2fa8952d487e916b;800_1000 is CC sideband, we are not sure if this is correct behaviour

This is the same behaviour on CC + AXI4",23/Sep/22 12:49 PM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;This is getting marked as not affecting previously because there is no product with this combination of features.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] fix kill qualification for horizontal adder during tag progress in pipeline,,,,,,MAL-2542,124622,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,9/2/2022 9:09,9/16/2022 12:02,9/28/2022 0:51,9/14/2022 19:42,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,Nice catch by [~accountid:5e1a4f5ec578120daca5ff8e] during [https://sifive.atlassian.net/browse/MAL-2535|https://sifive.atlassian.net/browse/MAL-2535|smart-link] / [https://sifive.atlassian.net/browse/MAL-2538|https://sifive.atlassian.net/browse/MAL-2538|smart-link] reviews,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Kira Tsao,Nicolas Brunie,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,MAL-2604,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2618,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-14T19:19:12.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00uuf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26066/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion Failure: Vex PRF write should only be enabled for a valid result,[TGV] Assertion Failure: Vex PRF write,Execution Unit ,Vex pipe,,,MAL-2541,124593,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Highest,Duplicate,Kira Tsao,5e1a4f5ec578120daca5ff8e,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,9/2/2022 5:41,9/8/2022 20:37,9/28/2022 0:51,9/4/2022 10:14,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"We see the below assertion failure 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_200_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_VexPipe_1_assert.sv"", 1426: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_1.SiFive_VexPipe_1_assert_0: at time 4291962500 ps
Assertion failed: Vex PRF write should only be enabled for a valid result

    at VexPipe.scala:2037 assert(!(io.rfWriteReq_WB(i).valid && !instValid_WB(i)), ""Vex PRF write should only be enabled for a valid result"")
Fatal: ""/scratch/ishitashah/tgv_regression/sign_200_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_VexPipe_1_assert.sv"", 1435: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_1.SiFive_VexPipe_1_assert_0: at time 4291962500 ps{noformat}

*SHA*: 4861f9c

*config*: coreip_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0101"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 4014115369
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath*

{{gamma25:/scratch/ishitashah/tgv_regression/sign_200_test_fails/federation/builds2/coreip_p670/sim/rerundir1_vex/vex_rerun.outline/sting_StingSiFiveTuple_T_0101/sting/sifive/vector/vector_tgv_dev.conf}}",David Kravitz,Ishita Shah,Kira Tsao,,,,,,,,,,,,,5fd15143b4a74900763834e0,607e26355431a500701f5aed,5e1a4f5ec578120daca5ff8e,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{repository={count=1, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-04T10:52:22.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00uo7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,14:30.4,04/Sep/22 10:14 AM;5fd15143b4a74900763834e0;Cherry-picked the commits for MAL-2535 and MAL-2538 and confirmed they fix this failure. Hopefully we can get them merged soon.,04/Sep/22 10:16 AM;5e1a4f5ec578120daca5ff8e;[~accountid:5fd15143b4a74900763834e0] Just did the same thing this afternoon. Confirm this is a duplicate issue which introduced by me and can be resolved by commit in the PR that David mentioned.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion failed: RAS forward target was incorrect,Assertion failed: RAS forward target,IFU (Instruction Fetch Unit),RAS (Return Address Stack),,Refer https://github.com/sifive/arch-specs/blob/master/core/mallard_mas.adoc#544-return-address-stack-ras,MAL-2540,124575,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Cyril Bresch,5fa5f3f5b45b2e0074939e18,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,9/2/2022 2:13,9/23/2022 12:00,9/28/2022 0:51,9/8/2022 0:04,,,,,,,,,,,,,RTL/Frontend,,,,,,,,,0,,,,"*Error:*

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-xprop-coreip_mallard_p550_u8-test-nightly-xprop/136/builds/coreip_u8_maxed_out/verilog/design/assertions/SiFive_IFU_assert.sv"", 332: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.ifu.SiFive_IFU_assert: at time 5054442500 ps
Assertion failed: RAS forward target was incorrect
    at IFU.scala:1440 assert(!(rasTargetCheckEn_F3 && (pcVA_F2 =/= alignPC(rasTarget_F3))), ""RAS forward target was incorrect""){noformat}



At {{T:5054242500ps}}, {{feu.ifu.ras.enforceSecurePred_F3}} is asserted and {{feu.ifu.SiFive_IFU_assert.rasTarget_F3}} is set to 0. 

At {{T:5054402500ps,}} {{feu.ifu.SiFive_IFU_assert.nlpEntry_F3_data_ret}} goes high where the assertion triggers & fails. {{feu.ifu.SiFive_IFU_assert.pcVA_F2=0x80005028}} & {{feu.ifu.SiFive_IFU_assert._pcSelNotTakenVAF3_F0_T=0x1}} at this time instant.

!image-20220902-090928.png|width=681,height=201!

Dump available at: {{saurabhs@verif04:/scratch/saurabhs/mallard_master_354_xprop_136/federation/builds/coreip_u8_maxed_out/sim/sim/IFU_assert.outline/worldguard/tests/wg_csr/user}}



*Build*: coreip_u8_maxed_out

*Commit*: 83d7bf9

*Regression*: master/nightly-mallard-xprop/136

*Simscope*: [https://simscope.internal.sifive.com/sigs/1367/cmk8rtnwa78o|https://simscope.internal.sifive.com/sigs/1367/cmk8rtnwa78o]

*rerun.outline*: 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""worldguard/tests/wg_csr/user"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2812396106
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Adam George,Cyril Bresch,John Ingalls,Josh Smith,Megan Wachs,Nicolas Brunie,Saurabh Singh,,,,,,,,,61b2a458657a0500706b9c39,5fa5f3f5b45b2e0074939e18,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,6065017e90e3950069cf01c5,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,02/Sep/22 2:13 AM;ug:40f4a4a1-8fbe-4d1b-a941-c827c45ed3d4;image-20220902-090928.png;https://sifive.atlassian.net/secure/attachment/76960/image-20220902-090928.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8fbf38c29727a8b6cca65d01d78dfa4ec37b39d1,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i00uk7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,20:11.1,"02/Sep/22 8:20 AM;5acffeafaa802f2a797a955c;I haven’t looked at this, but I suspect it’s a duplicate of [https://sifive.atlassian.net/browse/MAL-2514|https://sifive.atlassian.net/browse/MAL-2514|smart-link]. ",02/Sep/22 8:30 AM;5fa5f3f5b45b2e0074939e18;Let me check,06/Sep/22 11:28 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;please let us know what you find out for Errata tracking purposes,06/Sep/22 12:09 PM;5acffeafaa802f2a797a955c;[~accountid:557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66] this has to do with the secure branch predictor changes made recently for P650.  So no this doesn’t affect any previous releases.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion failure : Banked freelist exhaustion. Check your nPRs parameter.,[TGV] Assertion failure : Banked freelist exhaustion.,Instruciton decode and dispatch ,,,,MAL-2539,124572,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,David Kravitz,5fd15143b4a74900763834e0,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,9/2/2022 1:46,9/9/2022 8:47,9/28/2022 0:51,9/2/2022 14:20,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"We see the below assertion in 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_200_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_FreeListBanked_assert.sv"", 1150: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.freelist.SiFive_FreeListBanked_assert_0: at time 6071762500 ps
assert failed (verification library): Banked freelist exhaustion. Check your nPRs parameter.  @[FreeList.scala 502:9]
Fatal: ""/scratch/ishitashah/tgv_regression/sign_200_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_FreeListBanked_assert.sv"", 1159: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.freelist.SiFive_FreeListBanked_assert_0: at time 6071762500 ps{noformat}

SHA: 4861f9c

config: coreip_p670

rerun.outline

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0076"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3464302296
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath* 

{{gamma25:/scratch/ishitashah/tgv_regression/sign_200_test_fails/federation/builds2/coreip_p670/sim/rerundir1_free/free_rerun.outline/sting_StingSiFiveTuple_T_0076/sting/sifive/vector/vector_tgv_dev.conf}}",Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Ishita Shah,Jaksa Djordjevic,Josh Smith,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,607e26355431a500701f5aed,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-03T21:41:28.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,No,,,,,,,,,,,,2|i00ujj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,31:18.3,"02/Sep/22 7:19 AM;607e26355431a500701f5aed;Hi, [~accountid:5acffeafaa802f2a797a955c] after merging [https://github.com/sifive/federation/pull/25753|https://github.com/sifive/federation/pull/25753|smart-link] also still we see the above error can you please have a look?","02/Sep/22 8:31 AM;5acffeafaa802f2a797a955c;This is not actually a freelist exhaustion issue.  It’s true that one bank has {{bankFreeVecCnt_q === 0.U}}, but that bank also has the “top” and “bottom” allocation registers as valid (so the bank really has 2 free PRs), so the freelist stall is not actually asserted.  We should qualify that assertion with {{io.stall === true.B}}.

Something else is causing this hang.  I can see that one of the vector dispatch buffers in the VRDU is full. [~accountid:5fd15143b4a74900763834e0] can you or someone else look at this?","02/Sep/22 10:48 AM;5fd15143b4a74900763834e0;OK, I’ll take a look, and beef up the assertion to not blame the freelist","02/Sep/22 2:20 PM;5fd15143b4a74900763834e0;Cherry-picked the commits for MAL-2535 and MAL-2538. The test no longer hangs.

I will put up a PR with the revised assertion.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vfdiv.vv instruction gets killed but shouldn't,[TGV] vfdiv.vv instruction ,Execution UNit ,,,,MAL-2538,124562,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,9/1/2022 23:41,9/7/2022 17:43,9/28/2022 0:51,9/4/2022 11:02,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"

*Error: Signature*

Error: ""/scratch/naveenr/sep-2/federation/builds/coreip_u8_minimal_vector/verilog/design/SiFive_ROB.sv"", 4259: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob: at time 7784402500 ps
assert failed (verification library): ROB Retire Hang around entry 37   @\[ROB.scala 790:9]
Fatal: ""/scratch/naveenr/sep-2/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", 567: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert: at time 7784402500 ps

*Debug-Info:*
Last retired trace::
C0:     282537 \[1] pc=\[0000000020501d8e] W\[r 5=0000000000000000]\[1] R\[r 5=0000000000000000] R\[r 0=0000000000000000] inst=\[00f2f293] andi    t0, t0, 15
C0:     282537 \[1] pc=\[0000000020501d92] W\[r 0=0000000000000000]\[0] R\[r 5=0000000000000000] R\[r 0=0000000000000000] inst=\[02028063] beqz    t0, pc + 32

 Instruction-trace::  
*20501d92:*	02028063          	beqz	t0,20501db2 <skip_dec_3_54_f4_c0_614>
20501d96:	fff28293          	addi	t0,t0,-1
20501d9a:	00550223          	sb	t0,4(a0)
20501d9e:	3229bb57          	vrgather.vi	v22,v2,19
20501da2:	42101bd7          	vfmv.f.s	fs7,v1
20501da6:	0a4b2c57          	vredor.vs	v24,v4,v22
20501daa:	af5f6257          	vnmsub.vx	v4,t5,v21

*SHA1::  4df4cb99f5e4b3e7992a1adb569e9e6ff157e2a4*
*config::* coreip_u8_minimal_vector
*waves::* gamma26://scratch/naveenr/sep-2/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline_rob_assert/sting_StingSiFiveTuple_T_0251/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb
*rerun. Outline::*   outline copied in {{/work/nicolasb/tgv_bug_outlines/sting/MAL-2538.outline}}

*Rerun.outline::*

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""sting"",
""raw_plusargs"": \[
""+cosim_scoreboard_trap_epc_count=128"",
""+cosim_scoreboard_stall_time=1000000"",
""+axi_mem_latency_cycles=40"",
""+axi_mem_dither_cycles=20"",
""+amba_vip_select=2"",
""+gdi_amba_test_enable=1"",
""+gdi_tlc_test_enable=1"",
"""",
""+verbose""
],
""subdir"": ""sting_StingSiFiveTuple_T_0251"",
""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 2475349762
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""reset_vector_scheme"": ""first_mem_periph_sys""
},
""uvm"": {
""set_config_string"": \[
""uvm_test_top,torture_read_inbound,10101010:80808080"",
""uvm_test_top,torture_inbound,10101010:80808080""
],
""testname"": ""torture_test""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",David Kravitz,Naveen Rathore,Nicolas Brunie,,,,,,,,,,,,,5fd15143b4a74900763834e0,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,02/Sep/22 6:33 AM;ug:03996552-4b14-4132-be2b-a08c9c621951;Screen Shot 2022-09-02 at 9.33.01 AM.png;https://sifive.atlassian.net/secure/attachment/76967/Screen+Shot+2022-09-02+at+9.33.01+AM.png,,,,,,,,,,,,,,,,4df4cb99f5e4b3e7992a1adb569e9e6ff157e2a4,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-04T10:52:23.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/f9e00b244a1e432e078398eb1ec72a801122cc21,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00uhb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,32:35.6,"02/Sep/22 6:32 AM;5fd15143b4a74900763834e0;ROB group 37 (gid 0x25) contains 3 vector instructions and a scalar load.

{noformat}    20501db2:	72c724d7          	vmornot.mm	v9,v12,v14
    20501db6:	82a49657          	vfdiv.vv	v12,v10,v9
    20501dba:	266b8e57          	vand.vv	v28,v6,v23
    20501dbe:	00550283          	lb	t0,5(a0){noformat}

All the instructions send completion requests except for the {{vfdiv.vv}}. There’s a flush of a younger gid during the cycle before {{divStart}} goes high. Even though the flush is for a younger gid, the {{instKill_EX}} signal also kills the divide.

Outline is in the expected place. Initial waves are in ~davidk2/waves/MAL-2538.rc

If you want waves w/o rerunning, you can use {{davidk2@gamma13:/scratch/verif/davidk2/MAL-2538/builds/coreip_u8_minimal_vector/sim/sim/MAL-2538.outline/sting_StingSiFiveTuple_T_0251/sting/sifive/vector/vector_tgv_dev.conf}}","02/Sep/22 6:52 AM;6065017e90e3950069cf01c5;{{divValid_EX}} is not properly qualified, I am going to merge this with [https://sifive.atlassian.net/browse/MAL-2535|https://sifive.atlassian.net/browse/MAL-2535|smart-link] fix",04/Sep/22 11:02 AM;5fd15143b4a74900763834e0;Fixed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LTB claim response lets LSU establish same entry for 2 different loads,[TGV] LTB claim response lets LSU establish same entry for 2 different loads,LSU (Load Store Unit),,,,MAL-2537,124543,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,9/1/2022 20:19,9/12/2022 23:03,9/28/2022 0:51,9/2/2022 14:52,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"On a {{coreip_p670}} build, I see a claim from LSPipe0 in one cycle and a claim from LSPipe1 on the following cycle. On the first cycle, the LTB claim logic correctly creates non-overlapping index vectors. However, on the second cycle, the claim logic tells LSPipe1 to claim the same entries that LSPipe0 claimed one cycle earlier.

!Screen Shot 2022-09-01 at 11.16.57 PM.png|width=686,height=344!",Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,MAL-2558,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,01/Sep/22 8:19 PM;ug:03996552-4b14-4132-be2b-a08c9c621951;Screen Shot 2022-09-01 at 11.16.57 PM.png;https://sifive.atlassian.net/secure/attachment/76947/Screen+Shot+2022-09-01+at+11.16.57+PM.png,,,,,,,,,,,,,,,,71d47a003550eebb919969a5380d856f65ded5c4,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-02T13:56:38.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/64af5b2422307301d3c72e61c21c631584436a29,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00ud3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"build `coreip_p670` with the specified commit
run `./sitest @../../../test-outlines/tgv_vle-vse.outline`",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Sep/22 2:52 PM;5fd15143b4a74900763834e0;Added a term to the ""busy list"" calculation that incorporated any claims made in the previous cycle. Failing test passes and didn't break anything else afaik.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[TGV] Fix ""LTB Entry received more data from LDQ than pendWrCnt"" assertion by qualifying clear with entry valid","[TGV] Fix ""LTB Entry received",LSU (Load Store Unit),,,,MAL-2536,124516,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,9/1/2022 15:19,9/7/2022 17:43,9/28/2022 0:51,9/1/2022 20:10,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,Various people are reporting assertions. [~accountid:600773dcee80bd006f750bba] reports this will fix {one? | both?} of them.,David Kravitz,John Ingalls,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-01T20:06:31.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/ab67c992d4650dcd77a6722fe3e6d97a5934a764,,,n/a,,,,,,,,,Other -- Put in description,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,100,,,No,,,,,,,,,,,,2|i00u73:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,01/Sep/22 8:10 PM;5fd15143b4a74900763834e0;Added the qualifying term,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Divider sends completion to ROB after BR Flush that should have killed it,[TGV] Divider sends completion to ROB BR Flush,Execution Unit ,Vector ,,,MAL-2535,124501,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,9/1/2022 12:41,9/7/2022 17:43,9/28/2022 0:51,9/4/2022 11:02,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"A sting run failed with:

{noformat}Error: ""/scratch/verif/davidk2/milestones/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", 1974: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert_0: at time 3700122500 ps
assert failed (verification library): ROB cmplCnt underflow on entry 15  @[ROB.scala 648:11]{noformat}


The code in ROB group 15 (gid 0x2f) is this:

{noformat}00000000888c10b0 <skip_dec_3_24_f0_c0_413>:
    888c10b0:	87d32dd7          	vdiv.vv	v27,v29,v6
    888c10b4:	00c655bb          	srlw	a1,a2,a2
    888c10b8:	5cc5c457          	vmerge.vxm	v8,v12,a1,v0
    888c10bc:	00b662b3          	or	t0,a2,a1
    888c10c0:	121021d7          	vredminu.vs	v3,v1,v0
    888c10c4:	00150383          	lb	t2,1(a0){noformat}


There’s a branch flush of gid 0x2a at cycle 184881. This clears the completion count 2 cycles later. 3 cycles after that, a completion request initiated by the divider tries to decrement the count one more time and the assertion fires. In my run of ~300 Sting cases (a few had SLURM problems), there were 4 of these ROB completion underflows.


Waves can be seen in: {{davidk2@gamma13:/scratch/verif/davidk2/milestones/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0009/sting/sifive/vector/vector_tgv_dev.conf}}
Outline copied to {{/work/nicolasb/tgv_bug_outlines/sting/MAL-2535.outline}}.

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0009"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 396591248
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",David Kravitz,Kira Tsao,Nicolas Brunie,,,,,,,,,,,,,5fd15143b4a74900763834e0,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,01/Sep/22 12:30 PM;ug:03996552-4b14-4132-be2b-a08c9c621951;Screen Shot 2022-09-01 at 3.30.48 PM.png;https://sifive.atlassian.net/secure/attachment/76922/Screen+Shot+2022-09-01+at+3.30.48+PM.png,02/Sep/22 5:21 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220902-122132.png;https://sifive.atlassian.net/secure/attachment/76965/image-20220902-122132.png,,,,,,,,,,,,,,,653f84a526b66cc23d6e69d758dc0a490ea56c33,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-04T10:52:23.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/f9e00b244a1e432e078398eb1ec72a801122cc21,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00u3r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"build `coreip_u8_minimal_vector` with specified commit
run `sitest` with specified outline",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,21:37.0,"02/Sep/22 5:21 AM;6065017e90e3950069cf01c5;The bug occurs because the flush is received while the division is trying to broadcast its tag and forward its result but is no longer in the {{divRunning}} stage, so flush is ignored.

!image-20220902-122132.png|width=1123,height=316!",02/Sep/22 9:08 AM;6065017e90e3950069cf01c5;[~accountid:5e1a4f5ec578120daca5ff8e] pointed out  that this issue also affect the horizontal reduction adder. I will file a ticket and fix it separately.,02/Sep/22 9:24 AM;5e1a4f5ec578120daca5ff8e;Thanks for the quick debugging and discussion. And I still feel sorry that I didn’t catch this issue during my verification.,04/Sep/22 11:02 AM;5fd15143b4a74900763834e0;Fixed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Arbitray-vl store data byte enable not working,[TGV] Arbitray-vl,LSU (Load Store Unit),,,,MAL-2534,124489,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Yohann Rabefarihy,61730c9cbcb57400683f15a6,Yohann Rabefarihy,61730c9cbcb57400683f15a6,Yohann Rabefarihy,61730c9cbcb57400683f15a6,9/1/2022 9:48,9/14/2022 21:41,9/28/2022 0:51,9/9/2022 5:19,Panda DR,,,,,,,,,,Panda DR,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,Vector store is currently writing a Dlen to the memory which prevent the arbitray-vl store to work.,John Ingalls,Yohann Rabefarihy,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2210,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-14T20:44:22.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2210,,,,,,,,,,,,,,,,,,,,,,,,1edea8e2fda7d87c201449a0b9b3ef583a037a3f,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i00u13:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26099/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]::  COSIM VS RTL WRDATA MISMATCH for vfslide1down(PC=0x201060f8),[TGV]::  COSIM VS RTL WRDATA MISMATCH ,Execution UNit ,Vector ,,,MAL-2533,124466,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Highest,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,9/1/2022 3:22,9/7/2022 17:43,9/28/2022 0:51,9/2/2022 6:15,,,,,,,,,,,,,TGV_RTL/X2Y,,,,,,,,,0,TGV,,,"


*Error::*

\[COSIM-ERROR]\[0] COSIM VS RTL WRDATA MISMATCH
\[COSIM-ERROR]\[0] COSIM VS RTL WRINFO MISMATCH
\[COSIM-ERROR]\[0] m_dut_inst_item: \[221164] InstInfo: VLD=1 | PC=0x00000000201060f8 | INSN=0x3ee4d6d7 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r13=0xffff_bbff_8000_0018_8000_0018_8000_0000 mask=0000ffff | READY=1 | CSR_TIMER=221164 | PRV=3 | MSTATUS=0x8000000a000066aa | MTVEC=0x0000000080000400 | MCAUSE=0x8000000000000007 | VSTART=0 | VL=4 | SEW=32 | LMUL=m1 | VSEGELT=0
\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x00000000201060f8 | INSN=0x3ee4d6d7 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r13=0xffff_ffff_8000_0018_8000_0018_8000_0000 mask=0000f999
\[COSIM-ERROR]\[0] m_dut: en=true r13=0xffff_bbff_8000_0018_8000_0018_8000_0000 mask=0000ffff
\[COSIM-ERROR]\[0] m_sim: en=true r13=0xffff_ffff_8000_0018_8000_0018_8000_0000 mask=0000f999



*Debug-Info::*
*v13 0x00000000000000000000000000000001*
*v14 0x80000018800000188000000080000000*
*fs1:: 0xffffffffffffffff*

core   0: 0x00000000201060f8 (0x3ee4d6d7) vfslide1down.vf v13, v14, fs1
core   0: 3 0x00000000201060f8 (0x3ee4d6d7) e32 m1 l4 v13 0xffffffff800000188000001880000000

RTL-Trace:: 
C                   0:     221164 \[1] pc=\[00000000201060f8] W\[r 0=0000000000000000]\[0] R\[f 9=ffffffffffffbbff] R\[r 0=0000000000000000] inst=\[3ee4d6d7] vfslide1down.vf v13, v14, fs1
C                   0:     221159 vrf\[13]=\[ffffbbff800000188000001880000000]\[ffff]



*SHA1::*  b77d989db5c129e61e8303479ab14a8949c1ff06
*Config::* coreip_p670
*waves::*  gamma26:://scratch/naveenr/sep-1/federation/builds/coreip_p670/sim/sim/rerun.outline_wrdata/sting_StingSiFiveTuple_T_0294/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb
*rerun. Outline::*    outline copied in {{/work/nicolasb/tgv_bug_outlines/rat/MAL-2533.outline}}


*rerun.outline*

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""sting"",
""raw_plusargs"": \[
""+cosim_scoreboard_trap_epc_count=128"",
""+cosim_scoreboard_stall_time=1000000"",
""+axi_mem_latency_cycles=40"",
""+axi_mem_dither_cycles=20"",
""+amba_vip_select=2"",
""+gdi_amba_test_enable=1"",
""+gdi_tlc_test_enable=1"",
""+pl2_randomBlockDirWrFifoEnable=1"",
"""",
""+verbose""
],
""subdir"": ""sting_StingSiFiveTuple_T_0294"",
""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 338927020
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""reset_vector_scheme"": ""first_mem_periph_sys""
},
""uvm"": {
""set_config_string"": \[
""uvm_test_top,torture_read_inbound,10101010:80808080"",
""uvm_test_top,torture_inbound,10101010:80808080""
],
""testname"": ""torture_test""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",David Kravitz,Naveen Rathore,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,5fd15143b4a74900763834e0,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,01/Sep/22 12:40 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220901-194010.png;https://sifive.atlassian.net/secure/attachment/76921/image-20220901-194010.png,01/Sep/22 12:40 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220901-194031.png;https://sifive.atlassian.net/secure/attachment/76920/image-20220901-194031.png,,,,,,,,,,,,,,,b77d989db5c129e61e8303479ab14a8949c1ff06,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-02T06:15:23.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/f4fa0f71091c992c17e247cb6f50e8b838deb1e3,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00tvz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,40:43.8,"01/Sep/22 12:40 PM;6065017e90e3950069cf01c5;It looks like the issue originate from the scalar source of the {{vfslide1down.vf}}, the value read in {{fs1}} is wrong (and it was moved from a vector early on).

RTL

!image-20220901-194010.png|width=1480,height=141!

cosim

!image-20220901-194031.png|width=1115,height=215!",01/Sep/22 3:10 PM;6065017e90e3950069cf01c5;The issue is that we only boxed the last level of recoding. To be compatible with the scalar side we need to enforce recursive boxing (will make a difference if more than 2 FP formats as supported as is the case since we enabled Zvfh).,"01/Sep/22 3:12 PM;6065017e90e3950069cf01c5;testing a fix [https://github.com/sifive/federation/pull/25792|https://github.com/sifive/federation/pull/25792|smart-link] 

the outline is now failing later on a banked freelist exhaustion assertion 

{noformat}Error: ""/scratch/nicolasb/federation_bis/builds_mfc/coreip_p670/verilog/design/SiFive_FreeListBanked.sv"", 682: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.freelist: at time 8768842500 ps
assert failed (verification library): Banked freelist exhaustion. Check your nPRs parameter.  @[FreeList.scala 502:9]
Fatal: ""/scratch/nicolasb/federation_bis/builds_mfc/coreip_p670/verilog/design/assertions/SiFive_FreeListBanked_assert.sv"", 210: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.freelist.SiFive_FreeListBanked_assert: at time 8768842500 ps
$finish called from file ""/scratch/nicolasb/federation_bis/builds_mfc/coreip_p670/verilog/design/assertions/SiFive_FreeListBanked_assert.sv"", line 210.{noformat}","01/Sep/22 10:38 PM;5fd15143b4a74900763834e0;OK, the freelist exhaust will be a different bug. [~accountid:6065017e90e3950069cf01c5], please put up a PR with your fix and create a new ticket (for Josh?) with the exhaustion symptom.",02/Sep/22 12:29 AM;6065017e90e3950069cf01c5;PR is already up: [https://github.com/sifive/federation/pull/25792|https://github.com/sifive/federation/pull/25792|smart-link]  (fixed the issue and passes sanity on the two main configurations).,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
WG+HYP : wrong mepc value when executing illegal csr write on slwid,WG+HYP :,,,,,MAL-2532,124459,,Bug,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Abderrahmane Sensaoui,5e0d62b80242870e996e9bee,Mohammed El Harhar,5f1eda46170ffc0023b1ebf7,Mohammed El Harhar,5f1eda46170ffc0023b1ebf7,9/1/2022 2:14,9/27/2022 6:17,9/28/2022 0:51,,,,,,,,,,,,,,RTL/Tile,,,,,,,,,0,,,,"In VS mode, write to slwid provokes an illegall instruction trap. But mepc is shall point to PC instruction causing
the issue. That is to say '800051c8' but when reading mepc from handler, it is equal to next instruction '800051cc'.



asm.txt : dissassembly
/scratch/verif/mohammedelh/fed_wg_hyp_csrs/software/tests/worldguard/tests/wg_csr/hypervisor/hyp_CSRs_test.c:243 (discriminator 26)
w_slwid(slwid_n);
800051bc:   f5f44783                lbu     a5,-161(s0)
800051c0:   fef43023                sd      a5,-32(s0)
800051c4:   fe043783                ld      a5,-32(s0)
800051c8:   9e079073                csrw    slwid,a5    // <====== Mode=VS illegal opcode
/scratch/verif/mohammedelh/fed_wg_hyp_csrs/software/tests/worldguard/tests/wg_csr/hypervisor/hyp_CSRs_test.c:245 (discriminator 26)
if _DEBUG {printf("" tri: %d cause: %016lx  "",excpt.triggered, excpt.cause);}
TEST_ASSERT(""read CSR_slwid in VS mode fail. >> ill instruction \n"",
800051cc:   fef44783                lbu     a5,-17(s0)
800051d0:   0ff7f793                zext.b  a5,a5
800051d4:   c395                    beqz    a5,800051f8 <test_case+0xb60>

simulation log file :
C                   0:      50248 \[1] pc=\[00000000800065c2] W\[r 8=0000000080124ea8]\[1] R\[r 2=0000000080124e08] R\[r 0=0000000000000000] inst=\[00001100] c.addi4spn s0, sp, 160
C                   0:      50248 \[1] pc=\[00000000800065c4] W\[r15=000000008000ee0c]\[1] R\[r 3=000000008000f5c0] R\[r 0=0000000000000000] inst=\[84c18793] addi    a5, gp, -1972
C                   0:      50248 \[1] pc=\[00000000800065c8] W\[r14=0000000000000004]\[1] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[00004711] [c.li|http://c.li]    a4, 4
C                   0:      50248 \[1] pc=\[00000000800065ca] W\[r 0=0000000000000000]\[0] R\[r15=000000008000ee0c] R\[r14=0000000000000004] inst=\[0000c398] c.sw    a4, 0(a5)
C                   0:      50255 \[1] pc=\[00000000800065cc] W\[r15=0000000000000002]\[1] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[342027f3] csrr    a5, mcause
C                   0:      50257 \[1] pc=\[00000000800065d0] W\[r 0=0000000000000000]\[0] R\[r 8=0000000080124ea8] R\[r15=0000000000000002] inst=\[fcf43c23] sd      a5, -40(s0)
C                   0:      50262 \[1] pc=\[00000000800065d4] W\[r15=0000000000000002]\[1] R\[r 8=0000000080124ea8] R\[r 0=0000000000000000] inst=\[fd843783] ld      a5, -40(s0)
C                   0:      50265 \[1] pc=\[00000000800065d8] W\[r 0=0000000000000000]\[0] R\[r 8=0000000080124ea8] R\[r15=0000000000000002] inst=\[fcf43823] sd      a5, -48(s0)
C                   0:      50272 \[1] pc=\[00000000800065dc] W\[r15=00000000800051cc]\[1] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[341027f3] csrr    a5, mepc      // Expected 800051c8, simulated 800051cc
C                   0:      50274 \[1] pc=\[00000000800065e0] W\[r 0=0000000000000000]\[0] R\[r 8=0000000080124ea8] R\[r15=00000000800051cc] inst=\[fcf43423] sd      a5, -56(s0)
C                   0:      50279 \[1] pc=\[00000000800065e4] W\[r15=00000000800051cc]\[1] R\[r 8=0000000080124ea8] R\[r 0=0000000000000000] inst=\[fc843783] ld      a5, -56(s0)
C                   0:      50282 \[1] pc=\[00000000800065e8] W\[r 0=0000000000000000]\[0] R\[r 8=0000000080124ea8] R\[r15=00000000800051cc] inst=\[fef43423] sd      a5, -24(s0)
C                   0:      50289 \[1] pc=\[00000000800065ec] W\[r15=0000000000000000]\[1] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[343027f3] csrr    a5, mtval",Anthony Hung,Mohammed El Harhar,,,,,,,,,,,,,,5a81f04f2fa8952d487e916b,5f1eda46170ffc0023b1ebf7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,d3c0d978fbab2747ad608bef4dd1604374456e8f,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00tuf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"
hash : d3c0d978fbab2747ad608bef4dd1604374456e8f

configuration : 
coreip_u8_maxed_out
 
rerun.outline : 
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
  ""name"": ""worldguard/tests/wg_csr/hypervisor"",
  ""subdir"": ""hyp_csr00"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1791095845
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""env"": ""abi"",
    ""cppmacros"": \[
      ""LOG_LEVEL=LOG_NONE""
    ]
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Load with VL=0 should not establish LoadQ or return data,[TGV] LoadQ or return data,LSU (Load Store Unit),,,,MAL-2531,124352,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Yohann Rabefarihy,61730c9cbcb57400683f15a6,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/31/2022 13:07,9/14/2022 6:12,9/28/2022 0:51,9/14/2022 6:12,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"This is a few commits after the [https://sifive.atlassian.net/browse/MAL-2524|https://sifive.atlassian.net/browse/MAL-2524|smart-link] fix merged. This test is doing a {{vle32.v}} instruction with SEW=8b and a fractional LMUL. 2 other tests failed similarly.

Failing case with waves can be examined here: {{davidk2@gamma13:/scratch/verif/davidk2/milestone7/builds/coreip_u8_minimal_vector/sim/sim/milestone7_case_6.outline/t0000_SEW-8/vector/vector_tests_gen/rvv_64/vle32.v}}

Full error report and outline (copied to {{/work/nicolasb/tgv_bug_outlines/vtg/MAL-2531.outline}}):

{noformat}Error: ""/scratch/verif/davidk2/milestone7/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LdQEntry_assert.sv"", 367: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LdQ.ldqEntries_1.SiFive_LdQEntry_assert_0: at time 336582500 ps
assert failed (verification library): LdQEntry must retire (i.e. complete and resolve) before ROB entry retires  @[LoadQ.scala 2365:16]
Fatal: ""/scratch/verif/davidk2/milestone7/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LdQEntry_assert.sv"", 376: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LdQ.ldqEntries_1.SiFive_LdQEntry_assert_0: at time 336582500 ps{noformat}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0000_SEW-8"",
  ""subtest"": ""vle32.v"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vle32.v_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-0_CSRWWithNoOp-0_CSRWbeforeVSETVL-1_VSETIVL
I-1_FENCEbeforeVSETVL-1_VSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-10_AVL-1_INITFULLVREG-1_TGV-1_IMM-1_SEW-8"",
  ""seed"": {
    ""value"": 1013994432
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Alexandre Solomatnikov,David Kravitz,John Ingalls,Josh Smith,Srivatsa Yogendra,Yohann Rabefarihy,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,5a938e9c0913194d2d262658,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2210,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,02054573902e6161db194b9fe897797731f6d984,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-13T09:29:23.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2210,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Directed,Simulation-VTG,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i00t6n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"build `coreip_u8_minimal_vector` with the specified commit
run `sitest` with the outline provided",,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26023/files],,,,,,,,,,,,,51:01.5,"31/Aug/22 5:51 PM;5bb6808b9ba2930990f81895;In the failing test, I see ROB ID {{0x29}} dispatch to and resolve from the LSU, then the instruction retires from the ROB, before the Baler can send Complete.  I believe that the ROB should wait for Complete from the Baler before retiring the instruction.","02/Sep/22 6:08 AM;61730c9cbcb57400683f15a6;We have a VL of 0, so it is a 0-uop operation which is correctly completed by the sequencer but it seems that this case is not handled in the LSU:

{noformat}80000c5e:   c05072d7                vsetivli        t0,0,e8,mf8,tu,mu         
80000c62:   00002297                auipc   t0,0x2                                                                
80000c66:   87a28293                addi    t0,t0,-1926 # 800024dc <in_17>                                        
80000c6a:   0202e907                vle32.v v18,(t0) {noformat}


[~accountid:5bb6808b9ba2930990f81895] what is the preferred way to cancel the uop ?  ","02/Sep/22 9:01 AM;5bb6808b9ba2930990f81895;Ah, we need to handle this in the LSU then.

Is there a signal from the Vector AGU / in RR stage that this is a 0-uop operation?",02/Sep/22 2:54 PM;5fd15143b4a74900763834e0;We probably need to add something that sends a completion request to the ROB once the VAGU recognizes no uops will be generated.,"05/Sep/22 1:13 AM;61730c9cbcb57400683f15a6;The completion is coming from TGV Sequencer, the issue is that LSU uop is currently not cancelled and start to establish all usual structures. 

[~accountid:5bb6808b9ba2930990f81895] agreed that it should be cleaner to kill it sooner in the pipe, like in RDU but look's like it is not done this way up to now, we can discussed if it is a final design decision ? 

There is no such signal (0-uop) from the VAGU but it sounds easy to generate, what I’m not confident is how to properly kill the uop.

I think that rr_kill can be the one I’m looking for, but this doesn’t seems to clear the issue queue entry.

I might need to play with the cannotReplay signal as well","05/Sep/22 3:04 AM;61730c9cbcb57400683f15a6;Ok So, rr_kill is not OK since we will miss the resolve then, and for Store we will need to resolve+commit.

It would be great to have a resolve interface from the vagu like for TGV sequencer.","05/Sep/22 6:14 AM;5acffeafaa802f2a797a955c;{quote}agreed that it should be cleaner to kill it sooner in the pipe, like in RDU but look's like it is not done this way up to now, we can discussed if it is a final design decision ?{quote}

We can’t always do this in the RDU because the instruction can make it to the LsIssQ before VL is known.  And since the vector and LSU micro-ops get split in dispatch, trying to stall the LSU micro-op in the RDU until VL is known, but letting the vector micro-op go to the sequencer could be hard/impossible.","05/Sep/22 2:29 PM;5bb6808b9ba2930990f81895;{quote}How to properly kill the uop?

It would be great to have a resolve interface from the VectorAGU like for TGV sequencer.{quote}

Yes, we should use the existing LSTPipe Resolve/Complete signals to do this.  We just gotta get down the pipeline from the VectorAGU to the LSTC stage.

I think the changes to start with are to add a signal from the Vector AGU / in RR stage that this is a 0-uop operation, and use this signal in the LSTO stage to AND-off both {{lsto_opWantsEstablishLdqOnly}} and {{lsto_ldqNeedsResolveFlush}}.  See if that does the trick…",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] X2Y clock gating improvement,,,,,,MAL-2530,124241,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,8/30/2022 15:01,9/8/2022 20:37,9/28/2022 0:51,9/2/2022 10:46,,,,,,,,,,,,,Power,TGV_RTL/X2Y,,,,,,,,0,,,,"Current clock gating support covers only main x2y submodules. However, Power Artist results when running Dhrystone shows still there is consumed dynamic energy on sequential logic. So, this last optimization will remove remaining dynamic energy.  

Power Artist results 08/30/22

{adf:display=block}
{""type"":""table"",""attrs"":{""isNumberColumnEnabled"":false,""layout"":""default"",""localId"":""b4c87496-0152-48ec-a6ba-7991f20b2af6""},""content"":[{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv/x2y""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Power Unit: mW""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Category                         ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Internal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Switching""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Leakage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Total""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""register""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.086"",""marks"":[{""type"":""strong""}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.000""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.057""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.143""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""logic                             ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.000""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.000""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.015""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.015""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""clock""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.020""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.082""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.003""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.105""}]}]}]}]}
{adf}",Cristóbal Ramirez Lazo,,,,,,,,,,,,,,,62632262d7f1b80069c030b8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-02T10:45:00.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,71a786e220f409a3117b20a8ccac64ea96f2a2c8,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00sj3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Sep/22 7:14 PM;62632262d7f1b80069c030b8;Power Artist results 09/01/2022

{adf:display=block}
{""type"":""table"",""attrs"":{""isNumberColumnEnabled"":false,""layout"":""default"",""localId"":""b4c87496-0152-48ec-a6ba-7991f20b2af6""},""content"":[{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv/x2y""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Power Unit: mW""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Category                         ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Internal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Switching""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Leakage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Total""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""register""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.008""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.000""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.056""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.064""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""logic                             ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.000""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.000""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.015""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.015""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""clock""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.001""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.003""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.003""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.007""}]}]}]}]}
{adf}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Baler dispatch needs to use mask freelist response for `v0` destinations,[TGV] Baler dispatch,LSU (Load Store Unit),,,,MAL-2529,124229,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/30/2022 13:08,9/7/2022 17:43,9/28/2022 0:51,8/31/2022 6:24,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"uops dispatching to VEX consider whether the destination is Main vs. Mask PRF as this code shows:

{noformat}r.destPRIdx(dstId) := Mux(rdInMainPrf_REN((tp.nVectorDsts*i) + dstId) || (dstId != 0).B, vecPrIdxType.main(freelist.io.renameResp_REN((tp.nVectorDsts*i) + dstId)),
                                                                                         vecPrIdxType.mask(maskUnitFreelist.io.renameResp_REN(i))).asUInt{noformat}

The Baler dispatch logic assumes everything is going to the Main PRF:

{noformat}d.bits.destInfo(0).prIdx := freelist.io.renameResp_DIS(i * tp.nVectorDsts)
{noformat}

The Baler dispatch logic needs to look more like the VEX dispatch logic here.",David Kravitz,,,,,,,,,,,,,,,5fd15143b4a74900763834e0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,b2f7406a3842b6f9278d8ab65f02f8e4d7b4975a,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @../../../test-outlines/tgv_milestone/milestone4_case_3.rb # from: coreip_u8_minimal_vector/sim,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-30T17:26:27.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/520e2f26fd342f723d6d37473f09f4604b4bf0ed,,,n/a,,,,,,,,,Simulation-Directed,Simulation-VTG,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00sgf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Aug/22 1:10 PM;5fd15143b4a74900763834e0;Failure looks like

{noformat}=== sitest found errors in test sim/milestone4_case_3.rb/t0000/vector/vector_tests_gen/rvv_64/vle32.v:
Reset m_pl2_mmc_inner_agents  ca
Error: ""/scratch/verif/davidk2/milestones/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_PRA_5_assert.sv"", 232: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.vexPra.SiFive_PRA_5_assert_0: at time 326582500 ps
Assertion failed: Physical register   4 set as ready twice (only first conflicting id shown)

    at PRF.scala:88 assert(!(readyVec.asUInt & setVec).orR, ""Physical register %%d set as ready twice (only first conflicting id shown)"", firstRegSetTwice)


Fatal: ""/scratch/verif/davidk2/milestones/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_PRA_5_assert.sv"", 241: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.vexPra.SiFive_PRA_5_assert_0: at time 326582500 ps
$finish called from file ""/scratch/verif/davidk2/milestones/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_PRA_5_assert.sv"", line 241.


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 65316 simulation cycles (in TestDriver.report_phase_actions)
{noformat}",31/Aug/22 6:24 AM;5fd15143b4a74900763834e0;Added a mux to select the mask freelist response when a load is going into `v0`.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[HB] HWPF: Drive HW prefetch indicator bits from Core/L1,,,,,,MAL-2527,124189,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Binayak Tiwari,60a963ed8cbda700681b40c1,Kevin Heuer,5e137473cbf1830daa9cf1ab,Kevin Heuer,5e137473cbf1830daa9cf1ab,8/30/2022 8:21,9/26/2022 21:07,9/28/2022 0:51,,,,,,,,,,,,,,RTL/HWPF,,,,,,,,,0,,,,"As discussed with RTL cache team (e.g. [~accountid:5bb6808b9ba2930990f81895]), HW prefetch is just a subset of the speculative accesses indicated by the {{I}} bit in the {{rstate}} vector of TileLink2 accesses.

So if at L3 we want to know which accesses originated as L1 HW prefetches and L2 HW prefetches (for perfmon counters, replacement policy, etc.), we’ll need a HW prefetch indicator bit in the “user” bits of requests, plumbed all the way from the core LSU to the L3.

At the very least, we need a HW prefetch indicator bit for perfmon counters, if not also for replacement policy, etc.

Two bits would also give us a destination level (00 = demand, 01 = L1 prefetch, 10 = L2 prefetch, 11 = L3 prefetch). That could give us more detailed perfmon counters, but I don’t yet have any other specific thoughts on how the additional info could be used. So if two HW prefetch indicator bits is too ambitious, then just one HW prefetch indicator bit should be fine.",John Ingalls,Kevin Heuer,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5e137473cbf1830daa9cf1ab,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CIP-3842,CIP-3848,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00s7j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,18:36.0,"21/Sep/22 1:18 PM;5bb6808b9ba2930990f81895;TileLink2, which we should have in the Core/L1 for Healdsburg, will be able to express this using its existing bits:

* Fill {{rstate.I=0}} = demand
* Fill {{rstate.I=1}} = speculative / prefetch
* Prefetch {{ntl=0}} = L2 prefetch
* Prefetch {{ntl=1}} = L3 prefetch","21/Sep/22 1:28 PM;5e137473cbf1830daa9cf1ab;As per the Description, HW prefetch is just a subset of the speculative accesses indicated by the {{I}} bit in the {{rstate}} vector of TileLink2 accesses.

My understanding is, the set of speculative accesses with {{rstate.I=1}} is too broad to be useful. Too many demands will be marked {{rstate.I=1}} due to branch-predicted speculative execution, etc. It would be helpful if my understanding is incorrect and we can indeed use the {{rstate.I}} bit 🙂.","23/Sep/22 7:26 AM;5e137473cbf1830daa9cf1ab;[~accountid:5bb6808b9ba2930990f81895], can you elaborate on why {{rstate.I=1}} is sufficient? Discussion during the [Friday, July 22nd Next Generation Perf Studies Technical Deep Dives Meeting|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2312044645/2022-07-22+Bode+Healdsburg+Performance+Review+Meeting] indicated the scope of {{rstate.I=1}} was too broad to use as an indicator of HW prefetches. E.g. {{rstate.I=1}} also applies to speculatively executed demand loads that are unrelated to any type of data-focused prefetching. I don’t think we should convolute branch-predictor speculation with data-prefetcher speculation.",23/Sep/22 9:15 AM;5bb6808b9ba2930990f81895;You are correct.  I guess we need to add one user bit {{HWPF}} then.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV}:: Mismatch between Design & Cosim for vrgatheri16.vv ,[TGV}:: Mismatch Design & Cosim vrgatheri16.vv ,Execution Unit ,Vector ,,,MAL-2526,124180,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/30/2022 6:31,9/7/2022 17:43,9/28/2022 0:51,8/31/2022 0:16,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error::*
\[COSIM-ERROR]\[0] COSIM VS RTL WRDATA MISMATCH
\[COSIM-ERROR]\[0] m_dut_inst_item: \[94455] InstInfo: VLD=1 | PC=0x00000000800084dc | INSN=0x3a480c57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r24=0x0000_0000_0000_0000_00*00*_0000_0000_0000 mask=0000ffffen=true r25=0x0000_0000_0000_0000_0000_0000_0000_0000 mask=0000ffffen=true  | READY=1 | CSR_TIMER=94455 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x000000008000b568 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=32 | SEW=8 | LMUL=m2 | VSEGELT=0

\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x00000000800084dc | INSN=0x3a480c57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r24=0x0000_0000_0000_0000_00*c0*_0000_0000_0000 mask=0000ddffen=true r25=0x0000_0000_0000_0000_0000_0000_0000_0000 mask=0000ffffen=true 



*Debug-Info::*
In this case SEW=8, VL=32, Lmul=2

*v16 0xff80000aff80000571d1d0d20271d0cd*
*v 4 0x7fc000007fc000007fc000007fc00000*
*v24 0xff80000aff80000a71d1d0d20271d0d2*


core   0: 0x00000000800084dc (0x3a480c57) vrgatherei16.vv v24, v4, v16
core   0: 3 0x00000000800084dc (0x3a480c57) e8 m2 l32 v24 0x000000000000000000*c0*000000000000 v25 0x00000000000000000000000000000000

C                   0:      94455 \[1] pc=\[00000000800084dc] W\[r 0=0000000000000000]\[0] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[3a480c57] vrgatherei16.vv v24, v4, v16
C                   0:      94452 vrf\[24]=\[00000000000000000000000000000000]\[ffff]
C                   0:      94453 vrf\[25]=\[00000000000000000000000000000000]\[ffff]


Here design filling 0’s and Cosim expects v4 element to be filled to destination register.



*SHA1::* 50281fe2da4472e674750c9223ff4ab5055898c1
*config::* coreip_u8_minimal_vector
*waves::* gamma25:://scratch/naverath/aug-30/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline_rat_2/rat_default_T_0265/rat/default/waves.fsdb
outline copied in {{/work/nicolasb/tgv_bug_outlines/rat/MAL-2526.outline}}

*rerun.Outline::*

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": \[
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+MEM_ERROR_INJECT=._\.tag_array_.ext,0,1,32:._\.data_arrays_0_._ext,0,1,32:._\.syssram._ext,0,1,32:._\.island.\.lim\.syssram._ext,0,1,32:._\.tagged_tables_0_._ext,0,1,32:._\.base_table_0_.*ext,0,132"",
""+verbose""
],
""subdir"": ""rat_default_T_0265"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 3731687650
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",Naveen Rathore,Nicolas Brunie,,,,,,,,,,,,,,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,50281fe2da4472e674750c9223ff4ab5055898c1,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-30T23:43:07.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/8d9a0a386f586650fc07aa238440b2a3d7148685,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00s5j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,47:07.6,30/Aug/22 7:47 AM;6065017e90e3950069cf01c5;thank you for the expand tab (and the report) [~accountid:6235105a3eacc50071ff07ec] ,30/Aug/22 8:32 AM;6065017e90e3950069cf01c5;I think this issue is created by the same problem as [https://sifive.atlassian.net/browse/MAL-2519|https://sifive.atlassian.net/browse/MAL-2519|smart-link] and will be fixed by the same fix: [https://github.com/sifive/federation/pull/25721|https://github.com/sifive/federation/pull/25721|smart-link] ,31/Aug/22 12:16 AM;6065017e90e3950069cf01c5;[https://github.com/sifive/federation/commit/8d9a0a386f586650fc07aa238440b2a3d7148685|https://github.com/sifive/federation/commit/8d9a0a386f586650fc07aa238440b2a3d7148685|smart-link] fixes the issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Baler masked undisturbed data write path to LTB,,,,,,MAL-2525,124178,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/30/2022 5:47,9/2/2022 0:26,9/28/2022 0:51,9/1/2022 9:42,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2212,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-01T09:42:56.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2212,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/b18ffcf0577440c0fe5ce0444cebc28f3ab2c1dd,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00s53:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] assert failed (verification library): LdQEntry must be valid to be used ,[TGV] assert failed: LdQEntry,LSU (Load Store Unit),,,,MAL-2524,124169,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Yohann Rabefarihy,61730c9cbcb57400683f15a6,Yohann Rabefarihy,61730c9cbcb57400683f15a6,8/30/2022 2:37,9/8/2022 14:04,9/28/2022 0:51,8/30/2022 22:10,Panda DR,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"on this branch: origin/vector_load_rar_testing

with coreip_u8_minimal_vector configuration

tgv_vle-vse.outline has been updated with a RaR hasard on a vector load, and the following assert is triggering:

assert failed (verification library): LdQEntry must be valid to be used  @\[LoadQ.scala 2410:16]",Alexandre Solomatnikov,John Ingalls,Yohann Rabefarihy,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5bb6808b9ba2930990f81895,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2210,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-70,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32bca3dea5f,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @../../../test-outlines/tgv_vle-vse.outline --sim=vcs --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-31T10:05:40.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2210,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25745,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00s33:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"Checkout commit 32bca3dea5f
BUILD_DIR=builds_tgv ./generate-build  coreip_u8_minimal_vector
make sim && cd sim && ./sitest @../../../test-outlines/tgv_vle-vse.outline --sim=vcs --waves=fsdb",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion Failure: PopCount(prfWrSel(i).asUInt) <= 1.U,[TGV] Assertion Failure: PopCount(prfWrSel(i).asUInt) <= 1.U,,,,,MAL-2523,124157,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,David Kravitz,5fd15143b4a74900763834e0,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,8/30/2022 0:28,9/7/2022 17:43,9/28/2022 0:51,9/1/2022 12:18,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"We see the assertion failure For PPAOptimedPRF block .

{noformat}Error: ""/scrath/ishitashah/tgv_regression/sign_197_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_PPAOptimizedPRF_3_assert.sv"", 387: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.x2y.s2v.SiFive_PPAOptimizedPRF_3_assert_0: at time 3557062500 ps
Assertion failed
    at PRF.scala:324 assert(PopCount(prfWrSel(i).asUInt) <= 1.U)
Fatal: ""/scratch/ishitashah/tgv_regression/sign_197_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_PPAOptimizedPRF_3_assert.sv"", 396: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.x2y.s2v.SiFive_PPAOptimizedPRF_3_assert_0: at time 3557062500 ps{noformat}

Is this assertion getting failled due to the similar cause of {{bad ID/REN index assigned to a S2V uop. Maybe add that to the list of failures caused by that bug}}  mentioned in [https://sifive.atlassian.net/browse/MAL-2477|https://sifive.atlassian.net/browse/MAL-2477|smart-link]  JIRA?

*SHA:* [+184ebb3+|https://simscope.internal.sifive.com/models/undefined--master--184ebb31a7b4829c8f7ddf2c833c590e5398a3a3]

*config:* coreip_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0228"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3413989049
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath* 

{{gamma25:/scratch/ishitashah/tgv_regression/sign_197_test_fails/federation/builds2/coreip_p670/sim/rerundir1_ppa/ppa_rerun.outline/sting_StingSiFiveTuple_T_0228/sting/sifive/vector/vector_tgv_dev.conf}}",Andrew Hanselman,David Kravitz,Ishita Shah,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,5fd15143b4a74900763834e0,607e26355431a500701f5aed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,01/Sep/22 8:42 AM;ug:03c2888a-5ac7-445d-b700-4a271a824946;Screen Shot 2022-09-01 at 10.39.17 AM-20220901-154147.png;https://sifive.atlassian.net/secure/attachment/76902/Screen+Shot+2022-09-01+at+10.39.17+AM-20220901-154147.png,01/Sep/22 12:32 PM;ug:03c2888a-5ac7-445d-b700-4a271a824946;Screen Shot 2022-09-01 at 2.30.57 PM-20220901-193239.png;https://sifive.atlassian.net/secure/attachment/76919/Screen+Shot+2022-09-01+at+2.30.57+PM-20220901-193239.png,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00s0n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,25:33.1,"30/Aug/22 5:25 AM;5fd15143b4a74900763834e0;[~accountid:609d7e1f5998a6006800dcc5], please check if your fix takes care of this issue, too.","01/Sep/22 8:42 AM;609d7e1f5998a6006800dcc5;This is the same bug as 2483/2477: 

!Screen Shot 2022-09-01 at 10.39.17 AM-20220901-154147.png|width=2024,height=1065!

Rerunning with fixes.","01/Sep/22 12:17 PM;609d7e1f5998a6006800dcc5;Passing with pointer tracking fixes:

* [https://github.com/sifive/federation/pull/25742|https://github.com/sifive/federation/pull/25742|smart-link] 
* [https://github.com/sifive/federation/pull/25695|https://github.com/sifive/federation/pull/25695|smart-link] 
* [https://github.com/sifive/federation/pull/25753|https://github.com/sifive/federation/pull/25753|smart-link] ","01/Sep/22 12:32 PM;609d7e1f5998a6006800dcc5;!Screen Shot 2022-09-01 at 2.30.57 PM-20220901-193239.png|width=2024,height=1065!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]:: COSIM VS RTL WRDST for vdivu.vv (PC=0x8000a0a8),[TGV]:: COSIM VS RTL WRDST ,Execution Unit ,Vector,,,MAL-2522,124151,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/29/2022 23:35,9/20/2022 19:50,9/28/2022 0:51,9/3/2022 16:17,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error::*
\[COSIM-ERROR]\[0] COSIM VS RTL WRDST SIZE MISMATCH
\[COSIM-ERROR]\[0] COSIM VS RTL WRINFO MISMATCH
\[COSIM-ERROR]\[0] m_dut_inst_item: \[56135] InstInfo: VLD=1 | PC=0x000000008000a0a8 | INSN=0x82802857 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r16=0x0000_0000_00d4_0003_0001_0004_0000_0001 mask=0000ffffen=true r17=0x0000_0000_0000_0000_0000_0001_0000_0004 mask=0000ffffen=true  | READY=1 | CSR_TIMER=56135 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x000000008000ae60 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=16 | SEW=16 | LMUL=m2 | VSEGELT=0
\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x000000008000a0a8 | INSN=0x82802857 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r16=0x0000_0000_00d4_0003_0001_0004_0000_0001 mask=00005d5fen=true r17=0x0000_0000_0000_0000_0000_0001_0000_0004 mask=00005011en=true r18=0x0000_0000_0000_0000_0000_0000_0000_0000 mask=0000ffffen=true r19=0x92c4_0000_3f12_dcdf_0000_0000_0000_0000 mask=000000ffen=true



*Debug-Info::*
*VL=28, LMul=4, SEW=16*
*v16 0x0001000801bd00010058000100000001* 
*v17 0x00010001000000000000000000000001* 
*v18 0xffffffffffffffffffffffffffffffff* 
*v19 0x92c400003f12dcdfffffffffffffffff*
*v 8 0x014a8adff6eab478ffb3ff860054ff97*
*v 0 0xf06cbd48db3f09b0d7d60f4a763fa5ba*

core   0: 0x000000008000a0a8 (0x82802857) vdivu.vv v16, v8, v0
core   0: 3 0x000000008000a0a8 (0x82802857) e16 m4 l28 v16 0x0000000000d400030001000400000001 v17 0x00000000000000000000000100000004 v18 0x00000000000000000000000000000000 v19 0x92c400003f12dcdf0000000000000000
It seems Design is updating only v16 & v17 register for this instruction.
C                   0:      56135 \[1] pc=\[000000008000a0a8] W\[r 0=0000000000000000]\[0] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[82802857] vdivu.vv v16, v8, v0
C                   0:      56109 vrf\[16]=\[0000000000d400030001000400000001]\[ffff]
C                   0:      56133 vrf\[17]=\[00000000000000000000000100000004]\[ffff]

[~accountid:5e1a4f5ec578120daca5ff8e] , Please check, Whether it is related to [https://sifive.atlassian.net/browse/MAL-2509|https://sifive.atlassian.net/browse/MAL-2509|smart-link] 



*SHA1::*  bbecbd8ab31df2d814ca0e435350cca33d62c6a2
*Config::* coreip_p670
*Waves::*  gamma26::///scratch/naveenr/aug-29/federation/builds/coreip_p670/sim/sim/rerun.outline_rat/rat_default_T_0755/rat/default/waves.fsdb
*rerun.outline::*
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": \[
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+MEM_ERROR_INJECT=._\.tag_array_.ext,0,1,32:._\.data_arrays_0_._ext,0,1,32:._\.syssram._ext,0,1,32:._\.island.\.lim\.syssram._ext,0,1,32:._\.tagged_tables_0_._ext,0,1,32:._\.base_table_0_.*ext,0,132"",
""+verbose""
],
""subdir"": ""rat_default_T_0755"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 1660153851
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",David Kravitz,Josh Smith,Kira Tsao,Naveen Rathore,Nicolas Brunie,,,,,,,,,,,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,5e1a4f5ec578120daca5ff8e,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,31/Aug/22 3:17 AM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220831-101156.png;https://sifive.atlassian.net/secure/attachment/76827/image-20220831-101156.png,01/Sep/22 5:42 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220901-123813.png;https://sifive.atlassian.net/secure/attachment/76892/image-20220901-123813.png,,,,,,,,,,,,,,,bbecbd8ab31df2d814ca0e435350cca33d62c6a2,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-20T19:02:36.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,96089149afc83cd2c6180534f3a99e20d0ecb6fc,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i00rzb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26080/files],,,,,,,,,,,,,37:48.4,29/Aug/22 11:37 PM;5e1a4f5ec578120daca5ff8e;I’ll take a look.,"31/Aug/22 3:17 AM;5e1a4f5ec578120daca5ff8e;This issue occurs while executing {{vdivu.vv v16, v8, v0}} , the incorrect {{vl}} has been used during sequencing. From the program, the last vset instruction set {{vl}} to 28({{0x1c}}), but the value has been overwritten to 16({{0x10}}) in Mallard RDU that cause VectorSequencer only sequence 2 uops into {{VexPipe_1}}(divider only available in this pipe)

disasm, there are no other vset\[i]vl\[i] series instructions between them.

{noformat}56034 [1] pc=[0000000080009fc8] W[r11=000000000000001c][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[c0ae75d7] vsetivli a1, 28, e16, m4, tu, mu
...
56135 [1] pc=[000000008000a0a8] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[82802857] vdivu.vv v16, v8, v0{noformat}



gid number 0x19c stand for {{vdivu.vv}}, the {{func7}} of it is 0x41, the {{vl}} used to be {{0x1c}} but while it dispatched from feu/rdu become {{0x10}}.

!image-20220831-101156.png|width=1825,height=557!

waveform, program.S and disasm are in: 

{{gamma25:/scratch/kirat/kyoto/federation/builds/coreip_p670/sim/sim/rerun.outline/rat_default_T_0755/rat/default}}",01/Sep/22 1:26 AM;6065017e90e3950069cf01c5;I think the problem might be that a flush occurs and is not taken into account to invalidate {{lastVlVtype}} values in RDU.,"01/Sep/22 5:42 AM;6065017e90e3950069cf01c5;At time 1’123’352’500 a flush is occurring while a {{vsetivli}} with pc {{0x8000_a0b8}} is in scalar {{REN}}.

This instruction has updated the {{lastVlVtype_REN}} registers, but they are never rolled back to their previous (valid) values.

those registers are updated when a group goes from {{ID}} to {{REN}} and are used as previous values for the next group in {{ID}}.

The flush mechanism on {{vset}} is not really clear to me so I am going to push this issue to someone more knowledgeable.

!image-20220901-123813.png|width=1400,height=744!",01/Sep/22 10:39 PM;5fd15143b4a74900763834e0;What’s the status on the PR to fix this? I’m OK with a temp fix as long as [~accountid:5acffeafaa802f2a797a955c] gets a chance to review/clean it later.,02/Sep/22 12:06 AM;6065017e90e3950069cf01c5;The PR fixes this issue (as it makes it disappear) but I am pretty sure it is not complete (needs to support wait while vset color rewind to have clean vl/vtype read after flush+rewind).,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Improve stall ID predicate during vector buffer ptr rewind,,,,,,MAL-2521,124147,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Andrew Hanselman,609d7e1f5998a6006800dcc5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/29/2022 23:08,8/29/2022 23:10,9/28/2022 0:51,,,,,,,,,,,,,,RTL/RDU,,,,,,,,,0,,,,"Based on [~accountid:609d7e1f5998a6006800dcc5] comment on [https://github.com/sifive/federation/pull/25695|https://github.com/sifive/federation/pull/25695|smart-link] 

{quote}We can improve this if ROB generates {{hasS2V}}/{{hasV2S}}/{{hasVAccum}} separately from {{hasV}}. But likely a good enough proxy for now.{quote}",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00ryf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Implement STB/VIB/VMB allocation scheme,,,,,,MAL-2520,124144,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,8/29/2022 22:58,9/4/2022 22:00,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,TGV_RTL/ISS,,,,,,,,0,,,,"Implement the STB allocation scheme as illustrated in the following figures. The simplified allocation scheme are also be applied to VMB and VMB.

!image-20220830-055705.png|width=1331,height=1081!

Allocation flow

!image-20220830-055749.png|width=1018,height=530!

Discussion thread [https://sifive.slack.com/archives/C02LGLVN2LD/p1661477867141069|https://sifive.slack.com/archives/C02LGLVN2LD/p1661477867141069|smart-link] 

Implementation plan [https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2345828473/Baler+VIB+VMB+STB+allocation+plan|https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2345828473/Baler+VIB+VMB+STB+allocation+plan|smart-link] , although this plan is focused on the allocation scheme with replay involved.",Brad Wu,John Ingalls,,,,,,,,,,,,,,62103777eb2978006893b778,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2209,MAL-2476,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29/Aug/22 10:58 PM;ug:57c1528d-c032-4679-8e67-960f3039970a;image-20220830-055705.png;https://sifive.atlassian.net/secure/attachment/76744/image-20220830-055705.png,29/Aug/22 10:58 PM;ug:57c1528d-c032-4679-8e67-960f3039970a;image-20220830-055749.png;https://sifive.atlassian.net/secure/attachment/76743/image-20220830-055749.png,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=DECLINED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-21T19:31:54.000-0700"",""stateCount"":2,""state"":""DECLINED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2209,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,2,,,,,,,,,,,,,,,,,,,2|i00rxr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV]:: COSIM VS RTL WRDATA for vcompress.vm (PC=0x800053fa),[TGV]:: COSIM VS RTL WRDATA,Execution Unit ,,,,MAL-2519,124141,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/29/2022 22:26,9/7/2022 17:43,9/28/2022 0:51,8/30/2022 23:44,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error::*
\[COSIM-ERROR]\[0] COSIM VS RTL WRDATA MISMATCH
\[COSIM-ERROR]\[0] COSIM VS RTL WRINFO MISMATCH
\[COSIM-ERROR]\[0] m_dut_inst_item: \[42320] InstInfo: VLD=1 | PC=0x00000000800053fa | INSN=0x5f07a057 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r0=0x00cc_00cc_00cc_00cc_00cc_00cc_0000_0000 mask=0000ffffen=true r1=0x00cc_00cc_00cc_00cc_00cc_00cc_00cc_00d8 mask=0000ffffen=true r2=0x0549_9c42_35ec_e34a_6666_6665_6666_666d mask=0000ffffen=true r3=0xffff_ffff_0000_0001_ffff_ffff_0000_0001 mask=0000ffffen=true 
 mask=0000ffffen=true  | READY=1 | CSR_TIMER=42320 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x000000008000a240 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=64 | SEW=8 | LMUL=m4 | VSEGELT=0
\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x00000000800053fa | INSN=0x5f07a057 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r0=0xd0d0_d0d1_fffd_0001_ca01_caea_f0ea_e43a mask=0000f7ff

\[COSIM-ERROR]\[0] m_dut: en=true r0=0x0*0cc_00cc_00cc_00cc_00cc_00cc_0000_0000* mask=0000ffffen=true r1=0x00cc_00cc_00cc_00cc_00cc_00cc_00cc_00d8 mask=0000ffffen=true r2=0x0549_9c42_35ec_e34a_6666_6665_6666_666d mask=0000ffffen=true r3=0xffff_ffff_0000_0001_ffff_ffff_0000_0001 mask=0000ffff
\[COSIM-ERROR]\[0] m_sim: en=true r0=0x*d0d0_d0d1_fffd_0001_ca01_caea_f0ea_e43a* mask=0000f7ff



*Debug_info::*
Looks like design added extra delay to Destination register update and It causes Wrong data updated to r0.
Lmul=4, SEW=8, VL=64

*v 0 0xfff0fff0fff4ffee96d096f096a0d3c9*
*v 1 0x00cc00cc00cc00cc00cc00cc00cc00d8*
*v 2 0x05499c4235ece34a666666656666666d* 
*v 3 0xffffffff00000001ffffffff00000001*
*v16 0xfff1fff8fff7fff5eaf0eaffeae43a35*
*v15 0x00cc00c200cc00c200cc00c200cc00ce*


core   0: 0x00000000800053fa (0x5f07a057) vcompress.vm v0, v16, v15
core   0: 3 0x00000000800053fa (0x5f07a057) e8 m4 l64 v 0 0xd0d0d0d1fffd0001ca01caeaf0eae43a

*Design trace::*
C                   0:      42346 \[1] pc=\[00000000800053fa] W\[r 0=0000000000000000]\[0] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[5f07a057] vcompress.vm v0, v16, v15
C                   0:      42337 vrf\[ 0]=\[00cc00cc00cc00cc00cc00cc00000000]\[ffff]
C                   0:      42338 vrf\[ 1]=\[00cc00cc00cc00cc00cc00cc00cc00d8]\[ffff]
C                   0:      42343 vrf\[ 2]=\[05499c4235ece34a666666656666666d]\[ffff]
C                   0:      42344 vrf\[ 3]=\[ffffffff00000001ffffffff00000001]\[ffff]

!image-20220830-051756.png|width=2539,height=481!



*SHA1::* bbecbd8ab31df2d814ca0e435350cca33d62c6a2
*config::* coreip_u8_minimal_vector
*Waves::* gamma26:://scratch/naveenr/aug-29/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline_rat/rat_default_T_0067/rat/default/waves.fsdb


*rerun. Outline::* 

outline copied in {{/work/nicolasb/tgv_bug_outlines/rat/MAL-2519.outline}}

*outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": [
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+verbose""
],
""subdir"": ""rat_default_T_0067"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 4060858077
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Naveen Rathore,Nicolas Brunie,,,,,,,,,,,,,,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29/Aug/22 10:26 PM;ug:00e334db-2e60-4fae-a5b5-d5d39244fe5c;image-20220830-051756.png;https://sifive.atlassian.net/secure/attachment/76740/image-20220830-051756.png,30/Aug/22 7:44 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220830-144436.png;https://sifive.atlassian.net/secure/attachment/76755/image-20220830-144436.png,,,,,,,,,,,,,,,bbecbd8ab31df2d814ca0e435350cca33d62c6a2,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-30T23:43:07.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/8d9a0a386f586650fc07aa238440b2a3d7148685,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00rx3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,44:47.8,"30/Aug/22 7:44 AM;6065017e90e3950069cf01c5;It looks like the issue is that there is a long broadcast stall for permute engine and that the write valid to stage result is not properly qualified (an invalid result is stage because a write conflict is detected with a ready result already staged in {{resultRF}}). Trying a fix.

!image-20220830-144436.png|width=1631,height=663!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vector store stores incorrect value after uop ID is added to LSU wakeup,[TGV] vector store LSU wakeup,LSU (Load Store Unit),,,,MAL-2518,124138,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Yohann Rabefarihy,61730c9cbcb57400683f15a6,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,8/29/2022 21:13,9/22/2022 20:57,9/28/2022 0:51,9/22/2022 20:56,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"cc: [~accountid:5bb6808b9ba2930990f81895] 

{noformat}=== sitest found errors in test sim/tgv_vle-vse.outline/vector/vle-vse:
Reset m_pl2_mmc_inner_agents  ca
[COSIM-ERROR][0] COSIM VS RTL PC MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [13186] InstInfo: VLD=1 | PC=0x0000000080000b98 | INSN=0x00004505 | INST_DST=INT | REDUCTION = false | WR: en=true r10=0x0000_0000_0000_0001 mask=00ff | READY=1 | CSR_TIMER=13186 | PRV=0 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080000f00 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=4 | SEW=32 | LMUL=m1 | VSEGELT=0

[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000080000b8a | INSN=0x00004505 | INST_DST=INT | REDUCTION = false | WR: en=true r4=0x0000_0000_0000_0001 mask=00ff{noformat}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vle-vse"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Waveform: gamma11:/scratch/sols/tgv4/federation/builds/1fb79445a03/coreip_u8_minimal_vector/sim/sim/tgv_vle-vse.outline/vector/vle-vse",Alexandre Solomatnikov,John Ingalls,Nicolas Brunie,Yohann Rabefarihy,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5bb6808b9ba2930990f81895,6065017e90e3950069cf01c5,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,,MAL-2010,,,,,,,,,,,,,,,MAL-2064,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/1fb79445a03630bc04ada61b4b9f24476c893dd3,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{branch={count=1, dataType=branch}, json={""cachedValue"":{""errors"":[],""summary"":{""branch"":{""overall"":{""count"":1,""lastUpdated"":null,""dataType"":""branch""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00rwf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,48:53.0,"30/Aug/22 2:48 AM;61730c9cbcb57400683f15a6;I don’t understand why this is a bug ? The task for stores lmul>1 is not even started.

But ok I’m starting this week \!",30/Aug/22 8:01 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;Incorrect vector store has {{LMUL==1}},"30/Aug/22 9:24 PM;5bb6808b9ba2930990f81895;Oh, this is still using the {{prIdx}} {{Cat(...)}} concatentation from before [https://sifive.atlassian.net/browse/MAL-2010|https://sifive.atlassian.net/browse/MAL-2010|smart-link].  Would this be simpler / more straightforward / easily obvious to add / debug after MAL-2010?",22/Sep/22 8:56 PM;5bb6808b9ba2930990f81895;Vector Stores (including LMUL>1) will be done in MAL-2064,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
U8_maxed_out WG: ccache_side/no_int test fails on wrong error register address for the wgchecker attached to ccache_side.,U8_maxed_out WG: ,,,,,MAL-2517,124066,,Bug,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,,Abderrahmane Sensaoui,5e0d62b80242870e996e9bee,Padmaja Channapragada,620eae6deb297800689336c7,Padmaja Channapragada,620eae6deb297800689336c7,8/29/2022 8:25,9/19/2022 10:15,9/28/2022 0:51,,,,,,,,,,,,,,RTL/Tile,,,,,,,,,0,,,,"Description:

The ccache_side/no_int test is failing on u8_maxed_out config due to incorrect error register address for a write denied transaction.

Expected Address: *8000004*

Actual Address: *8000000* 

+*Committed log:*+

C                   0:     125069 \[1] pc=\[0000000080001578] W\[r15=0000000000000000]\[1] R\[r10=0000000004049000] R\[r 0=0000000000000000] inst=\[00c56783] lwu     a5, 12(a0);*readWginterruptAdd*
C                   0:     125075 \[1] pc=\[000000008000157c] W\[r14=0000000008000000]\[1] R\[r10=0000000004049000] R\[r 0=0000000000000000] inst=\[00856703] lwu     a4, 8(a0)
C                   0:     125078 \[1] pc=\[0000000080001580] W\[r15=0000000000000000]\[1] R\[r15=0000000000000000] R\[r 0=0000000000000000] inst=\[00001782] c.slli  a5, 32
C                   0:     125078 \[1] pc=\[0000000080001582] *W\[r15=0000000008000000]\[1*] R\[r15=0000000000000000] R\[r14=0000000008000000] inst=\[00008fd9] c.or    a5, a4
C                   0:     125078 \[1] pc=\[0000000080001584] W\[r 0=0000000000000000]\[0] R\[r11=0000000080107f70] R\[r15=0000000008000000] inst=\[0000e19c] [c.sd|http://c.sd]    a5, 0(a1)
C                   0:     125078 \[1] pc=\[0000000080001586] W\[r 0=0000000000000000]\[0] R\[r 1=0000000080004f64] R\[r 0=0000000000000000] inst=\[00008082] ret
C                   0:     125083 \[1] pc=\[0000000080004f64] *W\[r14=0000000008000000]*\[1] R\[r 2=0000000080107f20] R\[r 0=0000000000000000] inst=\[00006746] c.ldsp  a4, 80(sp)
C                   0:     125083 \[1] pc=\[0000000080004f66] *W\[r15=0000000008000004]\[1]* R\[r 2=0000000080107f20] R\[r 0=0000000000000000] inst=\[000067e6] c.ldsp  a5, 88(sp)
*C                   0:     125091 \[1] pc=\[0000000080004f68] W\[r 0=0000000000000000]\[0] R\[r14=0000000008000000] R\[r15=0000000008000004] inst=\[28f71f63] bne     a4, a5, pc + 670*
C                   0:     125097 \[1] pc=\[0000000080005206] W\[r10=0000000000000321]\[1] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[32100513] li      a0, 801
C                   0:     125097 \[1] pc=\[000000008000520a] W\[r 1=000000008000520e]\[1] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[87cfb0ef] jal     pc - 0x4f84
C                   0:     125098 \[1] pc=\[0000000080000286] W\[r 0=0000000000000000]\[0] R\[r10=0000000000000321] R\[r 0=0000000000000000] inst=\[0000cd09] c.beqz  a0, pc + 26;exit
C                   0:     125098 \[1] pc=\[0000000080000288] W\[r 3=0000000000000321]\[1] R\[r 0=0000000000000000] R\[r10=0000000000000321] inst=\[000081aa] [c.mv|http://c.mv]    gp, a0
C                   0:     125101 \[1] pc=\[000000008000028a] W\[r 0=0000000000000000]\[0] R\[r10=0000000000000321] R\[r 0=0000000000000000] inst=\[0000e111] c.bnez  a0, pc + 4;_fail

C code:(/scratch/padmajac/Work/U8/U8/software/tests/worldguard/tests/wg_filter/src/main.c: Line 799)

readWginterruptAdd(wgintr_filter,&add_reg);
if ( add_reg \!= add_rel )
exit(*LINE*);

*Config: u8_maxed_out*

*branch: master tip.*

*Rerun.outline:*

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""worldguard/tests/wg_filter/ccache_side/no_int"",
""raw_plusargs"": \[
""+verbose""
],
""enable_postsim_py_check"": false,
""seed"": {
""value"": 1791095845
},
""sim"": {
""vendor"": ""vcs""
},
""waves"": {
""dumper"": ""fsdb""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))



Run path with dump:

@gamma27: /scratch/padmajac/Work/U8/U8/builds/coreip_u8_maxed_out/sim/rerun_cc/worldguard/tests/wg_filter/ccache_side/no_int",Abderrahmane Sensaoui,John Ingalls,Padmaja Channapragada,,,,,,,,,,,,,5e0d62b80242870e996e9bee,5bb6808b9ba2930990f81895,620eae6deb297800689336c7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29/Aug/22 8:21 AM;ug:435ca56e-74cf-4bde-a532-df5e2db40044;ccache_side_u8.jpg;https://sifive.atlassian.net/secure/attachment/76718/ccache_side_u8.jpg,14/Sep/22 2:45 AM;65c1fbc7-7ca9-4e62-8b89-2bb927e61174;image-20220914-094508.png;https://sifive.atlassian.net/secure/attachment/77632/image-20220914-094508.png,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00rg7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,45:20.7,"14/Sep/22 2:45 AM;5e0d62b80242870e996e9bee;the address in the error register is correct, in the attached image, we can see the address of the request is at 0x800_0000



!image-20220914-094508.png|width=1651,height=551!","14/Sep/22 4:56 AM;5e0d62b80242870e996e9bee;the request has a size of 5 and mask of 0xF0, it looks correct.
unfortunately the wgchecker does not store the size and mask values, but only the address of the request.
","15/Sep/22 6:49 AM;5e0d62b80242870e996e9bee;after discussing this with [~accountid:5cddd0c6c33a5d0dcf0b3fe2] it makes more sense to make it software friendly.
will fix this",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
Add PMU events for IJTP and RAS context mismatches,,,,,,MAL-2516,124090,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Ankit Berde,62ed7a25d49df231b6289198,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/29/2022 10:55,9/10/2022 8:43,9/28/2022 0:51,9/9/2022 13:46,,,,,,,,,,,,,RTL/Frontend,,,,,,,,,0,,,,"During the testplan review for the Secure Predictor feature, it was discussed that we should add performance monitor events to the IFU for IJTP and RAS predictions which would have been hits, but were turned into misses because of context (privilege level or WID) mismatches.",Adam George,Ankit Berde,Anthony Hung,Josh Smith,Pavan Madasu,Suraj Vellengar,,,,,,,,,,61b2a458657a0500706b9c39,62ed7a25d49df231b6289198,5a81f04f2fa8952d487e916b,5acffeafaa802f2a797a955c,5e13756162aed90daa48f7ec,5e1377323e586d0dafebf4e3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-10T08:17:52.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4f45c3dab36c370169960ea7ad640719e2becf45,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,,,,,,,,,,,,,2|i00rlr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/25988/files],,,,,,,,,,,,,58:31.6,29/Aug/22 2:58 PM;5a81f04f2fa8952d487e916b;I presume there is a separate event for priv level and wid level?,"29/Aug/22 3:03 PM;5acffeafaa802f2a797a955c;Do we specifically want separate events for priv level mismatches and wid mismatches? Is that necessary?

This is the only ticket I’ve created.",29/Aug/22 3:35 PM;5a81f04f2fa8952d487e916b;No it isn’t necessary. It is up to you.,"29/Aug/22 4:02 PM;5acffeafaa802f2a797a955c;[~accountid:62ed7a25d49df231b6289198] For reference, in {{mallard/src/main/scala/core/mallard/IFU.scala}} we define the list of IFU performance events as a bundle:

{noformat}// Events for performance counters
class IFUPerfEvents extends Bundle {
  val bdpPredicted          = Bool()    // Conditional branch predicted taken by BDP
  val ijtpPredicted         = Bool()    // IJTP predicted taken
  val rasOverflow           = Bool()    // RAS overflowed
  val rasMispredict         = Bool()    // RAS mispredicted a target
  val rasEmptyForReturn     = Bool()    // Return not predicted due to RAS empty
  val rasForwarded          = Bool()    // RAS forwarded to NLP
  val rasPredicted          = Bool()    // RAS predicted taken
...
Lots more
...
}{noformat}



And then in {{mallard/src/main/scala/core/mallard/PerfMon.scala}} we hook up the signals from the IFU:

{noformat}  // Mallard micro-architectural events
  val ifu = EventSet(
    gate = (mask, hits) => RegNext((mask & hits).orR),
    events = Seq(
      (
        ""BDP Mispredict"",
        () => io.ifuPerfEvents.bdpMispredict,
        ""BRANCH_DIRECTION_MISPREDICTION"",
        ""Counts mispredictions of conditional branch direction (taken/not taken)"",
      ),
...{noformat}



So we need to add a couple more items to {{IFUPerfEvents}}, and then connect the correct control signals to {{io.ifuPerfEvents}} inside of the IFU, and modify {{PerfMon.scala}} to add entries like the one for “BDP Mispredict” above.","09/Sep/22 3:12 PM;5e13756162aed90daa48f7ec;Hi [~accountid:62ed7a25d49df231b6289198] 

How do we read those events? Is there an address(base & offset) for those event counters that you added?","09/Sep/22 3:46 PM;62ed7a25d49df231b6289198;@Pavan Madasu 



{{ 474       (}}

{{ 475         ""Context mismatched"",}}

{{ 476         () => io.ifuPerfEvents.jumpCtxMismatch,}}

{{ 477         ""IJTP_RAS_CTX_MISMATCH"",}}

{{ 478         ""Counts occurrences of Context Mismatch during Reads/Pop performed in IJTP/RAS modules"",}}

{{ 479       ),}}



This is the snippet from Scala file.



There is an Input port “io_ifuPerfEvents_jumpCtxMismatch“ created in PerfMon module in Verilog



Does this help? Were you expecting any other information?","09/Sep/22 3:49 PM;5acffeafaa802f2a797a955c;[~accountid:5e13756162aed90daa48f7ec] it should be event set 3, event 26 in the performance monitor events.  One event was added to count the cases where either the IJTP or RAS prediction had a context mismatch.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Issue permute instructions having  LMUL<1  and Simple Slide without ordering constraints,,,,,,MAL-2515,124089,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,8/29/2022 10:54,9/27/2022 17:00,9/28/2022 0:51,9/27/2022 11:02,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"When permute instructions having LMUL<1 are present in the issue queue the ordering constraints is not required as the instruction is not split into separate UOP’s that can have dependencies that result in a deadlock. 

Condition to optimize

LMUL *<=* 1 for {{vslide(up/down).vx}} and all {{vslide1*}} and {{vslide(up/down).vi}} whatever the LMUL",Alexandre Solomatnikov,Warren Menezes,,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,600773dcee80bd006f750bba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2629,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-23T13:07:46.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,100,,,,,,,,,,,,,,,2|i00rlj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,59:13.2,29/Aug/22 1:59 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;I think [~accountid:6065017e90e3950069cf01c5] knows this.,29/Aug/22 4:34 PM;600773dcee80bd006f750bba;Yes [~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] I spoke to him I’m creating a Jira to track it. While doing so it defaulted the assignment to you accidentally ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
u8_maxed_out WG test fails with IFU assertion,u8_maxed_out WG test fails  IFU assertion,,,,,MAL-2514,124004,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Highest,Done,Anthony Hung,5a81f04f2fa8952d487e916b,Anthony Hung,5a81f04f2fa8952d487e916b,Anthony Hung,5a81f04f2fa8952d487e916b,8/27/2022 15:52,9/7/2022 11:47,9/28/2022 0:51,9/7/2022 11:28,,,,,,,,,,,,,RTL/Frontend,,,,,,,,,0,,,,"While running a basic worldguard test we notice the following assertion:



C                   0:     125745 \[1] pc=\[0000000080004d5c] W\[r 0=0000000000000000]\[0] R\[r 0=0000000000000000] R\[
r 0=0000000000000000] inst=\[30200073] DASM(30200073) 
Error: ""/scratch/verif/ahung/mymallardwg/builds/coreip_u8_maxed_out/verilog/design/assertions/SiFive_IFU_assert.s
v"", 332: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.ifu.SiFive_IFU_assert: at time 50
33922500 ps 
Assertion failed: RAS forward target was incorrect 
   at IFU.scala:1439 assert(\!(rasTargetCheckEn_F3 && (pcVA_F2 =/= alignPC(rasTarget_F3))), ""RAS forward target w
as incorrect"") 

Fatal: ""/scratch/verif/ahung/mymallardwg/builds/coreip_u8_maxed_out/verilog/design/assertions/SiFive_IFU_assert.svcs202012.so


rerun script:

config u8_maxed_out

branch: master tip

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""worldguard/tests/wg_csr/user"",
  ""raw_plusargs"": [
    ""+verbose""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2324807182
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}",Anthony Hung,Cyril Bresch,Frank Lhermet,John Ingalls,Josh Smith,Mohammed El Harhar,Pradyumna Panda,,,,,,,,,5a81f04f2fa8952d487e916b,5fa5f3f5b45b2e0074939e18,5cddd0c6c33a5d0dcf0b3fe2,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,5f1eda46170ffc0023b1ebf7,607e270b81e7b900681be5a8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FED-2181,,,,,,,,,,,,,,,,,,,,,,,,,,,2cbf74940a51489230a6440d460f67abb2437cb5,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-07T11:27:32.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8fbf38c29727a8b6cca65d01d78dfa4ec37b39d1,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00r2f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,31:06.2,27/Aug/22 4:19 PM;5a81f04f2fa8952d487e916b;[~accountid:5dbc8d4f3a09190c2ad5f41d] ,"30/Aug/22 1:31 AM;5f1eda46170ffc0023b1ebf7;[~accountid:5a81f04f2fa8952d487e916b] , could you add the federation hash. ","30/Aug/22 3:06 AM;5f1eda46170ffc0023b1ebf7;[~accountid:5fa5f3f5b45b2e0074939e18] , failing with the hash : 2cbf74940a51489230a6440d460f67abb2437cb5","30/Aug/22 8:55 AM;5fa5f3f5b45b2e0074939e18;ok, it's still a RAS forwarding issue due to the security behavior of the RAS. First, there is a call updating the RAS with a security context. By the time this call arrives in F3, the security context has changed, and the NLP predicts a ret in F1.
F3's PC is forwarded to the NLP, and the prediction of the RAS turn to zero(this is because the top RAS context does not match the new context anymore). This leads to an F1 prediction unconsistent with the top of the RAS.
With the minimal WG configuration tests and the previous RAS forwarding fix, we did not encounter this corner case.

The assertion can also break in the following cases:

* a call in F2 and a NLP ret in F1 while the security context changes.
* a security context chan between a RAS forward and the prediction of the RAS in F3.

I'm working on a fix.","30/Aug/22 9:03 AM;5acffeafaa802f2a797a955c;{quote}By the time this call arrives in F3, the security context has changed, and the NLP predicts a ret in F1.{quote}

This is what I was wondering about yesterday during the meeting.  A context change is supposed to come along with a pipeline flush, but the flush may happen a couple cycles after the context change.  I’m wondering if this assertion fires just before the instructions in fetch get flushed.  In which case this shouldn’t _really_ be an issue I think.  We’d just have to adjust the assertion somehow.",31/Aug/22 11:38 PM;607e270b81e7b900681be5a8;This assertion failure was seen in POST MERGE SHORT too. ([here|https://jenkins-ci.internal.sifive.com/job/fed/job/Post-Merge-Short/3743/testReport/junit/coreip_u8mc_minimal.sims/vcs/torture_torture_short_T_0007_torture_torture_short/].). [~accountid:5e0dd16e8dfdd40ec488ea2d] Hope we can follow this up for the same . ,"01/Sep/22 3:25 AM;5fa5f3f5b45b2e0074939e18;[~accountid:5acffeafaa802f2a797a955c] I think this is the case, the assertion breaks just after the ctx switch, like 3 cycles. Before adjusting the assertion, I prefer asking the right question so that it does not impact security. I’ll schedule you a quick meeting to clarify that. 

Other solutions that we can consider are:

* pipelining the context to make sure the assertion holds. But it could open a security issue

* blocking the rasForwarding on the ctx switch and while the enforced secure prediction is true, and releasing it otherwise. That could be reasonable","02/Sep/22 3:18 AM;5fa5f3f5b45b2e0074939e18;The current working branch is here {{fed_mal2514}}

[~accountid:5f1eda46170ffc0023b1ebf7] passed the regressions with the branch, however it seems that there is a rare corner case that break the assertion in POST MERGE ([~accountid:607e270b81e7b900681be5a8]). I might just have missed a case like that rasForward in F1 |=> ctx change => assertion failure. I’ll try to cover it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: unrolled misaligned load only serialize with other misaligned loads through LDWB loop-back buffer,LSU: LDWB loop-back buffer,,,,,MAL-2513,124081,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/29/2022 10:06,8/30/2022 15:26,9/28/2022 0:51,8/29/2022 17:15,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"*Error::*
Error: ""/scratch/naveenr/aug-29/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LDPipe_assert.sv"", 6191: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LDPipes.LDPipes_0.SiFive_LDPipe_assert_0: at time 3649882500 ps
assert failed (verification library): unrolled load tail should follow first through LDWB loop-back in-order until MAL-1871  @\[LDPipe.scala 1908:18]
Fatal: ""/scratch/naveenr/aug-29/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LDPipe_assert.sv"", 6200: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LDPipes.LDPipes_0.SiFive_LDPipe_assert_0: at time 3649882500 ps

*Debug-Info::*
    Instruction-Trace::
 0000000040681c1a <address_alligned_2_26_0_hv_0>:
address_alligned_2_26_0_hv_0():
40681c1a:	020283a7          	vse8.v	v7,(t0)
40681c1e:	02028387          	vle8.v	v7,(t0)     //8 Byte aligned Vector load  
40681c22:	00022337          	lui	t1,0x22
40681c26:	0013031b          	addiw	t1,t1,1

    Cosim- trace::   //Last PC 0x40681c1a  
core   0: 0x0000000040681c16 (0x007282b3) add     t0, t0, t2
core   0: 3 0x0000000040681c16 (0x007282b3) x 5 0*x0000000040604008*
core   0: 0x0000000040681c1a (0x020283a7) vse8.v  v7, (t0)
core   0: 3 0x0000000040681c1a (0x020283a7) e8 m1 l16 mem 0x000*0000040604008*-0x0000000040604008 0x0 mem 0x0000000040604009-0x0000000040604009 0x0 mem 0x000000004060400a-0x000000004060400a 0xc0 mem 0x000000004060400b-0x000000004060400b 0x7f mem 0x000000004060400c-0x000000004060400c 0x0 mem 0x000000004060400d-0x000000004060400d 0x0 mem 0x000000004060400e-0x000000004060400e 0xc0 mem 0x000000004060400f-0x000000004060400f 0x7f mem 0x0000000040604010-0x0000000040604010 0x0 mem 0x0000000040604011-0x0000000040604011 0x0 mem 0x0000000040604012-0x0000000040604012 0xc0 mem 0x0000000040604013-0x0000000040604013 0x7f mem 0x0000000040604014-0x0000000040604014 0x0 mem 0x0000000040604015-0x0000000040604015 0x0 mem 0x0000000040604016-0x0000000040604016 0xc0 mem 0x0000000040604017-0x0000000040604017 0x7f



*SHA1::*    bbecbd8ab31df2d814ca0e435350cca33d62c6a2
*config::*  coreip_u8_minimal_vector
*Waves::*  gamma26::/scratch/naveenr/aug-29/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline_ld_assert/sting_StingSiFiveTuple_T_0236/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb
*rerun.outline::*
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""sting"",
""raw_plusargs"": \[
""+cosim_scoreboard_trap_epc_count=128"",
""+cosim_scoreboard_stall_time=1000000"",
""+axi_mem_latency_cycles=40"",
""+axi_mem_dither_cycles=20"",
""+amba_vip_select=2"",
""+gdi_amba_test_enable=1"",
""+gdi_tlc_test_enable=1"",
"""",
""+verbose""
],
""subdir"": ""sting_StingSiFiveTuple_T_0236"",
""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 1367734809
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""reset_vector_scheme"": ""first_mem_periph_sys""
},
""uvm"": {
""set_config_string"": \[
""uvm_test_top,torture_read_inbound,10101010:80808080"",
""uvm_test_top,torture_inbound,10101010:80808080""
],
""testname"": ""torture_test""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))


          ",Alexandre Solomatnikov,John Ingalls,Naveen Rathore,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5bb6808b9ba2930990f81895,6235105a3eacc50071ff07ec,,,,,,,,,,,,,,,,,,,,,,,,MAL-1871,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-70,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,bbecbd8ab31df2d814ca0e435350cca33d62c6a2,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-30T14:05:42.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25699,,,n/a,,,,,,,,,Simulation-STiNG,Simulation-Torture,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00rjr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,57:42.5,"29/Aug/22 3:57 PM;5bb6808b9ba2930990f81895;The initial implementation in [https://sifive.atlassian.net/browse/MAL-70|https://sifive.atlassian.net/browse/MAL-70|smart-link] was overly conservative and in-order: unrolled Misaligned LoadQ entries (both first and second pieces) return in-order through the structural hazard on LDWB data re-combining stage regardless of address hazards.  Furthermore, this initial implementation _also_ serialized _aligned_ LoadQ entries (single piece), which worked for initial bring-up, but is unnecessary and untenable in our out-of-order design.

Fix this by creating a new stage “LDUB” (Load Data Unroll Buffer) so that misaligned LoadQs only need to serialize with other _misaligned_ LoadQs.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[TGV] Assertion Failed: Freelist entry is being returned, but already marked free",[TGV] Assertion Failed: Freelist entry,Instruction decode and dispatch ,,,,MAL-2512,124080,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,8/29/2022 10:03,9/7/2022 17:43,9/28/2022 0:51,8/30/2022 8:46,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"We see below assertion failure.

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_197_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_FreeListBanked_assert.sv"", 1133: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.freelist.SiFive_FreeListBanked_assert_0: at time 2834362500 ps
assert failed (verification library): Freelist entry is being returned, but already marked free  @[FreeList.scala 463:11]

Fatal: ""/scratch/ishitashah/tgv_regression/sign_197_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_FreeListBanked_assert.sv"", 1142: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.freelist.SiFive_FreeListBanked_assert_0: at time 2834362500 ps{noformat}

*SHA:* 184ebb3

*config*: coriep_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0187"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1644053481
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Dumppath

{{gamma25:/scratch/ishitashah/tgv_regression/sign_197_test_fails/federation/builds2/coreip_p670/sim/rerundir1_free/free_rerun.outline/sting_StingSiFiveTuple_T_0187/sting/sifive/vector/vector_tgv_dev.conf}}",Andrew Hanselman,David Kravitz,Ishita Shah,Josh Smith,Nicolas Brunie,,,,,,,,,,,609d7e1f5998a6006800dcc5,5fd15143b4a74900763834e0,607e26355431a500701f5aed,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-30T08:45:06.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,a65f770ae2ef3d341eef5f8bc59032f7a7abd1c7,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00rjj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,52:12.0,"29/Aug/22 12:52 PM;5fd15143b4a74900763834e0;Took a quick look at this. VRF entry 0x60 is freed by a retirement at 2,826,902,500. Then a rewind beginning at 2,834,262,500 also tries to free entry 0x60. Don’t know if this an RHF problem or maybe related to the X2Y alloc issue that [~accountid:609d7e1f5998a6006800dcc5] has been working on.

The outline has been copied to `/work/nicolasb/tgv_bug_outlines/sting/MAL-2512.outline`
Starter waves are in ~davidk2/waves/MAL-2512.rc","29/Aug/22 1:04 PM;609d7e1f5998a6006800dcc5;X2Y/accumulators don’t operate with any free lists, so I don’t think this is related directly to the bug I am seeing. It’s possible there is a variant related to the VRF for similar rewind though. I’d say make sure that no VRDU rename occurs while rewind is still occurring, but it shouldn’t be possible for instructions to get passed scalar DIS while renaming is occurring AFAIK. But maybe there is still some sequencing happening for an instruction not flushed, and there is an RHF bug related to that.",29/Aug/22 1:22 PM;5acffeafaa802f2a797a955c;I’m taking a look at this.  As far as I can tell right now is that PR 0x60 actually gets mapped twice into the map table (to both AR 15 and 17).  I’m still narrowing down what’s going on there.  I think we could at a minimum add more assertions that PRs don’t get mapped twice for register files which don’t support move elimination.,29/Aug/22 1:42 PM;609d7e1f5998a6006800dcc5;FYI backlog: [https://sifive.atlassian.net/browse/MAL-2179|https://sifive.atlassian.net/browse/MAL-2179|smart-link] ,29/Aug/22 3:17 PM;5acffeafaa802f2a797a955c;This looks like another issue with the Freelist “stealing” mechanism where a bank with one available PR tries to steal from itself and ends up thinking it should have 2 available PRs as a result.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: SiFive_LDPipe_assert,Assertion Failure: LDPipe_assert,LSU (Load Store Unit),,,,MAL-2511,124059,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,8/29/2022 5:57,8/29/2022 9:26,9/28/2022 0:51,8/29/2022 9:25,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"*Error:*

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/352/builds/coreip_p550/verilog/design/SiFive_LDPipe.sv"", 3834: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LDPipes.LDPipes_0: at time 2253982500 ps
assert failed (verification library): LDF timing-enhanced pre-calculated equation for ldf_matchLdwbWrL1EccGrans does not match functional in MAL-1415  @[LDPipe.scala 1847:16]{noformat}



Dump available at: {{verif04:/scratch/saurabhs/mallard_master_352/federation/builds/coreip_p550/sim/sim/LDPipe_assert.outline/sting_StingInterruptsTuple_T_0020/sting/sifive/interrupt/clint_mac_software_int.conf}}



*Build*: coreip_p550

*Commit*: 069a4ea

*Regression*: master/nightly-mallard/352

*Simscope*: [https://simscope.internal.sifive.com/sigs/1394/cmfj3irwhnfw|https://simscope.internal.sifive.com/sigs/1394/cmfj3irwhnfw]

*rerun.outline*: 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingInterruptsTuple_T_0020"",
  ""subtest"": ""sifive/interrupt/clint_mac_software_int.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2217862595
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Rakesh Palakurthi,Saurabh Singh,,,,,,,,,,,,,,62350e943eacc50071ff0753,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FED-2177,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2008,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-29T09:25:57.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25663,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i00ren:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
RTL module for synchronizers,,,,,,MAL-2510,124057,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Vivek Upadhyaya,60f1cc1a62738c00683d4c06,Gaurav Shrivastav,61e9fdc938041c00687592db,Gaurav Shrivastav,61e9fdc938041c00687592db,8/29/2022 5:05,9/22/2022 2:21,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,,,,,,,,,0,,,,"Currently a synchronizer in RTL is being interpreted as back to back flops in physical design implementation. This is not correct w.r.t the design intent. That requires a synchroniser std cell to be instantiated in synthesis wherever uArch needs a sync cell. 

Can we please create a synchronizer module in RTL that instantiates a technology specific sync cell (with number of stages being a parameter), similar to the way we create modules for clock gaters?",Cody Croxton,Dave Parry,Gaurav Shrivastav,Josh Smith,Robbie Adler,Roshan Fernando,Vaibhav Gupta,,,,,,,,,5e1371930242870e996efde2,5cc37f384573b30ffbeb88b0,61e9fdc938041c00687592db,5acffeafaa802f2a797a955c,5dcc1b25bb355b0ddbd19f53,5f99dd6fb45b2e00744d2a39,623e4830b75ca80070580145,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00re7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,38:59.5,"29/Aug/22 8:38 AM;5acffeafaa802f2a797a955c;Why was this assigned to me?  This should be an issue for all of our cores, right?  This is more of a CIP task, but I don’t know who should handle it.","05/Sep/22 8:38 PM;5cc37f384573b30ffbeb88b0;[~accountid:61e9fdc938041c00687592db] I’m not sure what you’re after here. We already tell customers in our user guide that they should replace the synchro modules with tech-specific cells of their choosing. We should be doing the same in our _PD flow,_ not putting tech-specific content in our RTL elaboration/emission. Here’s a sample of the relevant section from the UG:

{quote}9.4. Synchronizer Instantiation

To avoid metastability, SiFive makes use of back-to-back register chains. You may want to replace the RTL synchronizers with synchronizers from your technology library. The synchronizers are located in rtl/design/*ResetSynchronizerPrimitiveShiftReg_dX{_iY}*.sv, where X is the number of stages (currently they are all 3) and some types have a reset to an initial value Y.{quote}

","06/Sep/22 8:08 AM;5e1371930242870e996efde2;[~accountid:61e9fdc938041c00687592db] These are added as cells in federation that override the standard module but are not part of the normal RTL.   If we know what cell we want, we just need to create the verilog file and create a PR.",07/Sep/22 4:47 AM;61e9fdc938041c00687592db;Thanks Cody. This is helpful. Let me follow up. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV]:: COSIM VS RTL WRDST MISMATCH for vfredmax.vs(PC=0x2020e3a78),[TGV]:: COSIM VS RTL WRDST MISMATCH ,Execution Unit ,,,,MAL-2509,124032,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/29/2022 0:48,9/8/2022 20:37,9/28/2022 0:51,9/6/2022 10:57,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error::*
\[COSIM-ERROR]\[0] COSIM VS RTL WRDST MISMATCH
\[DoCheck]\[0] m_dut_inst_item: \[268996] InstInfo: VLD=1 | PC=0x00000002020e3a78 | INSN=0x1f7b9357 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r13=0x5b58_4413_7fc0_0000_43ea_8f76_7736_b300 mask=0000ffff | READY=1 | CSR_TIMER=268996 | PRV=3 | MSTATUS=0x8000000a000066aa | MTVEC=0x0000000080000400 | MCAUSE=0x8000000000000007 | VSTART=0 | VL=4 | SEW=32 | LMUL=m1 | VSEGELT=0
\[COSIM-ERROR]\[0] m_dut_inst_item: \[268996] InstInfo: VLD=1 | PC=0x00000002020e3a78 | INSN=0x1f7b9357 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r13=0x5b58_4413_7fc0_0000_43ea_8f76_7736_b300 mask=0000ffff | READY=1 | CSR_TIMER=268996 | PRV=3 | MSTATUS=0x8000000a000066aa | MTVEC=0x0000000080000400 | MCAUSE=0x8000000000000007 | VSTART=0 | VL=4 | SEW=32 | LMUL=m1 | VSEGELT=0
\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x00000002020e3a78 | INSN=0x1f7b9357 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r6=0x5b58_4413_7fc0_0000_43ea_8f76_7736_b300 mask=0000000e


*Debug-Info::*
Instead of r6, Design is updating r13 register with Correct-Data.
C                   0:     268996 \[1] pc=\[00000002020e3a78] W\[r 0=0000000000000000]\[0] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[1f7b9357] vfredmax.vs v6, v23, v23
C 0:     268917 vrf\[13]=\[5b5844137fc0000043ea8f767736b300]\[ffff]

*Cosim-info::*   
core   0: 0x00000002020e3a78 (0x1f7b9357) vfredmax.vs v6, v23, v23
core   0: 3 0x00000002020e3a78 (0x1f7b9357) e32 m1 l4 v 6 0x5b5844137fc0000043ea8f767736b300

*SHA1::* bbecbd8ab31df2d814ca0e435350cca33d62c6a2
*Config::*   coreip_p670
*Waves::*   gamma26:://scratch/naveenr/aug-29/federation/builds/coreip_p670/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0001/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb
*Rerun.outline::* 
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""sting"",
""raw_plusargs"": \[
""+cosim_scoreboard_trap_epc_count=128"",
""+cosim_scoreboard_stall_time=1000000"",
""+axi_mem_latency_cycles=40"",
""+axi_mem_dither_cycles=20"",
""+amba_vip_select=2"",
""+gdi_amba_test_enable=1"",
""+gdi_tlc_test_enable=1"",
"""",
""+verbose"",
""+cosim_scoreboard_verbosity=4""
],
""subdir"": ""sting_StingSiFiveTuple_T_0001"",
""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 1310490086
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""reset_vector_scheme"": ""first_mem_periph_sys""
},
""uvm"": {
""set_config_string"": \[
""uvm_test_top,torture_read_inbound,10101010:80808080"",
""uvm_test_top,torture_inbound,10101010:80808080""
],
""testname"": ""torture_test""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))

",David Kravitz,Josh Smith,Kira Tsao,Naveen Rathore,Nicolas Brunie,Shaka Kao,,,,,,,,,,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,5e1a4f5ec578120daca5ff8e,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,05/Sep/22 12:01 AM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220905-055942.png;https://sifive.atlassian.net/secure/attachment/77091/image-20220905-055942.png,05/Sep/22 12:01 AM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220905-063849.png;https://sifive.atlassian.net/secure/attachment/77089/image-20220905-063849.png,05/Sep/22 12:01 AM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220905-064943.png;https://sifive.atlassian.net/secure/attachment/77088/image-20220905-064943.png,05/Sep/22 12:01 AM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220905-065341.png;https://sifive.atlassian.net/secure/attachment/77092/image-20220905-065341.png,05/Sep/22 12:01 AM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220905-065347.png;https://sifive.atlassian.net/secure/attachment/77086/image-20220905-065347.png,05/Sep/22 12:01 AM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220905-065548.png;https://sifive.atlassian.net/secure/attachment/77087/image-20220905-065548.png,05/Sep/22 12:01 AM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220905-065620.png;https://sifive.atlassian.net/secure/attachment/77090/image-20220905-065620.png,06/Sep/22 2:41 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220906-094129.png;https://sifive.atlassian.net/secure/attachment/77168/image-20220906-094129.png,,,,,,,,,bbecbd8ab31df2d814ca0e435350cca33d62c6a2,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,a65f770ae2ef3d341eef5f8bc59032f7a7abd1c7,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i00r8n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,38:46.1,29/Aug/22 9:38 AM;5fd15143b4a74900763834e0;Bouncing to [~accountid:5e1a4f5ec578120daca5ff8e] for next step in debug. Outline is posted in {{/work/nicolasb/tgv_bug_outlines/sting/MAL-2509.outline}},"05/Sep/22 12:01 AM;5e1a4f5ec578120daca5ff8e;[~accountid:6235105a3eacc50071ff07ec] , [~accountid:5fd15143b4a74900763834e0] 

Per co-debugging/discussion with [~accountid:5f94696c29bd8a006f94f0e1] , we would like to check cosim is doing right thing or not.

According to the program, they are  same instructions group running within loops. And there are only 2 instructions that may need to write {{v6}}, witch are:

{noformat}core   0: 0x00000002020e3a78 (0x1f7b9357) vfredmax.vs v6, v23, v23
core   0: 0x00000002020e3ab4 (0x4ff01357) vfsqrt.v v6, v31{noformat}

* By checking {{mapReg_6}}, the previous {{vfredmax.vs v6,v23,v23}} rename {{v6}} to {{p76}}, dispatch to issue queue and the correct result has been successfully  update into {{p76}} after execution.

!image-20220905-055942.png|width=2124,height=632!

!image-20220905-063849.png|width=2082,height=350!

* Then we have {{vfsqrt.v v6, v31}}, which rename {{v6}} to {{p72}}.

!image-20220905-064943.png|width=1784,height=260!

* And final, the cosim mismatch instruction {{vfredmax.vs v6, v23, v23}}in another loop. As you can see, it rename {{v6}} to {{p60}}, dispatch to issue queue and the correct result has been successfully update into {{p60}} after execution.

!image-20220905-065341.png|width=2318,height=486!

!image-20220905-065347.png|width=2546,height=354!



So if we focus on {{mapReg_6}}, you will see it only change twice in above flow. 

{{vfredmax(76) -> vfsqrt (72)}}
{{vfsqrt(72) -> vfredmax(60)}}

!image-20220905-065548.png|width=1784,height=260!

!image-20220905-065620.png|width=1600,height=236!

We debug from {{VectorSequencer}} till {{prf}} write, TGV's behavioral seems correct, we'll try our best to trace till the info that cosim get, but we aren't expert in that domain, can you also double check the cosim’s behavioral for sure? Thanks.",05/Sep/22 12:09 AM;5e1a4f5ec578120daca5ff8e;We may also need help from [~accountid:5a938e9c0913194d2d262658] at this point.,"06/Sep/22 2:41 AM;6065017e90e3950069cf01c5;It looks like cosim mapping is changed before the instruction commit is result:

!image-20220906-094129.png|width=1804,height=674!

(investigation on going)","06/Sep/22 5:27 AM;6065017e90e3950069cf01c5;I don’t think this is a cosim issue, it looks like the physical vector register 0x60 is re-allocated before being free-ed while freeVec is exhausted (0x60 may have been waiting for allocation for a while).",06/Sep/22 7:21 AM;5fd15143b4a74900763834e0;Should [~accountid:5acffeafaa802f2a797a955c] take a look?,"06/Sep/22 7:23 AM;5acffeafaa802f2a797a955c;Yeah, I’ll take a look","06/Sep/22 7:47 AM;5acffeafaa802f2a797a955c;This appears to be the same issue as [https://sifive.atlassian.net/browse/MAL-2512|https://sifive.atlassian.net/browse/MAL-2512|smart-link], which was fixed in PR [https://github.com/sifive/federation/pull/25718|https://github.com/sifive/federation/pull/25718|smart-link] .

The hash in this ticket is from the day before I merged in my fix.  I’ll try reproducing the issue and cherry-picking that one fix.","06/Sep/22 7:51 AM;6065017e90e3950069cf01c5;I think that [~accountid:5acffeafaa802f2a797a955c] is indeed the expert here.

I tried to trace the allocation of 0x60 in the banked freelist, but I am not sure where to look.",06/Sep/22 10:57 AM;5acffeafaa802f2a797a955c;When I cherry-pick commit {{a65f770ae2ef3d341eef5f8bc59032f7a7abd1c7}} the test keeps going past this assertion. I’m going to mark this as already resolved.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Unexpected RAS misprediction (two JALRs are sent to decode),RAS misprediction ,,,,,MAL-2508,124025,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Adam George,61b2a458657a0500706b9c39,Chia-I Chen,61aaafab977c5b007241043c,Chia-I Chen,61aaafab977c5b007241043c,8/28/2022 23:16,9/27/2022 18:39,9/28/2022 0:51,9/2/2022 13:12,mongoose.00.00,mongoose.01.00,mongoose.02.00,narwhal.00.00,narwhal.01.00,narwhal.02.00,narwhal.03.00,narwhal.04.00,,,Panda DR,,Performance,RTL/Frontend,,,,,,,,0,,,,"As described in [SPARTA-1941|https://sifive.atlassian.net/browse/SPARTA-1941], when checking the performance change of [MAL-1276|https://sifive.atlassian.net/browse/MAL-1276], an unexpected RAS misprediction is found in snippet 0074/677.

[~accountid:61b2a458657a0500706b9c39] has reviewed the case and confirmed it also occurs in the master branch: 

By the MAS, the decode stage cannot process two JALR instructions in a single cycle, but now two JALRs may be sent to decode if one is from the instruction queue and one is from F3.",Adam George,Brian Grayson,Chia-I Chen,David Mielke,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,Megan Wachs,Suraj Vellengar,,,,,,61b2a458657a0500706b9c39,5e1371705361330daaeaf389,61aaafab977c5b007241043c,5e137289b783d60db0a03c05,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,5e1377323e586d0dafebf4e3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2549,,,,,MAL-1176,,,,,,,,,,,26/Sep/22 2:29 PM;ug:01650d64-a562-4979-b0d5-81324bf03bd0;MAL-2508 Two JALR sent to decode.pptx;https://sifive.atlassian.net/secure/attachment/78299/MAL-2508+Two+JALR+sent+to+decode.pptx,,,,,,,,,,,,,,,,a905f156,Requires further investigation,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-06T11:13:44.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,CAT-B,No special conditions or configuration needed.,Critical,"JALR instructions that match certain encodings to indicate a function return may be predicted by the return address stack predictor. Normally these return predictions are very accurate but under certain circumstances a function return target address may be predicted incorrectly and the core will not detect this when the branch resolves. If this occurs the incorrect speculative path will be executed.

The following is required to expose this issue:
* In the executed instruction stream a return JALR must follow any JALR by zero or one instructions.
* The return JALR must have a different target address than the older JALR instruction.
* The return address stack predictor must mispredict the function return JALR.",Low,,P500,,Two JALR instructions executed very close together may cause core may execute incorrect execution path,"Setting the feature disable register (CSR 0x7c1) bit 18 (disableIQBypass) to 1 should avoid this scenario, with some performance impact expected to be small (but yet unmodeled).",1. BRC: should Publish for all customers,,,,,,,,,,c36e0df,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i00r73:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,36:21.3,"29/Aug/22 8:36 AM;5acffeafaa802f2a797a955c;{quote}but now two JALRs may be sent to decode if one is from the instruction queue and one is from F3.{quote}

If that’s the case, we definitely need to fix that.  That could potentially cause a functional issue I believe, if we don’t correctly install the upper address bits for the predicted target into the PCMT.","29/Aug/22 11:42 AM;61b2a458657a0500706b9c39;If my understanding is correct, only one JALR is allowed in decode because the predicted target is provided to the EX pipe using dedicated logic that has limited bandwidth. The relevant limitation for this case is the fetch target queue can only deliver one target per fetch group so if two JALR instructions exist in decode then the core will use the target for the older JALR to detect mispredictions for both JALRs.

If I add the following assertion to the RDU it hits in 25% of sting tests.

{code:scala}assert(!validJalr_ID || (PopCount(valid_ID & inst_ID.map(_.jalr)) <= 1), ""More than one JALR detected in ID stage""){code}


However it seems for these cases the two JALR instructions are from recursive function calls and so the target address is almost always the same. Thus no functional failure occurs.

For the failing xalancbmk case the younger JALR does not mispredict in the IFU so execution actually proceeds down the correct path. Then the provided target address is wrong so the EX pipe thinks it mispredicts and triggers an unneeded branch flush.

I think hitting the functional failure requires the following:

* The younger JALR must mispredict in the IFU so fetching proceeds on the wrong path.
* The younger JALR must use a different target then the first. Otherwise the target of the older JALR will be used to detect a misprediction for the second. If both jumps actually use the same target no misprediction will be detected.
* There must be back pressure from the core when the older JALR reaches the F3 stage, but no back pressure when the younger JALR is in F3. This will ensure the older JALR is pulled from the instruction queue and the younger is taken from the F3 stage.","30/Aug/22 1:24 PM;61b2a458657a0500706b9c39;Looks like there’s more than one problem.
The first is the logic that disables fetching from F3 if JALRs are detected does not consider returns as JALR instructions. The _jalrCouldBypassVec_F3_ signal is computed using the BranchInfo::ijtpJump function which ignores return instructions.

{noformat}  val jalrCouldBypassVec_F3 = (fq.io.enq.bits.validMask & ~jalrRVIEndMask_F3 & fq.io.enq.bits.startMask &
                              ~fq.io.enq.bits.killMask & parcelInfo_F3.tail.map(p => p.ijtpJump).asUInt){noformat}

{{def ijtpJump: Bool = jr && !ret}}

Replacing _p.ijtpJump_ with _p.jr_ fixes this.

A second issue is in the function formDecodeGroup(). This only looks at jalrForBypass when processing instructions from the instruction queue but that bit is only set for instructions which have passed through the fetch queue. If instructions are written directly to the instruction queue from F3 then only the ‘jalr’ field is set. Thus the formDecodeGroup() function will miss detecting such JALR instructions.

{code:scala}  private def formDecodeGroup(inst: Seq[IFUResp], stallAll: Bool, single: Bool): Seq[Bool] = {
    val ready           = Wire(Vec(inst.size, Bool()))
    val jalr            = inst.map(_.predecode.jalrForBypass)
    val secondJalrMask  = secondMask(jalr){code}","31/Aug/22 8:54 AM;5acffeafaa802f2a797a955c;The {{jalrCouldBypass}} logic was intended to solve a different problem.  Since the IJTP predicted target is available from the F4 stage, it was a timing problem if a JALR (that is _not_ a return) bypassed directly from F3 stage to ID stage.  Because then F4 and ID stage were aligned.  And bypassing the IJTP F4 target directly to ID stage was a timing path.  Return instructions shouldn’t be a problem because the predicted target is known in F3 stage from the RAS.

But I agree that {{formDecodeGroup}} looks like it needs to be fixed.

If we just fixed the second issue, wouldn’t that solve the entire problem of potentially having two JALRs in the same decode group?  And I think that even if returns could bypass directly from F3 to ID stage, the correct predicted target still is available from the FTQ because the FTQ is pushed in F3 stage instead of F4 (like IJTP JALRs).","31/Aug/22 10:15 AM;61b2a458657a0500706b9c39;The MAS states two or more JALRs should not be sent to decode so the fixes are intended to prevent this behavior. Both fixes are necessary to prevent this as the formDecodeGroup change only fixes IQ/IQ or IQ/FQ merging while the first is needed for F3/IQ merging.

The failing case correlation found is a non-RET JALR plus a RET two instructions later. When both of these are in the decode stage the RDU will pop only one target address from the FTQ and use it for both instructions. 

{code:scala}  // Dequeue from target queue if we see a JALR
  val validJalr_ID = (valid_ID & inst_ID.map(_.jalr)).orR
  io.ftqResp_ID.ready := validJalr_ID && !stall_ID{code}

The fix could be made more precise by splitting the branch type detection and qualifying with {{iqValidJalr}} for all JALRs. Then all F3 JALRs will go to FQ if the IQ instructions have a JALR, but only non-RET JALRs will be diverted if the IQ instructions have no JALRs.","31/Aug/22 10:24 AM;5acffeafaa802f2a797a955c;-Well what I meant was that the jalrCouldBypass logic was simply to prevent non-return JALRs from bypassing from F3 to ID stage.  I didn’t think that logic had anything to do with making sure at most one JALR instruction made it into ID stage at a time.  So I thought that fixing the formDecodeGroup expression would be sufficient.  With your first fix, you are now preventing returns from bypassing from F3 to ID stage, which I think is not necessary.  It’s been a while since I looked at this so I could be missing something.-

Edit: Okay, I think I see what you’re saying now.","31/Aug/22 11:25 AM;61b2a458657a0500706b9c39;The FQ bypass disable logic looks like it was designed to handle this case so I’ve inadvertently hijacked it to serve a different purpose. The formDecodeGroup function doesn’t see any opcodes from F3 and so cannot detect JALRs from there. In the verilog the {{iqInsts}} input reduces to only examining the {{io.cpu.bits(i).predecode.jalrForBypass}} signal, which ignores F3, and not {{io.cpu.bits(i).predecode.jalr}} which does use F3.

Delaying all merge cases if F3 has a JALR is probably not what we want so I will see if I can make the logic more selective for both cases. ","02/Sep/22 1:12 PM;61b2a458657a0500706b9c39;This has been fixed with two changes:
* The FQ will not be bypassed if the IQ contains a JALR and any of the first 6(for p650) parcels in F3 could be a JALR. 
* The IQ read logic will now look at both the 'jalrForBypass' and 'jalr' fields to detect multiple JALRs in the instruction queue.","02/Sep/22 1:24 PM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;So [~accountid:61b2a458657a0500706b9c39] , [~accountid:5acffeafaa802f2a797a955c] is this something that could have manifested in the past for Mongoose/Narwhal? ","06/Sep/22 2:03 AM;61aaafab977c5b007241043c;Compared the baseline {{ebddecc1}} (before the fix) and {{c36e0dfa}} (MAL-2508)

The BogoMark project scores (200K warmup plus 200K ROI) remain the same.",06/Sep/22 9:33 AM;61b2a458657a0500706b9c39;It looks like it is in Narwhal.,06/Sep/22 11:14 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;[~accountid:61b2a458657a0500706b9c39] and [~accountid:5acffeafaa802f2a797a955c] need some help writing up an Narwhal errata for this… I can schedule a time if that is easier,06/Sep/22 12:00 PM;61b2a458657a0500706b9c39;Sure. I can write up a draft before then.,"06/Sep/22 3:26 PM;5e1371705361330daaeaf389;Just a thought from the peanut gallery: would this code be better if instead of the term {{jalr}} we used the term {{indirect}} when we meant ""jalr branch that has an IJTP prediction"", and {{return}} for ""jalr that is a return"", and the general term {{jalr}} only when we didn't know indirect from return (if that's ever true – we can get indirect and return straight from the decode, right)?

This would mean for example {{jalrCouldBypass}} would instead be {{indirectCouldBypass}}, which to me is a lot clearer.","06/Sep/22 4:44 PM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;likely to be a perfo issue, but with a carefully constructed code sequence could create a functional issue.



parts of pipeline assume only one jalr in pipeline at a time. For P550 3-wide decode difficult to get into same decode group (for the functional failure).

Recursive function with jalrs close together doesn’t actually hit the issue","26/Sep/22 2:32 PM;61b2a458657a0500706b9c39;Link to slides:
[https://docs.google.com/presentation/d/1cYuDjDToZKQfPpmmWMn2DNlbB2GEkCpORELVT9XSGiY/edit?usp=sharing|https://docs.google.com/presentation/d/1cYuDjDToZKQfPpmmWMn2DNlbB2GEkCpORELVT9XSGiY/edit?usp=sharing|smart-link]","26/Sep/22 4:23 PM;5acffeafaa802f2a797a955c;So we think as a hardware workaround we should be able to avoid this if we set the {{disableIQBypass}} chicken bit to 1 (CSR 0x7c1 bit 18). This will have some performance impact though.

[~accountid:5e1371705361330daaeaf389] would it be possible to do a Dabble study to estimate the performance impact?  The chicken bit should prevent any instruction (either from F3 or the Fetch Queue) from bypassing the Instruction Queue directly to the decode stage.","26/Sep/22 5:11 PM;5e1371705361330daaeaf389;[~accountid:5e137289b783d60db0a03c05] is that something you can quickly whip up, if it isn’t already in Dabble? The request is for P650’s perf impact, and not P550 or Hburg?

BTW, if we remove the InstQ on Hburg and do double-insert from the FetchQ, which knows whether and where the JALRs are and could inhibit merging two fetchQ entries that both had indirects or returns, this would also be avoided, right?","26/Sep/22 5:35 PM;61b2a458657a0500706b9c39;Sorry, I think my slides are wrong. Due to the formDecodeGroup() issue described below I don’t think disabling F3->ID bypass will always prevent this. ","27/Sep/22 8:04 AM;5acffeafaa802f2a797a955c;{quote}The request is for P650’s perf impact, and not P550 or Hburg?{quote}

Sorry I should have been more clear. This request is specifically for P550 because there’s actually P550 silicon with this hardware issue.  We’ve fixed this before any final P650 shipment.","27/Sep/22 10:02 AM;5e137289b783d60db0a03c05;Sure, I’ll do this now.","27/Sep/22 10:12 AM;5e137289b783d60db0a03c05;Just to be clear, the IQ bypass path is never used, right?","27/Sep/22 10:19 AM;5acffeafaa802f2a797a955c;{quote}Just to be clear, the IQ bypass path is never used, right?{quote}

The purpose of the chicken bit is to completely disable the IQ bypass.  So no instructions should jump around the IQ (either coming from F3 or from the FQ) and go directly to ID.  We’re proposing the use of the chicken bit to work around this hardware bug.  But it sounds like maybe [~accountid:61b2a458657a0500706b9c39] thinks that is not a complete solution right now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Physical register set as ready twice,[TGV] Physical register,Execution Unit ,PRF,,,MAL-2507,124018,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Ian Chuang,61aaae1d9615eb006f5ff922,Ian Chuang,61aaae1d9615eb006f5ff922,8/28/2022 20:03,9/7/2022 17:43,9/28/2022 0:51,9/4/2022 12:37,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"Some microbenchmarks that originally can finish simulation now fail with the assertion error shown below. 

{noformat}Error: ""/scratch/jenkins/archived-builds/performance-regression/score_guard_pcs/506/builds/coreip_p670/verilog/design/assertions/SiFive_PRA_5_assert.sv"", 305: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.t     gv.vrdu.vexPra.SiFive_PRA_5_assert_0: at time 203962500 ps
Assertion failed: Physical register  96 set as ready twice (only first conflicting id shown){noformat}

The pattern is like 

{noformat}vfwcvt.f.f.v    v8,v16
vfwcvt.f.f.v    v16,v8
vfwcvt.f.f.v    v8,v16
vfwcvt.f.f.v    v16,v8{noformat}

Waveform: {{/scratch/ianc/study/0080/075}} at verif04 machine. 

Command to reproduce: {{/work/sparta/scripts/run_rtlsim.sh -v latest -c p67 -p 0080/075 -s vcs -w}}



And I have other tests having different error messages but I guess they are probably caused by the same problem. 

{noformat}Error: ""/scratch/jenkins/archived-builds/performance-regression/score_guard_pcs/506/builds/coreip_p670/verilog/design/assertions/SiFive_IssQEntry_108_assert.sv"", 71: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile     .core.tgv.vex.issueQueues_0.entries_2.SiFive_IssQEntry_108_assert_0: at time 204982500 ps
assert failed (verification library): make sure we don't match tag on a source that's marked ready  @[MallardUtil.scala 605:20]{noformat}

The pattern is like 

{noformat}vwmaccsu.vv v8,v16,v16
vwmaccsu.vv v16,v8,v8
vwmaccsu.vv v8,v16,v16
vwmaccsu.vv v16,v8,v8{noformat}

Waveform: {{/scratch/ianc/study/0080/105}} at verif04 machine. 

Command to reproduce: {{/work/sparta/scripts/run_rtlsim.sh -v latest -c p67 -p 0080/105 -s vcs -w}}",David Kravitz,Ian Chuang,I-Cheng Cheng,Nicolas Brunie,Zhen Wei,,,,,,,,,,,5fd15143b4a74900763834e0,61aaae1d9615eb006f5ff922,5d7bfdaa003e040c3e175060,6065017e90e3950069cf01c5,5e49f622a17f930c9b94b6cd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i00r5j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,47:57.8,02/Sep/22 2:47 PM;5fd15143b4a74900763834e0;[~accountid:6065017e90e3950069cf01c5] were you able to replicate this error?,"03/Sep/22 6:35 AM;6065017e90e3950069cf01c5;The error has disappeared (I guess master was updated and so {{/work/sparta/scripts/run_rtlsim.sh -v latest -c p67 -p 0080/105 -s vcs -w}} passes now)

I think it would be good not to report sparta issues with {{latest}} version, but with a static version.",04/Sep/22 12:36 PM;6065017e90e3950069cf01c5;Error has also disappeared for {{/work/sparta/scripts/run_rtlsim.sh -v latest -c p67 -p 0080/075 -s vcs -w}} on a recent master,"04/Sep/22 11:28 PM;61aaae1d9615eb006f5ff922;We have the same issue for the load microbenchmarks last week, and [~accountid:5fd15143b4a74900763834e0] mentioned that Josh and/or Andrew are working on the fix. 

Sounds like it’s already fixed. I’ll drop a new run for those tests. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU power: L1DCache way mux select register enable,,,,,,MAL-2506,124014,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Shreyas Ravishankar,63096787998cd0d8cb392a85,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,8/28/2022 18:50,9/27/2022 18:39,9/28/2022 0:51,,,,,,,,,,,,,,Power,RTL/LSU,,,,,,,,0,,,,"This register at [https://github.com/sifive/federation/blob/master/mallard/src/main/scala/core/mallard/L1DCache.scala#L432|https://github.com/sifive/federation/blob/master/mallard/src/main/scala/core/mallard/L1DCache.scala#L432]

{noformat}val sramSelRegs = RegNext(sramSelBits){noformat}

should have a clock gating and/or enable term to reduce switching in the way muxing logic when a subbank was _not_ read.  Something like this:

{noformat}val sramSelRegs = RegEnable(sramSelBits, io.xbarSubbankVecReadEn(iBankPort)){noformat}",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2079,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1977,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-27T18:00:48.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,,,,,,,,,,,,,,,,2|i00r4n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26512/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] fix exception on SEW=16 insn when Zfh is enabled and Zvfh is disabled,,,,,,MAL-2505,124009,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/28/2022 12:50,8/28/2022 12:50,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/Top,,,,,,,,,0,,,,"Mallard TGV generator seems not to generate proper opcode exception when an unsupported SEW is encountered for a FP instruction.

Prior to [https://github.com/sifive/federation/pull/25629|https://github.com/sifive/federation/pull/25629|smart-link] , this has lead to hanging due to the fact that an {{vfdiv}}  with an unsupported SEW could reach the vector divider and make it hang.

problem description and discussion; [https://sifive.slack.com/archives/C02LGLVN2LD/p1661537602827759|https://sifive.slack.com/archives/C02LGLVN2LD/p1661537602827759|smart-link] 

The problem seems due to a mix between {{Zfh}} and {{Zvfh}} in MicroOp checking:

Problem analysis: [https://sifive.slack.com/archives/C02LGLVN2LD/p1661661673166059?thread_ts=1661537602.827759&cid=C02LGLVN2LD|https://sifive.slack.com/archives/C02LGLVN2LD/p1661661673166059?thread_ts=1661537602.827759&cid=C02LGLVN2LD|smart-link] 

and it should be properly fixed.

Moreover we may want to have this configuration ({{Zfh}} and no {{Zvfh}}) in one of the spanning config.",Alexandre Solomatnikov,David Kravitz,Kira Tsao,Nicolas Brunie,Shaka Kao,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00r3j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] VectorAGU should unroll uops for LMUL=8,[TGV] VectorAGU ,Execution Unit ,,,,MAL-2504,123979,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Yohann Rabefarihy,61730c9cbcb57400683f15a6,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,8/26/2022 16:45,9/7/2022 17:43,9/28/2022 0:51,8/29/2022 18:00,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"cc: [~accountid:61730c9cbcb57400683f15a6] 

p670 SFC (as default)

Note: the test passed before [https://github.com/sifive/federation/commit/5e47f44b6b4b88a5ccf44763d23490301095857d|https://github.com/sifive/federation/commit/5e47f44b6b4b88a5ccf44763d23490301095857d|smart-link] 

{noformat}Error: ""/scratch/sols/tgv4/federation/builds/9f9368cb7db/coreip_p670/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", 2482: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.mshrEntries_3.SiFive_MSHREntry_assert_0: at time 1479402500 ps
assert failed (verification library): MSHR Entry Valid Non-Reusable Hang  @[MSHR_Mallard.scala 4228:14]

Fatal: ""/scratch/sols/tgv4/federation/builds/9f9368cb7db/coreip_p670/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", 2491: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.mshrEntries_3.SiFive_MSHREntry_assert_0: at time 1479402500 ps

$finish called from file ""/scratch/sols/tgv4/federation/builds/9f9368cb7db/coreip_p670/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", line 2491.{noformat}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vle-vse"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Waveform: gamma11:/scratch/sols/tgv4/federation/builds/7dd0fc90bbf/coreip_p670/sim/sim3/tgv_vle-vse.outline/vector/vle-vse",Alexandre Solomatnikov,John Ingalls,Nicolas Brunie,Yohann Rabefarihy,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5bb6808b9ba2930990f81895,6065017e90e3950069cf01c5,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,,MAL-2008,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/5e47f44b6b4b88a5ccf44763d23490301095857d,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-29T17:49:14.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/21c4f9bfdae6434b89cd2978f7c18f10b157d237,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00qwv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,35:53.6,"28/Aug/22 1:35 PM;5bb6808b9ba2930990f81895;In VectorAGU.scala, this signal is 0, but I assume should not be: {{val vagu_numUops = io.rr_vaguVectorPayload.vector.balUops}}","29/Aug/22 9:24 AM;61730c9cbcb57400683f15a6;This will be fixed with  [https://github.com/sifive/federation/pull/25679|https://github.com/sifive/federation/pull/25679|smart-link] 

after implementing the right computation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650 TIming: historyRot_F3 to BDP table CEB,,,,,,MAL-2503,123965,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/26/2022 14:33,9/21/2022 16:12,9/28/2022 0:51,,,,,,,,,,,,,,RTL/Frontend,Timing,,,,,,,,0,,,,One of the top timing paths in a recent P650 PPA run is from the {{historyRot_F3}} register to the BDP tagged table CEB pin.,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26/Aug/22 2:34 PM;jsmith;MAL-2503.txt;https://sifive.atlassian.net/secure/attachment/76642/MAL-2503.txt,,,,,,,,,,,,,,,,,,,Branch Prediction,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00qtz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Load Page Fault in front_port_evicts.conf,Load Page Fault  front_port_evicts.conf,,,,,MAL-2502,123954,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Deepika S K,622a9d30c4d0fe0069575ac9,Deepika S K,622a9d30c4d0fe0069575ac9,Deepika S K,622a9d30c4d0fe0069575ac9,8/26/2022 10:55,9/6/2022 11:27,9/28/2022 0:51,8/27/2022 4:19,,,,,,,,,,,,,RTL/PTW,,,,,,,,,0,,,,"RTL takes a load page fault exception at {{pc = 0xffff8b800560784c}}, while Cosim doesn’t.

*runasm0.txt :* 

{noformat}C                   0:     609291 [1] pc=[ffff8b8005607840] W[f25=7ff8000000000000][1] R[f14=7ff8000000000000] R[f21=7ff8000000000000] inst=[2b570cd3] fmin.d  fs9, fa4, fs5
C                   0:     609291 [1] pc=[ffff8b8005607844] W[r11=0000000000000000][1] R[r16=0000040085000000] R[r 0=0000000000000000] inst=[00084583] lbu     a1, 0(a6)
C                   0:     609335 [1] pc=[ffff8b8005607848] W[r 6=ffff8b8003455049][1] R[r20=000001838f923f80] R[r 7=ffff8b8003435000] inst=[c27a332f] amominu.d t1, t2, (s4)
C                   0:     609346 [1] pc=[0000000080000400] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[0800006f] j       pc + 0x80;snippet_id_0_start_mac_vect_init_block0
C                   0:     609354 [1] pc=[0000000080000480] W[r 3=0000000200093000][1] R[r 3=ffff86000f889180] R[r 0=0000000000000000] inst=[340191f3] csrrw   gp, mscratch, gp;mac_trap_handler
C                   0:     609358 [1] pc=[0000000080000484] W[r 0=0000000000000000][0] R[r 3=0000000200093000] R[r 2=ffff800001c01f80] inst=[0021b423] sd      sp, 8(gp)
C                   0:     609365 [1] pc=[0000000080000488] W[r 2=ffff8b800560784c][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[34102173] csrr    sp, mepc
C                   0:     609367 [1] pc=[000000008000048c] W[r 0=0000000000000000][0] R[r 3=0000000200093000] R[r 2=ffff8b800560784c] inst=[0621b023] sd      sp, 96(gp){noformat}

*cosim.log.gz* : 

{noformat}core   0: 0xffff8b800560784c (0x000033f4) c.fld   fa3, 224(a5)
core   0: prv=0, v=0, s_mode=0, sum=0, mxr=0 
core   0: Translating: 0x4008460b520:
core   0: satp = 0x9000000000089793
core   0: s1: pte_addr = 0x89793040     pte = 0xdf    uxrwv  addr: 0x0
core   0: xlated2 = 0x8460b520
core   0: 0 0xffff8b800560784c (0x33f4) f13 0x24087632df94612c mem 0x000004008460b520-0x000000008460b520
core   0: prv=0, v=0, s_mode=0, sum=0, mxr=0 
core   0: Translating: 0xffff8b800560784c:
core   0: satp = 0x9000000000089793
core   0: s1: pte_addr = 0x897938b8     pte = 0x20080ec01    ....v table: 0x80203b000
core   0: s1: pte_addr = 0x80203b000     pte = 0x200a34401    ....v table: 0x8028d1000
core   0: s1: pte_addr = 0x8028d1158     pte = 0x4000000df    uxrwv  addr: 0x1000000000
core   0: xlated2 = 0x100000784c{noformat}

From Cosim, it is expected that {{pte = 0xdf }} when {{pte_addr = 0x89793040}} , however from the waves, *@12187722500 ps* , the data available at {{addr = 0x89793040}} is {{io_mem_resp_bits_data[63:0] = 0xbe5aa0b5}} , and RTL throws a page fault exception since read permissions are disabled. 
This unexpected data value could further be traced back to {{ldwr_l1dcDataWrData_q_0[63:0]}} . 

*Waveform :* 

!image-20220826-175522.png|width=100%!

----

*Dump path :* {{gamma27 : /scratch/deepikas/mallard-nightly-349/federation/builds/coreip_p650_tiny_drq_nrq/sim/sim/stalled.outline/sting_StingSiFiveHeavyTuple_T_0131/sting/sifive/memory/front_port_evicts.conf}}

*Regression :* [fed/master/nightly-mallard/349|https://simscope.internal.sifive.com/r/fed/master/nightly-mallard/349]

*Simscope link :* [https://simscope.internal.sifive.com/sigs/402/cm9xmmjfmf8p|https://simscope.internal.sifive.com/sigs/402/cm9xmmjfmf8p]

*To reproduce :* 

* *Config :* coreip_p650_tiny_drq_nrq 
* *Commit :* {{4231ce1dc43af68b9c4000c6c12ffc55f99f65dd}}
* *rerun.outline :* 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveHeavyTuple_T_0131"",
  ""subtest"": ""sifive/memory/front_port_evicts.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 4155498981
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Deepika S K,John Ingalls,Josh Smith,Megan Wachs,Rakesh Palakurthi,,,,,,,,,,,622a9d30c4d0fe0069575ac9,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,62350e943eacc50071ff0753,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2469,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26/Aug/22 10:56 AM;ug:0c84c1d9-358d-4f68-993a-932052da7479;image-20220826-175522.png;https://sifive.atlassian.net/secure/attachment/76639/image-20220826-175522.png,,,,,,,,,,,,,,,,4231ce1dc43af68b9c4000c6c12ffc55f99f65dd,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00qrj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,50:27.3,"26/Aug/22 11:50 AM;5bb6808b9ba2930990f81895;Great debug [~accountid:622a9d30c4d0fe0069575ac9]\!  This is a key finding:

{quote}This unexpected data value could further be traced back to {{ldwr_l1dcDataWrData_q_0[63:0]}} . {quote}

I think we just recently found and fixed this in [https://sifive.atlassian.net/browse/MAL-2469|https://sifive.atlassian.net/browse/MAL-2469|smart-link].

Can you please check and see if [https://github.com/sifive/federation/commit/ddb136b4e95958aaf09ac5ec120b39d4a386d1a5|https://github.com/sifive/federation/commit/ddb136b4e95958aaf09ac5ec120b39d4a386d1a5|smart-link] fixes this?",27/Aug/22 3:50 AM;622a9d30c4d0fe0069575ac9;[~accountid:5bb6808b9ba2930990f81895] the test passes after cherry-picking the fix commit. ,06/Sep/22 11:27 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;Since [https://sifive.atlassian.net/browse/MAL-2469|https://sifive.atlassian.net/browse/MAL-2469|smart-link] was marked as affects previous = No i will mark the same here,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Timing path through RDU io_iexDispCredit,,,,,,MAL-2501,123932,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Steffen Kunze,62cbe3403d382dfc9c5f3078,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/26/2022 7:19,9/16/2022 6:42,9/28/2022 0:51,,,,,,,,,,,,,,RTL/IEX,Timing,,,,,,,,0,,,,"Recent P650 PPA runs show a timing path starting from ExPIpe determining a fast EX replay, → issue queue “release” → issue queue counting the number of entries freeing up → RDU issue queue credit logic.

Right now the issue queue uses {{PopCount}} to determine the number of credits to send back to dispatch.  In P650 this is a popcount of 16 bits.  It would probably be faster to use the {{Compressor}} function which is optimized for popcount.

{noformat}  io.dispCredit := PopCount(entryRelease.asUInt) +
                   r_dispFlushCnt{noformat}",John Ingalls,Josh Smith,Steffen Kunze,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,62cbe3403d382dfc9c5f3078,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26/Aug/22 7:20 AM;jsmith;MAL-2501.txt;https://sifive.atlassian.net/secure/attachment/76622/MAL-2501.txt,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{branch={count=1, dataType=branch}, json={""cachedValue"":{""errors"":[],""summary"":{""branch"":{""overall"":{""count"":1,""lastUpdated"":null,""dataType"":""branch""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00qn3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,16:24.2,26/Aug/22 2:24 PM;5acffeafaa802f2a797a955c;I tried a synthesis experiment on just IEX using {{Compressor()}} instead of {{PopCount()}} and it actually looks slightly worse.,"26/Aug/22 2:25 PM;5acffeafaa802f2a797a955c;I’m going to pass this to [~accountid:62cbe3403d382dfc9c5f3078] to take a look at.  There’s probably room for improvement between the logic in ExPipe and in IssQ.

One thing I’m still a little confused about is that this timing path ends in a clock gating cell.  I haven’t dug into the netlist, but from the chisel this logic shouldn’t end in the enable condition for a register.  I wonder if Genus is trying to be smart and create a clock enable for a register which doesn’t have one explicitly in the RTL.","26/Aug/22 2:37 PM;5acffeafaa802f2a797a955c;Unless I’m misunderstanding the timing report, it also looks like there’s a ton of clock skew.  The launch clock is at ~6ps, and the capture clock is around 246ps.  So this path doesn’t have the whole cycle.",30/Aug/22 9:16 AM;62cbe3403d382dfc9c5f3078;[~accountid:5acffeafaa802f2a797a955c] What command did you use to generate this timing report? Could you please point me at the synthesis area if it still exists?,30/Aug/22 9:25 AM;5acffeafaa802f2a797a955c;[~accountid:62cbe3403d382dfc9c5f3078] I’m not sure I have that work area anymore.  Let me try to run it again and I’ll point you to my results.,"01/Sep/22 7:56 AM;62cbe3403d382dfc9c5f3078;[~accountid:5acffeafaa802f2a797a955c] do you have the rerun now? 

I had a look at the generated verilog for RDU and in the version from master the iexDispCredit signal only goes into a 5bit register and single bit register. I’d assume genus is not allowed to insert clk gates on such small registers.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] FP half-precision cosim mismatches on wrdata and PC,[TGV] FP half-precision cosim mismatches ,,,,,MAL-2499,123889,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Shaka Kao,5f94696c29bd8a006f94f0e1,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/25/2022 16:00,9/23/2022 0:27,9/28/2022 0:51,8/27/2022 8:56,,,,,,,,,,,,,RTL/Tile,,,,,,,,,0,TGV,,,"*Error:* I’m seeing cosim wrdata and PC mismatches on a bunch of VTG tests from {{vtg-tgv-tests.outline}}.

This is one example:

{noformat}[COSIM-ERROR][0] COSIM VS RTL WRDATA MISMATCH
[COSIM-ERROR][0] COSIM VS RTL WRINFO MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [11145] InstInfo: VLD=1 | PC=0x0000000080000d24 | INSN=0xf2d29f57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r30=0xffff_ffff_ffff_ffff_ffff_ffff_0000_0000 mask=0000ffff | READY=1 | CSR_TIMER=11145 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080001940 | MCAUSE=0x0000000000000002 | VSTART=0 | VL=1 | SEW=16 | LMUL=mf4 | VSEGELT=0
[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000080000d24 | INSN=0xf2d29f57 | INST_DST=NONE | REDUCTION = false | WR: 

[COSIM-ERROR][0] m_dut: en=true r30=0xffff_ffff_ffff_ffff_ffff_ffff_0000_0000 mask=0000ffff
[COSIM-ERROR][0] m_sim:{noformat}



A bunch of these mismatches involve the RTL taking illegal instruction exceptions on vector floating point instructions, and I noticed that SEW is always 16.  I think this has something to do with the recent changes to add half-precision floating point to P650.

*SHA1:* 069a4ea2723d2c8f88ad1cc69aa82acac940a3c5

*Config:* coreip_p670

*Rerun.outline*:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0000_lmul4"",
  ""subtest"": ""vfwmacc.vv"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vfwmacc.vv_Mask-7_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_NoSelfCheck-1_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-4_TGV-1_IMM-0_LdStAccFault-1_Zfh-1_TAILAgnostic-1"",
  ""seed"": {
    ""value"": 1298508491
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",David Kravitz,Eric Cheng,Josh Smith,Max Lin,Nicolas Brunie,Shaka Kao,,,,,,,,,,5fd15143b4a74900763834e0,5d4a0f85af16f20ceaf5442e,5acffeafaa802f2a797a955c,5e0651c861d95d0d9aa546ac,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,069a4ea2723d2c8f88ad1cc69aa82acac940a3c5,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-28T12:45:20.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00qdz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,03:22.4,"25/Aug/22 4:26 PM;5acffeafaa802f2a797a955c;Changing {{specs/design-definitions/tiles/tile_p650.json}} to set {{floatingPointHalfPrecisionPresent}} to false seems to be fixing the failures I’m seeing.

It looks like {{floatingPointHalfPrecisionPresent}} is currently true, but maybe {{vectorFloatingPointHalfPrecisionPresent}} is still false.  I wonder if that combination is making sitest think it can still throw half precision vector operations at us, and the RTL isn’t handling it properly.","25/Aug/22 5:03 PM;5f94696c29bd8a006f94f0e1;VTG will detect the OM string to check which ISA extension is enabled. For Zfh and Zvfh, 

{noformat}Has_zvfh = $config.object_model.isa_extension_zvfh_support?(0)
Has_zfh = $config.object_model.isa_extension_zfh_support?(0){noformat}

For current P670 build, “Zfh” is enabled but not “Zvfh”.

{noformat}>ag z[v]*fh SiFiveCoreDesignerAlterations.omir.json
SiFiveCoreDesignerAlterations.omir.json
30799:          ""OMString:Zfh"",

>ag z[v]*fh SiFiveCoreDesignerAlterations.dts
SiFiveCoreDesignerAlterations.dts
29:                     riscv,isa = ""rv64imafdcv_zicsr_zifencei_zfh_zba_zbb"";{noformat}

So, even Zfh is ON, but Zvfh is OFF for P670, and VTG should NOT generate vector half-precision (SEW=16) operations.

I will check this with DV/VTG owner ([~accountid:5d4a0f85af16f20ceaf5442e] , [~accountid:5e0651c861d95d0d9aa546ac] ) today.","25/Aug/22 5:08 PM;5f94696c29bd8a006f94f0e1;BTW, we have a spanning config to test vector half-precision operations (Enable Zvfh).

[https://sifive.atlassian.net/browse/MAL-2253|https://sifive.atlassian.net/browse/MAL-2253|smart-link] ","26/Aug/22 5:50 AM;5f94696c29bd8a006f94f0e1;[~accountid:5acffeafaa802f2a797a955c] [~accountid:6065017e90e3950069cf01c5] [~accountid:5fd15143b4a74900763834e0] 

# \[Q] Why does the SEW=16 appear for vector floating-point instructions?
\[A] It is because the VTG test does “exception tests” since we set {{enable_exceptions = 1}} in the {{vtg-tgv-tests.outline}}, so, the test case “expect” CPU jumps to the exception handler while detecting an illegal SEW for vector FP instructions.

# \[Q] Why does the CPU not jump to the exception handler and treat the instruction/SEW as legal instruction/SEW?
\[A] This is because, in the TGV, we leverage Bullet {{FloatUtils}} for vector FP configuration. {{FloatUtils}} uses {{ISA}} to detect whether D or H is enabled or not.
Now, half-precision is turned ON by default for P650 config and it will set {{minFLen}} to 16 due to {{isa.zfh}} is {{true}}.
So, TGV is also affected by {{minFLen}}, and treat ""half-precision"" (SEW=16) is {{true}}.

{noformat}val fu = new FloatUtils(isa)

class FloatUtils(isa: ISA) extends HasFPUParameters {
require(!isa.d || isa.f)
lazy val minFLen  = if (isa.zfh) 16 else if (isa.f) 32 else 0
...{noformat}

# So, we put a technical debt for [PR-21710|https://github.com/sifive/federation/pull/21710#issuecomment-1104606198]: 

{quote}BTW, I would like to discuss another issue with you for {{val fu = new FloatUtils(isa)}}.
The FloatUtils uses {{lazy val minFLen = if (isa.zfh) 16 else if (isa.f) 32 else 0}} to check the minimal fLen. Just in case scalar(Mallard) enables fp16 (zfh), but vector (TGV) does not enable vector fp16, TGV will obtain wrong minFLen.{quote}

Here is my suggestion for this issue, and your comments/feedbacks are welcome.

# First, “temporary” enable vector half-precision for TGV:
## set {{""vectorFloatingPointHalfPrecisionPresent"": true,}} in p670 config
## Luckily so far we have a {{u8_minimal_vector_vfp16.json}} to test vector FP16, and I think it’s not bad to debug any vector FP16 bugs for P670, if have any.
## Thus, we can continue with step (2).
# Technical debt payoff:
## Separate {{FloatUtils}} usage from the scalar core.
### Like Bullet vector, use “new ISA” value for TGV. For the scalar core, Zfh is ON, and so {{isa.zfh}} is {{true}}.
### For TGV, use {{isa.copy}} to obtain current ISA value, and “override” it by removing {{zfh}} value (set to {{false}}) for TGV if vector half-precision is OFF. Then use the “new isa” to create “vector FloatUtils”.
### In Bullet VectorUnit.scala:
### {noformat}  val isa  = new ISA(this)
  //NOTE: Refer CIP-2248 : Make vector FP capability independently controllable from scalar FP
  // visa.zfh/visa.f/visa.d are pointed to vector FP type.
  // ISA class/object see MicroOp.scala
  val visa = isa.copy(
    zfh = (params.vectorFPU.map(_.vectorMinFLen).getOrElse(0) == 16) && vfLen >= 16,
    f   = (params.vectorFPU.map(_.vectorFpHasSinglePrecision).getOrElse(false)),
    d   = (params.vectorFPU.map(_.vectorFpHasDoublePrecision).getOrElse(false)),
  )
  val fu   = new FloatUtils(visa) {noformat}

## Or, create a new class like {{VectorFloatUtils}} which extends {{FloatUtils}}, and overrides {{minFLen}} (and something) to represent vector FP ISA.","26/Aug/22 5:56 AM;5fd15143b4a74900763834e0;Agree we should definitely do (1). In parallel, i.e. instead of waiting for that to merge and have DV find bugs in the nightlies, we should do some VTG runs with Zvfh enabled in P670 and fix the low-hanging bugs.","26/Aug/22 5:58 AM;6065017e90e3950069cf01c5;Thank you for the analysis [~accountid:5f94696c29bd8a006f94f0e1] ,  it seems Bullet fix is a bit hacky and {{VectorFloatUtils}} with a proper interpreation of {{Zfh}} and {{Zvfh}}  seems more future proof. 

As you said, I think we can enable vector half precision in  the meantime if it passes {{vtg-tgv-tests.outline}} to unblock everyone and file the change has a separate ticket.","26/Aug/22 6:25 AM;5f94696c29bd8a006f94f0e1;[~accountid:5fd15143b4a74900763834e0] [~accountid:6065017e90e3950069cf01c5], thanks for your comments, and I have created a branch to enable Zvfh for P670.

PR is here: [https://github.com/sifive/federation/pull/25629|https://github.com/sifive/federation/pull/25629|smart-link] 

{noformat}     ""vectorPresent"": true,
     ""vectorDatapathWidth"": 128,
     ""tgv"": {
+      ""vectorFloatingPointHalfPrecisionPresent"": true,
       ""sequencerWidth"": 4,{noformat}

Running regression for {{vtg-tgv-tests.outline}}","26/Aug/22 4:42 PM;5f94696c29bd8a006f94f0e1;[~accountid:5fd15143b4a74900763834e0] [~accountid:5acffeafaa802f2a797a955c] [~accountid:6065017e90e3950069cf01c5] 

PR ([https://github.com/sifive/federation/pull/25629|https://github.com/sifive/federation/pull/25629|smart-link] ) merged.

I run {{vtg-tgv-tests.outline}} in my local for P670 with vector FP half-precision enabled, all tests passed.

# Both Zfh and Zvfh appeared in the DTS and OM, confirmed.
# triage result: {{WARN:: NO Failures Found!!}}
# SEW=16 for FP instructions indeed generated.

*Zfh and Zvfh string in DTS/OM*

{noformat}>ag z[v]*fh SiFiveCoreDesignerAlterations.dts SiFiveCoreDesignerAlterations.objectModel.json SiFiveCoreDesignerAlterations.omir.json
SiFiveCoreDesignerAlterations.dts
29:			riscv,isa = ""rv64imafdcv_zicsr_zifencei_zfh_zba_zbb_zvfh"";

SiFiveCoreDesignerAlterations.objectModel.json
6749:        ""zfh"" : {
6750:          ""name"" : ""Zfh Standard Extension for Half-Precision Floating-Point"",
6814:        ""zvfh"" : {
6815:          ""name"" : ""Zvfh Standard Extension for vector FP16 support"",

SiFiveCoreDesignerAlterations.omir.json
30804:          ""OMString:Zfh"",
30813:          ""OMString:Zvfh""{noformat}

*NumOfTestCases for Half/Single/Double per RVV FP instruction*

{noformat}Inst                  Total   Half Single Double
vfadd.vf                 50     10      3      4
vfsub.vv                 50     11      5      1
vfsub.vf                 50     10      3      1
vfrsub.vf                50      5      2      1
vfwadd.vv                50      3      3    -X-
vfwadd.vf                50      5      2    -X-
vfwsub.vv                50      4      5    -X-
vfwsub.vf                50      6    -X-    -X-
vfwadd.wv                50      9      2    -X-
vfwadd.wf                50     10      2    -X-
vfwsub.wv                50      4      1    -X-
vfwsub.wf                50      5      4    -X-
vfmul.vv                 50     11      2      1
vfmul.vf                 50     13      2      1
vfdiv.vv                 50      3      4      3
vfdiv.vf                 50      9      2    -X-
vfrdiv.vf                50     10      2    -X-
vfwmul.vv                50      8      3    -X-
vfwmul.vf                50      2      1    -X-
vfmacc.vv                50      9      5    -X-
vfmacc.vf                50      5      3      1
vfnmacc.vv               50      7      3      1
vfnmacc.vf               50      5      3      4
vfmsac.vv                50      9      3      1
vfmsac.vf                50     11      3    -X-
vfnmsac.vv               50      7      3      1
vfnmsac.vf               50      7      6      1
vfmadd.vv                50      6      3      1
vfmadd.vf                50      8      6      1
vfnmadd.vv               50      7      3      2
vfnmadd.vf               50     13      5      2
vfmsub.vv                50      8      6      2
vfmsub.vf                50      6      7    -X-
vfnmsub.vv               50      5      8    -X-
vfnmsub.vf               50      6      5    -X-
vfwmacc.vv               50      1      1    -X-
vfwmacc.vf               50      6      6    -X-
vfwnmacc.vv              50      5      3    -X-
vfwnmacc.vf              50      5      1    -X-
vfwmsac.vv               50      1    -X-    -X-
vfwmsac.vf               50      2      2    -X-
vfwnmsac.vv              50      2      1    -X-
vfwnmsac.vf              50      1    -X-    -X-
vfsqrt.v                 50     11      9    -X-
vfrsqrt7.v               50     13      7      1
vfrec7.v                 50     13    -X-    -X-
vfmin.vv                 50      3      5      2
vfmin.vf                 50      8      7      2
vfmax.vv                 50      7      4      1
vfmax.vf                 50      9      3      2
vfsgnj.vv                10      1    -X-    -X-
vfsgnj.vf                50      4      5      3
vfsgnjn.vv               12      2    -X-    -X-
vfsgnjn.vf               50      9      2      1
vfsgnjx.vv               11      2      1    -X-
vfsgnjx.vf               50      7      3      3
vfclass.v                50      4      4      1
vfmerge.vfm              22      2      2      1
vfmv.v.f                 45      6      4    -X-
vfcvt.xu.f.v             50     14      5    -X-
vfcvt.x.f.v              50     16      4      3
vfcvt.rtz.xu.f.v         50     13      6      1
vfcvt.rtz.x.f.v          50      8      7      4
vfcvt.f.xu.v             50      9      9    -X-
vfcvt.f.x.v              50     14      4      1
vfwcvt.xu.f.v            50      4      2    -X-
vfwcvt.x.f.v             50      3    -X-    -X-
vfwcvt.rtz.xu.f.v        50      1      3    -X-
vfwcvt.rtz.x.f.v         50     12      3    -X-
vfwcvt.f.xu.v            50      5      6    -X-
vfwcvt.f.x.v             50      5      1    -X-
vfwcvt.f.f.v             50     15      2    -X-
vfncvt.xu.f.w            50      6      1    -X-
vfncvt.x.f.w             50      6      4    -X-
vfncvt.rtz.xu.f.w        50      8      5    -X-
vfncvt.rtz.x.f.w         50      8      2    -X-
vfncvt.f.xu.w            50      7      6    -X-
vfncvt.f.x.w             50      7      3    -X-
vfncvt.f.f.w             50     11      4    -X-
vfncvt.rod.f.f.w         50      6      3    -X-
vfredosum.vs             50      7      6      1
vfredusum.vs             50      7      4    -X-
vfredmax.vs              50      6      1    -X-
vfredmin.vs              50      8      2    -X-{noformat}","27/Aug/22 8:54 AM;5f94696c29bd8a006f94f0e1;git hash: 4dbadc1aa9528f3078eaee142a35fb77a5758ad6

P670 with both Zfh and Zvfh enabled, passed {{vtg-tgv-tests.outline}}.

Close this ticket.","28/Aug/22 12:52 PM;6065017e90e3950069cf01c5;Thanks [~accountid:5f94696c29bd8a006f94f0e1] , I logged [https://sifive.atlassian.net/browse/MAL-2505?atlOrigin=eyJpIjoiMjg3OGNkYTU0NDA1NDBlNWE2ZjJiMzQ0M2M4OTViNDMiLCJwIjoiamlyYS1zbGFjay1pbnQifQ|https://sifive.atlassian.net/browse/MAL-2505?atlOrigin=eyJpIjoiMjg3OGNkYTU0NDA1NDBlNWE2ZjJiMzQ0M2M4OTViNDMiLCJwIjoiamlyYS1zbGFjay1pbnQifQ|smart-link]  so we can properly fix the case {{Zfh}} and no {{Zvfh}}.","29/Aug/22 10:56 AM;5fd15143b4a74900763834e0;[~accountid:5f94696c29bd8a006f94f0e1], I noticed in the table you attached there were no FP compare instructions \[RVV 13.13]. What’s the story with those?","29/Aug/22 4:35 PM;5f94696c29bd8a006f94f0e1;[~accountid:5fd15143b4a74900763834e0], the “story” is that it’s a bug in my parsing script… so bad. 😞 

I should parse {{v[m]*f}} for vector FP instructions but I used {{vf}}. Thanks for catching the bug.

Update the test case statistics here.



*RVV (rvv_isa_inst_tgv) Note: some instructions do not have ""masked"" form like <inst> vd, vs2, vs1, v0.t, so ""Masked"" value is zero.*

{noformat}(1)                         (2)        (3)        (4)        (5)        (6)
Inst                     Total|    Masked|  (3) VL=0| (3) VL!=0|  (5)/(2) %
vaaddu.vv                   500        233         43        190         38
vaaddu.vx                   500        230         39        191         38
vaadd.vv                    500        242         42        200         40
vaadd.vx                    500        329         28        301         60
vadc.vim                    500          0          0          0          0
vadc.vvm                    500          0          0          0          0
vadc.vxm                    500          0          0          0          0
vadd.vi                     500        237         55        182         36
vadd.vv                     500        330         32        298         59
vadd.vx                     500        241         51        190         38
vand.vi                     500        329         31        298         59
vand.vv                     500        252         49        203         40
vand.vx                     500        321         37        284         56
vasubu.vv                   500        317         32        285         57
vasubu.vx                   500        241         46        195         39
vasub.vv                    500        328         29        299         59
vasub.vx                    500        236         51        185         37
vcompress.vm                500          0          0          0          0
vcpop.m                     500        258         50        208         41
vdivu.vv                    500        329         34        295         59
vdivu.vx                    500        241         45        196         39
vdiv.vv                     500        329         34        295         59
vdiv.vx                     500        332         33        299         59
vfadd.vf                    500        252         25        227         45
vfadd.vv                    500        341         10        331         66
vfclass.v                   500        351         10        341         68
vfcvt.f.xu.v                500        231         32        199         39
vfcvt.f.x.v                 500        247         23        224         44
vfcvt.rtz.x.f.v             500        327         16        311         62
vfcvt.rtz.xu.f.v            500        348         23        325         65
vfcvt.x.f.v                 500        240         25        215         43
vfcvt.xu.f.v                500        225         27        198         39
vfdiv.vf                    500        318         13        305         61
vfdiv.vv                    500        234         18        216         43
vfirst.m                    500        245         51        194         38
vfmacc.vf                   500        230         23        207         41
vfmacc.vv                   500        254         25        229         45
vfmadd.vf                   500        237         17        220         44
vfmadd.vv                   500        320         14        306         61
vfmax.vf                    500        329         11        318         63
vfmax.vv                    500        319          9        310         62
vfmerge.vfm                 500          0          0          0          0
vfmin.vf                    500        336         11        325         65
vfmin.vv                    500        245         21        224         44
vfmsac.vf                   500        248         24        224         44
vfmsac.vv                   500        253         20        233         46
vfmsub.vf                   500        317         14        303         60
vfmsub.vv                   500        236         18        218         43
vfmul.vf                    500        247         25        222         44
vfmul.vv                    500        328         13        315         63
vfmv.f.s                    500          0          0          0          0
vfmv.s.f                    500          0          0          0          0
vfmv.v.f                    500          0          0          0          0
vfncvt.f.f.w                500        330         10        320         64
vfncvt.f.xu.w               500        249         16        233         46
vfncvt.f.x.w                500        313          7        306         61
vfncvt.rod.f.f.w            500        244         17        227         45
vfncvt.rtz.x.f.w            500        251         35        216         43
vfncvt.rtz.xu.f.w           500        344         28        316         63
vfncvt.x.f.w                500        239         35        204         40
vfncvt.xu.f.w               500        323         25        298         59
vfnmacc.vf                  500        335          9        326         65
vfnmacc.vv                  500        215         15        200         40
vfnmadd.vf                  500        323         11        312         62
vfnmadd.vv                  500        324         20        304         60
vfnmsac.vf                  500        255         19        236         47
vfnmsac.vv                  500        237         26        211         42
vfnmsub.vf                  500        314          7        307         61
vfnmsub.vv                  500        233         26        207         41
vfrdiv.vf                   500        316         17        299         59
vfrec7.v                    500        321         13        308         61
vfredmax.vs                 500        241         13        228         45
vfredmin.vs                 500        252         13        239         47
vfredosum.vs                500        341         32        309         61
vfredusum.vs                500        229         17        212         42
vfrsqrt7.v                  500        338         20        318         63
vfrsub.vf                   500        241         14        227         45
vfsgnjn.vf                  500        324         13        311         62
vfsgnjn.vv                  500        231         20        211         42
vfsgnj.vf                   500        327         13        314         62
vfsgnj.vv                   500        233         15        218         43
vfsgnjx.vf                  500        339         12        327         65
vfsgnjx.vv                  500        266         14        252         50
vfslide1down.vf             500        328         14        314         62
vfslide1up.vf               500        325          5        320         64
vfsqrt.v                    500        334         23        311         62
vfsub.vf                    500        326         13        313         62
vfsub.vv                    500        309          8        301         60
vfwadd.vf                   500        306          9        297         59
vfwadd.vv                   500        343          0        343         68
vfwadd.wf                   500        245         17        228         45
vfwadd.wv                   500        239         12        227         45
vfwcvt.f.f.v                500        242         18        224         44
vfwcvt.f.xu.v               500        244         31        213         42
vfwcvt.f.x.v                500        346         10        336         67
vfwcvt.rtz.x.f.v            500        241         17        224         44
vfwcvt.rtz.xu.f.v           500        339          8        331         66
vfwcvt.x.f.v                500        337          6        331         66
vfwcvt.xu.f.v               500        317          5        312         62
vfwmacc.vf                  500        249         17        232         46
vfwmacc.vv                  500        335          1        334         66
vfwmsac.vf                  500        320          5        315         63
vfwmsac.vv                  500        330          3        327         65
vfwmul.vf                   500        335          2        333         66
vfwmul.vv                   500        237         20        217         43
vfwnmacc.vf                 500        338          4        334         66
vfwnmacc.vv                 500        227         20        207         41
vfwnmsac.vf                 500        323          3        320         64
vfwnmsac.vv                 500        319          5        314         62
vfwredosum.vs               500        240         21        219         43
vfwredusum.vs               500        232         15        217         43
vfwsub.vf                   500        325          6        319         63
vfwsub.vv                   500        245         14        231         46
vfwsub.wf                   500        235         18        217         43
vfwsub.wv                   500        325          6        319         63
vid.v                       500        243         50        193         38
viota.m                     500        258         49        209         41
vmacc.vv                    500        233         46        187         37
vmacc.vx                    500        333         31        302         60
vmadc.vi                    500          0          0          0          0
vmadc.vim                   500          0          0          0          0
vmadc.vv                    500          0          0          0          0
vmadc.vvm                   500          0          0          0          0
vmadc.vx                    500          0          0          0          0
vmadc.vxm                   500          0          0          0          0
vmadd.vv                    500        232         45        187         37
vmadd.vx                    500        326         28        298         59
vmand.mm                    500          0          0          0          0
vmandn.mm                   500          0          0          0          0
vmaxu.vv                    500        330         34        296         59
vmaxu.vx                    500        330         34        296         59
vmax.vv                     500        238         48        190         38
vmax.vx                     500        224         45        179         35
vmerge.vim                  500          0          0          0          0
vmerge.vvm                  500          0          0          0          0
vmerge.vxm                  500          0          0          0          0
vmfeq.vf                    500        257         22        235         47
vmfeq.vv                    500        322         28        294         58
vmfge.vf                    500        330         30        300         60
vmfge.vv                      0          0          0          0          0
vmfgt.vf                    500        247         24        223         44
vmfgt.vv                      0          0          0          0          0
vmfle.vf                    500        332         24        308         61
vmfle.vv                    500        334         32        302         60
vmflt.vf                    500        246         18        228         45
vmflt.vv                    500        318         34        284         56
vmfne.vf                    500        241         20        221         44
vmfne.vv                    500        322         33        289         57
vminu.vv                    500        244         42        202         40
vminu.vx                    500        247         46        201         40
vmin.vv                     500        240         47        193         38
vmin.vx                     500        251         46        205         41
vmnand.mm                   500          0          0          0          0
vmnor.mm                    500          0          0          0          0
vmor.mm                     500          0          0          0          0
vmorn.mm                    500          0          0          0          0
vmsbc.vv                    500          0          0          0          0
vmsbc.vvm                   500          0          0          0          0
vmsbc.vx                    500          0          0          0          0
vmsbc.vxm                   500          0          0          0          0
vmsbf.m                     500        239         32        207         41
vmseq.vi                    500        333         67        266         53
vmseq.vv                    500        231         56        175         35
vmseq.vx                    500        331         71        260         52
vmsgtu.vi                   500        244         52        192         38
vmsgtu.vx                   500        335         66        269         53
vmsgt.vi                    500        238         53        185         37
vmsgt.vx                    500        236         40        196         39
vmsif.m                     500        334         17        317         63
vmsleu.vi                   500        332         65        267         53
vmsleu.vv                   500        238         49        189         37
vmsleu.vx                   500        332         69        263         52
vmsle.vi                    500        238         42        196         39
vmsle.vv                    500        242         48        194         38
vmsle.vx                    500        329         69        260         52
vmsltu.vv                   500        327         65        262         52
vmsltu.vx                   500        239         47        192         38
vmslt.vv                    500        327         72        255         51
vmslt.vx                    500        335         67        268         53
vmsne.vi                    500        327         67        260         52
vmsne.vv                    500        241         44        197         39
vmsne.vx                    500        321         63        258         51
vmsof.m                     500        240         48        192         38
vmulhsu.vv                  500        228         48        180         36
vmulhsu.vx                  500        337         36        301         60
vmulhu.vv                   500        336         36        300         60
vmulhu.vx                   500        329         29        300         60
vmulh.vv                    500        329         35        294         58
vmulh.vx                    500        335         31        304         60
vmul.vv                     500        327         32        295         59
vmul.vx                     500        254         42        212         42
vmv1r.v                     500          0          0          0          0
vmv2r.v                     500          0          0          0          0
vmv4r.v                     500          0          0          0          0
vmv8r.v                     500          0          0          0          0
vmv.s.x                     500          0          0          0          0
vmv.v.i                     504          0          0          0          0
vmv.v.v                    7648          0          0          0          0
vmv.v.x                     500          0          0          0          0
vmv.x.s                     500          0          0          0          0
vmxnor.mm                   500          0          0          0          0
vmxor.mm                    500          0          0          0          0
vnclipu.wi                  500        225         44        181         36
vnclipu.wv                  500        240         37        203         40
vnclipu.wx                  500        317         24        293         58
vnclip.wi                   500        332         25        307         61
vnclip.wv                   500        337         22        315         63
vnclip.wx                   500        315         34        281         56
vnmsac.vv                   500        232         51        181         36
vnmsac.vx                   500        329         32        297         59
vnmsub.vv                   500        327         36        291         58
vnmsub.vx                   500        252         51        201         40
vnsra.wi                    500        334         19        315         63
vnsra.wv                    500        246         44        202         40
vnsra.wx                    500        242         40        202         40
vnsrl.wi                    500        237         36        201         40
vnsrl.wv                    500        324         17        307         61
vnsrl.wx                    500        250         43        207         41
vor.vi                      500        336         34        302         60
vor.vv                      500        323         31        292         58
vor.vx                      500        329         28        301         60
vredand.vs                  500        249         43        206         41
vredmaxu.vs                 500        331         67        264         52
vredmax.vs                  500        332         72        260         52
vredminu.vs                 500        240         41        199         39
vredmin.vs                  500        326         70        256         51
vredor.vs                   500        332         72        260         52
vredsum.vs                  500        228         32        196         39
vredxor.vs                  500        236         50        186         37
vremu.vv                    500        330         28        302         60
vremu.vx                    500        323         30        293         58
vrem.vv                     500        330         34        296         59
vrem.vx                     500        326         34        292         58
vrgatherei16.vv             500        330          6        324         64
vrgather.vi                 500        337         18        319         63
vrgather.vv                 500        246         41        205         41
vrgather.vx                 500        251         50        201         40
vrsub.vi                    500        232         55        177         35
vrsub.vx                    500        254         47        207         41
vsaddu.vi                   500        235         46        189         37
vsaddu.vv                   500        331         38        293         58
vsaddu.vx                   500        241         45        196         39
vsadd.vi                    500        233         44        189         37
vsadd.vv                    500        332         35        297         59
vsadd.vx                    500        239         44        195         39
vsbc.vvm                    500          0          0          0          0
vsbc.vxm                    500          0          0          0          0
vsetivli                    500          0          0          0          0
vsetvl                      501          0          0          0          0
vsetvli                     501          0          0          0          0
vsext.vf2                   500        237         48        189         37
vsext.vf4                   500        330         19        311         62
vsext.vf8                   500        231         72        159         31
vslide1down.vx              500        325         35        290         58
vslide1up.vx               3262        322         17        305          9
vslidedown.vi               500        327         34        293         58
vslidedown.vx               500        241         55        186         37
vslideup.vi                 500        338         15        323         64
vslideup.vx                 500        233         42        191         38
vsll.vi                     500        339         36        303         60
vsll.vv                     500        232         40        192         38
vsll.vx                     500        338         32        306         61
vsmul.vv                    500        340         36        304         60
vsmul.vx                    500        336         24        312         62
vsra.vi                     500        338         33        305         61
vsra.vv                     500        231         45        186         37
vsra.vx                     500        241         49        192         38
vsrl.vi                     500        242         43        199         39
vsrl.vv                     500        329         32        297         59
vsrl.vx                     500        324         37        287         57
vssra.vi                    500        327         32        295         59
vssra.vv                    500        330         28        302         60
vssra.vx                    500        226         53        173         34
vssrl.vi                    500        322         28        294         58
vssrl.vv                    500        334         42        292         58
vssrl.vx                    500        337         34        303         60
vssubu.vv                   500        235         47        188         37
vssubu.vx                   500        321         36        285         57
vssub.vv                    500        329         35        294         58
vssub.vx                    500        234         46        188         37
vsub.vv                     500        239         49        190         38
vsub.vx                     500        335         33        302         60
vwaddu.vv                   500        239         33        206         41
vwaddu.vx                   500        240         44        196         39
vwaddu.wv                   500        237         56        181         36
vwaddu.wx                   500        240         43        197         39
vwadd.vv                    500        233         45        188         37
vwadd.vx                    500        336         17        319         63
vwadd.wv                    500        234         28        206         41
vwadd.wx                    500        249         40        209         41
vwmaccsu.vv                 500        331          7        324         64
vwmaccsu.vx                 500        327         12        315         63
vwmaccus.vx                 500        323         15        308         61
vwmaccu.vv                  500        332          6        326         65
vwmaccu.vx                  500        336         16        320         64
vwmacc.vv                   500        243         46        197         39
vwmacc.vx                   500        340         12        328         65
vwmulsu.vv                  500        227         41        186         37
vwmulsu.vx                  500        327         16        311         62
vwmulu.vv                   500        324          5        319         63
vwmulu.vx                   500        245         44        201         40
vwmul.vv                    500        335          6        329         65
vwmul.vx                    500        340         15        325         65
vwredsumu.vs                500        237         50        187         37
vwredsum.vs                 500        331         65        266         53
vwsubu.vv                   500        232         39        193         38
vwsubu.vx                   500        249         39        210         42
vwsubu.wv                   500        332          9        323         64
vwsubu.wx                   500        245         38        207         41
vwsub.vv                    500        239         52        187         37
vwsub.vx                    500        232         48        184         36
vwsub.wv                    500        240         40        200         40
vwsub.wx                    500        336         27        309         61
vxor.vi                     500        244         47        197         39
vxor.vv                     500        330         34        296         59
vxor.vx                     500        328         32        296         59
vzext.vf2                   500        326         16        310         62
vzext.vf4                   500        328         14        314         62
vzext.vf8                   500        333         27        306         61{noformat}



*RVV FP instructions*

{noformat}Inst                  Total   Half Single Double
vfadd.vf                500     94     39      9
vfsub.vv                500     33     27      6
vfsub.vf                500     54     23      5
vfrsub.vf               500     87     35      7
vfwadd.vv               500      6      5    -X-
vfwadd.vf               500     27     10    -X-
vfwsub.vv               500     67     39    -X-
vfwsub.vf               500     22     12    -X-
vfwadd.wv               500     85     40    -X-
vfwadd.wf               500     85     35    -X-
vfwsub.wv               500     21     11    -X-
vfwsub.wf               500     71     28    -X-
vfmul.vv                500     55     21      5
vfmul.vf                500     77     36      8
vfdiv.vv                500     80     33      7
vfdiv.vf                500     52     27      7
vfrdiv.vf               500     50     29      8
vfwmul.vv               500     85     38    -X-
vfwmul.vf               500     24      7    -X-
vfmacc.vv               500     84     39      4
vfmacc.vf               500     72     49     18
vfnmacc.vv              500     87     42      8
vfnmacc.vf              500     54     23      8
vfmsac.vv               500     74     48      3
vfmsac.vf               500     82     37     11
vfnmsac.vv              500     90     50      4
vfnmsac.vf              500     84     42     11
vfmadd.vv               500     62     33      2
vfmadd.vf               500     74     46      8
vfnmadd.vv              500     57     27     10
vfnmadd.vf              500     52     26      3
vfmsub.vv               500     88     41      2
vfmsub.vf               500     48     26      5
vfnmsub.vv              500     77     46     10
vfnmsub.vf              500     48     29      5
vfwmacc.vv              500     11     10    -X-
vfwmacc.vf              500     66     35    -X-
vfwnmacc.vv             500     83     43    -X-
vfwnmacc.vf             500     15     10    -X-
vfwmsac.vv              500     13      4    -X-
vfwmsac.vf              500     34     12    -X-
vfwnmsac.vv             500     17      8    -X-
vfwnmsac.vf             500     21      8    -X-
vfsqrt.v                500     73     32     10
vfrsqrt7.v              500     62     30     13
vfrec7.v                500     55     24      6
vfmin.vv                500     72     46      5
vfmin.vf                500     49     28      4
vfmax.vv                500     63     22      5
vfmax.vf                500     58     18      5
vfsgnj.vv               500     63     47      3
vfsgnj.vf               500     47     29      8
vfsgnjn.vv              500     70     42      8
vfsgnjn.vf              500     44     23      9
vfsgnjx.vv              500     61     37      3
vfsgnjx.vf              500     50     27     14
vmfeq.vv                500     81     47     11
vmfeq.vf                500     88     45      4
vmfne.vv                500     82     38      6
vmfne.vf                500     82     46     10
vmflt.vv                500     69     51     14
vmflt.vf                500     82     44     12
vmfle.vv                500     77     52     10
vmfle.vf                500     69     37      7
vmfgt.vv                  0    -X-    -X-    -X-
vmfgt.vf                500     81     39      7
vmfge.vv                  0    -X-    -X-    -X-
vmfge.vf                500     86     41      9
vfclass.v               500     47     28      2
vfmerge.vfm             500     61     36      5
vfmv.v.f                500     67     29      8
vfcvt.xu.f.v            500    116     39     13
vfcvt.x.f.v             500    107     55     17
vfcvt.rtz.xu.f.v        500     74     35      8
vfcvt.rtz.x.f.v         500     68     50      9
vfcvt.f.xu.v            500     99     58     14
vfcvt.f.x.v             500    110     55     14
vfwcvt.xu.f.v           500     23     12    -X-
vfwcvt.x.f.v            500     22     10    -X-
vfwcvt.rtz.xu.f.v       500     29     11    -X-
vfwcvt.rtz.x.f.v        500     74     38    -X-
vfwcvt.f.xu.v           500     91     35    -X-
vfwcvt.f.x.v            500     21     11    -X-
vfwcvt.f.f.v            500     77     36    -X-
vfncvt.xu.f.w           500     53     23    -X-
vfncvt.x.f.w            500     67     37    -X-
vfncvt.rtz.xu.f.w       500     51     24    -X-
vfncvt.rtz.x.f.w        500     63     30    -X-
vfncvt.f.xu.w           500     64     34    -X-
vfncvt.f.x.w            500     39     28    -X-
vfncvt.f.f.w            500     50     22    -X-
vfncvt.rod.f.f.w        500     67     31    -X-
vfredosum.vs            500     68     36     14
vfredusum.vs            500     78     33      7
vfredmax.vs             500     77     41      5
vfredmin.vs             500     79     39      4
vfwredosum.vs           500     91     39    -X-
vfwredusum.vs           500     84     51    -X-
vfirst.m                500    107     53     19
vfmv.f.s                500     70     33     10
vfmv.s.f                500     71     34      7
vfslide1up.vf           500     23      9      6
vfslide1down.vf         500     43     34     11{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] optimize mask free list to only support tp.nRename parallel allocations,,,,,,MAL-2498,123880,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/25/2022 13:34,9/27/2022 3:06,9/28/2022 0:51,8/30/2022 0:11,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,,,,"As pointed out by [~accountid:5acffeafaa802f2a797a955c] in [https://sifive.atlassian.net/browse/MAL-2478?focusedCommentId=386185|https://sifive.atlassian.net/browse/MAL-2478?focusedCommentId=386185|smart-link] 

TGV’s mask PRF {{maskUnitFreelist}} does not need to support {{nRename = tp.nRename * tp.nVectorDsts}}, and could be limited to {{nRename = tp.nRename}}, has it is not possible to have both destination of a uops targetting {{v0}} (and it is even probable that only the even indexed destination can be {{v0}})

[https://github.com/sifive/federation/blob/master/block-tgv-sifive/src/main/scala/core/tgv/VRDU.scala#L230|https://github.com/sifive/federation/blob/master/block-tgv-sifive/src/main/scala/core/tgv/VRDU.scala#L230]

{noformat}  // Note: Mask Unit FreeList will use Unbanked design because the number of PRs is very small. Banked design will introduce more stalls
  val maskUnitFreelist = withClock(vrduClock) {
    Module(
      new FreeListUnbanked(
        nPRs         = tp.vMaskUnitPRs,
        nRename      = tp.nRename * tp.nVectorDsts,
        nRetire      = tp.rhf.nRewind,
        implZero     = true,
        allocOnReset = Seq(0, 1),
      )
    )
  }
{noformat}",Andrew Hanselman,Ian Chuang,Josh Smith,Nicolas Brunie,,,,,,,,,,,,609d7e1f5998a6006800dcc5,61aaae1d9615eb006f5ff922,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2478,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-30T00:11:16.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/ce0492c6e2054cb6aead48f9573972648fd71d15,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00qbz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,32:37.4,"26/Aug/22 8:32 AM;61aaae1d9615eb006f5ff922;Chatted with [~accountid:6065017e90e3950069cf01c5] and here is an example that is possible to have the most v0 as the destination at a time. 

{noformat}// with LMUL 1
vwadd.vv v0, v2, v3, vm
vwadd.vv v0, v2, v3, vm
vwadd.vv v0, v2, v3, vm
vwadd.vv v0, v2, v3, vm{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[COSIM-ERROR][#] COSIM VS RTL PC MISMATCH,[COSIM-ERROR][#] COSIM VS RTL PC MISMATCH,L2 ,TLB,,,MAL-2497,123854,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,8/25/2022 7:45,9/6/2022 11:26,9/28/2022 0:51,8/26/2022 7:38,,,,,,,,,,,Panda DR,,RTL/PTW,,,,,,,,,0,,,,"*Error:*

{noformat}[COSIM-ERROR][0] COSIM VS RTL PC MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [590325] InstInfo: VLD=1 | PC=0x0000000080000400 | INSN=0x0800006f | INST_DST=NONE | REDUCTION = false | WR: en=false r0=0x0000_0000_0000_0000 mask=00ff | READY=1 | CSR_TIMER=590325 | PRV=3 | MSTATUS=0x800000ca00006800 | MTVEC=0x0000000080000400 | MCAUSE=0x000000000000000f | VSTART=0 | VL=0 | SEW=8 | LMUL=m1 | VSEGELT=0

[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0xffff84800d40d460 | INSN=0x0800006f | INST_DST=NONE | REDUCTION = false | WR: 


[COSIM-ERROR][0] m_dut: en=false r0=0x0000_0000_0000_0000 mask=00ff
[COSIM-ERROR][0] m_sim: {noformat}

The mismatch occurs while executing {{PC=0xffff84800d40d460 (0x01938023) sb      s9, 0(t2).}}
COSIM is able to translate this VA but RTL doesn’t leading to mismatch. DTLB raises {{tile_prci_domain.tile.core.lsu.dtlb.io_resp_0_pf_st}} , a page fault exception while translating this VA.

From COSIM log, translation at both stages is done correctly, as expected from test:

{noformat}core   0: 0xffff84800d40d460 (0x01938023) sb      s9, 0(t2)
core   0: prv=1, v=1, s_mode=1, sum=0, mxr=0 
core   0: Translating: 0xffff848009038040:
core   0: vsatp = 0x9000000000089203
core   0: s1: pte_addr = 0x89203848     pte = 0x4019b001    ....v table: 0x10066c000
core   0: s1: pte_addr = 0x10066c000     pte = 0x8716401    ....v table: 0x21c59000
core   0: s1: pte_addr = 0x21c59240     pte = 0x224d7001    ....v table: 0x8935c000
core   0: s1: pte_addr = 0x8935c1c0     pte = 0x40000e0cf    .xrwv  addr: 0x1000038000
core   0: xlated2 = 0x1000038040
core   0: 1 0xffff84800d40d460 (0x01938023) mem 0xffff848009038040-0x0000001000038040 0x77
core   0: prv=1, v=1, s_mode=1, sum=0, mxr=0 
core   0: Translating: 0xffff84800d40d460:
core   0: vsatp = 0x9000000000089203
core   0: s1: pte_addr = 0x89203848     pte = 0x4019b001    ....v table: 0x10066c000
core   0: s1: pte_addr = 0x10066c000     pte = 0x8716401    ....v table: 0x21c59000
core   0: s1: pte_addr = 0x21c59350     pte = 0x17c000cf    .xrwv  addr: 0x5f000000
core   0: xlated2 = 0x5f00d460{noformat}

RTL however returns a different PA at the first stage itself: {{tile_prci_domain.tile.core.lsu.dtlb.io_resp_0_paddr[36:0] = 0x2bb27e040.}}

Dump available at:
{{gamma27:/scratch/saurabhs/mallard_master_350/federation/builds/coreip_p650mc_fake_tile/sim/sim/PC_mismatch.outline/sting_StingTuple_T_0288/sting/valtrix/regress_base}}



*Build*: coreip_p650mc_fake_tile

*Commit*: 	5a43f96

*Regression*: master/nightly-mallard/350

*Simscope*: [https://simscope.internal.sifive.com/sigs/704/cmbwrvwlpsff|https://simscope.internal.sifive.com/sigs/704/cmbwrvwlpsff]

*rerun.outline*: 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingTuple_T_0288"",
  ""subtest"": ""valtrix/regress_base"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2659926561
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",John Ingalls,Josh Smith,Megan Wachs,Saurabh Singh,Sihao Liu,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,607e26f781e7b900681be48c,62b1563ab065974c3e23a9ea,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26/Aug/22 10:05 AM;ug:660638b7-d6af-444b-94c9-a4b7687d31b6;test-pass.png;https://sifive.atlassian.net/secure/attachment/76632/test-pass.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/25da01628ee04e7bc09af5bd889752bb13f807ad,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i00q6f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,48:23.8,"25/Aug/22 7:46 AM;607e26f781e7b900681be48c;Hey [~accountid:5acffeafaa802f2a797a955c] ,
Can you take a look into this?","25/Aug/22 7:48 AM;5acffeafaa802f2a797a955c;This sounds like a potential MMU issue.  I’m going to assign this to [~accountid:62b1563ab065974c3e23a9ea] for now, since he has been working on the MMU.","26/Aug/22 7:36 AM;62b1563ab065974c3e23a9ea;Confirmed by [~accountid:607e26f781e7b900681be48c] , that this is actually caused by [https://sifive.atlassian.net/browse/MAL-2429|https://sifive.atlassian.net/browse/MAL-2429|smart-link] , which has been resolved by [https://github.com/sifive/federation/pull/25605|https://github.com/sifive/federation/pull/25605|smart-link] ",06/Sep/22 11:25 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;Since [https://sifive.atlassian.net/browse/MAL-2429|https://sifive.atlassian.net/browse/MAL-2429|smart-link] was affects Previously = no I am going to mark this one as affecting previously as No as well,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] implement Baler IssQ blocking mechanism when VMB full,,,,,,MAL-2496,123844,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/25/2022 5:39,9/1/2022 10:34,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,,John Ingalls,Nicolas Brunie,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2212,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-01T09:42:56.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2212,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,,,,,,,,,,,,,2|i00q47:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] MaskRF to VMB datapath,,,,,,MAL-2495,123843,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/25/2022 5:35,9/2/2022 0:26,9/28/2022 0:51,9/1/2022 9:31,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2212,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-01T09:31:20.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2212,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/d5ca59316bf5f1b11ef96aef458ae5217a705cdf,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,,,,,,,,,,,,,2|i00q3z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Implement CSR Bus to access IMSIC,,,,,,MAL-2494,123795,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Julian Bailey,629ab2a89bc7150068d00cdf,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/24/2022 18:08,9/23/2022 9:56,9/28/2022 0:51,,,,,,,,,,,,,,RTL/IEX,RTL/RDU,,,,,,,,0,,,,"As part of SAINT, there is a block called the Incoming Message Signaled Interrupt Controller (IMSIC).  This block lives outside the tile in the uncore domain so that MSIs can be observed even while the tile is clock gated or powered down.  The IMSIC has CSRs that need to be accessible by the core using CSR* instructions, and the SAINT spec includes a section detailing a “CSR Bus” that is used to read and/or write these CSRs. [https://github.com/sifive/arch-specs/blob/panda_saint/interrupts/saint_has.adoc#imsic-interfaces|https://github.com/sifive/arch-specs/blob/panda_saint/interrupts/saint_has.adoc#imsic-interfaces]

For Mallard, there is already a sort of ring bus for CSRs that get shadow copies in different blocks around the core.  It currently only serves the purpose of propagating copies of certain CSR values around the core when updates to those CSRs occur.  The plan is to extend this existing bus in Mallard to allow for accessing CSRs in the IMSIC.  This will require changes to the bus in Mallard, as well as to the system pipeline to handle accessing CSRs that now live outside of the tile and will have a higher latency than all of the other CSRs",Josh Smith,Julian Bailey,Vernon Pang,,,,,,,,,,,,,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,61d5e40690cfd2007115e769,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{branch={count=1, dataType=branch}, json={""cachedValue"":{""errors"":[],""summary"":{""branch"":{""overall"":{""count"":1,""lastUpdated"":null,""dataType"":""branch""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00ptr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,14,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,45:42.5,24/Aug/22 7:52 PM;5acffeafaa802f2a797a955c;[~accountid:629ab2a89bc7150068d00cdf] just a heads up that this task is likely coming your way soon.,"23/Sep/22 8:45 AM;629ab2a89bc7150068d00cdf;Hey [~accountid:5acffeafaa802f2a797a955c] 

The Mallard IEX defines some CSR opcodes:


{noformat}  val SZ = 3
  def X  = BitPat.dontCare(SZ)
  def N  = 0.U(SZ.W)
  def R  = 2.U(SZ.W)
  def I  = 4.U(SZ.W)
  def W  = 5.U(SZ.W)
  def S  = 6.U(SZ.W)
  def C  = 7.U(SZ.W){noformat}

I can figure out that N is nop, R is read, W is write, S is set and C is clear…is I invert?","23/Sep/22 8:58 AM;5acffeafaa802f2a797a955c;I don’t think CSR.I corresponds to a real operation.  The spec only defines write, set, and clear operations (and then the immediate forms).

{noformat}  // mask a CSR cmd with a valid bit
  def maskCmd(valid: Bool, cmd: UInt): UInt = {
    // all commands less than CSR.I are treated by CSRFile as NOPs
    cmd & ~Mux(valid, 0.U, CSR.I)
  }{noformat}

It looks like it’s taking the {{funct3}} field of the opcode and using the MSB to indicate that it’s an operation that actually does an update (write, set, or clear).","23/Sep/22 9:01 AM;5acffeafaa802f2a797a955c;So, we came across one more snag with the shadow CSR stuff recently.  I originally defined an {{allShadowCSRs}} ArrayBuffer in {{MallardCoreParams}}, and then inside of {{FEU}}, {{IEX}}, {{FEX}}, {{LSU}}, and {{TGV}} they define their own lists of CSRs that need to be shadowed in that block, and then they append the list to the global {{allShadowCSRs}} list. For example:

{noformat}  val fexShadowCSRs: Seq[(Int, UInt, BigInt)] = Seq(
    (customCSRs.chickenCSRId, customCSRs.chickenPlusarg, customCSRs.chickenCSRResetVal)
  )
  
  mp.allShadowCSRs.appendAll(fexShadowCSRs.map(_._1)){noformat}

And then in {{SysPipe}} we check to see if the CSR being written is any of the CSRs on the global list:

{noformat}  val isShadowedCSR_EX = allShadowCSRs.map(c => c.U === sysCsrAddr_EX).orR{noformat}

However, it appears that adding new CSRs to the local lists like {{fexShadowCSRs}} doesn’t always get reflected in the {{isShadowedCSR_EX}} logic.  This may be because the {{allShadowCSRs}} list is mutable, and perhaps it’s evaluated for {{SysPipe}} before all the blocks can append to {{allShadowCSRs}}…



I tried defining the local lists like {{fexShadowCSRs}} inside of {{MallardCoreParams}} so we wouldn’t have to use a mutable list for {{allShadowCSRs}}, but I got compile errors because {{customCSRs}} has an implicit parameter that {{MallardCoreParams}} does not.

So we need to figure out a way to make sure that {{allShadowCSRs}} gets the full list when we add new CSRs to the lists.","23/Sep/22 9:42 AM;629ab2a89bc7150068d00cdf;Okay, no problem…We are going to have to support listing CSRs that are outside of the core and require multicycle accesses over the CSR bus anyway, so this lists of CSRs thing needs to be solved…

I will have a look at this for how we can pass this information for shadow CSRs around too…",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV]: VectorAccumulator Set to ready and clear.,[TGV]: VectorAccumulator ,,,,,MAL-2493,123748,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,8/24/2022 13:59,9/7/2022 17:43,9/28/2022 0:51,8/31/2022 6:28,,,,,,,,,,,Panda DR,,RTL/RDU,TGV_RTL/RDU,,,,,,,,0,TGV,,,"I see in the waves the vectorAccmulator_4 being set to ready by VEX and is set to be cleared at the same time by the RDU. 

the error message is 

{noformat}Error: ""/scratch/verif/srivatsa/update_insts_on_rat/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VectorAccumulator_assert.sv"", 22: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.vAccumulators_4.SiFive_VectorAccumulator_assert_0: at time 804822500 ps
Assertion failed: Accumulator ready set/clear collision
    at VEX.scala:457 assert(!((io.readyClearVec & io.readySetVec).orR), ""Accumulator ready set/clear collision""){noformat}

Looking at this assertion in the code there is a fix me as well. 

[https://github.com/sifive/federation/blob/8ea5bc66cd905013ecedd02f5ba9085a33e6aa3e/block-tgv-sifive/src/main/scala/core/tgv/VEX.scala#L456|https://github.com/sifive/federation/blob/8ea5bc66cd905013ecedd02f5ba9085a33e6aa3e/block-tgv-sifive/src/main/scala/core/tgv/VEX.scala#L456]



This is the main cause for failure when we are enabling the instructions vmsbc.vvm and others on sting and rat generators. 

To recreate this failure:

# clone federation and checkout the commit c3821e3b2dcd0a0eaef2be447cd1458eb9de2311
# build coreip_u8_minimal_vector and rerun the simulation using the outline 
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim"",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""rat_default_T_0981"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 4068966467
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



The generated waves are at {{verif02:/scratch/verif/srivatsa/update_insts_on_rat/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/rat_default_T_0981/rat/default}}",Andrew Hanselman,Josh Smith,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,609d7e1f5998a6006800dcc5,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,30/Aug/22 2:23 PM;ug:03c2888a-5ac7-445d-b700-4a271a824946;image-20220830-212302.png;https://sifive.atlassian.net/secure/attachment/76790/image-20220830-212302.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-08-31T06:28:12.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,3b40c69254b80e1790d70d026365d68ee2982085,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i00pk7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,17:01.9,"24/Aug/22 2:17 PM;6065017e90e3950069cf01c5;I am steering this towards [~accountid:609d7e1f5998a6006800dcc5] , mask accumulator is more his realm than mine.","24/Aug/22 2:17 PM;6065017e90e3950069cf01c5;{{vmsbc}} was implemented by [~accountid:5f94696c29bd8a006f94f0e1] , so I will let [~accountid:609d7e1f5998a6006800dcc5] push that towards Shaka if required.","30/Aug/22 2:23 PM;609d7e1f5998a6006800dcc5;It looks like the accumulator information is not getting merged into the ROB group properly. We can see an accumulator allocation in REN/DIS but the allocation is not tracked properly in the ROB dispatch request. The ROB group merge method was missing a reference to nVAcc where it had references to S2V and V2S. Testing a fix.

!image-20220830-212302.png|width=1781,height=1063!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU perf: LoadQ hazard on StqWG do not hold for LDArb bubble,,,,,,MAL-2492,123745,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,8/24/2022 13:00,9/6/2022 10:15,9/28/2022 0:51,8/24/2022 13:12,,,,,,,,,,,,,Performance,RTL/LSU,,,,,,,,0,,,,"While debugging [https://sifive.atlassian.net/browse/MAL-1638|https://sifive.atlassian.net/browse/MAL-1638|smart-link], we realized that a LoadQ with a hazard on a Store was waiting for the Store to retire.  This caused a hang in [https://github.com/sifive/federation/pull/24933|https://github.com/sifive/federation/pull/24933|smart-link], but also could be a performance improvement on its own.",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Swarnashri Chandrashekar,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,6287f376f0302e0068bff30c,,,,,,,,,,,,,,,,,MAL-1397,,,,MAL-2559,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Load/Store,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-29T17:47:12.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25580,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00pjj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Implement chunk-tail mode for compare and add/sub with carry instructions,,,,,,MAL-2491,123744,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,8/24/2022 12:47,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"* Implement chunk tail mode described in MAS ([https://github.com/sifive/arch-specs/blob/master/core/tgv_mas.adoc#182-tail-policies|https://github.com/sifive/arch-specs/blob/master/core/tgv_mas.adoc#182-tail-policies])
* Remove unnecessary logic related to bit-granular vl masking",Andrew Hanselman,Nicolas Brunie,Zhiqiang Hao,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,6065017e90e3950069cf01c5,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00pjb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Assertion Failure : ROB Retire Hang,Assertion Failure : ROB Retire Hang,,,,,MAL-2490,123702,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,John Ingalls,5bb6808b9ba2930990f81895,Deepika S K,622a9d30c4d0fe0069575ac9,Deepika S K,622a9d30c4d0fe0069575ac9,8/24/2022 3:36,9/6/2022 11:24,9/28/2022 0:51,8/24/2022 22:33,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"Assertion fail is fired when {{robRetireHangCounter[16:0]}} exceeds threshold of {{17'h1869F}} . 

From the waves, the pc is stuck at {{io_pc = 680_0cc0_927c}} from *16493782500ps ,* which corresponds to the {{end_SNP_Hwpf_Stride_run_block0_5_104_0_hv_0()}} block in asm.txt .

From the RTL trace, the trace is stuck at cycle {{824570}} : 

{noformat}C                   0:     824570 [1] pc=[000006800cc0927c] W[r13=0000000070e98a17][1] R[r15=0003410080a3f200] R[r 0=0000000000000000] inst=[00005f94] c.lw    a3, 56(a5)
C                   0:     824570 [1] pc=[000006800cc0927e] W[r 7=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[100003b7] lui     t2, 0x10000;snippet_id_69_start_SNP_Dpat_Random_Fcvt_L_S_run_block0_4_105_0_hv_0
C                   0:     824570 [1] pc=[000006800cc09282] W[r 7=00000000100003f1][1] R[r 7=0000068009004940] R[r 0=0000000000000000] inst=[3f13839b] addiw   t2, t2, 1009
C                   0:     824570 [1] pc=[000006800cc09286] W[r 7=0000040000fc4000][1] R[r 7=00000000100003f1] R[r 0=0000000000000000] inst=[00e39393] slli    t2, t2, 14
C                   0:     824570 [1] pc=[000006800cc0928a] W[r 7=0000040000fc4080][1] R[r 7=0000040000fc4000] R[r 0=0000000000000000] inst=[08038393] addi    t2, t2, 128
C                   0:     824570 [1] pc=[000006800cc0928e] W[r10=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[03400537] lui     a0, 0x3400
C                   0:     824570 [1] pc=[000006800cc09292] W[r10=00000000034004e1][1] R[r10=0000000000000000] R[r 0=0000000000000000] inst=[4e15051b] addiw   a0, a0, 1249{noformat}

 
*Error Message :* 

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/RIT-mallard-Base-Tests/394/builds/coreip_p550/verilog/design/SiFive_ROB.sv"", 4135: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob: at time 24889522500 ps
assert failed (verification library): ROB Retire Hang around entry  94   @[ROB.scala 781:9]
Fatal: ""/scratch/jenkins/archived-builds/fed/master/RIT-mallard-Base-Tests/394/builds/coreip_p550/verilog/design/assertions/SiFive_ROB_assert.sv"", 787: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert: at time 24889522500 ps{noformat}



*Waves :* 

!image-20220824-103642.png|width=100%!

----

*Regression :* [fed/master/RIT-mallard/394|https://simscope.internal.sifive.com/r/fed/master/RIT-mallard/394]

*Simscope Link :* [https://simscope.internal.sifive.com/sigs/740/cmdfbcy5csmb|https://simscope.internal.sifive.com/sigs/740/cmdfbcy5csmb]

*To reproduce :* 

* _Config_ : coreip_p550
* _Commit_ : 3c0a40bfde859faa7abfefb4ee81dbc7e81631d5
* _rerun.outline_ : 
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+MEM_ERROR_INJECT=.*\\.icDataArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""sting_StingInstMemTuple_T_0173"",
  ""subtest"": ""valtrix/algorithms/coderdwr/smc_modify_imm_opnd.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3899796203
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



*Dump Path :* {{verif01 : /scratch/deepikas/mallard-RIT-394/federation/builds/coreip_p550/sim/sim/rob_hang.outline/sting_StingInstMemTuple_T_0173/sting/valtrix/algorithms/coderdwr/smc_modify_imm_opnd.conf}}",Deepika S K,John Ingalls,Josh Smith,Megan Wachs,Rakesh Palakurthi,,,,,,,,,,,622a9d30c4d0fe0069575ac9,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,62350e943eacc50071ff0753,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2440,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24/Aug/22 3:36 AM;ug:0c84c1d9-358d-4f68-993a-932052da7479;image-20220824-103642.png;https://sifive.atlassian.net/secure/attachment/76464/image-20220824-103642.png,,,,,,,,,,,,,,,,3c0a40bfde859faa7abfefb4ee81dbc7e81631d5,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25539,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00p9z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,41:10.1,"24/Aug/22 5:41 AM;5acffeafaa802f2a797a955c;This test appears to be hanging because a load with gid 0x5e never completes.  It appears to be issuing down LSTPipe 0, missing the DTLB, replaying, and doing that forever.

There appears to be some interaction between LSTPipe 1 and LSTPipe 0 which is causing two accesses to continue replaying forever.  LSTPipe 0 misses the DTLB but never actually sends a request to the PTW because {{io.kill}} is asserted.  However, {{io.kill}} is asserted because of LSTPipe 1.  It looks like the DTLB {{io.kill}} signal is just the logical OR of signals from all of the LSTPipes. So I think the op in LSTPipe 1 is accidentally killing the PTW request for LSTPipe 0.  It appears that LSTPipe 1 is handling HWPF requests.

[~accountid:5bb6808b9ba2930990f81895] could you take a look?",24/Aug/22 10:33 PM;5bb6808b9ba2930990f81895;Same fix [https://github.com/sifive/federation/pull/25539|https://github.com/sifive/federation/pull/25539|smart-link]  as [https://sifive.atlassian.net/browse/MAL-2440|https://sifive.atlassian.net/browse/MAL-2440|smart-link] ,06/Sep/22 11:24 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;Since [https://sifive.atlassian.net/browse/MAL-2440|https://sifive.atlassian.net/browse/MAL-2440|smart-link] was marked as Affects Previously = No I will do the same here,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
HWPF: select largest hwpfNdx during MSHR merging ,,,,,,MAL-2488,123630,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,8/23/2022 14:49,9/2/2022 0:07,9/28/2022 0:51,9/2/2022 0:07,,,,,,,,,,,,,RTL/HWPF,,,,,,,,,0,,,,"For a certain range of pattern which is prefetched by both BPM and LGS engines, there exists a situation where LGS engines are replaced by BPM engines during MSHR merging. This replacement of the engine index leads to a situation where the LGS engine does not get a chance to increase the aggressiveness while BPM aggressiveness continues to increase as it is not related to MSHR feedback ([MAL-1786|https://sifive.atlassian.net/browse/MAL-1786]). Selecting the largest hwfpNdx during MSHR merging will ensure the feedback for the LGS engine is valid.",Benoy Alexander,Binayak Tiwari,Brian Grayson,Fu-Ching Yang,Hung-Lun Chen,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,5e1370feefa19b0e976b5c24,60a963ed8cbda700681b40c1,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,60ce876f624d7000695b9589,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Prefetch,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-01T22:03:56.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00otz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,6,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Livermore: Downsize multi-core L3s 4m->2m,,,,,,MAL-2487,123626,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Benoy Alexander,5e1370feefa19b0e976b5c24,Benoy Alexander,5e1370feefa19b0e976b5c24,Benoy Alexander,5e1370feefa19b0e976b5c24,8/23/2022 14:21,9/7/2022 13:24,9/28/2022 0:51,9/7/2022 13:24,,,,,,,,,,,,,Performance,,,,,,,,,0,,,,Livermore: Downsize multi-core L3s 4m->2m,Benoy Alexander,,,,,,,,,,,,,,,5e1370feefa19b0e976b5c24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-23T16:43:40.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37a824b610600141014d572669190d320ff6c424,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00ot3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU interface: manually remove unused or constant-propagated signals,,,,,,MAL-2486,123613,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,8/23/2022 12:02,9/19/2022 8:39,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,RTL/PTW,RTL/Tile,,,,,,,0,,,,"[https://github.com/sifive/federation/pull/25280|https://github.com/sifive/federation/pull/25280|smart-link] essentially applies {{dontTouch}} to the whole LSU Module interface IO, blocking constant propagation and unused IO elimination.

PD (and I expect LSU DV too) are seeing a large increase in added ports: 7000+ including these and more:

{noformat}No. of New Ports : Port Pattern
704 : io_ptwDpath_customCSRs_csrs_*_wdata[*]
704 : io_ptwDpath_customCSRs_csrs_*_value[*]
704 : io_dtlb_ptw_customCSRs_csrs_*_wdata[*]
704 : io_dtlb_ptw_customCSRs_csrs_*_value[*]
480 : io_lsuFexPipeTag_*_*_*_bits_prIdx[*]
360 : io_lsuIexPipeTag_*_*_*_bits_prIdx[*]
296 : io_ptwDpath_pmp_*_mask[*]
280 : io_ptwDpath_pmp_*_addr[*]
172 : io_bp_*_control_zero*[*]
128 : io_iexPipeFwdData_*_*[*]
 64 : io_ptwMem_s*_data_data[*]{noformat}

The most obvious solution is for us to perform the constant propagation and unused IO elimination manually, instead of Chisel+Firrtl doing that for us automatically.

This can be reproduced in regular builds just using {{make verilog}}; synthesis is not required.",Deborah Soung,John Ingalls,Raghav Chawla,Sihao Liu,,,,,,,,,,,,5aff4effae1b5f0825635e84,5bb6808b9ba2930990f81895,62986fb4563d380068b272e6,62b1563ab065974c3e23a9ea,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2655,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00oq7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,20,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Stall ID generation and Instruction Queue Pointers update - timing path improvements,,,,,,MAL-2485,123599,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,Vishad Viplav,623e520c94742a00683f710a,Vishad Viplav,623e520c94742a00683f710a,8/23/2022 10:36,9/27/2022 7:19,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/RDU,,,,,,,,0,,,,"Stall ID is being generated based on multiple sources, with Dispatch Buffer (LSU specifically) being the most critical timing wise, which has been impacted by increase in LS pipes leading to more muxes to calculate the number of valid entries post dequeue. The Stall_ID signal gets intercepted for creating the fqConsume vector to denote the instructions coming from fetch queue or current fetch group which are valid and satisfy the conditions to be flopped in predecode stage. Using a recursive muxing logic which has increased due to more rename ports 4->8 (synth will optimize a little bit), we determine which instructions will be flopped after considering the valid entries in instruction queue. This is post processed to update the IQ pointers.



Based on my understanding we can intercept the stall_ID after recursive muxing to generate {{fqConsumeShift}}  instead of {{fqConsume}}, will reduce ~6-8 gates for the stall_ID path.



Maybe there are some other fixes also possible



Logic Depth ~35



Thanks,



!IFU critical paths (mallard) - ITag Miss - redirect_ Inst Queue deque.png|width=1247,height=482!",Vaibhav Gupta,Vishad Viplav,,,,,,,,,,,,,,623e4830b75ca80070580145,623e520c94742a00683f710a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,23/Aug/22 11:02 AM;ug:519a710a-c989-4f27-af37-bfaa49b5eb6c;IFU critical paths (mallard) - ITag Miss - redirect_ Inst Queue deque.png;https://sifive.atlassian.net/secure/attachment/76420/IFU+critical+paths+%28mallard%29+-+ITag+Miss+-+redirect_+Inst+Queue+deque.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00on3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
fix performance correlation issues originating from RTL in TGV generator,,,,,,MAL-2484,123588,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/23/2022 8:48,8/25/2022 20:46,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/Top,,,,,,,,,0,,,,"Perform fixes listed from [~accountid:61aaae1d9615eb006f5ff922] work on Dabble/RTL correlation on TGV (this only list tasks targeted for Panda, tasks for later should be listed under [https://sifive.atlassian.net/browse/MAL-2240|https://sifive.atlassian.net/browse/MAL-2240|smart-link] )",Ian Chuang,Knute Lingaard,Nicolas Brunie,,,,,,,,,,,,,61aaae1d9615eb006f5ff922,5e1374fb7a22c90da0c60495,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-12,,[TGV] fix performance correlation issues originating from RTL,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,grey,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00okn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Assertion failed: make sure we don't match tag on a source that's marked ready,[TGV] Assertion failed: don't match tag ,Execution Unit ,,,,MAL-2483,123586,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Highest,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,8/23/2022 8:36,9/7/2022 17:43,9/28/2022 0:51,8/30/2022 10:22,,,,,,,,,,,Panda DR,,RTL/RDU,,,,,,,,,0,TGV,,,"We see the below assertion failure from the ISSQueue block.

*Error Message*

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_189_test_fails/federation/builds2/coreip_p670/verilog/design/SiFive_IssQEntry_124.sv"", 650: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.issueQueues_1.entries_2: at time 4203542500 ps
assert failed (verification library): make sure we don't match tag on a source that's marked ready  @[MallardUtil.scala 605:20]
Fatal: ""/scratch/ishitashah/tgv_regression/sign_189_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_IssQEntry_124_assert.sv"", 122: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.issueQueues_1.entries_2.SiFive_IssQEntry_124_assert: at time 4203542500 ps{noformat}

*SHA:* [+b9d27d3+|https://simscope.internal.sifive.com/models/undefined--master--b9d27d37e8a94962aaacf37e71d7bc7e16997283]

*config:* coreip_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0133"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3054841124
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath*

{{gamma25:/scratch/ishitashah/tgv_regression/sign_189_test_fails/federation/builds2/coreip_p670/sim/rerundir1_iss/iss_rerun.outline/sting_StingSiFiveTuple_T_0133/sting/sifive/vector/vector_tgv_dev.conf}}",Andrew Hanselman,Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Ishita Shah,Jaksa Djordjevic,Nicolas Brunie,Srivatsa Yogendra,,,,,,,609d7e1f5998a6006800dcc5,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,607e26355431a500701f5aed,5e137307c578120daca51d52,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,23/Aug/22 1:11 PM;ug:03996552-4b14-4132-be2b-a08c9c621951;image-20220823-200953.png;https://sifive.atlassian.net/secure/attachment/76432/image-20220823-200953.png,24/Aug/22 8:44 PM;ug:03c2888a-5ac7-445d-b700-4a271a824946;image-20220825-033635.png;https://sifive.atlassian.net/secure/attachment/76488/image-20220825-033635.png,30/Aug/22 9:50 AM;ug:03c2888a-5ac7-445d-b700-4a271a824946;image-20220830-165039.png;https://sifive.atlassian.net/secure/attachment/76767/image-20220830-165039.png,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-30T14:17:27.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,5473aefc6e98c498d57535bbd36c8b1b7e5c2c9d,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00ok7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,11:41.9,"23/Aug/22 1:11 PM;5fd15143b4a74900763834e0;Would like [~accountid:609d7e1f5998a6006800dcc5] to look at this. The assertion fires because 2 I2V xfers write entry 1c in the S2V buffer. The first is gid 182 {{vrgather.vx v15, v12, a0}}, followed a few cycles later by gid 18f {{vsra.vx v8, v8, t2}}. As if that’s not bad enough, when I look at what actually gets to the I2V buffer, a totally different gid, 18a, is the one that causes the assertion.

Something funky is happening either in X2Y allocations and/or the IEX issue queue.

Work area is davidk2@gamma13:~/MAL-2482/builds/coreip_p670/sim/sim/MAL-2483.outline/sting_StingSiFiveTuple_T_0133/sting/sifive/vector/vector_tgv_dev.conf
Outline is in /work/nicolasb/tgv_bug_outlines/sting/MAL-2483.outline
Possibly-useful waves in ~davidk/waves/MAL-2483.rc

!image-20220823-200953.png|width=839,height=273!","24/Aug/22 8:44 PM;609d7e1f5998a6006800dcc5;!image-20220825-033635.png|width=1724,height=892!

The index assignment for colored buffers (S2V, V2S, Accum) actually occur in ID. Then it is staged down the pipeline. {{stallSelf_ID}} did not account for the alloc pointer of these buffers to have completely recovered before assigning a new index. {{s2vAllocPtr_REN}} is the flopped “tracking” version of the s2v pointer. Between the two cursors, it slowly ticks down as ROB rewind returns entries to this pointer. It is still actively rewinding while valid instructions enter ID and REN, meaning they were assigned incorrect values.

I’m testing out a lazy fix that just stalls ID whenever rob rewind is ongoing. But I’d like to tighten this a little to ignore the stall condition if no vector instructions are present or if all the colored buffer tracking pointers are non-speculative (might be harder to determine).","24/Aug/22 9:07 PM;609d7e1f5998a6006800dcc5;I have a hunch that these issues are caused by the same RTL bug, so I will check this fix against them if it works: [https://sifive.atlassian.net/browse/MAL-2471|https://sifive.atlassian.net/browse/MAL-2471|smart-link] [https://sifive.atlassian.net/browse/MAL-2493|https://sifive.atlassian.net/browse/MAL-2493|smart-link] ","25/Aug/22 4:02 AM;5fd15143b4a74900763834e0;Please also check [https://sifive.atlassian.net/browse/MAL-2482|https://sifive.atlassian.net/browse/MAL-2482|smart-link], which I thought was also related to 2483","29/Aug/22 9:53 AM;5a938e9c0913194d2d262658;Hey guys, any update on this issue? 

[~accountid:609d7e1f5998a6006800dcc5] did the fix work on the other issues as well?

Bumping up the priority. ",29/Aug/22 12:42 PM;609d7e1f5998a6006800dcc5;I do have this test passing now for this outline. Fine tuning a cover statement to identify the bug in all outlines that are suspected.,"30/Aug/22 9:47 AM;609d7e1f5998a6006800dcc5;Here’s an image identifying the bug and the fix. It occurs when there are valid instructions in ID and the allocPtr is still rewinding (decrements on clock edge). There is a cover in place now for this scenario. I think this bug actually only occurs in REN because the assignment actually happens there, so this stall may be a little too strict. I’ll continue to characterize this, but there is a fix in the PR merge pipeline now.

!image-20220830-165039.png|width=1482,height=403!",30/Aug/22 10:22 AM;609d7e1f5998a6006800dcc5;Possible performance impact: Adds an additional stall condition to ID. Will try to relax to REN if possible.,"30/Aug/22 10:53 AM;6065017e90e3950069cf01c5;Thanks [~accountid:609d7e1f5998a6006800dcc5] , feel free to flesh out [https://sifive.atlassian.net/browse/MAL-2521|https://sifive.atlassian.net/browse/MAL-2521|smart-link]  with “relaxation”/optimization ideas ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion failed: Physical register 28 set as ready twice (only first conflicting id shown),[TGV] Assertion failed: Physical register ,,,,,MAL-2482,123585,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Highest,Duplicate,Andrew Hanselman,609d7e1f5998a6006800dcc5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,8/23/2022 8:25,9/7/2022 17:43,9/28/2022 0:51,9/1/2022 7:06,,,,,,,,,,,Panda DR,,RTL/RDU,,,,,,,,,0,TGV,,,"We see the below assertion failure 

*Error message* 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_189_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_PRA_7_assert.sv"", 141: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.s2vPra.SiFive_PRA_7_assert: at time 4624082500 ps
Assertion failed: Physical register 28 set as ready twice (only first conflicting id shown)
    at PRF.scala:84 assert(!(readyVec.asUInt & setVec).orR, ""Physical register %%d set as ready twice (only first conflicting id shown)"", firstRegSetTwice)
Fatal: ""/scratch/ishitashah/tgv_regression/sign_189_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_PRA_7_assert.sv"", 143: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.s2vPra.SiFive_PRA_7_assert: at time 4624082500 ps{noformat}

*SHA:* [+b9d27d3+|https://simscope.internal.sifive.com/models/undefined--master--b9d27d37e8a94962aaacf37e71d7bc7e16997283]

*config:* coreip_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0153"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2329236631
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath*

{{gamma25:/scratch/ishitashah/tgv_regression/sign_189_test_fails/federation/builds2/coreip_p670/sim/rerundir1_pra/pra_rerun.outline/sting_StingSiFiveTuple_T_0153/sting/sifive/vector/vector_tgv_dev.conf}}",Andrew Hanselman,David Kravitz,Ishita Shah,Naveen Rathore,Srivatsa Yogendra,,,,,,,,,,,609d7e1f5998a6006800dcc5,5fd15143b4a74900763834e0,607e26355431a500701f5aed,6235105a3eacc50071ff07ec,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,23/Aug/22 1:25 PM;ug:03996552-4b14-4132-be2b-a08c9c621951;Screen Shot 2022-08-23 at 4.25.34 PM.png;https://sifive.atlassian.net/secure/attachment/76434/Screen+Shot+2022-08-23+at+4.25.34+PM.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-30T14:17:27.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,a182859a8ecd151cff7557fd36b4e9c1727679f6,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,No,,,,,,,,,,,,2|i00ojz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,27:15.0,"23/Aug/22 1:27 PM;5fd15143b4a74900763834e0;Based on waves, this looks like a duplicate of [https://sifive.atlassian.net/browse/MAL-2483|https://sifive.atlassian.net/browse/MAL-2483|smart-link]. Will leave it open for now so that whatever is fixed there can be tested with this outline (already in /work/nicolasb/...), too.","30/Aug/22 5:37 AM;6235105a3eacc50071ff07ec;41 Sting tests are failing with this signature.
Increased priority to Highest","31/Aug/22 11:58 PM;607e26355431a500701f5aed;After merging the fix given in [https://github.com/sifive/federation/pull/25695|https://github.com/sifive/federation/pull/25695|smart-link] 

We still have this error in the latest regression.

Shall we file another ticket for that?",01/Sep/22 12:14 AM;5a938e9c0913194d2d262658;Seems like Andrew is still lol into it. Let’s wait for him to close the ticket ,"01/Sep/22 7:05 AM;609d7e1f5998a6006800dcc5;Yeah. It looks like this is an alternative failure mode of the bug from 2483 [https://sifive.atlassian.net/browse/MAL-2483|https://sifive.atlassian.net/browse/MAL-2483|smart-link]. I’ll close this.

[https://github.com/sifive/federation/pull/25695|https://github.com/sifive/federation/pull/25695|smart-link] was not enough to correct all RTL failures. [https://github.com/sifive/federation/pull/25753|https://github.com/sifive/federation/pull/25753|smart-link] is also required to fix some failures with this signature (it is an improvement to PR 25695).",01/Sep/22 7:08 AM;609d7e1f5998a6006800dcc5;[~accountid:607e26355431a500701f5aed] Could you check you current regression failures with the same signature with this fix applied [https://github.com/sifive/federation/pull/25753|https://github.com/sifive/federation/pull/25753|smart-link] ?,"01/Sep/22 8:20 AM;5fd15143b4a74900763834e0;I ran 300 Sting tests overnight off of master, and didn’t see any failures like this. Still have 4 ROB cmplCnt underflow asserts to track down, but think this one can probably be closed.",01/Sep/22 10:11 AM;5a938e9c0913194d2d262658;Awesome thanks [~accountid:5fd15143b4a74900763834e0] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Vex PRF write should only be enabled for a valid result,[TGV] Vex PRF write ,Execution Unit ,Vex Pipe,,,MAL-2481,123576,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Kira Tsao,5e1a4f5ec578120daca5ff8e,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,8/23/2022 6:03,9/7/2022 17:43,9/28/2022 0:51,8/25/2022 7:38,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"We see the below error from VexPipe block

*Error Message* 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_189_test_fails/federation/builds2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", 536: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_0.SiFive_VexPipe_assert: at time 4537462500 ps
Assertion failed: Vex PRF write should only be enabled for a valid result

    at VexPipe.scala:2031 assert(!(io.rfWriteReq_WB(i).valid && !instValid_WB(i)), ""Vex PRF write should only be enabled for a valid result"")


Fatal: ""/scratch/ishitashah/tgv_regression/sign_189_test_fails/federation/builds2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", 538: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_0.SiFive_VexPipe_assert: at time 4537462500 ps{noformat}

*SHA  :* [+b9d27d3+|https://simscope.internal.sifive.com/models/undefined--master--b9d27d37e8a94962aaacf37e71d7bc7e16997283]

*config:* coreip_u8_minimal_vector

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0085"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2200683896
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Dumppath

{{gamma25:/scratch/ishitashah/tgv_regression/sign_189_test_fails/federation/builds2/coreip_u8_minimal_vector/sim/rerundir1_vex/vex_rerun.outline/sting_StingSiFiveTuple_T_0085/sting/sifive/vector/vector_tgv_dev.conf}}",David Kravitz,Ishita Shah,Kira Tsao,Srivatsa Yogendra,,,,,,,,,,,,5fd15143b4a74900763834e0,607e26355431a500701f5aed,5e1a4f5ec578120daca5ff8e,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00oif:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,53:20.6,23/Aug/22 6:53 AM;5fd15143b4a74900763834e0;Assigning to [~accountid:5e1a4f5ec578120daca5ff8e] for further triage.,"24/Aug/22 9:06 PM;5e1a4f5ec578120daca5ff8e;This issue a duplicated of [https://sifive.atlassian.net/browse/MAL-2468|https://sifive.atlassian.net/browse/MAL-2468|smart-link] and should be resolved in current mater. 

[comment|https://sifive.atlassian.net/browse/MAL-2468?focusedCommentId=384773]:

{quote}Issue is that the kill for the injected tag at `ISS` is affecting the tag staged from {{ISS}} to {{RR}} (which is staged because corresponding to LLP, so not ready from injection yet, so no actual tag broadcast conflict){quote}

From the waveform I saw the similar thing within above ticket, and this time it’s causing by {{permEngMod}} instead of {{LLP}}

I applied [~accountid:6065017e90e3950069cf01c5] 's fix([PR-25507|https://github.com/sifive/federation/pull/25507/files]) and confirm this issue can be resolved by running same {{rerun.outline}}. I think we can closed this issue if [~accountid:607e26355431a500701f5aed] double check that current master can passed the test.","25/Aug/22 3:56 AM;5fd15143b4a74900763834e0;A better confirmation than running against current master is what (sounds like) you already did: cherry-pick the existing fix and see it resolves the issue. If that’s the case, you should close this as duplicate.",25/Aug/22 4:07 AM;5e1a4f5ec578120daca5ff8e;[~accountid:5fd15143b4a74900763834e0] yeah that’s the thing I did.,25/Aug/22 7:38 AM;5e1a4f5ec578120daca5ff8e;Closed as a duplicated issue of https://sifive.atlassian.net/browse/MAL-2468,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]:: COSIM vs RTL PC mismatch,[TGV]:: COSIM vs RTL PC mismatch,,,,,MAL-2480,123565,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Abhishek Kumar,620ee634a715c6006914e852,Abhishek Kumar,620ee634a715c6006914e852,8/23/2022 2:51,9/7/2022 17:43,9/28/2022 0:51,8/26/2022 7:01,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error::*
\[COSIM-ERROR]\[0] COSIM VS RTL PC MISMATCH
\[COSIM-ERROR]\[0] m_dut_inst_item: \[300922] InstInfo: VLD=1 | PC=0x0000000020608794 | INSN=0x5208ad57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r26=0x0000_0003_0000_0002_0000_0001_0000_0000 mask=0000ffff | READY=1 | CSR_TIMER=300922 | PRV=3 | MSTATUS=0x8000000a000066aa | MTVEC=0x0000000080000400 | MCAUSE
=0x0000000000000002 | VSTART=0 | VL=4 | SEW=32 | LMUL=m1 | VSEGELT=0
\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x0000000020608798 | INSN=0x5208ad57 | INST_DST=INT | REDUCTION = false | WR: en=true r24=0x0000_0000_2060_872d mask=00ff

*Debug-Trace::* 
In Cosim::
core   0: 0x000000008002135e (0x00007ca2) c.ldsp  s9, 40(sp)
core   0: 3 0x000000008002135e (0x7ca2) x25 0x0000000000000001 mem 0x0000000080c08ec0-0x0000000080c08ec0

core   0: 0x000000002060854e (0xc23affd3) fcvt.lu.d t6, fs5
core   0: 3 0x000000002060854e (0xc23affd3) x31 0x0000000000000000

core   0: 0x0000000020608790 (0x019fc463) blt     t6, s9, pc + 8
core   0: 3 0x0000000020608790 (0x019fc463)
core   0: 0x0000000020608798 (0x00001c55) c.addi  s8, -11
core   0: 3 0x0000000020608798 (0x1c55) x24 0x000000002060872d


In Design::

C                   0:     300919 \[1] pc=\[0000000020608790] W\[r 0=0000000000000000]\[0] R\[r31=0000000000000000] R\[r25=0000000000000000] inst=\[019fc463] blt     t6, s9, pc + 8
C                   0:     300911 vrf\[11]=\[00000000000000000000000000000000]\[ffff]
C                   0:     300916 vrf\[14]=\[7fc000007fc000007fc000007fc00000]\[ffff]
C                   0:     300917 vrf\[ 2]=\[80000000800000008000000080000000]\[ffff]
Error: Instruction-by-Instruction check failed
Error: Instruction-by-Instruction check failed
Error: Instruction-by-Instruction check failed
Error: Instruction-by-Instruction check failed
Error: Instruction-by-Instruction check failed
C                   0:     300922 \[1] pc=\[0000000020608794] W\[r 0=0000000000000000]\[0] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[5208ad57] vid.v   v26
C                   0:     300922 \[1] pc=\[0000000020608798] W\[r24=000000002060872d]\[1] R\[r24=0000000020608738] R\[r 0=0000000000000000] inst=\[00001c55] c.addi  s8, -11



*SHA1::* {{47491f27211d9bbdc69bb062d253432e98a8d8f6}}

*Config::* coreip_u8_minimal_vector

*Waves Path::*
verif04::///scratch/abhishekk/vector_debug/federation/builds/coreip_u8_minimal_vector/sim/rerundir1/rerun.outline/sting_StingSiFiveTuple_T_0126/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb

*rerun.outline::*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0126"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 240461661
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Abhishek Kumar,David Kravitz,Josh Smith,Kira Tsao,Nicolas Brunie,,,,,,,,,,,620ee634a715c6006914e852,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26/Aug/22 12:53 AM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220826-074343.png;https://sifive.atlassian.net/secure/attachment/76598/image-20220826-074343.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb --rundir=rerundir1 --local,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-26T06:37:51.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00ofz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,02:56.0,"23/Aug/22 3:02 PM;5fd15143b4a74900763834e0;[~accountid:5acffeafaa802f2a797a955c], I could not figure out why the branch went the wrong way. The vector unit doesn’t seem to be involved in any of the relevant values as far as I can tell. Bouncing to you for a look.","23/Aug/22 3:22 PM;5acffeafaa802f2a797a955c;The branch that is diverging is this one:

{noformat}core   0: 0x0000000020608790 (0x019fc463) blt     t6, s9, pc + 8{noformat}

It looks like cosim is expecting {{t6}} to be 0x0, and {{s9}} to be 0x1.  From the RTL retirement log {{s9}} has the value of 0x0

The previous write to {{s9}} is:

{noformat}C                   0:     299913 [1] pc=[000000008002135e] W[r25=0000000000000000][1] R[r 2=0000000080c08e98] R[r 0=0000000000000000] inst=[00007ca2] c.ldsp  s9, 40(sp){noformat}

I’m not sure why cosim is not flagging this as a register mismatch… 

Looking further back, the 0x1 that cosim is expecting appears to be originating from this instruction:

{noformat}C                   0:     299309 [1] pc=[0000000020608510] W[r25=0000000000000000][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00906cf3] csrrsi  s9, vxsat, 0{noformat}

Cosim is expecting the {{csrrsi}} to return 0x1, but RTL is returning 0x0.  So it looks like a mismatch on {{vxsat}}","23/Aug/22 3:26 PM;5acffeafaa802f2a797a955c;[~accountid:5fd15143b4a74900763834e0] I think someone else is going to have to track down the {{vxsat}} difference.

But the {{csrrsi}} instruction dispatches with gid 0x0 in cycle 299,289.",23/Aug/22 3:32 PM;5fd15143b4a74900763834e0;Thanks for isolating. Will have [~accountid:5e1a4f5ec578120daca5ff8e] look into that,"26/Aug/22 12:53 AM;5e1a4f5ec578120daca5ff8e;This issue is causing by the inst: {{vnclip.wi v29, v6, 11}} at cycle 299057, it is the last vector instruction that update {{vxsat}}.

From the waveform we can see the output value {{io_vxsat}} of {{intnarrowmod}} is correct, but after mask/reduce OR it become false

And this incorrect result has been update into csr.

!image-20220826-074343.png|width=1524,height=178!

Here’s the simulation log, I pointed out the instructions with {{<--}}, and I agree with [~accountid:5acffeafaa802f2a797a955c] that cosim should also raise data mismatch at {{csrrsi  s9, vxsat, 0}} at this point but it doesn’t.

{noformat}299057 [1] pc=[00000000400e257e] W[r 0=0000000000000000][0] R[r24=00000000448fb90f] R[r 0=0000000000000000] inst=[a71c6e57] vmadd.vx v28, v17, s8
299057 [1] pc=[00000000400e2582] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[be65bed7] vnclip.wi v29, v6, 11  <-- Incorrect vxsat set
299057 [1] pc=[00000000400e2586] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[86a6a6d7] vdiv.vv v13, v10, v13
299057 [1] pc=[00000000400e258a] W[r 2=0000000080c09e40][1] R[r 2=0000000080c09e48] R[r 0=0000000000000000] inst=[ff810113] addi    sp, sp, -8
299057 [1] pc=[00000000400e258e] W[r 0=0000000000000000][0] R[r 2=0000000080c09e40] R[r10=0000000080c0a244] inst=[00a13023] sd      a0, 0(sp)
299048 vrf[28]=[b8d7246d83c0e76cbc47fd88ce8777f5][ffff]
299043 vrf[29]=[00000000012000008000000080000000][ffff]
299055 vrf[13]=[00000000000000000000000000000000][ffff]
299097 [1] pc=[00000000400e2592] W[r10=00000000400e2592][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00000517] auipc   a0, 0x0
299097 [1] pc=[00000000400e2596] W[r10=00000000400e25a8][1] R[r10=00000000400e2592] R[r 0=0000000000000000] inst=[01650513] addi    a0, a0, 22
299097 [1] pc=[00000000400e259a] W[r10=00000000400e25b8][1] R[r10=00000000400e25a8] R[r 0=0000000000000000] inst=[00053503] ld      a0, 0(a0)
299097 [1] pc=[00000000400e259e] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[0120006f] j       pc + 0x12
299143 [1] pc=[00000000400e25b0] W[r10=00000000206084f0][1] R[r10=00000000400e25b8] R[r 0=0000000000000000] inst=[00053503] ld      a0, 0(a0)
299145 [1] pc=[00000000400e25b4] W[r 0=0000000000000000][0] R[r10=00000000206084f0] R[r 0=0000000000000000] inst=[00050067] jr      a0
299230 [1] pc=[00000000206084f0] W[r10=0000000080c0a244][1] R[r 2=0000000080c09e40] R[r 0=0000000000000000] inst=[00013503] ld      a0, 0(sp)
299302 [1] pc=[00000000206084f4] W[r 2=0000000080c09e48][1] R[r 2=0000000080c09e40] R[r 0=0000000000000000] inst=[00810113] addi    sp, sp, 8
299302 [1] pc=[00000000206084f8] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[4a531dd7] vfcvt.rtz.xu.f.v v27, v5
299302 [1] pc=[00000000206084fc] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[52e12457] vmsof.m v8, v14
299302 [1] pc=[0000000020608500] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[9fc030d7] vmv1r.v v1, v28
299302 [1] pc=[0000000020608504] W[r 0=0000000000000000][0] R[r11=fffffffff97c73df] R[r 0=0000000000000000] inst=[c2b5e657] vwaddu.vx v12, v11, a1
299302 [1] pc=[0000000020608508] W[r25=00000000448fbd68][1] R[r24=00000000448fb90f] R[r 0=0000000000000000] inst=[467c4c93] xori    s9, s8, 1127
299302 [1] pc=[000000002060850c] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[0e4b3cd7] vrsub.vi v25, v4, -10
299230 vrf[27]=[00000000000000000000000000000000][ffff]
299229 vrf[ 8]=[be688b7d8d88827dde7ccadfbe1bcef0][ffff]
299293 vrf[ 1]=[b8d7246d83c0e76cbc47fd88ce8777f5][ffff]
299300 vrf[12]=[00000001793c73df00000001793c73df][ffff]
299300 vrf[13]=[00000001793c73df00000001793c73df][ffff]
299296 vrf[25]=[ce3ffff6ce3ffff6ce3ffff6cdfffff6][ffff]
299309 [1] pc=[0000000020608510] W[r25=0000000000000000][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00906cf3] csrrsi  s9, vxsat, 0 <-- Cosim doesn't raise data mismatch{noformat}","26/Aug/22 3:49 AM;5acffeafaa802f2a797a955c;{quote}From the waveform we can see the output value {{io_vxsat}} of {{intnarrowmod}} is correct, but after mask/reduce OR it become false{quote}

Okay, so you think this is a design bug?  Which part of the RTL looks wrong?","26/Aug/22 3:54 AM;5e1a4f5ec578120daca5ff8e;[~accountid:5acffeafaa802f2a797a955c] Yes, the incorrect stage info has been use for vnclip instruction. I created a PR for fixing

[https://github.com/sifive/federation/pull/25625|https://github.com/sifive/federation/pull/25625]",26/Aug/22 4:38 AM;5e1a4f5ec578120daca5ff8e;[~accountid:5fd15143b4a74900763834e0] [~accountid:6065017e90e3950069cf01c5] should we involve DV members that cosim was not alert for these cases?,"26/Aug/22 5:03 AM;5fd15143b4a74900763834e0;It’s worth letting them know, but don’t expect a resolution soon. I suspect dealing with CSRs could be complicated.",26/Aug/22 5:17 AM;6065017e90e3950069cf01c5;I don’t think CSR are check tightly during cosim but I will be interested by some details on this.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] prevent grouping for vector instructions with LMUL >= 4,,,,,,MAL-2479,123564,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/23/2022 2:50,8/29/2022 10:52,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/Top,,,,,,,,,0,,,,"To reduce pressure on vector physical register allocation/free in each ROB group

Josh’s comment: [https://sifive.atlassian.net/browse/MAL-2428?focusedCommentId=384779|https://sifive.atlassian.net/browse/MAL-2428?focusedCommentId=384779|smart-link] ",Alexandre Solomatnikov,David Kravitz,Josh Smith,Knute Lingaard,Nicolas Brunie,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,5e1374fb7a22c90da0c60495,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-29T09:53:37.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,,,,,,,,,,,,,2|i00ofr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,40:47.6,"23/Aug/22 7:40 AM;5e1374fb7a22c90da0c60495;CC: [~accountid:61aaae1d9615eb006f5ff922] , [~accountid:5e49f622a17f930c9b94b6cd] , [~accountid:5e137458efa19b0e976b5c7a] ",24/Aug/22 5:11 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;[https://github.com/sifive/federation/pull/25533#issuecomment-1226617974|https://github.com/sifive/federation/pull/25533#issuecomment-1226617974],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] Mask FreeList stall / ROB hang due to vector mask PRF Freelist exhaustion,[TGV] Mask FreeList stall / ROB hang vector mask PRF Freelist exhaustion,Instruction decode and dispatch ,,,,MAL-2478,123554,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Ian Chuang,61aaae1d9615eb006f5ff922,Ian Chuang,61aaae1d9615eb006f5ff922,8/23/2022 0:15,9/27/2022 3:05,9/28/2022 0:51,9/8/2022 10:46,,,,,,,,,,,Panda DR,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"Similar to [https://sifive.atlassian.net/browse/MAL-2428|https://sifive.atlassian.net/browse/MAL-2428|smart-link]. A back-to-back mask layout instruction sequence is likely to exhaust Freelist and ROB won’t retire to release the mask PRs because the instruction to end the entry hasn’t come. The pattern is like 

{noformat}# with LMUL 1, SEW 64, VL max
vmsne.vv v0, v0, v0
vmsne.vv v0, v0, v0
vmsne.vv v0, v0, v0{noformat}

Waveform: {{/scratch/ianc/study/0080/188/rtl/waves.fsdb on verif04 }}

Command to reproduce: {{/work/sparta/scripts/run_rtlsim.sh -v latest -c p67 -p 0080/188 -s vcs -w}}",Andrew Hanselman,David Kravitz,Ian Chuang,I-Cheng Cheng,Josh Smith,Knute Lingaard,Nicolas Brunie,Zhen Wei,,,,,,,,609d7e1f5998a6006800dcc5,5fd15143b4a74900763834e0,61aaae1d9615eb006f5ff922,5d7bfdaa003e040c3e175060,5acffeafaa802f2a797a955c,5e1374fb7a22c90da0c60495,6065017e90e3950069cf01c5,5e49f622a17f930c9b94b6cd,,,,,,,,,,,,,,,,,,,,,,,,MAL-2556,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2428,MAL-2498,,,,,,,,,,23/Aug/22 12:09 AM;ug:289ae57a-9468-42e4-b3c7-1f69f2f4f10e;Snipaste_2022-08-23_15-09-40.png;https://sifive.atlassian.net/secure/attachment/76371/Snipaste_2022-08-23_15-09-40.png,24/Aug/22 8:56 PM;ug:289ae57a-9468-42e4-b3c7-1f69f2f4f10e;image-20220825-035048.png;https://sifive.atlassian.net/secure/attachment/76493/image-20220825-035048.png,24/Aug/22 8:56 PM;ug:289ae57a-9468-42e4-b3c7-1f69f2f4f10e;image-20220825-035254.png;https://sifive.atlassian.net/secure/attachment/76492/image-20220825-035254.png,24/Aug/22 8:56 PM;ug:289ae57a-9468-42e4-b3c7-1f69f2f4f10e;image-20220825-035457.png;https://sifive.atlassian.net/secure/attachment/76491/image-20220825-035457.png,24/Aug/22 11:56 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220825-065512.png;https://sifive.atlassian.net/secure/attachment/76499/image-20220825-065512.png,24/Aug/22 11:59 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220825-065901.png;https://sifive.atlassian.net/secure/attachment/76500/image-20220825-065901.png,25/Aug/22 8:31 AM;ug:289ae57a-9468-42e4-b3c7-1f69f2f4f10e;image-20220825-152851.png;https://sifive.atlassian.net/secure/attachment/76531/image-20220825-152851.png,25/Aug/22 8:31 AM;ug:289ae57a-9468-42e4-b3c7-1f69f2f4f10e;image-20220825-153101.png;https://sifive.atlassian.net/secure/attachment/76530/image-20220825-153101.png,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,32e58cb8d4449bad74bdaf11ec3790b329f8a385,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i00odj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,10:21.0,"23/Aug/22 5:10 AM;5fd15143b4a74900763834e0;[~accountid:61aaae1d9615eb006f5ff922], if this is similar – maybe even a duplicate – why is there a ticket for it?",23/Aug/22 7:45 AM;5e1374fb7a22c90da0c60495;Am curious if [https://sifive.atlassian.net/browse/MAL-2479|https://sifive.atlassian.net/browse/MAL-2479|smart-link] will address this too.,"23/Aug/22 8:29 AM;6065017e90e3950069cf01c5;I think we are providing superficial fixes for now, but we should properly consider the theoretical maximum physical resources allocated (e.g. by a ROB group) and make sure there are no deadlock condition associated.","23/Aug/22 9:19 AM;61aaae1d9615eb006f5ff922;[~accountid:5fd15143b4a74900763834e0], if we are going to limit the instruction number in a group when LMUL >=4, that will not address this issue since for those mask layout instructions it’s most likely to hang even when LMUL is 1. Microbenchmark 188 is a case. So, I am not sure if we’ll use a mechanism for both or 2 mechanisms for each one. ",23/Aug/22 12:36 PM;6065017e90e3950069cf01c5;[~accountid:61aaae1d9615eb006f5ff922]  could you list the sequence of mask layout instructions that is likely to exhaust the freelist ?,"23/Aug/22 7:10 PM;61aaae1d9615eb006f5ff922;[~accountid:6065017e90e3950069cf01c5], just added to the description. ",24/Aug/22 12:25 AM;6065017e90e3950069cf01c5;wasting 128 bits to write 2-bit results …,"24/Aug/22 12:26 AM;6065017e90e3950069cf01c5;I found it strange that the freelist is the main issue here, those instructions are not going to use more than 1 PR each, even if it is in the {{v0}} pool, there should be plenty enough for a ROB group.","24/Aug/22 8:56 PM;61aaae1d9615eb006f5ff922;There are only 6 PRs for the {{v0}} pool after reset (10 PRs seem to be allocated in advance, not sure why). 

!image-20220825-035048.png|width=91.66666666666666%!

After dispatching, some of the mask compare instructions are allocated to the ROB entries 154-156. 

!image-20220825-035254.png|width=91.66666666666666%!

And those entries are grouped and was waiting for all the instructions in the group to be completed and then they can retire. But it’s impossible since there are no more PRs. 

!image-20220825-035457.png|width=91.66666666666666%!

We might also need to limit the max count of mask layout instructions in a group. ","24/Aug/22 11:48 PM;6065017e90e3950069cf01c5;2 v0 registers are allocated on reset (I am not sure where you are seeing the 6, it seems freeVec has only 0 and 1 reserved when reset falls down).

It seems the number of physical v0 registers cannot be configured through JSON and is set to {{16}}","24/Aug/22 11:51 PM;6065017e90e3950069cf01c5;I think you meant 6 because freeVec is {{fc0}} shortly after reset, is that correct ?","24/Aug/22 11:56 PM;6065017e90e3950069cf01c5;!image-20220825-065512.png|width=1441,height=350!

I think the freeList is preparing (listing index) for allocation and that freeVec does not reflect the full list of available registers, or there is an issue.","24/Aug/22 11:59 PM;6065017e90e3950069cf01c5;!image-20220825-065901.png|width=1268,height=629!",24/Aug/22 11:59 PM;6065017e90e3950069cf01c5;[~accountid:61aaae1d9615eb006f5ff922] could you check the values of the {{prAllocValid_*}} signals when the {{v0}} pool stall occurs ?,"25/Aug/22 8:31 AM;61aaae1d9615eb006f5ff922;[~accountid:6065017e90e3950069cf01c5] 

{quote}I think you meant 6 because freeVec is {{fc0}} shortly after reset, is that correct ?{quote}

Yes. I missed the {{0xfc0}} value… 

!image-20220825-152851.png|width=1167,height=74!

{quote}I think the freeList is preparing (listing index) for allocation and that freeVec does not reflect the full list of available registers{quote}

What do you mean by “listing index“? 

{quote}could you check the values of the {{prAllocValid_*}} signals when the {{v0}} pool stall occurs ?{quote}

!image-20220825-153101.png|width=1086,height=190!","25/Aug/22 8:38 AM;5acffeafaa802f2a797a955c;{quote}What do you mean by “listing index“?{quote}

If you look at {{prAlloc*}} registers, and {{prAllocValid*}} is high, then those registers are _also_ free.  {{freeVec}} does not tell you _all_ of the free registers.  This is because we take one cycle to pick PR indexes out of {{freeVec}}, and then place the index into the {{prAlloc*}} registers.  So you have to look at both {{freeVec}} and the {{prAlloc*}} registers.

The FreeList stall happens when {{prAllocValid}} is low, not when {{freeVec}} is all zeros.","25/Aug/22 8:54 AM;5acffeafaa802f2a797a955c;I think we’re also over-designing the mask free list.  We configured it to provide up to 8 renames per cycle.  This means that if we ever get to only having < 8 free PRs, then rename will stall.

I think we only need to allocate up to 4 registers per cycle, not 8.  This would mean that we’ll only stall if there are < 4 free PRs.","25/Aug/22 9:21 AM;6065017e90e3950069cf01c5;You are right Josh I think no 2 consecutive rename lanes can target the same architectural registers, which also means only at most 4 of them will target {{v0}}.",25/Aug/22 1:35 PM;6065017e90e3950069cf01c5;logged as [https://sifive.atlassian.net/browse/MAL-2498|https://sifive.atlassian.net/browse/MAL-2498|smart-link] ,"04/Sep/22 11:04 AM;5fd15143b4a74900763834e0;Now that [https://sifive.atlassian.net/browse/MAL-2498|https://sifive.atlassian.net/browse/MAL-2498|smart-link] has been done, should this ticket be resolved/closed?",04/Sep/22 12:38 PM;6065017e90e3950069cf01c5;I am re-running the test on {{latest}} to check the new status.,"06/Sep/22 12:13 AM;6065017e90e3950069cf01c5;Test still fails with an assert 

{noformat}Error: ""/scratch/jenkins/archived-builds/performance-regression/score_guard_pcs/515/builds/coreip_p670/verilog/design/SiFive_RDU.sv"", 6379: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu: at time 2278322500 psassert failed (verification library): stall_REN Hang  @[RDU.scala 1409:9]
Fatal: ""/scratch/jenkins/archived-builds/performance-regression/score_guard_pcs/515/builds/coreip_p670/verilog/design/assertions/SiFive_RDU_assert.sv"", 772: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.SiFive_RDU_assert: at time 2278322500 ps
$finish called from file ""/scratch/jenkins/archived-builds/performance-regression/score_guard_pcs/515/builds/coreip_p670/verilog/design/assertions/SiFive_RDU_assert.sv"", line 772.{noformat}","06/Sep/22 2:20 AM;5fd15143b4a74900763834e0;Please file that as a new bug, and seems like [~accountid:609d7e1f5998a6006800dcc5] should get a first look at it",06/Sep/22 7:14 AM;6065017e90e3950069cf01c5;cloned as [https://sifive.atlassian.net/browse/MAL-2556|https://sifive.atlassian.net/browse/MAL-2556|smart-link]  with next error,08/Sep/22 10:46 AM;609d7e1f5998a6006800dcc5;The test fully completes now with changes from [https://sifive.atlassian.net/browse/MAL-2556|https://sifive.atlassian.net/browse/MAL-2556|smart-link]. ,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion ROB: ROB cmplCnt underflow on entry,[TGV] Assertion ROB: ROB cmplCnt underflow,Instrcution decode and dispatch ,Scalar ROB,,,MAL-2477,123551,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Highest,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,8/22/2022 23:22,9/7/2022 17:43,9/28/2022 0:51,8/31/2022 13:22,,,,,,,,,,,Panda DR,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"We see below assertion failure from the ROB block.

Error message 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_188_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_ROB_assert.sv"", 9740: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert_0: at time 3205222500 ps
assert failed (verification library): ROB cmplCnt underflow on entry 137  @[ROB.scala 637:11]

Fatal: ""/scratch/ishitashah/tgv_regression/sign_188_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_ROB_assert.sv"", 9749: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert_0: at time 3205222500 ps{noformat}

The last instruction which was executed is *vfnmacc.vv* 

*RTL CODE*

{noformat}C0: 160141 [1] pc=[00000004000804c6] W[r 0=0000000000000000][0] R[r 6=0000000000000004] R[r 0=0000000000000000] inst=[f6836557] vwmacc.vx v10, v8, t1
C0: 160141 [1] pc=[00000004000804ca] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[b6e61457] vfnmacc.vv v8, v14, v12
C0: 160141 [1] pc=[00000004000804ce] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[fb1ff06f] j       pc - 0x50{noformat}

*SHA:* [+5a43f96+|https://simscope.internal.sifive.com/models/undefined--master--5a43f9648654ed9d2a7c246485cb4076be299b28]

*config:* coreip_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0272"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1999776889
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath*

{{gamma25:/scratch/ishitashah/tgv_regression/sign_188_test_fails/federation/builds2/coreip_p670/sim/rerundir1_rob/rob_rerun.outline/sting_StingSiFiveTuple_T_0272/sting/sifive/vector/vector_tgv_dev.conf}}

*asm.txt* 

{{gamma25:/scratch/ishitashah/tgv_regression/sign_188_test_fails/federation/builds2/coreip_p670/sim/rerundir1_rob/rob_rerun.outline/sting_StingSiFiveTuple_T_0272/sting/sifive/vector/vector_tgv_dev.conf/asm.txt}}

*temp.dasm* 

gamma25:/scratch/ishitashah/tgv_regression/sign_188_test_fails/federation/builds2/coreip_p670/sim/rerundir1_rob/rob_rerun.outline/sting_StingSiFiveTuple_T_0272/sting/sifive/vector/vector_tgv_dev.conf/temp.dasm",Andrew Hanselman,Ishita Shah,Kira Tsao,Naveen Rathore,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,609d7e1f5998a6006800dcc5,607e26355431a500701f5aed,5e1a4f5ec578120daca5ff8e,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29/Aug/22 1:41 AM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220829-083311.png;https://sifive.atlassian.net/secure/attachment/76685/image-20220829-083311.png,29/Aug/22 6:47 AM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220829-134637.png;https://sifive.atlassian.net/secure/attachment/76707/image-20220829-134637.png,29/Aug/22 7:24 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220829-142356.png;https://sifive.atlassian.net/secure/attachment/76708/image-20220829-142356.png,29/Aug/22 7:57 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220829-144614.png;https://sifive.atlassian.net/secure/attachment/76716/image-20220829-144614.png,29/Aug/22 7:57 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220829-145655.png;https://sifive.atlassian.net/secure/attachment/76717/image-20220829-145655.png,30/Aug/22 9:44 PM;ug:03c2888a-5ac7-445d-b700-4a271a824946;image-20220831-044407.png;https://sifive.atlassian.net/secure/attachment/76818/image-20220831-044407.png,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-08-31T13:25:53.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,a182859a8ecd151cff7557fd36b4e9c1727679f6,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i00ocv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,16:58.5,"28/Aug/22 10:14 PM;607e26355431a500701f5aed;HI, [~accountid:5e1a4f5ec578120daca5ff8e] any update on this?","28/Aug/22 11:16 PM;5e1a4f5ec578120daca5ff8e;The issue is similar to [https://sifive.atlassian.net/browse/MAL-2468|https://sifive.atlassian.net/browse/MAL-2468|smart-link]

I tried cherry-pick this commit and the test can run a very little more and it will hit another assertion.

{noformat}=== sitest found errors in test sim/rerun.outline/sting_StingSiFiveTuple_T_0272/sting/sifive/vector/vector_tgv_dev.conf:
Reset m_pl2_mmc_inner_agents  dc
Error: ""/scratch/kirat/nagoya/federation/builds/coreip_p670/verilog/design/assertions/SiFive_IssQEntry_108_assert.sv"", 71: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.issueQueues_0.entries_0.SiFive_IssQEntry_108_assert_0: at time 3207362500 ps
assert failed (verification library): make sure we don't match tag on a source that's marked ready  @[MallardUtil.scala 605:20]

Fatal: ""/scratch/kirat/nagoya/federation/builds/coreip_p670/verilog/design/assertions/SiFive_IssQEntry_108_assert.sv"", 80: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.issueQueues_0.entries_0.SiFive_IssQEntry_108_assert_0: at time 3207362500 ps

$finish called from file ""/scratch/kirat/nagoya/federation/builds/coreip_p670/verilog/design/assertions/SiFive_IssQEntry_108_assert.sv"", line 80.{noformat}","29/Aug/22 1:41 AM;5e1a4f5ec578120daca5ff8e;[~accountid:6065017e90e3950069cf01c5] , [~accountid:609d7e1f5998a6006800dcc5] 

I think the tag collision is happening in this case. While {{VexPipe_1}} is going to execute {{vnclipu.wi v12,v26,17}}, the v26 should be broadcast from {{vslideup.vi v26,v30,10}} which tag was already injected. But i2v transfer is going to inject the same tag again, so assertion raise in next cycle.

Here’s the waveform snapshot. And the {{wave.fsdb}} is available in

{{gamma25:/scratch/kirat/nagoya/federation/builds/coreip_p670/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0272/sting/sifive/vector/vector_tgv_dev.conf}}

!image-20220829-083311.png|width=1692,height=561!

Program.S

{noformat}000000040008047e <start_2_40_0_hv_0>:
start_2_40_0_hv_0():
   40008047e:	32a605d7          	vrgather.vv	v11,v10,v12
   400080482:	aae69557          	vfmsub.vv	v10,v13,v14
   400080486:	ab843c57          	vssrl.vi	v24,v24,8
   40008048a:	3be53d57          	vslideup.vi	v26,v30,10
   40008048e:	bba8b657          	vnclipu.wi	v12,v26,17 <== root cause of the assertion
   400080492:	00038283          	lb	t0,0(t2)
   400080496:	00f2f293          	andi	t0,t0,15
   40008049a:	00028c63          	beqz	t0,4000804b2 <skip_dec_3_40_f0_c0_748>
   40008049e:	fff28293          	addi	t0,t0,-1 # 1fff <rt_context_vuser-0x2047e001>
   4000804a2:	00538023          	sb	t0,0(t2)
   4000804a6:	c70e0857          	vwredsum.vs	v16,v16,v28
   4000804aa:	1646c857          	vmin.vx	v16,v4,a3
   4000804ae:	fd1ff06f          	j	40008047e <start_2_40_0_hv_0>

00000004000804b2 <skip_dec_3_40_f0_c0_748>:
skip_dec_3_40_f0_c0_748():
   4000804b2:	00138283          	lb	t0,1(t2)
   4000804b6:	00f2f293          	andi	t0,t0,15
   4000804ba:	00028c63          	beqz	t0,4000804d2 <skip_dec_3_40_f1_c0_749>
   4000804be:	fff28293          	addi	t0,t0,-1
   4000804c2:	005380a3          	sb	t0,1(t2)
   4000804c6:	f6836557          	vwmacc.vx	v10,t1,v8
   4000804ca:	b6e61457          	vfnmacc.vv	v8,v12,v14
   4000804ce:	fb1ff06f          	j	40008047e <start_2_40_0_hv_0>{noformat}","29/Aug/22 2:21 AM;6065017e90e3950069cf01c5;I am a bit confused, it seems the tag ready twice occurs in {{entries_0}} of {{issueQeues_0}} which should be in front of {{exPipes_0}}.

And it looks like {{func7=2e}} which means this is a possibly a {{vmv}} or a {{vmerge}}. Where is the {{vnclipu.wi}} conflicting ? are there multiple conflicts at the same time ?","29/Aug/22 6:47 AM;5e1a4f5ec578120daca5ff8e;Thanks for point out, that means I may be the wrong direction. I traced the {{entries_0}} of {{issueQeues_0}} and it looks like it’s a {{vmerge}} instruction. And it’s waiting for {{mulhu a1, a2, t1}}, which is been calculating in scalar {{exPipe_1}}(a1=0xb, a2=0xc, t1=0x6))

{noformat}00000004000804d2 <skip_dec_3_40_f1_c0_749>:
skip_dec_3_40_f1_c0_749():
   4000804d2:	026635b3          	mulhu	a1,a2,t1
   4000804d6:	f2030253          	fmv.d.x	ft4,t1
   4000804da:	5cd5c557          	vmerge.vxm	v10,v13,a1,v0
   4000804de:	00238283          	lb	t0,2(t2)
   4000804e2:	00f2f293          	andi	t0,t0,15{noformat}

!image-20220829-134637.png|width=1291,height=433!",29/Aug/22 7:22 AM;6065017e90e3950069cf01c5;Indeed It looks like the tag of src0 {{0x2014}} is matched by a tag coming from {{s2v}} ({{io_s2vPipeTag_0_)}}through {{io_expPipeTag_5_}} before being also received on {{io_exPipeTag_6}} which is connected to the second {{s2v}} pipe tag ({{io_s2vPipeTag_1_*}}),"29/Aug/22 7:24 AM;6065017e90e3950069cf01c5;!image-20220829-142356.png|width=1731,height=149!","29/Aug/22 7:57 AM;6065017e90e3950069cf01c5;!image-20220829-144614.png|width=1468,height=350!

!image-20220829-145655.png|width=1481,height=450!",29/Aug/22 8:42 AM;5e1a4f5ec578120daca5ff8e;Just found that [https://sifive.atlassian.net/browse/MAL-2472|https://sifive.atlassian.net/browse/MAL-2472|smart-link] maybe is a similar issue to this. Data comes from s2v path become incorrect after multiple same instructions loop.,"29/Aug/22 8:53 AM;6065017e90e3950069cf01c5;[~accountid:609d7e1f5998a6006800dcc5]  mentioned that there may be 

{quote}bad ID/REN index assigned to a S2V uop. Maybe add that to the list of failures caused by that bug{quote}","29/Aug/22 9:09 AM;6065017e90e3950069cf01c5;[~accountid:5e1a4f5ec578120daca5ff8e] , it looks like it is above our expertise, let’s let Andrew H. take a look.","29/Aug/22 10:48 PM;5e1a4f5ec578120daca5ff8e;[~accountid:609d7e1f5998a6006800dcc5] , to encounter the following issue, you need to apply [~accountid:6065017e90e3950069cf01c5] 's [fix|https://github.com/sifive/federation/pull/25507] to overcome {{ROB cmplCnt underflow}} issue first, and then you’ll get into this s2v issue with same {{rerun.outline}}.",30/Aug/22 8:30 AM;6235105a3eacc50071ff07ec;Increased priority to highest as ~30 failures related to this issue.,30/Aug/22 8:34 AM;609d7e1f5998a6006800dcc5;[~accountid:5e1a4f5ec578120daca5ff8e] Okay. I’m double checking with the [~accountid:6065017e90e3950069cf01c5]'s fix and with mine to make progress. I will update with success or next failure mode.,"30/Aug/22 8:35 AM;5e1a4f5ec578120daca5ff8e;-Test still failed after apply- [~accountid:609d7e1f5998a6006800dcc5] -'s- [-PR-|https://github.com/sifive/federation/pull/25695] -(And also- [~accountid:6065017e90e3950069cf01c5] -'s fix)-

-Same issue appear, a1 is getting incorrect data from s2v.-



Sorry [~accountid:609d7e1f5998a6006800dcc5] , above comment is for [https://sifive.atlassian.net/browse/MAL-2472|https://sifive.atlassian.net/browse/MAL-2472|smart-link]. For this issue, after apply your guys fix I am seeing this assertion:

{noformat}=== sitest found errors in test sim/rerun.outline/sting_StingSiFiveTuple_T_0272/sting/sifive/vector/vector_tgv_dev.conf:
Reset m_pl2_mmc_inner_agents  dc
Error: ""/scratch/kirat/karuizawa/federation/builds/coreip_p670/verilog/design/assertions/SiFive_PRA_7_assert.sv"", 161: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.s2vPra.SiFive_PRA_7_assert_0: at time 4838102500 ps
Assertion failed: Physical register 16 set as ready twice (only first conflicting id shown)

    at PRF.scala:84 assert(!(readyVec.asUInt & setVec).orR, ""Physical register %%d set as ready twice (only first conflicting id shown)"", firstRegSetTwice){noformat}","30/Aug/22 9:11 AM;609d7e1f5998a6006800dcc5;Okay. That looks like a similar failure mode to [https://sifive.atlassian.net/browse/MAL-2482|https://sifive.atlassian.net/browse/MAL-2482|smart-link]. I’ll try to characterize that behavior today. Might be related to a duplicate PRF assignment from the bank stealing: [https://sifive.atlassian.net/browse/MAL-2512|https://sifive.atlassian.net/browse/MAL-2512|smart-link]. Since we have resolved the original failure mode of this ticket, I will close after 2483 has merged and track via 2482.","30/Aug/22 9:44 PM;609d7e1f5998a6006800dcc5;So the [https://sifive.atlassian.net/browse/MAL-2483|https://sifive.atlassian.net/browse/MAL-2483|smart-link] fix didn’t account a flush which clears all vector instructions from the ROB. This causes {{io.hasV}} to be false while the vector rewind is still occurring. This sidesteps the fix I provided, and still causes a failure. Using {{vectorRewindOngoing}} should capture this additional corner case. 

!image-20220831-044407.png|width=2546,height=621!","31/Aug/22 6:48 AM;609d7e1f5998a6006800dcc5;Test passes completely with multiple fixes:

# [https://github.com/sifive/federation/pull/25507|https://github.com/sifive/federation/pull/25507|smart-link] 
# [https://github.com/sifive/federation/pull/25695|https://github.com/sifive/federation/pull/25695|smart-link] 
# [https://github.com/sifive/federation/pull/25753|https://github.com/sifive/federation/pull/25753|smart-link] ",31/Aug/22 9:42 AM;5e1a4f5ec578120daca5ff8e;[~accountid:609d7e1f5998a6006800dcc5] I’ll try your fix on MAL-2472 tomorrow and see if they can solve the issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] VectorLoadStoreSequencer to support index/mask/segmented load store,,,,,,MAL-2476,123548,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Won't Do,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,8/22/2022 21:43,9/23/2022 0:27,9/28/2022 0:51,9/9/2022 0:28,,,,,,,,,,,,,TGV_RTL/BAL,TGV_RTL/RDU,TGV_RTL/SEQ,,,,,,,0,,,,"* Support index/mask/segmented uop generation
* Sequence steps
*# Sequence all the index/mask uops
*# Restore VL
*# Sequence data uops
*#* Non-segmented: All the data uops
*#* Segmented: All the data uops, restore VL and repeat NF times (sub-optimal when LMUL<2, but the logic is simpler)

* Carry segment infos in uop (TBD)
** {{csid}}: lmul id, same as the regular uop to calculate the mask offset
** {{ovldImm}}: Encodes load store stage and “Current VD - Base VD”, used as the output index of the Segment Mux
** Note: Cannot label all segmented uops with their sequenced index, because index will change if VL is not VLMAX, and constant index number is critical to segment labeling",Brad Wu,,,,,,,,,,,,,,,62103777eb2978006893b778,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2209,,,MAL-2520,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"{repository={count=15, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":15,""lastUpdated"":""2022-09-08T13:09:19.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":15,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2209,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4,,,,,,,,,,,,,,,,,,,2|i00oc7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,09/Sep/22 12:28 AM;62103777eb2978006893b778;We decided to do the load store sequencing using the logic in VectorSequencer. The detailed indexed/segmented sequencing scheme is TBD.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
X-prop from L1dcTag/WayPred SRAM circuit model,X-prop from L1dcTag/WayPred SRAM circuit model,,,,,MAL-2475,123489,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Highest,Done,John Ingalls,5bb6808b9ba2930990f81895,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/22/2022 10:18,9/8/2022 14:03,9/28/2022 0:51,8/26/2022 23:34,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"Multiple people have reported that the Dhrystone simulations are never finishing (at least for P650) when running the PowerArtist flow outlined on this page: [https://sifive.atlassian.net/wiki/spaces/CIP/pages/1895695032/How+to+Run+PowerArtist|https://sifive.atlassian.net/wiki/spaces/CIP/pages/1895695032/How+to+Run+PowerArtist|smart-link] 

[~accountid:622a8208db58c100687dd15a] dumped an FSDB file here: iota06: /scratch/tsmc/cln7ff/pdtech/pa_runs/fed_20220818_p650_test2/build/p650_7nm_H240/SimulatorRun/Default/simOutput/waves.fsdb

I took a quick look at Mehul’s waveform, and it appears to be due to an x-prop issue in the LSU.  At some point in LSTPipe 0, {{lstr_valid_q}} is high but {{_lstr_l1dcWayPredResult_io_prevHitWayVec_T_8}} is X.  This is around time 64,278 ns

I’m pretty sure this was only caused recently by some changes to the L1D way prediction logic.",Binayak Tiwari,Colin Schmidt,John Ingalls,Josh Smith,Mallappa Koujalagi,Mehul Thakkar,Steffen Kunze,Swarnashri Chandrashekar,,,,,,,,60a963ed8cbda700681b40c1,608c619933d525006945bdcc,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,626058b81046bb0071de739b,622a8208db58c100687dd15a,62cbe3403d382dfc9c5f3078,6287f376f0302e0068bff30c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2191,,,,,,,,,,,,,,,,,,26/Aug/22 5:43 PM;John.Ingalls;Screen Shot 2022-08-26 at 2.49.04 PM.png;https://sifive.atlassian.net/secure/attachment/76662/Screen+Shot+2022-08-26+at+2.49.04+PM.png,23/Aug/22 6:03 PM;John.Ingalls;image-20220824-005959.png;https://sifive.atlassian.net/secure/attachment/76444/image-20220824-005959.png,26/Aug/22 6:00 PM;John.Ingalls;image-20220827-010025.png;https://sifive.atlassian.net/secure/attachment/76663/image-20220827-010025.png,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-27T01:21:30.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,CAT-D,,Non-RTL,"In the Mallard microarchitecture, we speculatively perform L1DC Tag and Way Predictor reads in parallel with checking whether we should use the result (i.e. not replayed).  Sometimes in simulation, these reads can be from an unknown address=X.  If the SRAM behavioral circuit model pessimistically inserts X's to all memory contents from this read, then these X's can propagate in the customer's simulation.",Low,"Mallard standard cores, if the customer SRAM behavioral model pessimistically models a ""read from addr=X"" as destructive to memory contents.",P500,,X-prop from L1dcTag or L1dcWayPred SRAM circuit model destructive read pessimism,"Modify the SRAM behavioral model not be so X-pessimistic, use a different SRAM, or set the JSON parameter spsramL1dcWayPredArray=false to not use a SRAM.",1. BRC: Should not Publish,,,,,,,,,,https://github.com/sifive/federation/pull/25654,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00nz3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,03:56.2,23/Aug/22 7:56 AM;5acffeafaa802f2a797a955c;[~accountid:622a930149c900007023d105] could you take a look at this when you have a chance?  It seems to be blocking PowerArtist runs at the moment.,"23/Aug/22 6:03 PM;5bb6808b9ba2930990f81895;I think this is a bug in the {{TS5N711ULVTA128X20M2W}} memory model, but I can’t trace through those internals Verilog.  Did those get updated recently?  I’m seeing a *_read_* {{addr=X}} causing the entire array to go to X.  I would’ve understood that from a write, but not a read.

!image-20220824-005959.png|width=880,height=140!

To look at waves with saved signals markers:

{noformat}ssh iota06
cd /scratch/tsmc/cln7ff/khondakarm/gits/master/federation/builds/coreip_p650
source load-modules
verdi -sswr /scratch/tsmc/cln7ff/johni/MAL-2475_LSU.rc -ssf /scratch/tsmc/cln7ff/pdtech/pa_runs/fed_20220818_p650_test2/build/p650_7nm_H240/SimulatorRun/Default/simOutput/waves.fsdb &{noformat}","26/Aug/22 5:43 PM;5bb6808b9ba2930990f81895;Collecting some snippets from the Slack thread [https://sifive.slack.com/archives/C01KD8J16SG/p1661184450258119|https://sifive.slack.com/archives/C01KD8J16SG/p1661184450258119|smart-link] here for posterity:



[~accountid:62cbe3403d382dfc9c5f3078] looked inside the memory model:

{quote}Looking at the memory model it treats address X same as address out of range and corrupts all data to X (which isn't great for power of 2 depth). Is there maybe a setting in the memory compiler that can change that behaviour?
A concern would be though that customers might use the same kind of pessimistic model in their gate level simulations and come back to us demanding to fix it.{quote}



[~accountid:622a8208db58c100687dd15a] shared this documentation:

!Screen Shot 2022-08-26 at 2.49.04 PM.png|width=602,height=462!

Row 12 is this case: a *read* with addr=X causes all memory contents to go to X, even into the future after this one transaction.  This is unfortunate, because in the Mallard microarchitecture, we speculatively perform L1DC Way Predictor reads in parallel with checking whether we should use the result (i.e. not replayed).  If we wanted to make _sure_ that Addr doesn’t go to X, that would require increasing our load-to-load hit latency from 3 cycles to 4 by un-setting the parameter {{fastLoadForwardToLdStAddress}}, or adding a timing path that I have no confidence that we could make to the way predictor read enable.  Another workaround is to build the L1dcWayPred array using flops by setting the parameter {{spsramL1dcWayPredArray=false}} as is already done in the Healdsburg config.



[~accountid:626058b81046bb0071de739b] points us towards this difference, and possible workaround, in the way muxing after [https://sifive.atlassian.net/browse/MAL-2191|https://sifive.atlassian.net/browse/MAL-2191|smart-link]:

{quote}When WayVec is zero, that means it’s not in any way. In this case defaulting it to 3 would mean it is in way 3. Isn’t that incorrect?{quote}

Functionally, it's fine, but the old behavior would have defaulted to way 0, which was less likely to be X than way 3, because we start cache allocations from way 0.

As a workaround, we could add a gate to squash the way muxed data to 0 when no ways are selected.","26/Aug/22 6:00 PM;5bb6808b9ba2930990f81895;Interestingly, only the L1dcWayPredictor {{TS5N711ULVTA128X20M2W}} array is affected in the waves below.  The L1dcTag array built from four {{TS1N7HSLVTA64X80M2WBCP}} memories does _not_ show this behavior, even with exactly the same inputs.  So even though this could affect past versions of Mallard, and I believe should equally affect both L1dcTag and L1dcWayPred memories, it _also_ depends on what memories the customer chooses\!  Fun.

!image-20220827-010025.png|width=1100,height=340!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]:: Assertion:: S2V Clock should be enabled (X-Prop on io_s2vClockEn),[TGV]:: Assertion:: S2V Clock ,Execution Unit ,Scalar to Vector ,,,MAL-2474,123467,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/22/2022 8:02,9/7/2022 17:43,9/28/2022 0:51,8/26/2022 12:22,,,,,,,,,,,,,RTL/Frontend,RTL/RDU,,,,,,,,0,TGV,,,"*Error:*
Error: ""/scratch/naveenr/aug-22/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_X2Y_assert.sv"", 74: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.x2y.SiFive_X2Y_assert: at time 396822500 ps
Assertion failed: While any scalar to vector incoming/active transfer, S2V Clock should be enabled

*Debug-Info::*
Xprop Initiated from IFU block.(Data read out from ICDataArray as 0xXX)

!image-20220822-145547.png|width=1460,height=449!

*SHA1::* ce62f3d2f571c45bdd0dd88f02bc198957198aa8
*Config:*:  coreip_u8_minimal_vector
*Waves:* gamma26:://scratch/naveenr/aug-22/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline_x2y_assert/t0000_lmul2/vector/vector_tests_gen/rvv_64/vslide1up.vx/waves.fsdb
*Rerun.outline::*
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""vector/vector_tests_gen/rvv_64"",
""raw_plusargs"": \[
""+enable_spike_cosim"",
""+MEM_ERROR_INJECT=._\.icTagArray.ext,1,0,32:._\.l2_tlb_ram_ext,1,0,32:.\.icDataArray._ext,1,0,25:._\.l1dcTagArray._ext,1,0,20:._\.cc_dir_ext,0,1,32:._\.cc_banks.ext,1,0,32:._\.icWayPredArray._ext,1,0,32:._\.l1dcDataArrayBank._ext,1,0,25:._\.TagRAM_ext,1,0,20:.\.RamBank.*ext,1,0,32"",
""+disable_ecc_correctable_asserts=1"",
""+verbose""
],
""subdir"": ""t0000_lmul2"",
""subtest"": ""vslide1up.vx"",
""enable_postsim_py_check"": false,
""generator_args"": ""vslide1up.vx_Mask-7_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_NoSelfCheck-0_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-2_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
""seed"": {
""value"": 3895147155
},
""sim"": {
""vendor"": ""vcs""
},
""waves"": {
""dumper"": ""fsdb""
},
""xprop"": {
""enable"": true
},
""program"": {
""env"": ""abi""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",David Kravitz,Josh Smith,Naveen Rathore,Srivatsa Yogendra,,,,,,,,,,,,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,6235105a3eacc50071ff07ec,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,22/Aug/22 8:02 AM;ug:00e334db-2e60-4fae-a5b5-d5d39244fe5c;image-20220822-145547.png;https://sifive.atlassian.net/secure/attachment/76312/image-20220822-145547.png,,,,,,,,,,,,,,,,ce62f3d2f571c45bdd0dd88f02bc198957198aa8,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-26T12:22:17.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,2fd6a4d7e619bc4c4a9771aecae786c532b56abf,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00nu7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,42:26.8,"22/Aug/22 10:42 AM;5a938e9c0913194d2d262658;[~accountid:6235105a3eacc50071ff07ec] Can u debug this a bit more. See, if the data coming into IFU is xz free? Also if the address for the sram access was written with non x data. ","22/Aug/22 11:49 AM;5fd15143b4a74900763834e0;You can see in the waves [~accountid:6235105a3eacc50071ff07ec] posted that Xs are coming in as the fetched opcodes. I tried conditioning the key equation with valids, but that doesn’t help when the valids are true but the opcodes are garbage. This test would have failed a tiny bit later when all those illegal instructions are reported to the ROB. Instead, this assertion goes off first.","22/Aug/22 3:32 PM;5a938e9c0913194d2d262658;I see in the icache array {{TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.ifu.icDataArray_3.RW0_addr[7:0]}} the address accessed is {{0xcf}} , which was never written to the array. Hence the SRAM memory is returning x’s. ","23/Aug/22 5:11 AM;5fd15143b4a74900763834e0;Should this be closed as not a hardware bug, or transferred to a VI ticket?","23/Aug/22 3:22 PM;5a938e9c0913194d2d262658;I dont think its a VI issue. We should trace back as to why the Icache memory was accessed, when it was not written. ",23/Aug/22 3:35 PM;5fd15143b4a74900763834e0;Who is the “we” in your update?,"23/Aug/22 3:50 PM;5acffeafaa802f2a797a955c;The clock enable logic in {{RDU.scala}} is not checking the valid bits in ID stage:

{noformat}      ioClockEn.foreach { _ := (allocPtrOpen_REN =/= freePtr) || entryRequired_ID.orR || entryRequired_REN.orR }{noformat}

{{entryRequired_ID}} is just tied to {{inst_ID.map(_.s2v)}}.  This needs to be qualified with {{valid_ID}}",23/Aug/22 3:51 PM;5acffeafaa802f2a797a955c;I’ll take a stab at fixing this and making sure there aren’t any other problems behind this.,"23/Aug/22 4:14 PM;5fd15143b4a74900763834e0;I have a fix for this ready, but was waiting to see what the result of the investigation into how the Xs got there in the first place.

Do you want me to PR what I have anyway?","23/Aug/22 4:19 PM;5a938e9c0913194d2d262658;If there is a read access to a memory location is any of the srams which was never written, we expect the memory model to return x. ","23/Aug/22 4:28 PM;5fd15143b4a74900763834e0;Sure, but fetching from an uninitialized memory location is a different bug than the one that was filed.
I tested my “fix” but the test still failed at exactly the same point b/c the relevant valid bit was true even though the opcode was total garbage. There’s no logic fix available to solve that problem. The root cause is in the fetch address.",23/Aug/22 4:31 PM;5a938e9c0913194d2d262658;Can I get a path to the waves in ur area David? I didn’t know u had a fix. I will take a closer look. Or we can wait for Josh’s fix and then take a look also,23/Aug/22 4:33 PM;5fd15143b4a74900763834e0;Please file the “bad fetch address” as a separate bug (and it might not be a TGV bug) for [~accountid:5acffeafaa802f2a797a955c] to investigate,"23/Aug/22 4:49 PM;5fd15143b4a74900763834e0;The waves are exactly the same as Naveen’s waves. My “fix” doesn’t eliminate the assert. NO FIX CAN ELIMINATE THE ASSERT UNLESS THE FETCH ADDRESS IS FIXED. Anyhow, they are here: davidk2@gamma13:/scratch/verif/davidk2/MAL-2468/builds/coreip_p670/sim/sim/MAL-2474.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vslide1up.vx","23/Aug/22 5:26 PM;5acffeafaa802f2a797a955c;So there are ICache Tag parity errors reported in the fetch that grabbed garbage.  It’s possible that the testbench was intentionally inserting ICache parity errors (I don’t know how to check that the testbench was injecting errors into the memory reads).  That would explain garbage opcodes.  Because on parity errors we pass a dummy instruction down the pipeline with a “replay” flag that will flush the pipeline when that dummy instruction gets to the head of the ROB.

Garbage opcodes with the “replay” flag should still not be causing functional issues though.

I think we likely have to qualify more stuff in the RDU with {{~replay_ID}}.   For instance, I can see that the logic around the vset Color allocation is propagating X’s because of this.","23/Aug/22 5:31 PM;5acffeafaa802f2a797a955c;I need to take the train back home, but I can look at this in more detail when I get back.",23/Aug/22 6:17 PM;5fd15143b4a74900763834e0;I’ll add {{~replay_ID}} and {{~replay_REN}} to the equation here to see if that kills this assertion. Leaving broader application of {{~replay_*}} to another task.,"23/Aug/22 6:51 PM;5fd15143b4a74900763834e0;With {{replay}} added to the equation, there’s a different failure

{noformat}Error: ""/scratch/verif/davidk2/MAL-2468/builds/coreip_p670/verilog/design/SiFive_FreeListUnbanked.sv"", 1018: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.iexFreelist: at time 357062500 ps
assert failed (verification library):   @[FreeList.scala 141:9]{noformat}

Not sure if I create this PR or not.","23/Aug/22 9:37 PM;5acffeafaa802f2a797a955c;So it looks like there’s a bit more to this.  We only signal parity errors on lines that are valid in the cache (the valid bits are stored in flops outside of the SRAM), so that would mean that the line had actually been filled into the memory and the line shouldn’t be all X’s.

However, in this case, there is also a way predictor multi-hit.  Multi-hits are ICache way mispredictions, which replay the fetch from F3 stage, correct the way predictor, and then fetch again.  The multi-hit causes us to read an entry from the data array which _has not_ been filled into (we read way 3 instead of way 1 in this case, way 1 has the parity error).  We normally avoid multi-hits by invalidating ways in the way predictor which hit, when the tag array says that way didn’t hit.  So on an ICache miss, when we send out the bus request for the line we also invalidate any ways in the way predictor which would have matched that address.  But this line was requested by a prefetch, and we currently don’t invalidate ways in the way predictor on prefetch misses.  The multi-hit would be detected the first time we fetch from that line after it gets filled, and then corrected.

Because we had the way predictor multi-hit _and_ the parity error at the same time, we read X’s out of the data array _and_ we send the dummy instruction down the pipeline with the replay flag.

I need to think a bit more about how we should actually handle this case…",23/Aug/22 9:53 PM;5acffeafaa802f2a797a955c;[~accountid:61b2a458657a0500706b9c39] FYI about this way predictor/parity error corner case,24/Aug/22 6:50 AM;5fd15143b4a74900763834e0;It sounds like the fetch corner case is another ticket. Should I open a PR that includes the valid & ~replay fix?,"24/Aug/22 7:40 AM;5acffeafaa802f2a797a955c;I don’t think adding ~replay is really the right fix here, especially since that alone isn’t allowing the test to pass.  I started going down that path last night and we’d have to start qualifying with replay all over the place to get rid of the x-prop failures.  I think we should address this in the fetch pipeline.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Banked freelist exhaustion. Check your nPRs parameter,[TGV] Banked freelist exhaustion. ,Instrcution decode and dispatch ,,,,MAL-2473,123463,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,8/22/2022 7:25,9/7/2022 17:43,9/28/2022 0:51,8/23/2022 12:07,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"We see the below assertion failure 

*Error message* 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_188_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_FreeListBanked_assert.sv"", 891: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.freelist.SiFive_FreeListBanked_assert_0: at time 5652882500 ps
assert failed (verification library): Banked freelist exhaustion. Check your nPRs parameter.  @[FreeList.scala 498:9]

Fatal: ""/scratch/ishitashah/tgv_regression/sign_188_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_FreeListBanked_assert.sv"", 900: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.freelist.SiFive_FreeListBanked_assert_0: at time 5652882500 ps{noformat}

*SHA :* [+5a43f96+|https://simscope.internal.sifive.com/models/undefined--master--5a43f9648654ed9d2a7c246485cb4076be299b28]

*config:* coreip_p670

+*rerun.outline*+

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0221"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3653924775
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Dumppath

{{gamma25:/scratch/ishitashah/tgv_regression/sign_188_test_fails/federation/builds2/coreip_p670/sim/rerundir1_free/free_rerun.outline/sting_StingSiFiveTuple_T_0221/sting/sifive/vector/vector_tgv_dev.conf}}",Ishita Shah,Josh Smith,Srivatsa Yogendra,,,,,,,,,,,,,607e26355431a500701f5aed,5acffeafaa802f2a797a955c,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-23T12:06:29.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,b8bdbaea204a36b2e55d678409da9a5e39276e48,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00ntb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,32:17.9,"22/Aug/22 7:32 AM;5acffeafaa802f2a797a955c;I haven’t looked at this, but I wonder if it’s the same issue where reduction operations were taking tons of PRs, and grouping so that a single ROB entry was holding up a lot of PRs from being freed up.","22/Aug/22 8:09 AM;5acffeafaa802f2a797a955c;Ah, no this is a bug with the “stealing” mechanism that I put in.  I’ll fix it.","23/Aug/22 9:26 AM;5acffeafaa802f2a797a955c;The problem is the for the stealing mechanism that I put in, the bank that has the least number of free PRs in freeVec will be able to steal.  The problem is that multiple banks can have a count of zero, and stealing PRs does not add to the count, it just places free PRs into the “top” and “bottom” allocation registers.  So when one bank with a count of zero steals enough PRs to make “top” and “bottom” valid, the current count comparison logic will still see the count as zero and will not let the other bank with count == 0 steal anything.

The fix is to artificially add 1 to the count of a bank that has both “top” and “bottom” allocation registers as valid, as a tie-breaker.",23/Aug/22 12:07 PM;5acffeafaa802f2a797a955c;My commit should fix the freelist issue.  But the test was still failing due to some other assertion.  I'm going to mark this ticket as resolved though.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]:: Cosim vs RTL write data mismatch for PC=0x2046666c    (Vaadd.vx),[TGV]:: Cosim vs RTL write,Execution Unit ,Vector ,,,MAL-2472,123459,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/22/2022 6:50,9/7/2022 17:43,9/28/2022 0:51,8/31/2022 20:36,,,,,,,,,,,,,TGV_RTL/MU,TGV_RTL/VEX,,,,,,,,0,TGV,,,"*Error::*
\[COSIM-ERROR]\[0] m_dut_inst_item: \[331019] InstInfo: VLD=1 | PC=0x000000002046666c | INSN=0x26d5e5d7 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r11=0x0000_000*8_0000_0008_0000_0008_0000_0008* mask=0000ffff | READY=1 | CSR_TIMER=331019 | PRV=3 | MSTATUS=0x8000000a000066aa | MTVEC=0x0000000080000400 | MCAUSE=0x8000000000000007 | VSTART=0 | VL=4 | SEW=32 | LMUL=m1 | VSEGELT=0
\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x000000002046666c | INSN=0x26d5e5d7 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r11=0x0000_0000_0000_*0000_0000_0000_0000_0000* mask=00000000



*Debug-Info::*
*v11 0x4eff7ffe4effce184eff7ffe4effce18*

core   0: 0x00000000800005a0 (0x07813583) ld      *a1,* 120(sp)
core   0: 3 0x00000000800005a0 (0x07813583) x11 0x0000000000000000 mem 0x0000000080c08ff0-0x0000000080c08ff0
core   0: 3 0x00000*00020466648* (0x4aa016d7) e32 m1 l4 *v13 0x00000000000000000000000000000000*

core   0: 0x000000002046666c (0x26d5e5d7) vaadd.vx v11, v13, a1
core   0: 3 0x000000002046666c (0x26d5e5d7) e32 m1 l4 v11 0x00000000000000000000000000000000

  *Rtl-update::*
           C0:     330986 vrf\[11]=\[00000008000000080000000800000008]\[ffff]

Seems to me llpOutMasked causing those bits to masked out during V11 update.

!image-20220822-134838.png|width=1292,height=330!



*SHA1::* ce62f3d2f571c45bdd0dd88f02bc198957198aa8
*Config::  coreip_u8_minimal_vector*
*Waves*:: gamma26::///scratch/naveenr/aug-22/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline_wrdata_mismatch/sting_StingSiFiveTuple_T_0141/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb
*Rerun.outline::* 
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""sting"",
""raw_plusargs"": \[
""+cosim_scoreboard_trap_epc_count=128"",
""+cosim_scoreboard_stall_time=1000000"",
""+axi_mem_latency_cycles=40"",
""+axi_mem_dither_cycles=20"",
""+amba_vip_select=2"",
""+gdi_amba_test_enable=1"",
""+gdi_tlc_test_enable=1"",
"""",
""+verbose""
],
""subdir"": ""sting_StingSiFiveTuple_T_0141"",
""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 4246968517
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""reset_vector_scheme"": ""first_mem_periph_sys""
},
""uvm"": {
""set_config_string"": \[
""uvm_test_top,torture_read_inbound,10101010:80808080"",
""uvm_test_top,torture_inbound,10101010:80808080""
],
""testname"": ""torture_test""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Kira Tsao,Naveen Rathore,Nicolas Brunie,Srivatsa Yogendra,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1a4f5ec578120daca5ff8e,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,22/Aug/22 6:50 AM;ug:00e334db-2e60-4fae-a5b5-d5d39244fe5c;image-20220822-134838.png;https://sifive.atlassian.net/secure/attachment/76309/image-20220822-134838.png,29/Aug/22 10:35 PM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220830-053204.png;https://sifive.atlassian.net/secure/attachment/76742/image-20220830-053204.png,,,,,,,,,,,,,,,ce62f3d2f571c45bdd0dd88f02bc198957198aa8,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i00nsf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,55:45.9,22/Aug/22 9:55 AM;5fd15143b4a74900763834e0;Bouncing to [~accountid:6065017e90e3950069cf01c5] to identify who should be responsible for a fix.,23/Aug/22 6:59 AM;5fd15143b4a74900763834e0;Bouncing again to [~accountid:5e1a4f5ec578120daca5ff8e] ,"29/Aug/22 1:51 AM;6235105a3eacc50071ff07ec;Hi [~accountid:5e1a4f5ec578120daca5ff8e] 
Any update to this issue.
We are seeing bunch of failures related to this issue.",29/Aug/22 1:56 AM;5e1a4f5ec578120daca5ff8e;Just started and reproduced. Will dig into it tomorrow. I got bunch of Jiras since last week.,"29/Aug/22 9:09 AM;6065017e90e3950069cf01c5;Same as MAL-2477

[~accountid:5e1a4f5ec578120daca5ff8e] , it looks like it is above our expertise, let’s let Andrew H. take a look.","29/Aug/22 10:35 PM;5e1a4f5ec578120daca5ff8e;[~accountid:609d7e1f5998a6006800dcc5] , I narrow down a bit of this issue. It is causing by a1(v2s data incorrect) at cycle 330980, which is correspond to:

{noformat}C                   0:     331019 [1] pc=[000000002046666c] W[r 0=0000000000000000][0] R[r11=0000000000000000] R[r 0=0000000000000000] inst=[26d5e5d7] vaadd.vx v11, v13, a1{noformat}

And if you can check the execution last time, it’s using correct a1.

{noformat}C                   0:     330803 [1] pc=[000000002046666c] W[r 0=0000000000000000][0] R[r11=0000000000000000] R[r 0=0000000000000000] inst=[26d5e5d7] vaadd.vx v11, v13, a1{noformat}

In above 2 cases, the v13, a1 should be same.

!image-20220830-053204.png|width=1156,height=281!","30/Aug/22 8:41 AM;5e1a4f5ec578120daca5ff8e;Test still failed after apply [~accountid:609d7e1f5998a6006800dcc5] 's [PR|https://github.com/sifive/federation/pull/25695] (And also [~accountid:6065017e90e3950069cf01c5] 's fix)

Same issue appear, a1 is getting incorrect data from s2v.","31/Aug/22 8:36 PM;5e1a4f5ec578120daca5ff8e;Confirm test passes completely with cherry-pick multiple fixes provided by [~accountid:609d7e1f5998a6006800dcc5] and[~accountid:6065017e90e3950069cf01c5]

# [https://github.com/sifive/federation/pull/25507|https://github.com/sifive/federation/pull/25507|smart-link]
# [https://github.com/sifive/federation/pull/25695|https://github.com/sifive/federation/pull/25695|smart-link]
# [https://github.com/sifive/federation/pull/25753|https://github.com/sifive/federation/pull/25753|smart-link]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]  MSHR Entry Valid Non-Reusable Hang,[TGV]  MSHR Non-Reusable Hang,LSU (Load Store Unit),,,,MAL-2471,123454,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Highest,Duplicate,Andrew Hanselman,609d7e1f5998a6006800dcc5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,8/22/2022 5:34,9/8/2022 20:37,9/28/2022 0:51,9/2/2022 14:51,,,,,,,,,,,,,RTL/RDU,,,,,,,,,0,TGV,,,"We see the below assertion failure

*Error message* 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_186_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", 2482: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.mshrEntries_0.SiFive_MSHREntry_assert_0: at time 11125102500 ps
assert failed (verification library): MSHR Entry Valid Non-Reusable Hang  @[MSHR_Mallard.scala 4228:14]

Fatal: ""/scratch/ishitashah/tgv_regression/sign_186_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", 2491: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.mshrEntries_0.SiFive_MSHREntry_assert_0: at time 11125102500 ps{noformat}

Earlier when this was seen the short term solution of setting up the `vPRs` back to 144 was done. but we still the error [https://sifive.atlassian.net/browse/MAL-2356|https://sifive.atlassian.net/browse/MAL-2356|smart-link] 


*SHA*: [+47491f2+|https://simscope.internal.sifive.com/models/undefined--master--47491f27211d9bbdc69bb062d253432e98a8d8f6]

*config:* coreip_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+MEM_ERROR_INJECT=.*\\.TagRAM_ext,1,0,20"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0201"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2937552977
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Dumppath 

{{gamma25:/scratch/ishitashah/tgv_regression/sign_186_test_fails/federation/builds2/coreip_p670/sim/rerundir1_mshr/mshr_rerun.outline/sting_StingSiFiveTuple_T_0201/sting/sifive/vector/vector_tgv_dev.conf}}",Andrew Hanselman,David Kravitz,Ishita Shah,Naveen Rathore,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,609d7e1f5998a6006800dcc5,5fd15143b4a74900763834e0,607e26355431a500701f5aed,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2468,,,,,,,01/Sep/22 1:51 PM;ug:03c2888a-5ac7-445d-b700-4a271a824946;Screen Shot 2022-09-01 at 3.41.30 PM-20220901-204321.png;https://sifive.atlassian.net/secure/attachment/76928/Screen+Shot+2022-09-01+at+3.41.30+PM-20220901-204321.png,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-30T14:17:27.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,No,,,,,,,,,,,,2|i00nrb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,05:37.1,"22/Aug/22 12:05 PM;5fd15143b4a74900763834e0;Don’t have definitive proof yet, but suspiciously, there’s a {{vnmsac.vx}} instruction shortly after the last retired instruction. [~accountid:6065017e90e3950069cf01c5] is looking at [https://sifive.atlassian.net/browse/MAL-2468|https://sifive.atlassian.net/browse/MAL-2468|smart-link] right now, which is _definitely_ a problem with that instruction. Going to pause work on this ticket until that problem is tracked down.","22/Aug/22 2:02 PM;6065017e90e3950069cf01c5;test copied into  {{/work/nicolasb/tgv_bug_outlines/sting/MAL-2471.outline}}, checking it against [https://github.com/sifive/federation/pull/25507|https://github.com/sifive/federation/pull/25507|smart-link] ","22/Aug/22 2:13 PM;5fd15143b4a74900763834e0;Trust me, this is not the cherry-pick you’re looking for. Current theory is not the X2Y itself, but something is messed up in the S2V source tags in the hanging instruction(s).","23/Aug/22 7:07 AM;5fd15143b4a74900763834e0;Update on current theory: there are a couple of {{.vx}} instructions that need S2V moves. They’re sending the same register and get destination prIdx values of 2023 and 2024. They go into the IEX issue queues (0 and 1) at 6,639,782,500 and never issue, despite their source being marked valid and ready. I suspect they’re blocked due to colors, but would like [~accountid:609d7e1f5998a6006800dcc5] to confirm and identify the next step.

{noformat}   100265d4c:	0ea34657          	vrsub.vx	v12,v10,t1
   100265d50:	bea36557          	vnmsac.vx	v10,t1,v10{noformat}

 Nicolas has already posted a pointer to the outline file a few notes down.

My work area is davidk2@gamma13:/scratch/verif/davidk2/MAL-2471/builds/coreip_p670/sim/sim/MAL-2471.outline/sting_StingSiFiveTuple_T_0201/sting/sifive/vector/vector_tgv_dev.conf

Convenient waves can be found in ~/davidk2/waves/MAL-2471a.rc","01/Sep/22 1:51 PM;609d7e1f5998a6006800dcc5;Also appears to have to do with vector buffer pointer allocation during rewind (2483/2477):

* Valid instructions in REN
* Not stalling REN
* S2V entries required by REN > 0
* S2V alloc pointer rewind count > 0

I’m working on a better assert to identify this immediately, rather than hitting the various other asserts many cycles later. The hang occurs because the instructions assigned 23 and 24 are not in the valid issue window indicated by the free pointer (0x10 to 0x1F, with MSB wrap bit dropped).

!Screen Shot 2022-09-01 at 3.41.30 PM-20220901-204321.png|width=1236,height=1085!","02/Sep/22 1:54 AM;6235105a3eacc50071ff07ec;~18 failures in simulation, Increased priority to highest","02/Sep/22 1:25 PM;609d7e1f5998a6006800dcc5;This outline is passing with the following fix commits:

{noformat}* e1a39d8efbe [MAL-2468][TGV] fixing issue tag kill source for stage tags in VexPipe (#25507) (11 days ago by <Nicolas Brunie>)
* 8766d2a94a7 [MAL-2477] Fix vector pointer rewind when flush clears all vector instructions from ROB (#25753) (2 days ago by <Andrew Hanselman>)
* cedbae04725 [MAL-2493] Vector Accumulator ROB Group Merge Fix (#25742) (2 days ago by <Andrew Hanselman>)
* 6733f58cf54 [MAL-2483] Stall ID during vector buffer pointer rewind (#25695) (3 days ago by <Andrew Hanselman>){noformat}","02/Sep/22 1:30 PM;609d7e1f5998a6006800dcc5;[~accountid:6235105a3eacc50071ff07ec] [~accountid:5fd15143b4a74900763834e0] I think any other hang stalls we are seeing are related to different bugs than the ones currently fixed. These asserts marked as ROB hangs or MSHR hangs are very generic and can be caused by a variety of bugs. Seeing as we have sorted out the current X2Y pointer bugs (as far as I know), I think we need some new outlines to fix these other 18 failures you are mentioning.","02/Sep/22 2:47 PM;5fd15143b4a74900763834e0;It sounds like this ticket should be closed, and future ROB/MSHR/etc hangs should be files with new outlines (only a few at a time, please 🙂).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: spurious write match on predicted but not priority-selected way,LSU: spurious write match ,LSU (Load Store Unit),,,,MAL-2469,123447,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,8/22/2022 4:30,8/27/2022 9:36,9/28/2022 0:51,8/24/2022 16:39,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"*Error:*

{noformat}[COSIM-ERROR][0] m_dut_inst_item: [817113] InstInfo: VLD=1 | PC=0xffffffc59020c47a | INSN=0x00006398 | INST_DST=INT | REDUCTION = false | WR: en=true r14=0xffff_dfa9_0000_0000 mask=00ff | READY=1 | CSR_TIMER=817113 | PRV=1 | MSTATUS=0x8000000a00006080 | MTVEC=0x0000000080000400 | MCAUSE=0x0000000000000009 | VSTART=0 | VL=0 | SEW=8 | LMUL=m1 | VSEGELT=0
[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0xffffffc59020c47a | INSN=0x00006398 | INST_DST=INT | REDUCTION = false | WR: en=true r14=0xffff_dfa9_eaf7_d75d mask=00ff

[COSIM-ERROR][0] m_dut: en=true r14=0xffff_dfa9_0000_0000 mask=00ff
[COSIM-ERROR][0] m_sim: en=true r14=0xffff_dfa9_eaf7_d75d mask=00ff{noformat}

The WRDATA mismatch occurs for a load instruction {{PC=ffffffc59020c47a c.ld    a4, 0(a5).}}

{{lsu.LDPipes.LDPipes_0.ldwb_data_q[63:0]}} is not getting the correct value. At T:16344582500ps, {{core.lsu.LDPipes.LDPipes_0.ldf_validToLdwb}} is asserted and the value for ldwb_data_q is sampled. The upper 2 bytes which come from {{lsu.LDPipes.LDPipes_0.ldf_l1DataCorrectedAligned_shifted[63:32]}} are correct, but the lower 2 bytes, {{lsu.LDPipes.LDPipes_0.ldf_l1DataCorrectedAligned_shifted[31:0]}} is 0x0 when {{ldf_validToLdwb}} was high. However, on 4th posedge after this sampling, we do see the correct data reflected in  {{lsu.LDPipes.LDPipes_0.ldf_l1DataCorrectedAligned_shifted[31:0]}}. (See snippet)

!image-20220822-112430.png|width=872,height=139!

Dump for quick look available at: 
{{saurabhs@gamma27: /scratch/saurabhs/mallard_master_349/federation/builds/coreip_u8mc_ultra_minimal/sim/sim/WRDATA_mismatch_br_waw_ld_shdaow.outline/sting_StingSiFiveHeavyTuple_T_0450/sting/sifive/branches/br_waw_ld_shadow.conf}}



*Build*: coreip_u8mc_ultra_minimal

*Commit*: 4231ce1

*Regression*: master/nightly-mallard/349

*Simscope*: [https://simscope.internal.sifive.com/sigs/703/cmax0ofptl82|https://simscope.internal.sifive.com/sigs/703/cmax0ofptl82]

*rerun.outline*: 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveHeavyTuple_T_0450"",
  ""subtest"": ""sifive/branches/br_waw_ld_shadow.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1025089226
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",John Ingalls,Khondakar Mujtaba,Rakesh Palakurthi,Saurabh Singh,,,,,,,,,,,,5bb6808b9ba2930990f81895,622a930149c900007023d105,62350e943eacc50071ff0753,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,VI-8124,,,,,,,,MAL-2502,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2191,,,,,,,,,,,,,,,,,,22/Aug/22 4:30 AM;ug:40f4a4a1-8fbe-4d1b-a941-c827c45ed3d4;image-20220822-112430.png;https://sifive.atlassian.net/secure/attachment/76295/image-20220822-112430.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-08-26T23:58:12.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25652,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i00npr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,22/Aug/22 5:32 AM;607e26f781e7b900681be48c;This looks like got introduced with [https://github.com/sifive/federation/commit/8124508978a9c8fef16a82167dded034b56a3476|https://github.com/sifive/federation/commit/8124508978a9c8fef16a82167dded034b56a3476|smart-link] . Issue is not seen on commit before this.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]: Missing completion (killed by wrong tag kill) from vnmsac.vx instruction in pipe0,[TGV]: Missing completion  vnmsac.vx instruction ,Execution Unit ,,,,MAL-2468,123434,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/22/2022 1:51,9/7/2022 17:43,9/28/2022 0:51,8/23/2022 2:41,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"*Error::*  
Error: ""/scratch/naveenr/aug-22/federation/builds/coreip_p670/verilog/design/SiFive_StQEntry.sv"", 494: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.StQ.stqEntries_0: at time 2134982500 ps
assert failed (verification library): StQEntry FSM Hang  @\[StoreQ.scala 1283:14]
Fatal: ""/scratch/naveenr/aug-22/federation/builds/coreip_p670/verilog/design/assertions/SiFive_StQEntry_assert.sv"", 237: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.StQ.stqEntries_0.SiFive_StQEntry_assert: at time 2134982500 ps


*Debug-info::*
    *RTL trace::*
C0:      13607 \[1] pc=\[0000000080000c88] W\[f13=ffffffff70f49288]\[1] R\[r15=000000008003dc84] R\[r 0=0000000000000000] inst=\[0587a687] flw     fa3, 88(a5)
C0:      13607 \[1] pc=\[0000000080000c8c] W\[r11=0000000000000008]\[1] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[c115f5d7] vsetivli a1, 11, e32, m2, tu, mu
C0:      13607 \[1] pc=\[0000000080000c90] W\[r 9=ffffffffffffad39]\[1] R\[r 3=000000008000e0c0] R\[r 0=0000000000000000] inst=\[8a219483] lh      s1, -1886(gp)

Store Entry -0 not de-allocated::


!image-20220822-084750.png|width=779,height=303!



*SHA1::*   ce62f3d2f571c45bdd0dd88f02bc198957198aa8
*Config::*   coreip_p670
*Waves::*   gamma26:: /scratch/naveenr/aug-22/federation/builds/coreip_p670/sim/sim/rerun.outline_rat_stq/rat_default_T_0145/rat/default/waves.fsdb
*Rerun.outline::* 
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": \[
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+MEM_ERROR_INJECT=._\.tag_array_.ext,0,1,32:._\.data_arrays_0_._ext,0,1,32:._\.syssram._ext,0,1,32:._\.island.\.lim\.syssram._ext,0,1,32:._\.tagged_tables_0_._ext,0,1,32:._\.base_table_0_.*ext,0,132"",
""+verbose""
],
""subdir"": ""rat_default_T_0145"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 3510823177
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",David Kravitz,Naveen Rathore,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,5fd15143b4a74900763834e0,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2471,,,,,,,,,,,22/Aug/22 1:51 AM;ug:00e334db-2e60-4fae-a5b5-d5d39244fe5c;image-20220822-084750.png;https://sifive.atlassian.net/secure/attachment/76277/image-20220822-084750.png,22/Aug/22 2:08 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220822-195952.png;https://sifive.atlassian.net/secure/attachment/76330/image-20220822-195952.png,,,,,,,,,,,,,,,ce62f3d2f571c45bdd0dd88f02bc198957198aa8,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-22T23:53:38.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/7411a5f4c80f6aad7cc67de4b28993c4d006cde9,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00nmv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,06:46.7,"22/Aug/22 7:06 AM;5fd15143b4a74900763834e0;The “car on fire at the bottom of the ravine” is the Assertion:: StQEntry FSM Hang reported.

The “here’s where the car went through the guardrail” is the never-retired {{vnmsac.vx}} in this sequence:

{noformat}    80000c8c:	c115f5d7          	vsetivli a1, 11, e32, m2, tu, mu
    80000c90:	8a219483          	lh	s1,-1886(gp) # 8000d962 <data0+0x62>
    80000c94:	bf64e757          	vnmsac.vx	v14,s1,v22{noformat}

The {{vnmsac}} is sequenced into 2 uops; one goes into each VEX IssQ. They issue at the same time (279,182,500) but the one in pipe0 never sends a completion msg to the ROB.

Bumping to [~accountid:6065017e90e3950069cf01c5] for the next step in debugging.","22/Aug/22 7:08 AM;5fd15143b4a74900763834e0;Outline has been copied to /work/nicolasb/tgv_bug_outlines/rat/MAL-2468.outline.
Some interesting waves are in ~davidk2/waves/MAL-2468.rc","22/Aug/22 2:08 PM;6065017e90e3950069cf01c5;!image-20220822-195952.png|width=1616,height=595!

Issue is that the kill for the injected tag at `ISS` is affecting the tag staged from {{ISS}} to {{RR}} (which is staged because corresponding to LLP, so not ready from injection yet, so no actual tag broadcast conflict)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] [RVV 17.1] Implement faults for vector stores,,,,,,MAL-2467,123381,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/21/2022 15:30,8/23/2022 15:00,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,RTL/RDU,TGV_RTL/BAL,TGV_RTL/RDU,,,,,,0,,,,This epic corresponds to [~accountid:60e8c16ad6ba9a0077ad4e51]'s milestone #20,David Kravitz,Srivatsa Yogendra,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-8062,,,,,,MAL-2209,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-12,,[TGV] [RVV 17.1] Implement faults for vector stores,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,grey,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00nb3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] [RVV 17.1] Implement faults for vector loads,,,,,,MAL-2466,123380,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/21/2022 15:28,8/23/2022 14:57,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,RTL/RDU,TGV_RTL/BAL,TGV_RTL/RDU,,,,,,0,,,,This epic corresponds to [~accountid:60e8c16ad6ba9a0077ad4e51]'s milestone #12,David Kravitz,Srivatsa Yogendra,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-8054,,,,,,MAL-2209,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-10,,[TGV] [RVV 17.1] Implement faults for vector loads,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,blue,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00nav:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] [RVV 7.9] Implement whole register stores,,,,,,MAL-2465,123379,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/21/2022 15:23,8/23/2022 14:56,9/28/2022 0:51,,,,,,,,,,,,,,RTL/RDU,TGV_RTL/BAL,,,,,,,,0,,,,This epic corresponds to [~accountid:60e8c16ad6ba9a0077ad4e51]'s milestone #10,David Kravitz,Srivatsa Yogendra,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-8052,,,,,,MAL-2209,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-2,,[TGV] [RVV 7.9] Implement whole register stores,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,dark_yellow,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00nan:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] [RVV 7.9] Implement whole register loads,,,,,,MAL-2464,123378,,Epic,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/21/2022 15:22,9/23/2022 8:47,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,TGV_RTL/RDU,,,,,,,,0,,,,This epic corresponds to [~accountid:60e8c16ad6ba9a0077ad4e51]'s milestone #9,David Kravitz,Srivatsa Yogendra,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-8051,,,,,,MAL-2209,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-23T01:21:01.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,ghx-label-12,,[TGV] [RVV 7.9] Implement whole register loads,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,grey,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,,,,,,,,,,,,,,,,2|i00naf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] [RVV 7.8.3] Implement indexed segment stores,,,,,,MAL-2463,123377,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/21/2022 15:19,8/22/2022 10:05,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,,,,This epic corresponds to [~accountid:60e8c16ad6ba9a0077ad4e51]'s milestone #26 (but should be #27),David Kravitz,Srivatsa Yogendra,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-8067,,,,,,MAL-2209,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-3,,[TGV] [RVV 7.8.3] Implement indexed segment stores,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,yellow,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00na7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] [RVV 7.8.3] Implement indexed segment loads,,,,,,MAL-2462,123376,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/21/2022 15:15,8/23/2022 15:03,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,,,,This epic corresponds to [~accountid:60e8c16ad6ba9a0077ad4e51]'s milestone #25 (but should be #26),David Kravitz,Kavitha Raghavan,Srivatsa Yogendra,,,,,,,,,,,,,5fd15143b4a74900763834e0,60e8c16ad6ba9a0077ad4e51,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-8066,,,,,,MAL-2209,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-7,,[TGV] [RVV 7.8.3] Implement indexed segment loads,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,purple,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00n9z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,10:42.3,23/Aug/22 1:10 PM;60e8c16ad6ba9a0077ad4e51;[~accountid:5fd15143b4a74900763834e0] - what does this description mean? When you say it corresponds to MS #25 but should be #26? Should I add this Jira ticket infor to MS 25 or 26?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] [RVV 7.8.2] Implement strided segment stores,,,,,,MAL-2461,123375,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/21/2022 15:12,8/23/2022 15:02,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,,,,This epic corresponds to [~accountid:60e8c16ad6ba9a0077ad4e51]'s milestone #24 (but it should be #25),David Kravitz,,,,,,,,,,,,,,,5fd15143b4a74900763834e0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-8065,,,,,,MAL-2209,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-11,,[TGV] [RVV 7.8.2] Implement strided segment stores,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,teal,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00n9r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] [RVV 7.8.2] Implement strided segment loads,,,,,,MAL-2460,123374,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/21/2022 15:10,9/8/2022 9:42,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,,,,This epic corresponds to [~accountid:60e8c16ad6ba9a0077ad4e51]'s milestone #18,David Kravitz,Srivatsa Yogendra,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-8060,,,,,,MAL-2209,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-08T07:30:46.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,ghx-label-13,,[TGV] [RVV 7.8.2] Implement strided segment loads,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,dark_green,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,,,,,,,,,,,,,2|i00n9j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] [RVV 7.8.1] Implement unit-stride segment stores,,,,,,MAL-2459,123373,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/21/2022 15:08,8/23/2022 16:10,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,This epic corresponds to [~accountid:60e8c16ad6ba9a0077ad4e51]'s milestones #19 (EMUL = 1) and #23 (LMUL > 1),David Kravitz,Srivatsa Yogendra,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-8061,VI-8064,,,,,MAL-2209,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-13,,[TGV] [RVV 7.8.1] Implement unit-stride segment stores,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,dark_green,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00n9b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] [RVV 7.8.1] Implement unit-stride segment loads,,,,,,MAL-2458,123372,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/21/2022 15:06,8/23/2022 14:58,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,This epic corresponds to [~accountid:60e8c16ad6ba9a0077ad4e51]'s milestones #11 (EMUL = 1) and #15 (LMUL > 1),David Kravitz,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-8053,VI-8057,,,,,MAL-2209,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-7,,[TGV] [RVV 7.8.1] Implement unit-stride segment loads,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,purple,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00n93:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] [RVV 7.7] Implement unit-stride fault-only-first loads,,,,,,MAL-2457,123371,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/21/2022 14:53,8/23/2022 14:53,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,TGV_RTL/RDU,,,,,,,0,,,,Implement unit-stride fault-only-first loads. This epic corresponds to [~accountid:60e8c16ad6ba9a0077ad4e51]'s milestone #7,David Kravitz,Srivatsa Yogendra,Zhen Wei,,,,,,,,,,,,,5fd15143b4a74900763834e0,5a938e9c0913194d2d262658,5e49f622a17f930c9b94b6cd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-8047,,,,,,MAL-2209,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-13,,[TGV] [RVV 7.7] Implement unit-stride fault-only-first loads,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,dark_green,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00n8v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
CLONE - [TGV] LTB multiple write completion tracking,,,,,,MAL-2456,123370,123369,Sub-task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Brad Wu,62103777eb2978006893b778,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/21/2022 14:27,8/21/2022 14:27,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,,,,"Proposal A from [https://docs.google.com/presentation/d/1uRQ0BRmUlI7CGGZFFJc3iGLSnRdfi00qbSQBza1ftOg/edit#slide=id.g145391e88de_0_0|https://docs.google.com/presentation/d/1uRQ0BRmUlI7CGGZFFJc3iGLSnRdfi00qbSQBza1ftOg/edit#slide=id.g145391e88de_0_0|smart-link] 

Add {{ltbE_pendWrCnt_q}} and {{ltbE_waitLastWr_q}} per LTB entry to track the remaining writes.

Wakeup uop in Baler IssQ when {{ltbE_waitLastWr_q}} is true and last write from LDR is detected.

!image-20220819-125216.png|width=1448,height=816!",David Kravitz,,,,,,,,,,,,,,,5fd15143b4a74900763834e0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2455,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,21/Aug/22 2:27 PM;ug:03996552-4b14-4132-be2b-a08c9c621951;image-20220819-125216.png;https://sifive.atlassian.net/secure/attachment/76231/image-20220819-125216.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00n8n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,123369,[TGV] [RVV 7.5] Implement strided vector stores,To Do
[TGV] [RVV 7.5] Implement strided vector stores,,,,,,MAL-2455,123369,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/21/2022 14:27,8/22/2022 10:11,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,TGV_RTL/RDU,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,0,,,,,David Kravitz,Srivatsa Yogendra,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2442,,,,,,,,,,,,VI-8058,,,,,,MAL-2209,,,MAL-2456,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-7,,[TGV] [RVV 7.5] strided loads,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,purple,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00n8f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,21/Aug/22 2:27 PM;5fd15143b4a74900763834e0;This epic corresponds to [~accountid:60e8c16ad6ba9a0077ad4e51]'s milestone #16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Add support for scalar stride source for strided vector loads/stores,,,,,,MAL-2454,123368,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/21/2022 13:22,8/26/2022 9:15,9/28/2022 0:51,8/26/2022 7:51,,,,,,,,,,,,,RTL/LSU,RTL/RDU,,,,,,,,0,,,,Make sure that the register source for the stride is plumbed through rename and dispatch into the LsIssQ operand tracking.,David Kravitz,Josh Smith,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-26T07:50:01.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,c89c2e56e61acacaba7db8071c217d0045b0cbff,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00n87:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Support masked stores,,,,,,MAL-2453,123367,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/21/2022 11:42,8/23/2022 16:00,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,,,,Will attach Task tickets to this Epic after 1st Load and 1st Store Epics,David Kravitz,Srivatsa Yogendra,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,MAL-2065,,,,,,,,,,,MAL-2067,,,,,,,,,,,,,,,,,,MAL-2209,,,MAL-2213,MAL-2212,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-5,,[TGV] Support masked loads/stores,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,dark_teal,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|i00n7z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,21/Aug/22 11:44 AM;5fd15143b4a74900763834e0;This epic corresponds to [~accountid:60e8c16ad6ba9a0077ad4e51]'s milestone #19.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] [RVV 7.6] Implement indexed stores,,,,,,MAL-2452,123366,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/21/2022 11:36,8/23/2022 15:03,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,,,,Will attach Task tickets to this Epic after 1st Load and 1st Store Epics,David Kravitz,Srivatsa Yogendra,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,MAL-2065,,,,,,,,,,,MAL-2066,,,,,,,,,,,,VI-8146,,,,,,MAL-2209,,,MAL-2394,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-12,,[TGV] Add support for indexed loads/stores,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,grey,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|i00n7r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,21/Aug/22 11:38 AM;5fd15143b4a74900763834e0;This epic corresponds to a missing milestone on [~accountid:60e8c16ad6ba9a0077ad4e51]”ownership” slides. It would be between #21 and #22 as currently written.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Update VL for fault-only-first loads that fault after first element,,,,,,MAL-2451,123359,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/20/2022 14:06,9/21/2022 9:40,9/28/2022 0:51,8/22/2022 14:13,,,,,,,,,,,,,RTL/IEX,RTL/LSU,RTL/RDU,,,,,,,0,,,,"The LSU needs to report to the ROB which element faulted, and then the ROB should do two things after the instruction completes:

# Flush the pipeline and re-fetch starting from the next instruction (don’t trap)
# Update VL in the VSRF

Number 1 should be pretty easy if the LSU reports an exception with type {{TYPE_SYNC}}.  The ROB will then know to wait until the instruction completes execution, and it will flush the pipeline and start from the next instruction.

For Number 2 we should be able to have the ROB output a signal that the fault-only-first load has retired, and then while the pipeline is being flushed, look at {{vsetRetireColor_ID}} in the RDU to know which VSRF entry to update with the new VL.",David Kravitz,John Ingalls,Josh Smith,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,MAL-2573,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-22T14:13:12.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,b4a1d0c794e564693870481a3e961dc3fe1b1690,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00n67:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,49:58.1,"21/Aug/22 8:29 AM;5acffeafaa802f2a797a955c;[~accountid:5bb6808b9ba2930990f81895] I see on line 83 of the Load/Store tasks smartsheet  for unit-stride fault-only-first loads: “LSU _does not_ signal fault to ROB”.

Is that referring to the case where the fault is after element 0 and we don’t need to trap?  I still need the LSU to signal to the ROB that the fault occured, and the element number, so that I know how to update VL.  What I’m proposing is that the LSU report this as {{ExcType.TYPE_SYNC}} so that the ROB still flushes the pipeline, but it doesn’t trap to the exception vector.","21/Aug/22 7:49 PM;5bb6808b9ba2930990f81895;Yes, that plan and expected behavior sounds right.  The logic to do this is not in place yet in the LSU.  Is there a test that we can develop with?  It’s a heckuva lot easier to start with that.","22/Aug/22 4:00 AM;5fd15143b4a74900763834e0;Some tests were added with [https://github.com/sifive/federation/pull/25074|https://github.com/sifive/federation/pull/25074|smart-link] , but see [~accountid:5acffeafaa802f2a797a955c]'s comments here: [https://sifive.atlassian.net/browse/MAL-2400?focusedCommentId=384340|https://sifive.atlassian.net/browse/MAL-2400?focusedCommentId=384340|smart-link] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
HWPF LGS: engine index mismatch on lstc feedback,HWPF LGS: engine index mismatch,,,,,MAL-2450,123335,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,8/19/2022 15:50,8/29/2022 23:06,9/28/2022 0:51,8/20/2022 12:02,,,,,,,,,,,,,RTL/HWPF,,,,,,,,,0,,,,"From [~accountid:60ce876f624d7000695b9589] :
After checking the waveform, I see the aggr of the active engine is stuck at {{4}} and will not be increased.
I check the condition of {{increaseAggrL1}} and find a weird place that {{io_lstc_hwpf_feedback_0_valid}} is not pulled up due to engine index is not matched.
The TWJ engine 0 generates the prefetch requests into MSHR, but the engine index seems to be marked as {{10}}.
But the {{io_lstc_hwpf_feedback_0_valid}} of TWJ engine 0 compares TWJ engine 0 indexes with {{0}}.
It seems the {{io_lstc_hwpf_feedback_0_valid}} will not be pulled even if the engine is matched actually.
Can you take a look?
io_time = {{10303}}.
Engine number: TWJ engine {{0}}.
Scenario: TWJ engine 0 generates prefetch requests into MSHR, but engine number mismatch when comparing the feedback signal.
Waveform: {{/nfs/teams/perf/tmp-he/users/hunglunc/federation_18/builds_MAL1522_0e15907/coreip_p650/sim/sim/test_u8_hwpf_perf.outline/HWPF_1/sparta-ubenchmarks/mem_probe/mem_probe_generator/kStride/TEST_SIZE_8192/TEST_STRIDE_2048/waves.fsdb}}",Binayak Tiwari,Brian Grayson,Fu-Ching Yang,Hung-Lun Chen,I-Cheng Cheng,Jaksa Djordjevic,,,,,,,,,,60a963ed8cbda700681b40c1,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,60ce876f624d7000695b9589,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-20T10:37:44.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00n0v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"Livermore: Data cache 1 bank, FP renames 60, I&D L1 TLB super pages 16",,,,,,MAL-2449,123330,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Benoy Alexander,5e1370feefa19b0e976b5c24,Benoy Alexander,5e1370feefa19b0e976b5c24,Benoy Alexander,5e1370feefa19b0e976b5c24,8/19/2022 14:13,8/22/2022 14:38,9/28/2022 0:51,8/20/2022 8:17,,,,,,,,,,,,,Performance,RTL/Tile,,,,,,,,0,,,,"After a few more perf/area tradeoffs, we are narrowing down to a machine with DC 1bank, FP renames 60, I&D L1 TLB super pages 16",Benoy Alexander,Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,5e1370feefa19b0e976b5c24,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-08-22T13:03:51.000-0700"",""stateCount"":3,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,3,0,,,,100,,,,,,,,,,,,,,,2|i00mzz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Preserve L1 DCache Bank and Subbank ,,,,,,MAL-2448,123312,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Khondakar Mujtaba,622a930149c900007023d105,Khondakar Mujtaba,622a930149c900007023d105,Khondakar Mujtaba,622a930149c900007023d105,8/19/2022 10:41,9/20/2022 16:30,9/28/2022 0:51,8/23/2022 13:04,,,,,,,,,,,Panda DR,,Implementation,RTL/LSU,,,,,,,,0,,,,Preserve L1 DCache Bank and Subbank instead of inline instance . The plan is to optimize subbank partition to improve timing. The optimized partition  can be replicated.,John Ingalls,Khondakar Mujtaba,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,622a930149c900007023d105,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-23T17:09:31.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,N/A,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00mvz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Dummy VMB instance in Baler and Interface forwarding to TGV/LSU,,,,,,MAL-2447,123197,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/19/2022 6:42,8/26/2022 1:33,9/28/2022 0:51,8/24/2022 22:51,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-24T22:50:50.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2212,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/7d92bd406e0291e4fa269f61ea9a144f4004ae36,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00m67:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Update Healdsburg JSON to go from 2 to 4 FEX pipes,,,,,,MAL-2446,123196,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Eleni Maragkoudaki,62e422de0b4bf7ad924bc51a,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/19/2022 6:07,8/25/2022 20:16,9/28/2022 0:51,8/24/2022 8:46,,,,,,,,,,,,,Performance,RTL/FEX,,,,,,,,0,,,,"Currently the {{specs/design-definitions/tiles/tile_healdsburg.json}} file only specifies 2 FEX pipes.  The current POR for Healdsburg is to have 4 FEX pipes.

The 4 pipes should be fully featured, with the exception that only one pipe should support I2F operations and only one pipe should support divides.  Right now pipe 0 supports I2F and the pipe 1 supports divide.  For now, pipes 2 and 3 can be copies of pipe 1 but remove divide support.  That should match what was modeled here: [https://sifive.atlassian.net/wiki/spaces/CIP/pages/2208333915/SPARTA-1644+2+3+4+FP+Pipes+for+Bode|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2208333915/SPARTA-1644+2+3+4+FP+Pipes+for+Bode|smart-link] ",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Josh Smith,Julian Bailey,Vaibhav Gupta,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,623e4830b75ca80070580145,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Floating Point,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-24T08:38:58.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,db4bfd4efaac675380cc8398456cd16cd4806ffb,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,100,,,,,,,,,,,,,,,2|i00m5z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LTB multiple write completion tracking,,,,,,MAL-2445,123194,123191,Sub-task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,8/19/2022 5:50,9/20/2022 19:50,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,,,,"Proposal A from [https://docs.google.com/presentation/d/1uRQ0BRmUlI7CGGZFFJc3iGLSnRdfi00qbSQBza1ftOg/edit#slide=id.g145391e88de_0_0|https://docs.google.com/presentation/d/1uRQ0BRmUlI7CGGZFFJc3iGLSnRdfi00qbSQBza1ftOg/edit#slide=id.g145391e88de_0_0|smart-link] 

Add {{ltbE_pendWrCnt_q}} and {{ltbE_waitLastWr_q}} per LTB entry to track the remaining writes.

Wakeup uop in Baler IssQ when {{ltbE_waitLastWr_q}} is true and last write from LDR is detected.

!image-20220819-125216.png|width=1448,height=816!",Brad Wu,John Ingalls,Nicolas Brunie,Yohann Rabefarihy,,,,,,,,,,,,62103777eb2978006893b778,5bb6808b9ba2930990f81895,6065017e90e3950069cf01c5,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2442,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,19/Aug/22 5:54 AM;ug:57c1528d-c032-4679-8e67-960f3039970a;image-20220819-125216.png;https://sifive.atlassian.net/secure/attachment/76193/image-20220819-125216.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-21T11:11:52.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,,,,,,,,,,,,,,,,2|i00m5j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26273/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,123191,[TGV] [RVV 7.5] Implement strided vector loads,In Progress
[TGV] REG->REG path from VEX IssQ0 to VEX IssQ1,,,,,,MAL-2444,123193,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/19/2022 5:50,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,Timing,,,,,,,,0,,,,"Some of the longest paths in TGV (pre-CTS) originate in VEX IssQ0. We need to start attacking these to find the next layer of problems. Fixing the REG->REG path will probably help the REG->ICG path show here.

{noformat}REG->REG :                    -0.143   vex/issueQueues_0/entries_6/ready_reg[0]/CP -> vex/issueQueues_1/entries_11/ready_reg[0]/D
REG->ICG :                    -0.115   vex/issueQueues_0/entries_4/ready_reg[0]/CP -> vex/issueQueues_1/entries_7/RC_CG_HIER_INST266/RC_CGIC_INST/E{noformat}

Full timing report is {{/project/tsmc/cln7ff/P6_ppa_runs/dforbis/TGV/run_area_0812/tgv_0812/pnr/placeopt/tgv_timing_placed_0812.rpt}}

+*Optimization tracks*+

* track (A) get rid of 1-cycle operation
* track (B) improve timing and keep current support of 1-cycle back to back

*Optimization hints for track (B)*

Reduce complexity of the selection logic. Is an AgeMatrix really required for vector performance ? Some operations require in-order issue, justifying the existence of that feature, but it could be implemented by a simpler selection mechanism (already available a version based on a priority encoder). The current selection logic takes around 200ps.
a) An extra simpler queue to maintain the order only for some operations
b) Add support to the current queue for a pointer mechanism to maintain the order of some operations. For example, [~accountid:62632262d7f1b80069c030b8]  is imagining a design where there should be a bit in each entry which indicates that an specific instruction should preserve an specific order (waitOlder), and also a pointer field to store the pointer to the next required operation. If the waitOlder bit is enable, the instruction can not be issued … So the first operation does not require order, so can be selected and issued, once it finish this will clear the waitOlder bit of the entry pointed by the pointer field. So, now that instruction is able to be executed … and so on … The operations that has the waitOlder bit disabled, can be executed as we do normally. For this, we can do first an experiment about how much is reduced the critical path by setting the simpler selection mechanism. If the results are as expected, then we could design something like the mechanism explained above.
3.- Wakeup: the increase on the number of tags is one of the reasons for the timing increase. Around 150ps are required for the tag matching mechanism to wakeup a new instruction.",Cristóbal Ramirez Lazo,David Forbis,David Kravitz,Josh Smith,Nicolas Brunie,,,,,,,,,,,62632262d7f1b80069c030b8,626058bb60d67c0068d9259c,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{repository={count=2, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-21T13:08:34.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Physical Design,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00m5b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,30:47.7,"12/Sep/22 6:30 PM;62632262d7f1b80069c030b8;h3. *Analysis*

The following critical path has a negative slack of -0.143 ns.
REG->REG : -0.143 vex/issueQueues_0/entries_6/ready_reg\[0]/CP -> vex/issueQueues_1/entries_11/ready_reg\[0]/D

The path starts by reading the ready signal from each issue queue entry. There can be several entries ready to be issue, however, only one can be issued to execute. Therefore, it is required to select only one ready entry(up to 16 entries per queue for p670). So, the selection logic is based on a age-matrix which takes around 200ps.
Once an instruction is selected, it is issued to the execution pipeline.

For those instructions that are 0-latency (simpler operations), it is required to perform the destination tag broadcast as soon as the instruction has been selected to be issued. So, the wakeup of the consumers must be perform immediately to exploit back-to-back execution.

Note that it is critical for performance to be able to execute dependent instructions in back-to-back cycles. This creates a single-cycle select → broadcast → wakeup loop which is generally very timing critical. This timing problem scales with the number of broadcasts per cycle and the total number of issue queue entries.

Note that if an Issue Queue is only used for instructions which have latency greater than 1, then this single-cycle loop is not required, and the issue selection and operand wakeup can be in separate pipeline stages to relieve timing pressure. However, we have operations with latency equal to 1, so this can not be avoided if back-to-back is supported.

Then, solutions to reduce the path without a high impact on performance must be based on microarchitectural modifications which will be listed on “*Hints for optimization*“ section.

Detailed path is shown below, and later the corresponding chisel code.

{noformat}#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Timing Point                                                                    Flags     Arc     Edge  Cell                         Fanout   Trans   Delay  Arrival   Load              Pin

(ns)    (ns)     (ns)   (pf)         Location

#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
vex/issueQueues_0/entries_6/ready_reg[0]/CP                                     <<< C1C2  CP      R     (arrival)                         9   0.000       -   -0.016  0.006  (146.03,303.50)
vex/issueQueues_0/entries_6/ready_reg[0]/Q                                       C1C2     CP->Q   R     DFQD4BWP240H8P57PDLVT             3   0.025   0.038    0.022  0.008  (145.12,305.10)
vex/issueQueues_0/placeopt_FE_RC_435121_0/ZN                                     C1C2     I->ZN   F     INVD8BWP240H8P57PDLVT             2   0.012   0.011    0.032  0.005  (145.24,303.18)
vex/issueQueues_0/placeopt_FE_RC_435120_0/ZN                                     C1C2     I->ZN   R     INVD10BWP240H8P57PDLVT            3   0.012   0.009    0.040  0.006  (150.65,305.14)
vex/issueQueues_0/placeopt_FE_RC_312377_0/ZN                                     C1C2     A1->ZN  F     ND2D8BWP240H8P57PDLVT             1   0.013   0.009    0.049  0.003  (152.42,304.66)
vex/issueQueues_0/placeopt_FE_RC_316347_0/ZN                                     C1C2     A2->ZN  R     ND2SKFD10BWP240H8P57PDLVT         1   0.011   0.010    0.059  0.004  (152.76,303.18)
vex/issueQueues_0/placeopt_FE_RC_325081_0/ZN                                     C1C2     A1->ZN  F     NR2D16BWP240H8P57PDLVT            5   0.016   0.011    0.069  0.012  (152.70,298.82)
vex/issueQueues_0/placeopt_FE_RC_435595_0/ZN                                     C1C2     A2->ZN  R     ND3OPTPAD12BWP240H8P57PDLVT       3   0.018   0.012    0.080  0.009  (156.69,289.26)
vex/issueQueues_0/placeopt_FE_OFC590809_FE_RN_153694_0/ZN                        C1C2     I->ZN   F     INVD12BWP240H8P57PDLVT            2   0.012   0.010    0.090  0.008  (154.07,295.78)
vex/issueQueues_0/placeopt_FE_RC_435637_0/ZN                                     C1C2     B2->ZN  R     INR3D4BWP240H8P57PDLVT            1   0.021   0.014    0.103  0.002  (153.44,295.86)
vex/issueQueues_0/placeopt_FE_RC_435708_0/ZN                                     C1C2     A2->ZN  F     ND2D6BWP240H8P57PDLVT             2   0.021   0.015    0.117  0.005  (156.58,292.18)
vex/issueQueues_0/placeopt_FE_RC_434841_0/ZN                                     C1C2     A1->ZN  R     NR2SKRD8BWP240H8P57PDLVT          1   0.014   0.011    0.128  0.004  (154.47,291.18)
vex/issueQueues_0/placeopt_FE_RC_434840_0/ZN                                     C1C2     A2->ZN  F     ND2D10BWP240H8P57PDLVT            3   0.021   0.014    0.141  0.009  (146.03,288.78)
vex/issueQueues_0/placeopt_FE_OCPC544655_n_47467/Z                               C1C2     I->Z    F     BUFFD10BWP240H8P57PDLVT           3   0.014   0.019    0.159  0.009  (145.01,290.40)
vex/issueQueues_0/placeopt_FE_RC_316236_0/ZN                                     C1C2     I->ZN   R     INVD16BWP240H8P57PDLVT            5   0.013   0.009    0.168  0.010  (134.41,295.98)
vex/issueQueues_0/placeopt_FE_RC_315665_0/ZN                                     C1C2     B1->ZN  F     AOI22D6BWP240H8P57PDLVT           1   0.017   0.011    0.178  0.002  (133.84,295.02)
vex/issueQueues_0/placeopt_FE_RC_433885_0/ZN                                     C1C2     A2->ZN  R     ND2D4BWP240H8P57PDLVT             1   0.009   0.010    0.187  0.002  (136.17,295.10)
vex/issueQueues_0/placeopt_FE_RC_64584_0/ZN                                      C1C2     A1->ZN  F     NR2OPTPAD6BWP240H8P57PDLVT        1   0.012   0.009    0.195  0.004  (136.12,295.98)
vex/issueQueues_0/placeopt_FE_RC_64583_0/ZN                                      C1C2     A1->ZN  R     ND2SKFD16BWP240H8P57PDLVT         3   0.026   0.014    0.208  0.012  (159.49,309.84)
vex/exPipes_0/placeopt_FE_RC_269567_0/ZN                                         C1C2     A1->ZN  F     ND2OPTPAD12BWP240H8P57PDLVT       1   0.017   0.011    0.218  0.003  (160.40,309.84)
vex/exPipes_0/placeopt_FE_RC_269565_0/ZN                                         C1C2     A1->ZN  R     ND2OPTPAD12BWP240H8P57PDLVT       2   0.013   0.010    0.227  0.007  (160.06,315.36)
vex/placeopt_FE_OCPC468633_FE_OFN210151_vex_io_vexPipeTag_0_0_bits_prIdx_13/ZN   C1C2     I->ZN   F     INVSKRD16BWP240H8P57PDLVT         3   0.048   0.020    0.247  0.019  (132.13,359.34)
vex/placeopt_FE_OCPC468636_FE_OFN210151_vex_io_vexPipeTag_0_0_bits_prIdx_13/ZN   C1C2     I->ZN   R     INVD10BWP240H8P57PDLVT            1   0.013   0.012    0.258  0.004  (131.44,360.00)
vex/placeopt_FE_OCPC357562_FE_OFN210151_vex_io_vexPipeTag_0_0_bits_prIdx_13/ZN   C1C2     I->ZN   F     INVSKRD16BWP240H8P57PDLVT        11   0.064   0.027    0.284  0.029  (102.26,395.34)
vex/issueQueues_1/placeopt_FE_RC_321245_0/ZN                                     C1C2     B1->ZN  R     AOI22SKFD4BWP240H8P57PDLVT        1   0.026   0.027    0.309  0.002  (102.20,396.72)
vex/issueQueues_1/placeopt_FE_RC_317965_0/ZN                                     C1C2     A3->ZN  F     ND3OPTPAD4BWP240H8P57PDLVT        1   0.018   0.015    0.322  0.002   (99.75,395.90)
vex/issueQueues_1/placeopt_FE_RC_317964_0/ZN                                     C1C2     A1->ZN  R     NR2D6BWP240H8P57PDLVT             1   0.013   0.012    0.333  0.003  (100.03,386.40)
vex/issueQueues_1/placeopt_FE_RC_435612_0/ZN                                     C1C2     A1->ZN  F     AOI31D4BWP240H8P57PDLVT           1   0.022   0.015    0.347  0.002  (100.43,386.70)
vex/issueQueues_1/placeopt_FE_RC_260854_0/ZN                                     C1C2     A2->ZN  R     ND2D6BWP240H8P57PDLVT             2   0.021   0.015    0.361  0.006   (98.38,378.06)
vex/issueQueues_1/placeopt_FE_RC_34605_0_dup/ZN                                  C1C2     A1->ZN  F     NR2D10BWP240H8P57PDLVT            3   0.011   0.011    0.371  0.006   (95.76,378.62)
vex/issueQueues_1/placeopt_FE_RC_312764_0/Z                                      C1C2     A2->Z   F     AN2OPTDHD16BWP240H8P57PDLVT       2   0.059   0.028    0.398  0.021   (30.67,363.36)
vex/issueQueues_1/placeopt_FE_OCPC467636_FE_OFN31490_FE_DBTN3802_n_51673/ZN      C1C2     I->ZN   R     INVD16BWP240H8P57PDLVT            2   0.021   0.014    0.411  0.008   (30.38,343.54)
vex/issueQueues_1/entries_11/placeopt_FE_RC_262539_0/ZN                          C1C2     B1->ZN  F     INR2OPTPAD8BWP240H8P57PDLVT       1   0.012   0.012    0.422  0.006   (27.02,331.82)
vex/issueQueues_1/entries_11/placeopt_FE_RC_327641_0/ZN                          C1C2     A2->ZN  R     NR4D8BWP240H8P57PDLVT             1   0.020   0.015    0.437  0.003   (22.23,327.90)
vex/issueQueues_1/entries_11/g66928/ZN                                           C1C2     A1->ZN  F     AOAI211D4BWP240H8P57PDLVT         1   0.012   0.013    0.449  0.000   (22.23,327.42)
vex/issueQueues_1/entries_11/ready_reg[0]/D                                     <<< C1C2  D       F     DFQND2BWP240H8P57PDLVT            1   0.012   0.000    0.449  0.000   (22.23,327.42)
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------{noformat}

h3. *Chisel code* 

{noformat}
  // The path starts by reading the ready state of each entry ---------------------------------------------------------------------------------------------------
  // Per-entry logic
  val readyVec      = entryState.map(_.ready).asUInt                                                                                  // IssQ.scala - line 1059
  
  // Then, selection is performed based on the ageMatrix  
  if (ip.ageOrder && !ip.fifo) {                                                                                                      // IssQ.scala - line 1173
    val issMux = Module(new AgedIssSelect(new IssReq(gen, new IssSrcInfo(mp), mp, ip.nSrcs, ip.nDsts), ip.nEnt) with InlineInstance)  // IssQ.scala - line 1175
    issMux.io.ready   := readyVec                                                                                                     // IssQ.scala - line 1176

    issReqPre_ISS.valid := readyVec.orR || r_inject                                                                                   // IssQ.scala - line 1183
    issReqPre_ISS.bits  := issMux.io.payOut                                                                                           // IssQ.scala - line 1174

    issTagMux.io.age  := ageMatrix.io.newerMatrix                                                                                     // IssQ.scala - line 1189

    issReqPre_ISS.bits.destInfo := issTagMux.io.payOut.asTypeOf(Vec(ip.nDsts, new DestTag(mp)))                                       // IssQ.scala - line 1194

  // The selected isntruction is send as output 
    io.issReq_ISS.valid := issReqPre_ISS.valid || crossIssInFire                                                                      // IssQ.scala - line 1196
    io.issReq_ISS.bits  := issReqPre_ISS.bits                                                                                         // IssQ.scala - line 1197

  // Now in VEX module ------------------------------------------------------------------------------------------------------------------------------------------
  issReq_ISS := issueQueues.map(_.io.issReq_ISS)                                                                                      // VEX.scala - line 270

  exPipes.zipWithIndex.foreach { case (e, i) =>                                                                                       // VEX.scala - line 550
    e.io.issReq_ISS         := issReq_ISS(i)                                                                                          // VEX.scala - line 554

  // Now in VexPipe module --------------------------------------------------------------------------------------------------------------------------------------

  val instTag_ISS = Wire(Valid(new MultiExPipeTag(mp, tp.nVectorDsts)))                                                               // VexPipe.scala - line 225
  instTag_ISS.valid                     := io.issReq_ISS.valid && !io.issReq_ISS.bits.payload.cmn.ctrl.v2s                            // VexPipe.scala - line 226
  instTag_ISS.bits.gid                  := io.issReq_ISS.bits.payload.cmn.gid                                                         // VexPipe.scala - line 227
  instTag_ISS.bits.globalID             := io.issReq_ISS.bits.payload.rvfi.globalID                                                   // VexPipe.scala - line 228
  instTag_ISS.bits.broadcasts(0)        := io.issReq_ISS.bits.destInfo(0).valid && io.issReq_ISS.bits.payload.cmn.ctrl.write_vd       // VexPipe.scala - line 229
  instTag_ISS.bits.tags(0).prIdx        := io.issReq_ISS.bits.destInfo(0).prIdx                                                       // VexPipe.scala - line 230
  instTag_ISS.bits.tags(0).monitorInIQ  := true.B                                                                                     // VexPipe.scala - line 231
  instTag_ISS.bits.broadcasts(1)        := io.issReq_ISS.bits.destInfo(0).valid && io.issReq_ISS.bits.payload.wide2ndDest             // VexPipe.scala - line 232
  instTag_ISS.bits.tags(1).prIdx        := io.issReq_ISS.bits.destInfo(1).prIdx                                                       // VexPipe.scala - line 233
  instTag_ISS.bits.tags(1).monitorInIQ  := true.B                                                                                     // VexPipe.scala - line 235

  val instTagZeroLatency_ISS = Pipe(instTag_ISS.valid && (io.issReq_ISS.bits.payload.ex.latency === 0.U), instTag_ISS.bits, 0)        // VexPipe.scala - line 252

  val instTagMuxed_ISS = Mux(instMultiCycInject_ISS, instTagInject_ISS,     instTagZeroLatency_ISS)                                   // VexPipe.scala - line 255

  io.thisPipeTags       := (0 until tp.nVectorDsts).map(dstId => VecInit({                                                            // VexPipe.scala - line 2061
                            Seq(instTagMuxed_ISS, instTagQual_RR, instTagQual_EX, instTagQual_WB).zipWithIndex.map({ case (t, i) =>   // VexPipe.scala - line 2062
                              val tmp = WireInit(0.U.asTypeOf(Valid(new TagBroadcast(mp))))                                           // VexPipe.scala - line 2063
                              tmp := Pipe(t.valid && t.bits.broadcasts(dstId), t.bits.tags(dstId), 0)                                 // VexPipe.scala - line 2064
                              tmp.bits.monitorInIQ := (i == 0).B                                                                      // VexPipe.scala - line 2065      
                              tmp                                                                                                     // VexPipe.scala - line 2066 
                            })                                                                                                        // VexPipe.scala - line 2067
                          }))                                                                                                         // VexPipe.scala - line 2068
  
  // Now in VEX module ------------------------------------------------------------------------------------------------------------------------------------------

  val exPipeTag       = exPipes.flatMap(_.io.thisPipeTags)                   ++ io.balVexPipeTag       ++ io.s2vPipeTag               // VEX.scala - line 126

  issueQueues.zipWithIndex.foreach { case (q, i) =>                                                                                   // VEX.scala - line 216
    q.io.exPipeTag := exPipeTag.map(p => VecInit(p.map(s => VecInit(Seq(s) ++ Seq.fill(mp.exWkParallel-1)(0.U.asTypeOf(s))))))        // VEX.scala - line 246

  // Now in IssQ module ------------------------------------------------------------------------------------------------------------------------------------------

  // Per-entry logic
  entries.zipWithIndex foreach { case (e, i) =>                                                                                       // IssQ.scala - line 1064
    e.io.exPipeTag                := io.exPipeTag                                                                                     // IssQ.scala - line 1101

  // Entry state
  val ready       = RegInit(0.U(2.W))                                                                                                 // IssQ.scala - line 321

  // Track source readiness for instruction in this entry.  If we are dispatching
  // to this entry, then up-to-date source information is provided as an input.
  srcInfo.zipWithIndex.foreach { case (s,i) =>                                                                                        // IssQ.scala - line 349
    val (info, ready, replay) = IssSrcMonitor(gen               = new IssSrcInfo(mp),                                                 // IssQ.scala - line 350
                                              pipeTag           = io.exPipeTag,                                                       // IssQ.scala - line 351
                                              ...

  // IssSrcMonitor result set the ready signal wich is a Register and the path ends ------------------------------------------------------------------------------{noformat}","12/Sep/22 6:56 PM;5acffeafaa802f2a797a955c;I’m actually curious how critical the single-cycle vector ops are for performance.  This sort of timing path doesn’t exist in FEX because there are no single-cycle FEX instructions.  The minimum latency instructions broadcast from RR stage, so there’s no issue queue pick → wakeup loop.

Also this concerns me (comparing the {{latency}} field of the issue payload to set the tag valid bit):

{noformat}val instTagZeroLatency_ISS = Pipe(instTag_ISS.valid && (io.issReq_ISS.bits.payload.ex.latency === 0.U), instTag_ISS.bits, 0)        // VexPipe.scala - line 252{noformat}

And this:

{noformat}  val destInfoSet = (payload.ex.latency === minLat.U) &&
                    (!ip.div.B || !payload.ex.div) &&
                    (!ip.vfphrzred.B || !payload.ex.vfphrzred) &&
                    (!ip.scie.B || !payload.ex.scieMc) &&
                    (!ip.vector.cmplxperm.B || !payload.ex.vcmplxperm) // non-complex vslide(up/down).vx should not have minLat
  io.issReq.destInfo.zip(destInfo).foreach ({case (outDestInfo, inDestInfo) => outDestInfo.valid := inDestInfo.valid && destInfoSet}){noformat}

Something like {{destInfoSet}} should be computed in the previous cycle.","12/Sep/22 8:39 PM;62632262d7f1b80069c030b8;Maybe a performance analysis from the performance team is required to see how much performance degradation there is for  single-cycle vector ops if back-to-back is not supported. For example, as [~accountid:5acffeafaa802f2a797a955c] mention, floating point operations does not require this single-cycle loop. So we should list which instructions requires only 1 cycle to be computed, and execute some kernels which exploits those operations. 

I did some similar experiments but with an scalar processor, where branches (usually 20-25% of the total inst count in average) for example are some of those 1 cycle operations, and that requires  back-to-back support, otherwise, performance degradation was huge. But for vector processors could be different.","12/Sep/22 9:11 PM;6065017e90e3950069cf01c5;Nice analysis

Nit picking

{quote}So, the selection logic is based on a age-matrix which takes around 200ns.{quote}

I hope you mean 200ps, else we have a much bigger issue.

Before requesting a perf study from the perf team, I would like to know why these paths appeared recently (why were their absent from earlier   synthesis-only run ? \[because of ULVT usage ? something else ?)

It seems that the paths you are showing cross from one issue queue to the next, what is the select within the same issue-queue / vexpipe ? 

Do we have an idea of the spatial extent of these paths ? (I am not familiar with the P&R flow so I don’t know if we have this type of impact in pre-cts)","12/Sep/22 9:26 PM;62632262d7f1b80069c030b8;*Hints for optimization* 

1.- Disable back-to-back support for 1 cycle operations ( Some insights on previous comments ). This would cut the critical path just in the middle.

      a) A performance analysis from the performance team is required to see how much performance degradation there is for single-cycle vector ops if back-to-back is not supported

If back-to-back is supported:

2.- Reduce complexity of the selection logic. It is required a AgeMatrix for vector performance ? There are some points about preserve the order of some operations that requires that feature, but can be implemented and change to a simpler selection mechanism (already implemented a version based on a priority encoder). The current selection logic takes around 200ps.

      a) An extra simpler queue to maintain the order only for some operations

      b) Add support to the current queue for a pointer mechanism to maintain the order of some operations. For example, I am imagining a design where there should be a bit in each entry which indicates that an specific instruction should preserve an specific order (waitOlder), and also a pointer field to store the pointer to the next required operation. If the waitOlder bit is enable, the instruction can not be issued  … So the first operation does not require order, so can be selected and issued, once it finish this will clear the waitOlder bit of the entry pointed by the pointer field. So, now that instruction is able to be executed … and so on …  The operations that has the waitOlder bit disabled, can be executed as we do normally. For this, we can do first an experiment about how much is reduced the critical path by setting the simpler selection mechanism. If the results are as expected, then we could design something like the mechanism explained above.

3.- Wakeup: the increase on the number of tags is one of the reasons because of the the increase in timing. Around 150ps are required for the tag matching mechanism to wakeup a new instruction. ","12/Sep/22 9:37 PM;62632262d7f1b80069c030b8;[~accountid:6065017e90e3950069cf01c5] , my fault, it is {{ps }}instead of {{ns}}. Fixed.

Regarding your concerns, I am not familiar with the P&R flow  as well. 

Regarding why these paths appeared recently, I need to analyze previous synthesis to answer this question. ","21/Sep/22 9:31 AM;5acffeafaa802f2a797a955c;Well for one thing, the entire path in the included timing report is using LVT cells, so this looks much worse than it should.","21/Sep/22 9:37 AM;626058bb60d67c0068d9259c;That’s standard for our build flow, at least through this stage of the flow.  ULVT usage gets way out of hand if we allow it during synthesis",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] [RVV 7.5] Implement strided vector loads,,,,,,MAL-2442,123191,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,8/19/2022 5:45,9/26/2022 23:59,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,TGV_RTL/RDU,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,0,,,,,Brad Wu,David Kravitz,John Ingalls,Srivatsa Yogendra,,,,,,,,,,,,62103777eb2978006893b778,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2455,,,,,,,,,,,,,,VI-8055,,,,,,MAL-2209,,,MAL-2445,MAL-2719,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-7,,[TGV] [RVV 7.5] strided loads,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,purple,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00m4v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,26:12.4,21/Aug/22 2:26 PM;5fd15143b4a74900763834e0;This epic corresponds to [~accountid:60e8c16ad6ba9a0077ad4e51]'s milestone #13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
"[TGV][RVV 16.6] vmv<nr>r does not move ""whole"" register",[TGV][RVV 16.6] vmv<nr>r ,Execution Unit ,,,,MAL-2441,123169,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Shaka Kao,5f94696c29bd8a006f94f0e1,Shaka Kao,5f94696c29bd8a006f94f0e1,8/19/2022 0:38,9/7/2022 17:43,9/28/2022 0:51,8/25/2022 19:26,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"Per the simulation log, it seems the {{vmv4r.v}} result is affected by VL and LMUL but it shouldn’t.

*NOTE*: To reproduce this bug, we need to update VTG environment manually currently.

*Update VTG*

in the federation repo
{noformat}cd riscv-vector-tests/
git pull origin master{noformat}
git log for updated repo:
{noformat}commit 16596900cd01028b047b522ed3295b29f103caea (HEAD, origin/master, origin/HEAD, master)
Author: Eric Cheng <eric.cheng@sifive.com>
Date:   Wed Aug 10 23:04:48 2022 +0800

    VI-7617 generate enough test case under all circumstance (#172){noformat}




*Simulation log:*

vmv4r.v v16, v12
VL=3 | SEW=32 | LMUL=1

{noformat}[COSIM-ERROR][0] m_dut: en=true r16=0xffff_ffff_8910_be83_47a4_62ce_6015_56ef mask=0000ffff
[COSIM-ERROR][0] m_sim: en=true r16=0x54a2_96de_8910_be83_47a4_62ce_6015_56ef mask=0000ffffen=true r17=0xa5eb_c1ab_30f1_e9eb_5dde_f6b2_65ba_4518 mask=0000ffffen=true r18=0x3efa_7236_bacb_5bb6_e2a1_0a4c_dab5_138f mask=0000ffffen=true r19=0x267f_c0b8_a464_2829_7e24_027c_d14e_7157 mask=0000ffff{noformat}

# The result only updates 3 elements;
# {{vmv4r.v}} should update 4 registers, but here it just moves one.



git hash: 47491f27211d9bbdc69bb062d253432e98a8d8f6

*Log/waveform:*

* gamma07
* /scratch/shakak/fed/testVTG/Build/coreip_u8_minimal_vector/sim/vmv4r/vmv4r_lmul1.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmv4r.v



*Rerun outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+verbose""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vmv4r.v"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vmv4r.v_Mask-2_Masking-1_Exception-0_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_NoSelfCheck-1_FLMUL-0_NonzeroVstart-1_VstartPercent-10_Sample-100_LMUL-1_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-1"",
  ""seed"": {
    ""value"": 1594007943
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Brad Wu,Nicolas Brunie,Shaka Kao,,,,,,,,,,,,,62103777eb2978006893b778,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-25T17:54:03.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00lzz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure : HWPF Hang,Assertion Failure : HWPF Hang,,,,,MAL-2440,123151,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,Deepika S K,622a9d30c4d0fe0069575ac9,Deepika S K,622a9d30c4d0fe0069575ac9,8/18/2022 22:49,9/6/2022 9:25,9/28/2022 0:51,8/24/2022 22:32,,,,,,,,,,,,,RTL/HWPF,,,,,,,,,0,,,,"*Error :* 

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/RIT-mallard-Base-Tests/387/builds/coreip_p550mc/verilog/design/SiFive_LSU.sv"", 9425: TestDriver.testHarness.system.subsystem.tile_prci_domain_2.tile.core.lsu: at time 9459022500 ps
assert failed (verification library): HWPF Hang  @[LSU.scala 2578:14]{noformat}

Assertion fails as {{hwpfReq_hangCounter}} exceeds threshold of {{17'h15F8F}} . 
From the waveform, {{TestDriver.testHarness.system.subsystem.tile_prci_domain_2.tile.core.lsu.hwpf.strideEntries_4.state[1:0] = 3}} , so the HWPF FSM continues to be in trained state.
The next state is decided by

{noformat}{~(_entValidUpdateWindowMatch_T_2 & ~update_strideMatch & forgiveThrdReached), 1'h1} {noformat}

It is expected that {{forgiveThrdReached}} and {{_entValidUpdateWindowMatch_T_2}}be asserted high for the state to change.

*Waveform :* 

!hwpfhang-20220818-175922.png|width=100%!

----

*Regression :* fed/master/RIT-mallard/387
*Simscope Link :* [https://simscope.internal.sifive.com/sigs/1399/cm7p4youm2mq|https://simscope.internal.sifive.com/sigs/1399/cm7p4youm2mq]
*Commit  :* 86883c9
*Config :* coreip_p550mc
*Steps to reproduce :* 

* create a directory test : 
{{mkdir -p sting_StingPipelineTuple_T_0257/sting/valtrix/algorithms/pipeline/rtype_add_to_load_dep.conf}}
* cd path just created
** {noformat}scp -r <username>@sigma72:/scratch/jenkins/archived-builds/fed/master/RIT-mallard-Base-Tests/387/builds/coreip_p550mc/sim/sim/moaoRIT.outline/sting_StingPipelineTuple_T_0257/sting/valtrix/algorithms/pipeline/rtype_add_to_load_dep.conf/* .{noformat}
** {noformat}Modify the vcs.sim.rerun.local to
  a. replace the simv to your local simv
  b. add this in any place +fsdbfile\=waves.fsdb +verbose
Modify cosim.cfg dtb to point to your local directory{noformat}

* run with {{source ./vcs.sim.rerun.local 2>&1 | tee simulation.err2}}

*rerun.outline  :* 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingPipelineTuple_T_0257"",
  ""subtest"": ""valtrix/algorithms/pipeline/rtype_add_to_load_dep.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1578241157
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



*Dump Path :* {{gamma26: /scratch/deepikas/mallard-RIT-387/federation/builds/coreip_p550mc/sim/sting_StingPipelineTuple_T_0257/sting/valtrix/algorithms/pipeline/rtype_add_to_load_dep.conf}}",Binayak Tiwari,Dave Parry,Deepika S K,John Ingalls,Josh Smith,,,,,,,,,,,60a963ed8cbda700681b40c1,5cc37f384573b30ffbeb88b0,622a9d30c4d0fe0069575ac9,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2490,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1540,,,,,,,,,,,,,,,,,,18/Aug/22 10:49 PM;ug:0c84c1d9-358d-4f68-993a-932052da7479;hwpfhang-20220818-175922.png;https://sifive.atlassian.net/secure/attachment/76151/hwpfhang-20220818-175922.png,,,,,,,,,,,,,,,,86883c9796accb72e5e14521acb7daab36c93aec,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-23T12:33:37.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25539,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00lvz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,59:05.6,"19/Aug/22 10:59 AM;60a963ed8cbda700681b40c1;The CSR bit for forgiveness threshold {{io_hwpfContro_forgiveThrd[1:0]}} is set to {{2}}, it should be {{0}} . This incorrect CSR value is causing the HWPF FSM to be in a trained state.","19/Aug/22 11:09 AM;5bb6808b9ba2930990f81895;This is a random test, so the design should be able to gracefully use any random value in the HWPF CSRs.",19/Aug/22 11:10 AM;5acffeafaa802f2a797a955c;Is {{2}} an invalid number or something?  There shouldn’t be a value that you can program to the CSR field which allows things to hang.,"19/Aug/22 1:27 PM;60a963ed8cbda700681b40c1;{{2}} is not an invalid number; it is not recommended for TWJ, and as [~accountid:5bb6808b9ba2930990f81895] suggests, hang should have been handled gracefully. Looking further, the root cause is not the CSR value.

HWPF engines are sending an early valid signal to the HWPFIssQ which is driving the hang counter, however,  the HWPFIssQ is not ready as all the entries are valid and not released. 

Looks like the replays in the LSTPipe1 are not releasing the HWPFIssQ entries. I am looking more into this.","23/Aug/22 11:51 AM;5cc37f384573b30ffbeb88b0;[~accountid:60a963ed8cbda700681b40c1] is this a pre-existing bug in Narwal (and earlier) HWPF, or something new in the prefetcher modifications for Panda?",23/Aug/22 12:12 PM;60a963ed8cbda700681b40c1;this bug was introduced due to changes made in [https://sifive.atlassian.net/browse/MAL-1540|https://sifive.atlassian.net/browse/MAL-1540|smart-link] and does not affect Narwal (and earlier) versions.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LSU LSTR unrolled UopNum should have a UopOffset  @[LSTPipe.scala 5707:18],[TGV] LSU LSTR,LSU (Load Store Unit),,,,MAL-2439,123140,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,John Ingalls,5bb6808b9ba2930990f81895,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,8/18/2022 19:20,9/7/2022 17:43,9/28/2022 0:51,8/25/2022 2:44,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"{noformat}Error: ""/scratch/sols/tgv4/federation/builds/6dbae287a59_sfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LSTPipe_assert.sv"", 5530: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LSTPipes_0.SiFive_LSTPipe_assert_0: at time 271262500 ps
assert failed (verification library): LSTR unrolled UopNum should have a UopOffset  @[LSTPipe.scala 5707:18]

Fatal: ""/scratch/sols/tgv4/federation/builds/6dbae287a59_sfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LSTPipe_assert.sv"", 5539: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LSTPipes_0.SiFive_LSTPipe_assert_0: at time 271262500 ps

$finish called from file ""/scratch/sols/tgv4/federation/builds/6dbae287a59_sfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LSTPipe_assert.sv"", line 5539.{noformat}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vle-vse"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

gamma11:/scratch/sols/tgv4/federation/builds/6dbae287a59_sfc/coreip_u8_minimal_vector/sim/sim4/tgv_vle-vse.outline/vector/vle-vse",Alexandre Solomatnikov,John Ingalls,,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/9726063b0dc648c82722e256fa440c358493173a,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{branch={count=1, dataType=branch}, json={""cachedValue"":{""errors"":[],""summary"":{""branch"":{""overall"":{""count"":1,""lastUpdated"":null,""dataType"":""branch""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25454,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00ltj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,54:08.0,"21/Aug/22 7:54 PM;5bb6808b9ba2930990f81895;Is this for LMUL>1?  If so, then this work is a task and not a bug, and the work is in progress in [https://github.com/sifive/federation/pull/25454|https://github.com/sifive/federation/pull/25454|smart-link] .","25/Aug/22 2:44 AM;5bb6808b9ba2930990f81895;Answer today: yes, this is for LMUL>1.
We're adding this functionality in https://sifive.atlassian.net/browse/MAL-2008, and somewhat refactored this logic in https://github.com/sifive/federation/pull/25454, to avoid this assertion too.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LSU issue queue issues vector instruction with vlValid==0,[TGV] LSU  queue  vector instruction,LSU (Load Store Unit),,,,MAL-2438,123135,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,8/18/2022 18:07,9/7/2022 17:43,9/28/2022 0:51,8/19/2022 15:01,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"cc: [~accountid:5bb6808b9ba2930990f81895] [~accountid:5fd15143b4a74900763834e0] 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vle-vse"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

gamma11:/scratch/sols/tgv4/federation/builds/6dbae287a59_sfc/coreip_u8_minimal_vector/sim/sim/tgv_vle-vse.outline/vector/vle-vse",Alexandre Solomatnikov,John Ingalls,Josh Smith,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,18/Aug/22 6:11 PM;sols;MAL-2438.png;https://sifive.atlassian.net/secure/attachment/76137/MAL-2438.png,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/6dbae287a59b68641fcc8181e29b0a5ada38009c,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-19T14:40:33.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5f26e4f9d031decd4157f9ab15fc5f6c7c21cb99,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00lsf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,54:02.1,"18/Aug/22 6:11 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;!MAL-2438.png|width=1378,height=890!","18/Aug/22 6:26 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;If this is changed:

{noformat} # Test vector load with vlmul==8 followed by vector store with vlmul==8
-  vsetvli a2, a2, e8,m8
+  vsetvli a2, x0, e8,m8
   vle8.v v16, (a4)
   vse8.v v16, (s2){noformat}

then {{vlValid}} is 1 when vector instructions are issued.","18/Aug/22 6:54 PM;5acffeafaa802f2a797a955c;Okay, it looks like I accidentally undid the override of {{payload.vector.vconfig.vl}} before I merged in my PR when I was trying to fix compile errors.  And I forgot to override {{vlValid}} also. My bad.","18/Aug/22 11:25 PM;5acffeafaa802f2a797a955c;[~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] Could you try cherry-picking the change I made on branch {{MAL-2438-vlValid-fix}}?  I think I fixed {{vlValid}} and {{vl}} for the instructions issuing out of the LsIssQ, but the test is still hanging.  I’m not sure what might be wrong next.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Gate off buses that get broadcasted to all of the major units when TGV is idle,,,,,,MAL-2437,123131,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,8/18/2022 16:09,9/1/2022 20:24,9/28/2022 0:51,8/30/2022 23:52,,,,,,,,,,,,,Power,TGV_RTL/Top,,,,,,,,0,,,,"There are a bunch of buses that get broadcasted to issue queues and baler. This buses should be gated off when the unit is idle. For example, the ROB retire and commit pointers, ROB or branch flush information, etc. This toggling activity leads to dynamic energy consumption on combinational logic inside issue queues and baler units. So, the plan is to gate off those busses.

On 08/17/22 power results for Dhrystone are the following:

{adf:display=block}
{""type"":""table"",""attrs"":{""isNumberColumnEnabled"":false,""layout"":""default"",""localId"":""b4c87496-0152-48ec-a6ba-7991f20b2af6""},""content"":[{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Power Unit: mW""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Category                         ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Internal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Switching""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Leakage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Total""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""register""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.097""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.000""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""1.632""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""1.729""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""logic                             ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.628"",""marks"":[{""type"":""strong""},{""type"":""textColor"",""attrs"":{""color"":""#bf2600""}}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.525"",""marks"":[{""type"":""strong""},{""type"":""textColor"",""attrs"":{""color"":""#bf2600""}}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""2.722""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""3.875""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""clock""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.024""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.090""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.060""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.174""}]}]}]}]}
{adf}

Power  in register category was reduced previously by clock gating main TGV submodules .

Still is missing to reduce logic category. ",Cristóbal Ramirez Lazo,Josh Smith,,,,,,,,,,,,,,62632262d7f1b80069c030b8,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-30T23:50:00.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,b9757ae5d7660d4c71cde570a267b57994b73dec,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00lrj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,19:21.7,"18/Aug/22 4:19 PM;5acffeafaa802f2a797a955c;We need to be careful here.  For one thing, we need to not introduce any new timing paths.  The other thing is that it may be difficult to propagate information to the drivers of all of those buses that the vector unit is in fact idle.  Just adding AND gates at the input of the vector unit may also not do a great job of preventing toggling/glitches depending on the physical layout.","30/Aug/22 11:31 AM;62632262d7f1b80069c030b8;Switching activity on combinational logic was mostly caused by tag broadcast from i2v and f2v transfers. Those busses were always fed by {{instDestInfo_EX}} on Expipe and FEXpipe. I have added a condition to enable the flop only when it is a s2v operation, so avoiding unnecessary toggling.

Results from Power Artist :

{adf:display=block}
{""type"":""table"",""attrs"":{""isNumberColumnEnabled"":false,""layout"":""default"",""localId"":""b4c87496-0152-48ec-a6ba-7991f20b2af6""},""content"":[{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Power Unit: mW""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Category                         ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Internal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Switching""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Leakage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Total""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""register""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.182""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.000""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""1.632""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""1.729""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""logic                             ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.089"",""marks"":[{""type"":""textColor"",""attrs"":{""color"":""#bf2600""}}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.152"",""marks"":[{""type"":""textColor"",""attrs"":{""color"":""#bf2600""}}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""2.722""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""3.875""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""clock""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.045""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.179""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.060""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.174""}]}]}]}]}
{adf}

{adf:display=block}
{""type"":""table"",""attrs"":{""isNumberColumnEnabled"":false,""layout"":""default"",""localId"":""e93e087e-3e28-44d1-9dae-c26b5984c393""},""content"":[{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv/vex/issueQueues_1""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Power Unit: mW""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Category                         ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Internal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Switching""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Leakage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Total""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""register""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.000""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.000""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.089""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.089""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""logic                             ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.000"",""marks"":[{""type"":""textColor"",""attrs"":{""color"":""#bf2600""}}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.000"",""marks"":[{""type"":""textColor"",""attrs"":{""color"":""#bf2600""}}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.121""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.121""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""clock""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.000""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.000""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.005""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.005""}]}]}]}]}
{adf}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][Baler] Internal Baler VMB read request/response paths,,,,,,MAL-2436,123113,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Won't Do,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/18/2022 12:53,8/30/2022 5:46,9/28/2022 0:51,8/30/2022 5:44,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2435,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-2212,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00lnj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Aug/22 5:46 AM;6065017e90e3950069cf01c5;It has been decided (discussion between [~accountid:5fd15143b4a74900763834e0]  & [~accountid:609d7e1f5998a6006800dcc5] ) to not implement an internal Baler read path from VMB : masks will be read directly from the mask-PRF when required by the Baler, thus this task is no longer required.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][Baler] Wakeup to LSU only when all mask data in VMB,,,,,,MAL-2435,123112,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/18/2022 12:52,9/2/2022 0:26,9/28/2022 0:51,8/30/2022 5:44,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"The “all mask data in VMB” is currently simplified by the fact we read the VLEN-wide mask at once, and so when the mask is read the wake-up of any dependent LSU uop can be triggered.",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2436,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-28T23:37:06.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2212,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/5fb4361db86f5bb0a806d9320c58f6caa4dec35c,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00lnb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LTB PRA lookup request not matching expected uopIDs,[TGV] LTB PRA lookup request,LSU (Load Store Unit),,,,MAL-2434,123083,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Known Error,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/18/2022 9:50,9/7/2022 17:43,9/28/2022 0:51,8/18/2022 12:25,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"cc: [~accountid:5bb6808b9ba2930990f81895] [~accountid:5fd15143b4a74900763834e0] 

{noformat}Error: ""/scratch/sols/tgv4/federation/builds/7e5a10653b1_sfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LTBPipe_assert.sv"", 137: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.bal.ltb.ltbPipes_0.SiFive_LTBPipe_assert_0: at time 271522500 ps
Assertion failed: LTBPipe tag match on multiple entries

    at LTBPipe.scala:138 assert(PopCount(ltbTagMatch_EX) === 1.U, ""LTBPipe tag match on multiple entries"")


Fatal: ""/scratch/sols/tgv4/federation/builds/7e5a10653b1_sfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LTBPipe_assert.sv"", 146: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.bal.ltb.ltbPipes_0.SiFive_LTBPipe_assert_0: at time 271522500 ps
$finish called from file ""/scratch/sols/tgv4/federation/builds/7e5a10653b1_sfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LTBPipe_assert.sv"", line 146.{noformat}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vle-vse"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

gamma11:/scratch/sols/tgv4/federation/builds/7e5a10653b1_sfc/coreip_u8_minimal_vector/sim/sim2/tgv_vle-vse.outline/vector/vle-vse",David Kravitz,,,,,,,,,,,,,,,5fd15143b4a74900763834e0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2410,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,18/Aug/22 9:50 AM;ug:03996552-4b14-4132-be2b-a08c9c621951;Screen Shot 2022-08-17 at 7.26.21 PM.png;https://sifive.atlassian.net/secure/attachment/76110/Screen+Shot+2022-08-17+at+7.26.21+PM.png,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/33a238c60813fc6625795d9aa8643bf142ac4159,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00lgv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Aug/22 12:25 PM;5fd15143b4a74900763834e0;I thought there were 2 different contributors to MAL-2410, so split one of them out. It turns out the LTB fix also solves the assert report there. Closing this one.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
p650 build fails on enabling floatingPointHalfPrecisionPresent,p650 build fails floatingPointHalfPrecisionPresen,,,,,MAL-2433,123068,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Rakesh Palakurthi,62350e943eacc50071ff0753,Rakesh Palakurthi,62350e943eacc50071ff0753,8/18/2022 8:15,9/21/2022 10:58,9/28/2022 0:51,8/23/2022 13:05,,,,,,,,,,,,,RTL/FEX,,,,,,,,,0,,,,"We are seeing p650 build is failing on enabling {{floatingPointHalfPrecisionPresent}} to true

{noformat}at ... (Stack trace trimmed to user code only. Rerun with --full-stacktrace to see the full stack trace)
srun: error: theta236: task 0: Exited with exit code 1
make: *** [/scratch/rakeshp/panda_fp/federation/mk/common//firrtl.mk:71: /scratch/rakeshp/panda_fp/federation/builds/coreip_p650/firrtl/.firrtl_build_intermediate] Error 1{noformat}



local path:

{noformat}gamma28:/scratch/rakeshp/panda_fp/federation/builds/coreip_p650{noformat}



git branch:  [zfh_p550_verif_exp_branch|https://github.com/sifive/federation/compare/zfh_p550_verif_exp_branch]

[https://github.com/sifive/federation/blob/1caff4bbe42d3600df7886b2f26e51f7a19dbff9/specs/design-definitions/tiles/tile_p650.json#L7|https://github.com/sifive/federation/blob/1caff4bbe42d3600df7886b2f26e51f7a19dbff9/specs/design-definitions/tiles/tile_p650.json#L7]

build was passing when {{floatingPointHalfPrecisionPresent}} is removed from json.

Can you please take a look

cc: [~accountid:6065017e90e3950069cf01c5] ",Josh Smith,Nicolas Brunie,Rakesh Palakurthi,,,,,,,,,,,,,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,62350e943eacc50071ff0753,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,22/Aug/22 3:04 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220822-100336.png;https://sifive.atlassian.net/secure/attachment/76281/image-20220822-100336.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-08-24T02:57:44.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/c922ce7abfb402bf6a831cec4c0b9b7a6269023f,,,n/a,,,,,,,,,Other -- Put in description,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i00ldj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,05:25.3,"18/Aug/22 9:05 AM;6065017e90e3950069cf01c5;The actual error is 

{noformat}Exception in thread ""main"" java.lang.IllegalArgumentException: requirement failed
        at ... ()
        at sifive.enterprise.fp.DivRawFNDigitRec.<init>(DivRecFNDigitRec.scala:542)
        at sifive.enterprise.fp.DivRecFNToRawDigitRec.$anonfun$divSqrtRawFN$2(DivRecFNDigitRec.scala:890)
        at chisel3.Module$.do_apply(Module.scala:53){noformat}

[https://github.com/sifive/federation/blob/master/src/main/scala/fp/DivRecFNDigitRec.scala#L542|https://github.com/sifive/federation/blob/master/src/main/scala/fp/DivRecFNDigitRec.scala#L542]

{noformat}  // We want the pre-output delay to be feasible:
  // - it must be strictly greater than 0
  // - it must be less than the number of iterations for every format
  require(!(preOutNotifyDelay > 0) || (radixN_numIters.forall(preOutNotifyDelay < _)))
{noformat}

It looks like the preOutNotifyDelay option is too long with respect to the half precision latency.","19/Aug/22 8:54 AM;6065017e90e3950069cf01c5;fix submitted for review [https://github.com/sifive/federation/pull/25450|https://github.com/sifive/federation/pull/25450|smart-link] , require a bit more investigation:

* check that early notif for half precision division is set when expected (very first cycle)

May need some cleanup","22/Aug/22 3:04 AM;6065017e90e3950069cf01c5;{{./sitest rv64uzfh-fdiv}}

{{gamma12:/scratch/nicolasb/federation_bis/builds_mfc/coreip_p650/sim/sim/rv64uzfh-fdiv}}

!image-20220822-100336.png|width=2461,height=586!

We have an early div one cycle after division starts and two cycles before it ends.",23/Aug/22 1:05 PM;6065017e90e3950069cf01c5;It would be good to enable this features in a spanning configuration and track stability across a large test run.,"24/Aug/22 1:51 AM;62350e943eacc50071ff0753;Updated the standard configs p550 and p650 to keep track of this features in regressions
https://github.com/sifive/federation/pull/25552",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LSU: non-DLEN-aligned accesses to MMIO,[TGV] LSU: non-DLEN-aligned accesses  MMIO,LSU (Load Store Unit),,,,MAL-2432,123064,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Highest,Done,John Ingalls,5bb6808b9ba2930990f81895,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/18/2022 7:48,9/23/2022 12:00,9/28/2022 0:51,8/22/2022 10:50,panda.00.00,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"Trying to run with more-random alignments; approx 80% of tests fail with this assert:

{noformat}Error: ""/scratch/verif/davidk2/misaligned/builds/coreip_u8_minimal_vector/verilog/testbench/TileLinkMonitor_1.sv"", 8149: TestDriver.testHarness.monitor_1: at time 2277022500 ps
assert failed (verification library): 'A' channel Get address not aligned to size  @[Monitor.scala 189:13]
Fatal: ""/scratch/verif/davidk2/misaligned/builds/coreip_u8_minimal_vector/verilog/testbench/TileLinkMonitor_1.sv"", 8158: TestDriver.testHarness.monitor_1: at time 2277022500 ps{noformat}


Code around assert is:

{noformat}    220812a6:	41e003b7          	lui	t2,0x41e00
    220812aa:	0403839b          	addiw	t2,t2,64
    220812ae:	08000293          	li	t0,128
    220812b2:	00a282b3          	add	t0,t0,a0
    220812b6:	0053f2b3          	and	t0,t2,t0
    220812ba:	00029663          	bnez	t0,220812c6 <address_alligned_2_16_0_hv_0>
    220812be:	00800293          	li	t0,8
    220812c2:	005383b3          	add	t2,t2,t0

00000000220812c6 <address_alligned_2_16_0_hv_0>:
    220812c6:	02038f07          	vle8.v	v30,(t2){noformat}

Based on trace, the address looks OK to me, so not sure what’s going on. [~accountid:5bb6808b9ba2930990f81895], can you please track down a little and pass on if root cause lies elsewhere?

{noformat}C                   0:     113638 [1] pc=[00000000220812a2] W[r10=0000000000000010][1] R[r10=ffffffffffffffff] R[r 0=0000000000000000] inst=[00057557] vsetvli a0, a0, e8, m1, tu, mu
C                   0:     113639 [1] pc=[00000000220812a6] W[r 7=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[41e003b7] lui     t2, 0x41e00
C                   0:     113639 [1] pc=[00000000220812aa] W[r 7=0000000041e00040][1] R[r 7=0000000000000004] R[r 0=0000000000000000] inst=[0403839b] addiw   t2, t2, 64
C                   0:     113640 [1] pc=[00000000220812ae] W[r 5=0000000000000080][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[08000293] li      t0, 128
C                   0:     113640 [1] pc=[00000000220812b2] W[r 5=0000000000000090][1] R[r 5=0000000000000080] R[r10=0000000000000010] inst=[00a282b3] add     t0, t0, a0
C                   0:     113640 [1] pc=[00000000220812b6] W[r 5=0000000000000000][1] R[r 7=0000000041e00040] R[r 5=0000000000000090] inst=[0053f2b3] and     t0, t2, t0
C                   0:     113640 [1] pc=[00000000220812ba] W[r 0=0000000000000000][0] R[r 5=0000000000000000] R[r 0=0000000000000000] inst=[00029663] bnez    t0, pc + 12

*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 455404 simulation cycles (in TestDriver.report_phase_actions){noformat}",Andrew Waterman,David Kravitz,John Ingalls,Megan Wachs,Nicolas Brunie,Yohann Rabefarihy,,,,,,,,,,557058:2bf71e6f-9968-41e2-922e-ea2087024cbc,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,6065017e90e3950069cf01c5,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1795,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-23T09:44:55.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,P500,P600,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25501,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00lcn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"commit hash `147ec85b9cfc6676312489bf0cd9dbbfaf5d2375`
`coreip_u8_minimal_vector`, `make sim && cd sim`
./sitest <with following outline>

Outline:
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": \[
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0000"",
  ""subtest"": ""sifive/regress.d/vector/vector_tgv_ldst_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1791095845
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""uvm"": {
    ""set_config_string"": \[
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))

",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,01:30.0,"18/Aug/22 7:52 AM;5fd15143b4a74900763834e0;Outline has been posted to `/work/nicolasb/tgv_bug_outlines/sting/MAL-2342.outline`

Waves available in `davidk2@gamma13:/scratch/verif/davidk2/misaligned/builds/coreip_u8_minimal_vector/sim/sim/vector_tgv_ldst_dev.outline/t0000/sting/sifive/regress.d/vector/vector_tgv_ldst_dev.conf`","18/Aug/22 4:01 PM;5bb6808b9ba2930990f81895;In this scenario, the load is to MMIO starting at an _element_-aligned but not _dlen_-aligned address.  This _is_ architecturally allowed.

The logic in Mallard has this FIXME from [https://github.com/sifive/federation/pull/23662|https://github.com/sifive/federation/pull/23662|smart-link] :

{noformat}    // FIXME-TGV this vector size only work for unit stride non indexed (fetch aligned block)
    // once this part will be more complex for other kind of load, please move it to VectorAGU.scala
    rr_lgSize := Mux(isa.v.B && rr_payload_q.cmn.ctrl.v, mp.tgvParams.dBytes.log2.U, rr_payload_q.cmn.ctrl.mem_size(isa)){noformat}

The logic in Bullet is more complex:

{noformat}  val s0_fetch_aligned_block = s0_req.uop.vmem_unit_if_not_indexed || s0_req.vmem_nf > 0
  val s0_fast_unit_stride    = s0_req.uop.vmem_unit_if_not_indexed && (s0_req.vmem_nf === 0 || s0_req.fast)
  val s0_size                = Mux(s0_fetch_aligned_block, u.dBytes.log2.U, s0_req.uop.vmem_static_ew){noformat}

I’m thinkin'… 🤔 ","21/Aug/22 7:18 PM;5bb6808b9ba2930990f81895;The RISC-V ""V"" Vector Extension has these statements on the topic:

* For unordered instructions ({{mop[1:0]}}\!=11) there is no guarantee on element access order. If the accesses are to a strongly ordered IO region, the element accesses can be initiated in any order. Note: To provide ordered vector accesses to a strongly ordered IO region, the ordered indexed instructions should be used.
* Element accesses within a strided instruction are unordered with respect to each other.
* When {{rs2}}={{x0}}, then an implementation is allowed, but not required, to perform fewer memory operations than the number of active elements, and may perform different numbers of memory operations across different dynamic executions of the same static instruction. Note: Compilers must be aware to not use the {{x0}} form for rs2 when the immediate stride is {{0}} if the intent to is to require all memory accesses are performed.
* When {{rs2!=x0}} and the value of {{x[rs2]=0}}, the implementation must perform one memory access for each active element (but these accesses will not be ordered). Note: As with other architectural mandates, implementations must _appear_ to perform each memory access. Microarchitectures are free to optimize away accesses that would not be observed by another agent, for example, in idempotent memory regions obeying RVWMO. For non-idempotent memory regions, where by definition each access can be observed by a device, the optimization would not be possible.
* Vector misaligned memory accesses follow the same rules for atomicity as scalar misaligned memory accesses.

I see these three possible solutions:

# Take an address misaligned exception on all but indexed instructions to MMIO memory regions.  I.e. in ISA terms:
“If an element accessed by a (unit-)strided vector memory instruction is not naturally aligned to the size of -the element- *_DLEN_*, either the element is transferred successfully (i.e. from cacheable or idempotent memory) or an address misaligned exception is raised on that element (i.e. from MMIO regions).
Pro: minimal hardware work.
Con: non-compliant with the ISA, but at least obviously notifying so.
# Over-read for misaligned (unit-)strided vectors (i.e. not indexed) in MMIO memory regions.  I.e. in ISA terms, require that:
”To limit side effects in a non-idempotent IO region, only the (ordered) indexed instructions should be used in such a region.”
Pro: minimal hardware work.
Con: silently non-compliant with the ISA.
# Slowly unroll each element from within a (unit-)strided memory instruction.
Pro: complies exactly with “Vector misaligned memory accesses follow the same rules for atomicity as scalar misaligned memory accesses.”
Con: this is the most hardware work: a new load/store unroll path in the LSTPipe from the LSTM stage, which is the first stage when the DTLB result is available, and is the stage _after_ we otherwise decide to unroll misaligned ops from LSTR.

⚖️ ","22/Aug/22 10:50 AM;5bb6808b9ba2930990f81895;[https://github.com/sifive/federation/pull/25501|https://github.com/sifive/federation/pull/25501] goes with solution #2 for now:

{quote}2. Over-read for misaligned (unit-)strided vectors (i.e. not indexed) in MMIO memory regions.  I.e. in ISA terms, require that:
”To limit side effects in a non-idempotent IO region, only the (ordered) indexed instructions should be used in such a region.”
Pro: minimal hardware work.
Con: silently non-compliant with the ISA.{quote}","06/Sep/22 11:23 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;[~accountid:5bb6808b9ba2930990f81895] , [~accountid:5fd15143b4a74900763834e0] for clarity this issue was only affecting TGV, yes? So we can change this to Affects Previously Released = No?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Dispatch Steering Feasibility,,,,,,MAL-2431,123057,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,François Donati,624f6b22f813eb00692ee29a,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/18/2022 5:35,9/22/2022 14:53,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/RDU,,,,,,,,0,,,,"Ticket to track feasibility work for dispatch for Healdsburg.

This is mostly a concern for IEX, as the current plan is to increase from 4 pipes (in P650) to 7 pipes.  We probably need to redesign the logic that assigns instructions to individual issue queues/pipes and steers instructions to the proper dispatch port.

This will also interact closely with the dispatch buffer growth feasibility.",John Ingalls,Josh Smith,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2423,MAL-1315,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00lb3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] implement VMB PRA,,,,,,MAL-2430,123051,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/18/2022 4:20,8/26/2022 1:33,9/28/2022 0:51,8/20/2022 13:28,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-20T13:28:13.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2213,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/5a43f9648654ed9d2a7c246485cb4076be299b28,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00l9r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: L2 TLB multi-hit,Assertion Failure: L2 TLB multi-hit,L2,TLB,,,MAL-2429,123029,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,8/17/2022 23:22,8/25/2022 16:46,9/28/2022 0:51,8/25/2022 16:35,,,,,,,,,,,,,RTL/PTW,,,,,,,,,0,,,,"*Error:*

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/348/builds/coreip_p650/verilog/design/assertions/SiFive_L2TLB_1_assert.sv"", 89: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.ptw.L2TLB_1.SiFive_L2TLB_1_assert: at time 11830502500 ps
Assertion failed: L2 TLB multi-hit

    at L2TLB.scala:332 assert((PopCount(s2_hit_vec) === 1.U) || s2_error, ""L2 TLB multi-hit""){noformat}

TLB Multi hit is observed for {{feu.ptw._arb_io_out_bits_bits_addr[37:0] = 0x3ffc2cc001.}} Both {{s2_hit_vec_0}} & {{s2_hit_vec_1}} are asserted for this.



*Build*: coreip_p650

*Commit*: f10f8cc

*Regression*: master/nightly-mallard/348 

*Simscope*: [https://simscope.internal.sifive.com/sigs/5594/cm8637ad76rq|https://simscope.internal.sifive.com/sigs/5594/cm8637ad76rq]

*rerun.outline*: 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+MEM_ERROR_INJECT=.*\\.cc_banks.*ext,1,0,32:.*\\.cc_dir_ext,0,1,15:.*\\.icDataArray.*ext,1,0,32:.*\\.l2_tlb_ram_ext,1,0,20:.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.RamBank.*ext,1,0,15:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.icWayPredArray.*ext,1,0,25"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""sting_StingHypervisorTuple_T_0148"",
  ""subtest"": ""valtrix/hypervisor/dflt_memblk_hyp_ldst_hs_userva.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 308417593
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",John Ingalls,Josh Smith,Saurabh Singh,Sihao Liu,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,607e26f781e7b900681be48c,62b1563ab065974c3e23a9ea,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1097,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-25T16:04:05.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/25da01628ee04e7bc09af5bd889752bb13f807ad,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00l4v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,48:13.5,"18/Aug/22 7:48 AM;5bb6808b9ba2930990f81895;This could be either a hardware bug or deliberate software behavior (huge page coalescing in action).

[~accountid:62b1563ab065974c3e23a9ea] can you please take a look first this week?",18/Aug/22 1:23 PM;62b1563ab065974c3e23a9ea;[~accountid:607e26f781e7b900681be48c] We're hitting a wall-clock timeout when rerunning this test.  Can you please share a path to a rerun directory with waves?  We don't have Okta access to SimScope on the RTL team yet.,"22/Aug/22 12:28 AM;607e26f781e7b900681be48c;[~accountid:62b1563ab065974c3e23a9ea] 
Dump is available at {{gamma27:/scratch/saurabhs/mallard_master_348_xprop_132/federation/builds/coreip_p650/sim/sim/L2TLB.outline/sting_StingHypervisorTuple_T_0148/sting/valtrix/hypervisor/dflt_memblk_hyp_ldst_hs_userva.conf}}","25/Aug/22 10:38 AM;62b1563ab065974c3e23a9ea;This is a corner case when hit on 2MB L2TLB, but miss and error on 4KB L2TLB. 

The outside PTW see error (from 4KB L2TLB) and hit (from 2MB L2TLB), so it continues PTW and brings PTE back to refill 2MB L2TLB, which cause multi-way have the same PTE, and further causes multi-hit

Expected behavior: The invalidation is for 4KB L2 TLB internal only, and the PTW should be stopped and return L2 Hit entry from 2MB L2 TLB, which means there is no error from the view of outside PTW. 

Fixed in PR [https://github.com/sifive/federation/pull/25605|https://github.com/sifive/federation/pull/25605|smart-link] , local rerun pass.","25/Aug/22 4:24 PM;5acffeafaa802f2a797a955c;[~accountid:62b1563ab065974c3e23a9ea] if you already merged in the fix and were able to verify the fix in your work area, you can mark the ticket as resolved and assign it back to Saurabh",25/Aug/22 4:27 PM;62b1563ab065974c3e23a9ea;One line fix to deal with the corner case when error on miss at one L2TLB but no error on hit at the other.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] FreeList stall / ROB hang due to a vector PRF Freelist bank exhaustion ,[TGV] FreeList stall / ROB hang ,Execution Unit ,Vex Pipe,,,MAL-2428,123027,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Ian Chuang,61aaae1d9615eb006f5ff922,Ian Chuang,61aaae1d9615eb006f5ff922,8/17/2022 22:48,9/27/2022 3:06,9/28/2022 0:51,9/13/2022 7:49,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"I am running into a problem that some microbenchmarks hang since a bank of Freelist runs out. The bank of Freelist runs out before the instructions that use the PRs in the bank are retired. I found this situation in the latency microbenchmarks of vector reduction instructions and vector integer compare instructions. 

This issue is related to [https://sifive.atlassian.net/browse/MAL-2349|https://sifive.atlassian.net/browse/MAL-2349|smart-link]. The workaround was to add nPRs up to 144, but it doesn’t always work since we still possibly exhaust all the PRs. 

Even though we find a way to fix the deadlock, I am concerned about the imbalance of Freelist bank usage. It looks like the imbalance comes from the requests from the vector sequencer. That would probably be a performance issue and miscorrelation. 

Here are some waveform snippets and comments on that. The pattern is like 

{noformat}vredmaxu.vs v8,v16,v24
vredmaxu.vs v24,v16,v8
vredmaxu.vs v8,v16,v24
vredmaxu.vs v24,v16,v8{noformat}

!image-20220818-055700 (553d66ef-cdc2-4575-a986-d0a00ca31828).png|width=1464,height=806!

!Snipaste_2022-08-18_15-16-21.png|width=885,height=365!

You can use the following command anywhere to reproduce the simulation. 

{{/work/sparta/scripts/run_rtlsim.sh -v latest -c p67 -p 0080/146 -s vcs -w}}",Alexandre Solomatnikov,Automation for Jira,Brian Grayson,David Kravitz,Fu-Ching Yang,Ian Chuang,I-Cheng Cheng,Jaksa Djordjevic,John Echard,John Ingalls,Josh Smith,Knute Lingaard,Megan Wachs,Nicolas Brunie,Zhen Wei,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,557058:f58131cb-b67d-43c7-b30d-6b58d40bd077,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,61aaae1d9615eb006f5ff922,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6258a58313c2c8006a372228,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,5e1374fb7a22c90da0c60495,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,6065017e90e3950069cf01c5,5e49f622a17f930c9b94b6cd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2478,,,,,,,18/Aug/22 12:38 AM;ug:289ae57a-9468-42e4-b3c7-1f69f2f4f10e;Snipaste_2022-08-18_15-16-21.png;https://sifive.atlassian.net/secure/attachment/76078/Snipaste_2022-08-18_15-16-21.png,18/Aug/22 6:07 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;Vector Reduction - complex reduction sequencing-20220818-130403.png;https://sifive.atlassian.net/secure/attachment/76095/Vector+Reduction+-+complex+reduction+sequencing-20220818-130403.png,18/Aug/22 12:38 AM;ug:289ae57a-9468-42e4-b3c7-1f69f2f4f10e;image-20220818-055700 (553d66ef-cdc2-4575-a986-d0a00ca31828).png;https://sifive.atlassian.net/secure/attachment/76079/image-20220818-055700+%28553d66ef-cdc2-4575-a986-d0a00ca31828%29.png,,,,,,,,,,,,,,,No,,Mid Core,Vector,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-13T07:49:27.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/9b5d212dca295757f08a55dd1f4ef27aab08fad3,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00l4f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/25857/files],,,,,,,,,,,,,48:33.6,"17/Aug/22 10:48 PM;557058:f58131cb-b67d-43c7-b30d-6b58d40bd077;*Potential CAT-A Alert*: Ian Chuang has just indicated Potential CAT-A with the bug MAL-2428
[~accountid:5acffeafaa802f2a797a955c], Could you please triage the reported bug as the area owner and call an emergency BRC meeting if CAT-A is positively confirmed?","17/Aug/22 11:35 PM;6065017e90e3950069cf01c5;this is not a CAT-A, there is no such HW","17/Aug/22 11:36 PM;6065017e90e3950069cf01c5;I am not sure I understand your analysis [~accountid:61aaae1d9615eb006f5ff922] , you correlate the sequencer lane/track 0 to the exhaustion of the freeList bank 0 ?",17/Aug/22 11:36 PM;6065017e90e3950069cf01c5;Could you detail how to reproduce your run (for a simple designer 🙂 ) ?,"18/Aug/22 12:05 AM;61aaae1d9615eb006f5ff922;{quote}this is not a CAT-A, there is no such HW{quote}

Yes… mischecked that.

{quote}Could you detail how to reproduce your run{quote}

Sorry, I went to join a meeting as I didn’t finish the writing. ","18/Aug/22 12:31 AM;5acffeafaa802f2a797a955c;[~accountid:61aaae1d9615eb006f5ff922] This assertion should have been fixed by this PR: [https://github.com/sifive/federation/pull/25354|https://github.com/sifive/federation/pull/25354|smart-link] 

Can you confirm whether your work area has the commit from that PR or not?","18/Aug/22 1:57 AM;61aaae1d9615eb006f5ff922;[~accountid:5acffeafaa802f2a797a955c], the above waveform is based on the SHA without your commit but the latest performance correlation regression including that commit still shows the hang issue. ","18/Aug/22 4:10 AM;5acffeafaa802f2a797a955c;[~accountid:61aaae1d9615eb006f5ff922] Can you point me to the performance correlation test that is still hanging even with my fix?  If there’s a waveform that would be good, I don’t know exactly how to run the correlation tests.

{quote}Even though we find a way to fix the deadlock, I am concerned about the imbalance of Freelist bank usage. It looks like the imbalance comes from the requests from the vector sequencer. That would probably be a performance issue and miscorrelation.{quote}

Yes, you are correct that the vector rename makes unbalanced use of the freelist.  I’ve been saying since day one that could be an issue.  [~accountid:5e1374fb7a22c90da0c60495] was working on modeling the banked freelist to see if we needed to add any fancy logic to load balance the banks to avoid unnecessary stalls.  Specifically for TGV, I don’t have time at the moment to make sure that the free list is running optimally.  Right now I can only commit to make sure that it is functional and not hanging.  I made the comment in my PR that my fix was only to avoid deadlocks, it is not the most performant scheme.","18/Aug/22 4:15 AM;5acffeafaa802f2a797a955c;Just a note, TGV only needs to make use of the banked free list because right now we are supporting renaming up to 4 widening uops per cycle (and we would need to rename up to 8 PRs per cycle).  If we made the decision to only support up to 2 widening operations per cycle, then we could revert to only needing to rename up to 4 vector PRs per cycle and we actually wouldn’t need the banked freelist at all (P650 meets timing at renaming 4 PRs/cycle without the banked freelist).  That may be reasonable, because we only have 2 VEX pipes anyway, so 4 widening uops/cycle would be bottlenecked by the number of VEX pipes instead.",18/Aug/22 5:48 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;[~accountid:6065017e90e3950069cf01c5] to be clear this is only for TGV (as for the cat-A flag?),18/Aug/22 5:49 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;Or this is an issue for any mallard and tgv just happens to be hitting it?,"18/Aug/22 5:59 AM;6065017e90e3950069cf01c5;This is not a CAT-A, it was a misfire. It only affects TGV",18/Aug/22 5:59 AM;6065017e90e3950069cf01c5;(This concerns the freelist for the physical vector registers).,"18/Aug/22 6:07 AM;6065017e90e3950069cf01c5;A few details:

a {{vredmax.vs}} may allocate up to *11* temporary registers (and an extra 12th physical register architecturally visible).

If there are multiple such insns in a ROB groups this means that we may allocate a (very large) lot of registers for this ROB group.

If the registers are only released when the group retires than hang conditions may happen pretty quickly if the registers are only pooled from one bank (and even if they are pulled accross banks)

!Vector Reduction - complex reduction sequencing-20220818-130403.png|width=2600,height=1890!","18/Aug/22 7:47 AM;5acffeafaa802f2a797a955c;{quote}a {{vredmax.vs}} may allocate up to *11* temporary registers (and an extra 12th physical register architecturally visible).{quote}

If this is the case, I would suggest that we look at limiting the number of reduction operations in each ROB group (I doubt that even limiting to 1 per group would noticeably impact performance).  Because as you pointed out, we will free up all the physical registers for an entire ROB group at once.  It looks like in the worst case this could be on the order of almost 80 PRs with reduction operations…","18/Aug/22 7:53 AM;6065017e90e3950069cf01c5;[~accountid:5acffeafaa802f2a797a955c] I think that is a good idea, moreover there are some reduction operations with larger requirement than {{vredmax}} (the widening fp sum for example).

We have a backlog item to avoid using as many registers but it is beyond the event horizon.","18/Aug/22 8:14 AM;5acffeafaa802f2a797a955c;[~accountid:61aaae1d9615eb006f5ff922] I looked at the waveform generated by running this command: {{/work/sparta/scripts/run_rtlsim.sh -v latest -c p67 -p 0080/146 -s vcs -w}}

This is not a problem with the freelist banks being used unevenly, the entire freelist becomes almost completely empty. I see that we are allocating a ton of PRs for a single ROB index, so this is likely due to the issue that Nicolas mentioned where a lot of PRs are being held up by a single ROB entry.","18/Aug/22 8:45 AM;61aaae1d9615eb006f5ff922;[~accountid:5acffeafaa802f2a797a955c], That’s the microbenchmark and waveform I mentioned. 

{quote}This is not a problem with the freelist banks being used unevenly, the entire freelist becomes almost completely empty.{quote}

I think that’s because you implemented the _steal_ feature. Before that commit, the freelist banks are used unevenly like the attached picture. The steal feature helps the balance a lot.  ","18/Aug/22 8:48 AM;5acffeafaa802f2a797a955c;Right, my point was that we have a real problem with too many vector PRs being held in a single ROB entry.  So to fix this hang, we have to fix something outside of the freelist.  We need to change the ROB grouping policies.

At a minimum, we could do something simple like when LMUL is 4 or 8, limit the number of vector instructions to one per ROB group.  Because we are already getting a bunch of uops in a single ROB group when LMUL is high.  We probably won’t be performance limited by ROB capacity in that case.","18/Aug/22 8:57 AM;61aaae1d9615eb006f5ff922;I understand a reduction instruction in high LMUL allocates lots of the PRs but I see the similar error in integer compare instructions in LUML 1 and not sure why. I am still checking that and would like to ask in advance if it is related to the mask accumulators? 

If you need a waveform, you can find it at {{/scratch/ianc/study/0080/188/rtl}} on gamma29, or you can generate it by yourself using {{/work/sparta/scripts/run_rtlsim.sh -v latest -c p67 -p 0080/188 -s vcs -w}}.","18/Aug/22 9:02 AM;5acffeafaa802f2a797a955c;This could be a problem with any resource that is freed up after ROB retirement, or ROB completion.","22/Aug/22 11:31 AM;5fd15143b4a74900763834e0;[~accountid:5acffeafaa802f2a797a955c], should we bite the bullet on this one and enforce 1 vector instruction per ROB group regardless of LMUL? Only when LMUL >= 4? Do we need a meeting to discuss? Whatever we do will need to be communicated to the Dabble team.",22/Aug/22 2:17 PM;5acffeafaa802f2a797a955c;I’d be fine going ahead with preventing grouping when LMUL >= 4.  I think that’s a reasonable point.,"22/Aug/22 2:37 PM;5e1374fb7a22c90da0c60495;Curious as to how that will be done...  Currently the macro vector instruction is appended to the ROB way before LMUL is known, right?","22/Aug/22 2:44 PM;5acffeafaa802f2a797a955c;No, we require {{vtype}} to be known at Decode (for illegal instruction detection and such).  We will stall instructions at decode until {{vtype}} is resolved. VL can be determined after decode, and instructions will wait in the vector sequencer or the LsIssQ for VL.","22/Aug/22 2:44 PM;5fd15143b4a74900763834e0;In every case except for {{vsetvl}}, the LMUL is an immediate and is known in Decode.",23/Aug/22 2:50 AM;6065017e90e3950069cf01c5;I logged [https://sifive.atlassian.net/browse/MAL-2479|https://sifive.atlassian.net/browse/MAL-2479|smart-link] ,"23/Aug/22 6:50 AM;5e1374fb7a22c90da0c60495;{quote}No, we require {{vtype}} to be known at Decode

In every case except for {{vsetvl}}, the LMUL is an immediate and is known in Decode{quote}

Ok, good, we’re still on the same page.  In the model, however, we do not stall decode waiting on {{vsetvl}}resolution – which is fine since we do not see use of that instruction variant in our workload suites (and asked the compiler team to avoid it).  

Followup question: if the {{vsetvl}} is the first instruction in the instruction group, how do you “stall” the other instructions following that {{vsetvl}}?  From the MAS: 

{quote}Subsequent vector instructions (in program order) are stalled in the BUF/VSEQ stage until {{vsetvl}} sets {{vtype}} fields (and possibly {{vl}}) to new values{quote}

This stage appears to be after Decode, which I assume is after the ROB append…

Sorry, don’t mean to beat a potentially dead horse here.","23/Aug/22 7:01 AM;5acffeafaa802f2a797a955c;Vsetvl instructions end decode groups. So there are no younger instructions in the same decode group as a vsetvl.

when vsetvl leaves decode, the next decode group will stall until the vsetvl finishes executing.","02/Sep/22 6:36 AM;5fd15143b4a74900763834e0;Should this ticket be closed? [~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] introduced code that would limit the number of registers allocated per ROB group.

Plus we have [https://sifive.atlassian.net/browse/MAL-2539|https://sifive.atlassian.net/browse/MAL-2539|smart-link] to look at with the new logic in place (probably?).","02/Sep/22 6:54 AM;6065017e90e3950069cf01c5;Alex’s logic still needs to be specified for reduction operations, we can use this task as placehold for this change (adding PR counts for reduction when determining ROB group split).","04/Sep/22 10:55 PM;61aaae1d9615eb006f5ff922;{quote}we can use this task as placehold for this change (adding PR counts for reduction when determining ROB group split){quote}

[~accountid:6065017e90e3950069cf01c5], wondering anyone is working on that?","05/Sep/22 12:42 AM;6065017e90e3950069cf01c5;[~accountid:61aaae1d9615eb006f5ff922] , I confirmed during the week-end that the recent fixes do not fix this issue.

I am going to try to implement something this week.",12/Sep/22 6:50 AM;6065017e90e3950069cf01c5;[~accountid:61aaae1d9615eb006f5ff922]  [https://github.com/sifive/federation/pull/25857|https://github.com/sifive/federation/pull/25857|smart-link]  seems to fix this issue,"12/Sep/22 9:06 AM;61aaae1d9615eb006f5ff922;[~accountid:6065017e90e3950069cf01c5], thanks\! Did you run microbenchmark 0080/146 to test it? 

It would be great if you can run reduction microbenchmarks for robustness before you merge the PR. 

0080/139 - 0080/170 are the candicates that can be used for the verification of this issue. ","12/Sep/22 9:10 AM;6065017e90e3950069cf01c5;I did through [https://github.com/sifive/federation/pull/25857#issuecomment-1242387272|https://github.com/sifive/federation/pull/25857#issuecomment-1242387272]

If this method is correct then the test seems to be passing","12/Sep/22 9:24 AM;61aaae1d9615eb006f5ff922;This is working. So it seems there is only 0080/146 being tested. 

You’ve already had the outline so I suggest running 0080/139 - 0080/170 to better cover the reduction microbenchmarks. That will reduce the iterations if we can make sure it’s fully functional before releasing it. ","12/Sep/22 2:32 PM;6065017e90e3950069cf01c5;I am trying

{noformat}$ cat test-outlines/tgv_sparta-correlation.outline
require_relative 'sparta_workload'

checkpoint_list = %w[
    0080/146
    0080/139
    0080/170
]

checkpoint_list.each  do |checkpoint|
    run_test(get_wkld_configure_test(checkpoint))
end{noformat}

and seeing inconsistent results: when launch together some or all tests will fail, but when I run the {{rerun.outline}} I am seeing them pass.","12/Sep/22 4:25 PM;6065017e90e3950069cf01c5;It looks like results become consistent if I change the run area

{{./sitest --rundir=test3 @../../../test-outlines/tgv_sparta-correlation.outline}}

It looks like the test tries to overwrite a {{program.elf}} file without having the correct permissions.",12/Sep/22 4:54 PM;6065017e90e3950069cf01c5;All 3 tests are passing.,12/Sep/22 8:12 PM;61aaae1d9615eb006f5ff922;It’s great having 3 out of all the reduction tests being passed\! But I thought test 0080/139 to 0080/170 will be used for the verification. I might confuse you by using “-“ symbol. 😆 ,"12/Sep/22 8:53 PM;6065017e90e3950069cf01c5;Indeed, I will extend the outline","13/Sep/22 7:50 AM;6065017e90e3950069cf01c5;Extend outline passes, ",14/Sep/22 1:18 AM;61aaae1d9615eb006f5ff922;Thanks [~accountid:6065017e90e3950069cf01c5]\!,,,,,,,Done
FEX PRF Growth Feasibility,,,,,,MAL-2427,123014,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Julian Bailey,629ab2a89bc7150068d00cdf,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/17/2022 19:22,9/22/2022 3:54,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/FEX,,,,,,,,0,,,,"Ticket to track the feasibility work for FEX PRF growth for Healdsburg.

Current plan is to grow from 208 entries (in P650) to 300 entries.  The number of read and write ports will also grow with the number of FP and load pipes.

[~accountid:5acffeafaa802f2a797a955c] expects that the PRF growth will require us to split the PRF read + operand bypass into two pipeline stages.  Currently in Mallard there are ISS, RR, EX, EXN, and WB stages.  Would likely need to move to something like ISS, RR1, RR2, EX, EXN, and WB.",Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2190,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{branch={count=1, dataType=branch}, json={""cachedValue"":{""errors"":[],""summary"":{""branch"":{""overall"":{""count"":1,""lastUpdated"":null,""dataType"":""branch""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00l1j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
FEX Pipe Growth Feasibility,,,,,,MAL-2426,123013,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Eleni Maragkoudaki,62e422de0b4bf7ad924bc51a,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/17/2022 19:20,9/23/2022 0:42,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/FEX,,,,,,,,0,,,,"Ticket to track feasibility work for FEX pipe configuration for Healdsburg.

Current plan is to increase from 2 FEX pipes (in P650) to 4 pipes.  This will interact pretty closely with other things like FEX issue queue growth, increasing the number of Load/Store pipes, and the PRF growth.",Josh Smith,Julian Bailey,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00l1b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,29:41.2,19/Aug/22 2:29 AM;629ab2a89bc7150068d00cdf;[~accountid:62e422de0b4bf7ad924bc51a] Re-assigning this work to you but will be around to guide you and help as needed. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
FEX Issue Queue Growth Feasibility,,,,,,MAL-2425,123012,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Steffen Kunze,62cbe3403d382dfc9c5f3078,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/17/2022 19:19,8/19/2022 1:45,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/FEX,,,,,,,,0,,,,"Ticket to track feasibility work for FEX issue queue growth for Healdsburg.

Current plan is to increase from 16 entries (in P650) to 24 entries.  This will interact pretty closely with other things like increasing the number of FEX and Load/Store pipes, and the FEX PRF growth.",Josh Smith,Julian Bailey,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00l13:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,45:08.6,"19/Aug/22 1:45 AM;629ab2a89bc7150068d00cdf;[~accountid:62cbe3403d382dfc9c5f3078] going to re-assign this to you as you are doing some work on the issue queues, we can chat about what is expected of you okay?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
RAS Growth Feasibility,,,,,,MAL-2424,123010,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/17/2022 18:38,8/17/2022 18:39,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/Frontend,,,,,,,,0,,,,"Ticket to track feasibility work for RAS growth for Healdsburg.

Current plan is to increase from 32 entries (in P650) to 64 entries.",Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00l0n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Rename Width Growth Feasibility,,,,,,MAL-2423,123009,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,François Donati,624f6b22f813eb00692ee29a,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/17/2022 18:37,8/18/2022 5:36,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/RDU,,,,,,,,0,,,,"Ticket to track feasibility work for increasing the rename width for Healdsburg.

Current plan is to increase from 4-wide (in P650) to 8-wide.",Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2431,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00l0f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
IEX Issue Queue Growth Feasibility,,,,,,MAL-2422,123008,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Steffen Kunze,62cbe3403d382dfc9c5f3078,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/17/2022 18:35,9/27/2022 2:41,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/IEX,,,,,,,,0,,,,"Ticket to track feasibility work for IEX issue queue growth for Healdsburg.

Current plan is to increase from 16 entries (in P650) to 24 entries.  This will interact pretty closely with other things like increasing the number of IEX and Load/Store pipes, and the IEX PRF growth.",Josh Smith,Julian Bailey,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2411,,,MAL-2721,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00l07:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,44:42.7,"19/Aug/22 1:44 AM;629ab2a89bc7150068d00cdf;[~accountid:62cbe3403d382dfc9c5f3078] going to re-assign this to you as you are doing some work on the issue queues, we can chat about what is expected of you okay?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
IEX Pipe Growth Feasibility,,,,,,MAL-2421,123007,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Eleni Maragkoudaki,62e422de0b4bf7ad924bc51a,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/17/2022 18:30,9/27/2022 3:06,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/IEX,,,,,,,,0,,,,"Ticket to track feasibility work for IEX pipe configuration for Healdsburg.

Current plan is to increase from 4 IEX pipes (in P650) to 7 pipes.  This will interact pretty closely with other things like IEX issue queue growth, increasing the number of Load/Store pipes, and the PRF growth.",Josh Smith,Julian Bailey,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2411,,,MAL-2722,MAL-2721,MAL-2723,MAL-2725,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00kzz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,30:13.6,19/Aug/22 2:30 AM;629ab2a89bc7150068d00cdf;[~accountid:62e422de0b4bf7ad924bc51a] Re-assigning this work to you but will be around to guide you and help as needed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
ROB Growth Feasibility,,,,,,MAL-2420,123006,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,François Donati,624f6b22f813eb00692ee29a,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/17/2022 18:29,8/17/2022 18:39,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/RDU,,,,,,,,0,,,,"Ticket to track feasibility work for ROB growth for Healdsburg.

Current plan is to increase from 160 groups (in P650) to 288 groups.",Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00kzr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
RHF Growth Feasibility,,,,,,MAL-2419,123005,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,François Donati,624f6b22f813eb00692ee29a,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/17/2022 18:28,8/17/2022 18:39,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/RDU,,,,,,,,0,,,,"Ticket to track feasibility work for RHF growth for Healdsburg.

Current plan is to grow from 192 entries (in P650) to 400 entries.",Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00kzj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
IEX PRF Growth Feasibility,,,,,,MAL-2418,123004,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Julian Bailey,629ab2a89bc7150068d00cdf,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/17/2022 18:26,9/27/2022 3:02,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/IEX,,,,,,,,0,,,,"Ticket to track the feasibility work for IEX PRF growth for Healdsburg.

Current plan is to grow from 208 entries (in P650) to 304 entries.  The number of read and write ports will also grow with the number of integer and load pipes.

[~accountid:5acffeafaa802f2a797a955c] expects that the PRF growth will require us to split the PRF read + operand bypass into two pipeline stages.  Currently in Mallard there are ISS, RR, EX, and WB stages.  Would likely need to move to something like ISS, RR1, RR2, EX, WB.",Josh Smith,Julian Bailey,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2411,,,MAL-2724,MAL-2590,MAL-2725,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2190,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-30T09:39:44.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,3,,,,,,,,,,,,,,,2|i00kzb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,47:50.8,19/Aug/22 1:47 AM;629ab2a89bc7150068d00cdf;We already know that there are congestion issues in the PRF given the number of read/write ports and the registerfile size in the IEX. [https://sifive.atlassian.net/browse/MAL-2190|https://sifive.atlassian.net/browse/MAL-2190|smart-link] has been looking at this already. Adding an extra register stage could timing/congestion too.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
IJTP Growth Feasibility,,,,,,MAL-2417,123003,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/17/2022 18:20,8/17/2022 18:35,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/Frontend,,,,,,,,0,,,,Ticket to track feasibility work for IJTP growth for Healdsburg.,Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00kz3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
BDP Growth Feasibility,,,,,,MAL-2416,123002,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/17/2022 18:19,8/17/2022 18:35,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/Frontend,,,,,,,,0,,,,Ticket to track feasibility work for BDP growth for Healdsburg.,Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00kyv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
NLP Growth Feasibility,,,,,,MAL-2415,123001,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/17/2022 18:18,8/17/2022 18:54,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/Frontend,,,,,,,,0,,,,"Ticket to track feasibility work for NLP growth for Healdsburg.

Investigating growing from 512 entries (in P650) to 2k entries.",Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00kyn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Fetch Queue and Instruction Queue datapath studies,,,,,,MAL-2414,123000,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Adam George,61b2a458657a0500706b9c39,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/17/2022 18:16,9/19/2022 8:23,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/Frontend,,,,,,,,0,,,,"Ticket to track studies for the fetch queue and instruction queue datapath.

This includes a few things:

* How many instructions per cycle we can consume from a fetch group
* Whether we can consume instructions from multiple fetch groups per cycle (most likely meaning multiple fetch queue entries)
* Whether we have an instruction queue or not.

[https://sifive.atlassian.net/browse/SPARTA-2146|https://sifive.atlassian.net/browse/SPARTA-2146|smart-link] had a good study on the cross product of the things listed above.  Currently, an attractive design point would be:

* Consume instructions from up to 2 fetch groups per cycle, 8 instructions (or the decode width) at most
* Remove the instruction queue",Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2412,MAL-2413,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00kyf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
48B Fetch Feasibility,,,,,,MAL-2413,122999,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Adam George,61b2a458657a0500706b9c39,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/17/2022 18:14,8/18/2022 9:21,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/Frontend,,,,,,,,0,,,,Ticket to track feasibility work for 48B fetch for Healdsburg,Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2414,,,,MAL-2412,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00ky7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
128KB ICache Feasibility,,,,,,MAL-2412,122998,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Adam George,61b2a458657a0500706b9c39,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/17/2022 18:13,8/18/2022 9:20,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/Frontend,,,,,,,,0,,,,Ticket to track feasibility work for a 128 KB ICache for Healdsburg.,Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2414,MAL-2413,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2411,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00kxz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Healdsburg RTL Feasibility Studies,,,,,,MAL-2411,122995,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/17/2022 17:54,9/27/2022 10:29,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/Tile,,,,,,,,0,,,,Epic to track RTL feasibility work for Healdsburg,Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2412,MAL-2413,MAL-2414,MAL-2415,MAL-2416,MAL-2417,MAL-2418,MAL-2419,MAL-2420,MAL-2421,MAL-2422,MAL-2423,MAL-2424,MAL-2425,MAL-2426,MAL-2427,MAL-2431,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-1,,Healdsburg RTL Feasibility Studies,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,dark_grey,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00kxb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Baler Assertion failed: LTBPipe tag match on multiple entries,[TGV] Baler Assertion failed: LTBPipe tag ,Baler LSU,,,,MAL-2410,122960,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,8/17/2022 13:29,9/7/2022 17:43,9/28/2022 0:51,8/18/2022 17:04,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"cc: [~accountid:5bb6808b9ba2930990f81895] [~accountid:5fd15143b4a74900763834e0] 

{noformat}Error: ""/scratch/sols/tgv4/federation/builds/7e5a10653b1_sfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LTBPipe_assert.sv"", 137: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.bal.ltb.ltbPipes_0.SiFive_LTBPipe_assert_0: at time 271522500 ps
Assertion failed: LTBPipe tag match on multiple entries

    at LTBPipe.scala:138 assert(PopCount(ltbTagMatch_EX) === 1.U, ""LTBPipe tag match on multiple entries"")


Fatal: ""/scratch/sols/tgv4/federation/builds/7e5a10653b1_sfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LTBPipe_assert.sv"", 146: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.bal.ltb.ltbPipes_0.SiFive_LTBPipe_assert_0: at time 271522500 ps
$finish called from file ""/scratch/sols/tgv4/federation/builds/7e5a10653b1_sfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LTBPipe_assert.sv"", line 146.{noformat}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vle-vse"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

gamma11:/scratch/sols/tgv4/federation/builds/7e5a10653b1_sfc/coreip_u8_minimal_vector/sim/sim2/tgv_vle-vse.outline/vector/vle-vse",Alexandre Solomatnikov,David Kravitz,John Ingalls,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2434,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,17/Aug/22 4:26 PM;ug:03996552-4b14-4132-be2b-a08c9c621951;Screen Shot 2022-08-17 at 7.26.21 PM.png;https://sifive.atlassian.net/secure/attachment/76061/Screen+Shot+2022-08-17+at+7.26.21+PM.png,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/33a238c60813fc6625795d9aa8643bf142ac4159,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-19T13:42:07.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/03b118670e8bbb01fc760f5e919253391e3fbc8d,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00kpz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,04:58.1,17/Aug/22 2:04 PM;5fd15143b4a74900763834e0;I’ll pick this one up for the time being,"17/Aug/22 3:27 PM;5fd15143b4a74900763834e0;Sorry, I could not reproduce this with the commit, compiler, and outline given. Will try to take a look at your waves","17/Aug/22 4:33 PM;5fd15143b4a74900763834e0;I see a couple of things that don’t look right.
- as the 8 uops are being dispatched into the Baler IssQ, the PRA lookups are looking up uopIDs {0, 2, 4, 6, 0, 0, 0, 0}. There’s probably a bug in creating the PRA lookup index.
- when the load tag for uop 0 comes from the LSU, it looks like the Baler IssQ is issuing uops 0, 5, 6, and 7 for gid 0, and then a uop for gid 1.
- when the load move with gid 1 issues, that triggers the assert because there’s no matching tag valid in the LTB

The PRA bug will probably not be hard to find. You’ll have to dig into the Baler issue queue in more detail to find out why so many entries were marked ready. The tag broadcast to the issue queue looks OK, so it could be something in the matching, or what is loaded from DIS.

Assigning back to you for the next step.",18/Aug/22 9:50 AM;5fd15143b4a74900763834e0;I will work on the PRA lookup situation as [https://sifive.atlassian.net/browse/MAL-2434|https://sifive.atlassian.net/browse/MAL-2434|smart-link] ,"18/Aug/22 10:26 AM;5fd15143b4a74900763834e0;Just realized I couldn’t reproduce yesterday there were changes to {{vle-vse.S}} in that work area that weren’t committed.

After copying that to my area, I _do_ get an error, but it’s different.
`assert failed (verification library): make sure we don't match tag on a source that's marked ready  @\[MallardUtil.scala 605:20]`

[~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185], are there other changes in that work area I should copy to duplicate the original failure?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[Livermore] Remove PL2, increase TLB entries, misc tweaks",,,,,,MAL-2409,122931,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/17/2022 10:33,8/26/2022 10:03,9/28/2022 0:51,8/17/2022 18:40,,,,,,,,,,,,,RTL/Tile,,,,,,,,,0,,,,"According to [~accountid:5e1370feefa19b0e976b5c24], cache sizing sweeps indicate we should drop the pL2 from Livermore configurations. Also, customer requested 1024 TLB entries and only one FEX pipe. May tweak a few other settings based on what the Dabble team is reporting.",Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Josh Smith,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-17T16:51:20.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/77285b808681fbd76cd35e756156c1eacc25275e,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00kjj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,45:48.9,"17/Aug/22 10:45 AM;5acffeafaa802f2a797a955c;I was pretty sure the L2 TLB sizing was going to come up.  We made the decision for P650 to have the 4KB and 2MB pages be cached in separate L2 TLB arrays which can be sized differently.  I think we’re going to need to look at how many of each we want.

Unfortunately, I don’t think we can ask the customer this, because I have a feeling they’re going to look at us funny if we give them the impression that we have different arrays for 4KB and 2MB pages.",17/Aug/22 5:57 PM;5acffeafaa802f2a797a955c;[~accountid:5fd15143b4a74900763834e0] It looks like you already made these changes.  Was there something else to be done?,"17/Aug/22 6:39 PM;5fd15143b4a74900763834e0;Sorry, it should have been assigned to me, not you. Nothing more to be done until we get the next wave of guidance on perf vs. area. ",17/Aug/22 6:40 PM;5fd15143b4a74900763834e0;Done,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]:: COSIM vs RTL PC mismatch (Branch not taken in Design PC=0x80002c54),[TGV]:: COSIM vs RTL PC mismatch ,Instruction Fetch ,,,,MAL-2408,122924,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/17/2022 9:24,9/7/2022 17:43,9/28/2022 0:51,8/22/2022 14:08,,,,,,,,,,,Panda DR,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error::*
\[COSIM-ERROR]\[0] COSIM VS RTL PC MISMATCH
\[COSIM-ERROR]\[0] m_dut_inst_item: \[28059] InstInfo: VLD=1 | PC=0x0000000080002c58 | INSN=0x00000297 | INST_DST=INT | REDUCTION = false | WR: en=true r5=0x0000000080002c58 mask=ff | READY=1 | CSR_TIMER=28059 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x00000000800030f4 | MCAUSE=0x0000000000000002 | VSTART=0 | VL=8 | SEW=16 | LMUL=m1 | VSEGELT=0
\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x0000000080002c62 | INSN=0x00000297 | INST_DST=INT | REDUCTION = false | WR: en=true r5=0x0000000080003c62 mask=ff

*Debug-Trace::* 
In Cosim::
core   0: 0x0000000080002c4e (0x001022f3) csrr    t0, fflags
core   0: 3 0x0000000080002c4e (0x001022f3) x 5 0x0000000000000010
core   0: 0x0000000080002c52 (0x00004341) [c.li|http://c.li]    t1, 16
core   0: 3 0x0000000080002c52 (0x4341) x 6 0x0000000000000010
core   0: 0x0000000080002c54 (0x00530763) beq     t1, t0, pc + 14     //Branch Taken
core   0: 3 0x0000000080002c54 (0x00530763)
core   0: 0x0000000080002c62 (0x00001297) auipc   t0, 0x1
core   0: 3 0x0000000080002c62 (0x00001297) x 5 0x0000000080003c62

In Design::
C0:      28057 \[1] pc=\[0000000080002c54] W\[r 0=0000000000000000]\[0] R\[r 6=0000000000000010] R\[r 5=0000000000000000] inst=\[00530763] beq     t1, t0, pc + 14
C0:      28059 \[1] pc=\[0000000080002c58] W\[r 5=0000000080002c58]\[1] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[00000297] auipc   t0, 0x0
C0:      28059 \[1] pc=\[00000000*80002c5c*] W\[r 5=0000000080003060]\[1] R\[r 5=0000000080002c58] R\[r 0=0000000000000000] inst=\[40828293] addi    t0, t0, 1032



*SHA1::*  8fac6303588b19b69a1c97da1ae30aeacae4e104
*Config::*  coreip_u8_minimal_vector_vfp16
*Waves Path::* gamma25:://scratch/naverath/SFC/federation/builds/coreip_u8_minimal_vector_vfp16/sim/sim/rerun.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmflt.vf/waves.fsdb
*rerun.outline::*   
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""vector/vector_tests_gen/rvv_64"",
""raw_plusargs"": \[
""+enable_spike_cosim"",
""+verbose""
],
""subdir"": ""t0000_lmul2"",
""subtest"": ""vmflt.vf"",
""enable_postsim_py_check"": false,
""generator_args"": ""vmflt.vf_Mask-7_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_NoSelfCheck-0_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-2_TGV-1_IMM-0_LdStAccFault-1_Zvfh-1_Zfh-1_TAILAgnostic-1"",
""seed"": {
""value"": 1176392938
},
""sim"": {
""vendor"": ""vcs""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""env"": ""abi""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
",Andrew Hanselman,Josh Smith,Kira Tsao,Naveen Rathore,Nicolas Brunie,,,,,,,,,,,609d7e1f5998a6006800dcc5,5acffeafaa802f2a797a955c,5e1a4f5ec578120daca5ff8e,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,17/Aug/22 10:31 PM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220818-053043.png;https://sifive.atlassian.net/secure/attachment/76072/image-20220818-053043.png,,,,,,,,,,,,,,,,8fac6303588b19b69a1c97da1ae30aeacae4e104,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-22T13:55:27.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,3be1178e6a9a53131f1523fdad9c6db442a1afb3,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00khz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,39:11.7,17/Aug/22 9:39 AM;5acffeafaa802f2a797a955c;I can take a look at this,"17/Aug/22 11:26 AM;5acffeafaa802f2a797a955c;So it looks like the {{csrr}} at PC 0x80002c4e actually returns 0x0 in RTL when cosim is expecting 0x10 for the {{fflags}} value.  I guess cosim is not checking the result of {{csrr}} instructions?

The last instruction that tried to update the fflags is the {{vmflt.vf}} at PC 0x80002b58. It returns an fflags value of 0 and writes back from VEX pipe 0 with a gid of 0x17 at cycle 27742.","17/Aug/22 11:27 AM;5acffeafaa802f2a797a955c;I’m not sure who should look at this next, [~accountid:6065017e90e3950069cf01c5] ?","17/Aug/22 11:49 AM;6065017e90e3950069cf01c5;We have a bug recently fixed by [~accountid:609d7e1f5998a6006800dcc5]  around this [https://github.com/sifive/federation/pull/25299|https://github.com/sifive/federation/pull/25299|smart-link] 

It seems the hash reported here includes this fix.",17/Aug/22 11:49 AM;6065017e90e3950069cf01c5;0x10 correspond to an invalid exception flags,"17/Aug/22 11:52 AM;6065017e90e3950069cf01c5;Looks like this is the half precision version of this instruction (SEW=16)

I think a combination of [~accountid:5f94696c29bd8a006f94f0e1] + [~accountid:5e1a4f5ec578120daca5ff8e]   will be best to look at this.

I can take a look later if no one is available.","17/Aug/22 8:31 PM;5e1a4f5ec578120daca5ff8e;I am in vacation this 2 days. I can take a look in next week, Shaka may need to focus on {{zfhmin}} ","17/Aug/22 10:31 PM;5e1a4f5ec578120daca5ff8e;This issue is causing by exception flag been override by 2nd uop.

Unlike normal operation, mask layout operation rely on accumulator to update the final result once, the exception flag should also be record in accumulator then do the logic OR before final output.

From the waveform you can see the correct {{fflag}} has occur but the 2nd uop write 0 to clean it.

!image-20220818-053043.png|width=1199,height=367!","17/Aug/22 10:55 PM;6065017e90e3950069cf01c5;Didn’t we say we were going to commit and accumulate the flags directly in the ROB ?

(each uop writes back its flag result without waiting for accumulator completness)

(cc [~accountid:609d7e1f5998a6006800dcc5] )","17/Aug/22 11:11 PM;5e1a4f5ec578120daca5ff8e;If that is the case, I’ll hold my investigation before Andrew confirm the mechanism 🙂 ","17/Aug/22 11:41 PM;6065017e90e3950069cf01c5;[~accountid:5e1a4f5ec578120daca5ff8e] ( and this extends to [~accountid:5f94696c29bd8a006f94f0e1] and [~accountid:62103777eb2978006893b778] ), if you have an opinion on how to fix this, please share it here or on [https://sifive.slack.com/archives/C02LGLVN2LD|https://sifive.slack.com/archives/C02LGLVN2LD|smart-link]  

I think it is good if we can gather some elements for [~accountid:609d7e1f5998a6006800dcc5] to review.","17/Aug/22 11:44 PM;6065017e90e3950069cf01c5;We need to be careful not to commit in the ROB group flags from a uop that still can replay, but apart from that I think we can accumulate directory in the ROB. If the next uops feeding the accumulator are flushed, so is the ROB group, so effect is identical. Flags are cumulative/sticky, so per-uop accumulation seems fine.","17/Aug/22 11:45 PM;6065017e90e3950069cf01c5;Adding a flag accumulator to the mask accumulator may be more power efficient (accumulator will be closer to mask producing units, no need to address specific ROB group).","18/Aug/22 7:42 AM;609d7e1f5998a6006800dcc5;We could definitely add a flags field to the accumulator. It should be pretty straight forward to read this out using the existing mechanisms, merging flags, and using current WB stage logic to push flags out of VEX.",18/Aug/22 7:43 AM;5e1a4f5ec578120daca5ff8e;[~accountid:609d7e1f5998a6006800dcc5] so that means we aren’t supporting merging fflags through ROB yet right?,"18/Aug/22 7:50 AM;609d7e1f5998a6006800dcc5;Hmm… ROB seems to indicate that merging should occur for multiple exception updates for a single ROB group: [https://github.com/sifive/federation/blob/60379e7873a893f0e36a9bf96f9403213bafc4f9/mallard/src/main/scala/core/mallard/ROB.scala#L1340-L1366|https://github.com/sifive/federation/blob/60379e7873a893f0e36a9bf96f9403213bafc4f9/mallard/src/main/scala/core/mallard/ROB.scala#L1340-L1366]

I think what may be occurring is that we are only sending the exception flags of the final uop. We need to make sure that {{vexExc_WB.valid := true}} for each uop. I don’t think that is the case currently.","18/Aug/22 7:52 AM;609d7e1f5998a6006800dcc5;The fix would look like updating the exception valid to match the current completion request valid: [https://github.com/sifive/federation/blob/60379e7873a893f0e36a9bf96f9403213bafc4f9/block-tgv-sifive/src/main/scala/core/tgv/VexPipe.scala#L2072-L2078|https://github.com/sifive/federation/blob/60379e7873a893f0e36a9bf96f9403213bafc4f9/block-tgv-sifive/src/main/scala/core/tgv/VexPipe.scala#L2072-L2078]

You can assign this to me and I’ll get to it today.",18/Aug/22 7:52 AM;5acffeafaa802f2a797a955c;The ROB will merge fflags updates from all operations within a single ROB group.  The problem here is that the instruction provided one fflags update to the ROB and it gave the wrong value.,"18/Aug/22 7:59 AM;5e1a4f5ec578120daca5ff8e;Ok, so we may need to collect fflag in accumulator also. [~accountid:609d7e1f5998a6006800dcc5] I’m in vacation until Sunday, you can take this Jira but if you don’t have time you can leave this to me in next week.","18/Aug/22 8:02 AM;6065017e90e3950069cf01c5;{quote}I think what may be occurring is that we are only sending the exception flags of the final uop. We need to make sure that {{vexExc_WB.valid := true}} for each uop. I don’t think that is the case currently.{quote}

I think for the generic operations flags are only forwarded for valid uop WB (the flag valid is not enough). and I have only seen result muxing from the accumulator (not flag muxing).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Align X2Y clock gating with scalar clock gating pattern,,,,,,MAL-2407,122917,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,8/17/2022 8:11,8/20/2022 4:39,9/28/2022 0:51,8/20/2022 4:39,,,,,,,,,,,,,Power,TGV_RTL/Top,TGV_RTL/X2Y,,,,,,,0,,,,"Current X2Y clock gate pattern diverges from the clock gating pattern used in scalar modules, so we want to move it inside X2Y module with some clarifications.

# Move {{x2yClockEn}} back into X2Y 
# Add X2Y clock gating coverage/assertion logic

Scalar side uses a pattern where clock enable is determined by a few different sources:

# Generator config
# Chicken bits
# Pipeline active / internal keep awake clock enable signal
# Wakeup / external clock enable",Cristóbal Ramirez Lazo,,,,,,,,,,,,,,,62632262d7f1b80069c030b8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-19T22:42:21.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,9ad1fe2bb9abaf864e68c1573ffe3cf42e7dbcc1,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00kgf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Align BALER clock gating with scalar clock gating pattern,,,,,,MAL-2406,122915,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,8/17/2022 8:07,8/19/2022 22:16,9/28/2022 0:51,8/19/2022 21:56,,,,,,,,,,,,,Power,TGV_RTL/BAL,TGV_RTL/Top,,,,,,,0,,,,"Current BALER clock gate pattern diverges from the clock gating pattern used in scalar modules, so we want to move it inside BALER module with some clarifications.

# Move {{balClockEn}} back into BALER
# Add BALER clock gating coverage/assertion logic

Scalar side uses a pattern where clock enable is determined by a few different sources:

# Generator config
# Chicken bits
# Pipeline active / internal keep awake clock enable signal
# Wakeup / external clock enable",Cristóbal Ramirez Lazo,,,,,,,,,,,,,,,62632262d7f1b80069c030b8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-19T21:53:14.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,15cd3402d0abf10203618759e01fe858dcf9c513,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00kfz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Healdsburg timing: LSU StoreQ nextGather mergeable,,,,,,MAL-2405,122912,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Vaibhav Gupta,623e4830b75ca80070580145,Vaibhav Gupta,623e4830b75ca80070580145,8/17/2022 7:22,9/20/2022 11:42,9/28/2022 0:51,9/16/2022 23:21,,,,,,,,,,,,,RTL/LSU,Timing,,,,,,,,0,,,,"Hi John, 

filing this bug for StQ gather timing. There are paths from stQ retire FSM which goes through Age matrix ARB and then calculates the next gather timing. 

The idea discussed on the call was to use rowMergeable which is already precomputed for nextGather generation. 

 ",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Vaibhav Gupta,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,623e4830b75ca80070580145,,,,,,,,,,,,,,,,,MAL-2110,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2667,,,,,,,,,,,,,,,,17/Aug/22 7:19 AM;ug:00594ab1-1adb-4153-9612-017217b13907;Screenshot 2022-08-17 at 7.48.06 PM.png;https://sifive.atlassian.net/secure/attachment/76022/Screenshot+2022-08-17+at+7.48.06+PM.png,,,,,,,,,,,,,,,,,,,Load/Store,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-16T23:21:21.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25763,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00kfb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/25763/files],,,,,,,,,,,,,59:23.0,17/Aug/22 12:59 PM;5bb6808b9ba2930990f81895;I think we can use the {{mergeable}} bit from [https://sifive.atlassian.net/browse/MAL-2110|https://sifive.atlassian.net/browse/MAL-2110|smart-link] instead of these calculations.  Will look at this.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]:: Assertion: Banked freelist exhaustion (BankExausted_0),[TGV]:: Assertion: Banked freelist exhaustion ,D,,,,MAL-2404,122899,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,David Kravitz,5fd15143b4a74900763834e0,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/17/2022 2:54,9/7/2022 17:43,9/28/2022 0:51,8/17/2022 9:58,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"*Error::*
Error: ""/scratch/naveenr/aug-17/federation/builds/coreip_p670/verilog/design/assertions/SiFive_FreeListBanked_assert.sv"", 939: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.freelist.SiFive_FreeListBanked_assert_0: at time 13323202500 ps
assert failed (verification library): Banked freelist exhaustion. Check your nPRs parameter.  @\[FreeList.scala 477:9]


*Compiler::* SFC
*SHA1::*  864c55c250c5282599720dbd068b04ab7ff27763
*Config::*  coreip_p670
*Logs path::*  gamma26:://scratch/naveenr/aug-17/federation/builds/coreip_p670/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0271/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb
*Rerun.outline::* 
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""sting"",
""raw_plusargs"": \[
""+cosim_scoreboard_trap_epc_count=128"",
""+cosim_scoreboard_stall_time=1000000"",
""+axi_mem_latency_cycles=10"",
""+axi_mem_dither_cycles=10"",
""+amba_vip_select=2"",
""+gdi_amba_test_enable=1"",
""+gdi_tlc_test_enable=1"",
"""",
""+verbose""
],
""subdir"": ""sting_StingSiFiveTuple_T_0271"",
""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 1412635224
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""reset_vector_scheme"": ""first_mem_periph_sys""
},
""uvm"": {
""set_config_string"": \[
""uvm_test_top,torture_read_inbound,10101010:80808080"",
""uvm_test_top,torture_inbound,10101010:80808080""
],
""testname"": ""torture_test""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",David Kravitz,Josh Smith,Naveen Rathore,,,,,,,,,,,,,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,6235105a3eacc50071ff07ec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,864c55c250c5282599720dbd068b04ab7ff27763,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00kcf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,47:56.6,"17/Aug/22 3:47 AM;5acffeafaa802f2a797a955c;[~accountid:6235105a3eacc50071ff07ec] This should have been fixed yesterday in this PR: [https://github.com/sifive/federation/pull/25354|https://github.com/sifive/federation/pull/25354|smart-link]   I see from your work area that the fix is not included, it must have been merged into master after the commit you have.

Can you cherry-pick this commit and see if that fixes the failure? {{bca2e786528c717d67ff6d7df16f5763f2280265}}","17/Aug/22 4:56 AM;6235105a3eacc50071ff07ec;Sure [~accountid:5acffeafaa802f2a797a955c] 
","17/Aug/22 9:58 AM;5fd15143b4a74900763834e0;Can confirm that this is a duplicate of MAL-2356 and is fixed by the PR for MAL-2387, referred to by [~accountid:5acffeafaa802f2a797a955c] below",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Support segmented load store,,,,,,MAL-2403,122898,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,8/17/2022 2:08,9/16/2022 11:39,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,,,,Design plan for segmented load store [https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2338587123/Segmented+load+store+design+plan|https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2338587123/Segmented+load+store+design+plan|smart-link] ,Brad Wu,,,,,,,,,,,,,,,62103777eb2978006893b778,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2209,,,MAL-2602,MAL-2615,MAL-2638,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-10,,[TGV] Support segmented load store,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,blue,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00kc7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Sep/22 9:11 AM;62103777eb2978006893b778;[~accountid:5fd15143b4a74900763834e0] I moved this issue to be the child of [https://sifive.atlassian.net/browse/MAL-2209|https://sifive.atlassian.net/browse/MAL-2209|smart-link], not sure if it’s better to split the child tasks into \[RVV 7.8.x] tasks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
HWPF: new forgiveness features,,,,,,MAL-2402,122870,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,8/16/2022 17:33,9/27/2022 20:58,9/28/2022 0:51,9/27/2022 11:06,,,,,,,,,,,,,Performance,RTL/HWPF,,,,,,,,0,,,,"Following new forgiveness features are required in the TWJ engine to combat OOO’ness for the LGS: 

* {{forgiveness_consecutive}} : Currently, we have to see {{N}} (configurable number) stride mismatches before stopping the engine. This feature will reset the counter after any successful stride match.
* {{forgiveness_max_delta}} : If the stride mismatch magnitude is ever greater than or equal to the {{current stride << N(programmable value)}}, then we untrain the engine immediately even if there are still forgiveness credits.  The reason for this is to catch the case like in {{MCF}} where the stream starts back over at the start of the array.  We need to catch this scenario as opposed to counting it as another forgiveness. Note: this is not a fixed value but a scaled value of the current stride because the strides vary in length so much that a fixed number does not make sense.",Benoy Alexander,Binayak Tiwari,Brian Grayson,Fu-Ching Yang,Hung-Lun Chen,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,5e1370feefa19b0e976b5c24,60a963ed8cbda700681b40c1,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,60ce876f624d7000695b9589,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,MAL-1522,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-27T20:24:33.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,1,,,,100,,,,,,,,,,,,,,,2|i00k5z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,6,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26437/files],[Doc|https://github.com/sifive/federation/pull/26516/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Baler: faulting elementNum combine pre- and post-fault data from LSU and VRF in LTB,,,,,,MAL-2401,122850,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Yohann Rabefarihy,61730c9cbcb57400683f15a6,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,8/16/2022 12:48,8/17/2022 13:24,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"For [https://sifive.atlassian.net/browse/MAL-2398|https://sifive.atlassian.net/browse/MAL-2398|smart-link] setting {{vstart}} after a fault, we need to use {{elementNum}} from the LSU exception request sent to the ROB from [https://sifive.atlassian.net/browse/MAL-2399|https://sifive.atlassian.net/browse/MAL-2399|smart-link].",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,MAL-2399,,,,MAL-2400,,,,,,,,,,,,,MAL-2398,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-17T12:35:27.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,,,,,,,,,,,,,2|i00k1r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,10,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
RDU [TGV]: use vstart from ExcReq interface,,,,,,MAL-2400,122848,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,8/16/2022 12:46,8/26/2022 0:44,9/28/2022 0:51,8/22/2022 10:01,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,,,,"For [https://sifive.atlassian.net/browse/MAL-2398|https://sifive.atlassian.net/browse/MAL-2398|smart-link] setting {{vstart}} after a fault, we need to set {{vstart}} from the faulting {{elementNum}} from the LSU exception request sent to the ROB from [https://sifive.atlassian.net/browse/MAL-2399|https://sifive.atlassian.net/browse/MAL-2399|smart-link].

Exception requests with non-zero {{elementNum}} should wait for the instruction to complete in the Baler [https://sifive.atlassian.net/browse/MAL-2401|https://sifive.atlassian.net/browse/MAL-2401|smart-link] before taking the fault.",David Kravitz,John Ingalls,Josh Smith,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,MAL-2399,MAL-2401,,,,,,,,,,,,,,,,MAL-2398,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-22T10:01:03.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,bd046e71a3a31e450278ea79f32f99911906086b,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00k1b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,5,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,22:47.2,16/Aug/22 5:07 PM;5bb6808b9ba2930990f81895;is this already done from [https://github.com/sifive/federation/pull/22212|https://github.com/sifive/federation/pull/22212|smart-link] ?,16/Aug/22 5:22 PM;5acffeafaa802f2a797a955c;I think that PR was only to zero out vstart after an instruction retires.  I don’t think it’s complete.,20/Aug/22 10:01 AM;5acffeafaa802f2a797a955c;[~accountid:5fd15143b4a74900763834e0] [~accountid:5bb6808b9ba2930990f81895] Do we have any directed tests or something which will exercise some vector load/store fault?,"20/Aug/22 6:47 PM;5fd15143b4a74900763834e0;Faults on “normal” vector loads/stores: [https://github.com/sifive/federation/pull/25015|https://github.com/sifive/federation/pull/25015|smart-link] 
 Fault-only-first loads: [https://github.com/sifive/federation/pull/25074|https://github.com/sifive/federation/pull/25074|smart-link] ","21/Aug/22 8:20 AM;5acffeafaa802f2a797a955c;I guess this ticket isn’t specifically about fault-only-first loads, but I think that fault-only-first load test needs to be modified for TGV because it appears to have been written assuming VLEN > 128.

{noformat}    uintptr_t mem = 0x1000 - OFFSET * 4;
    uintptr_t mem1 = 0x1000;
    setup_page_table_address();

    __asm__ __volatile__ (""sfence.vma"" : : : ""memory"");
    asm(""li t0,"" QU(MSTATUS_MPP) );
    asm(""csrc mstatus, t0"");

    asm(""li t0, "" QU( (MSTATUS_MPP & ~(MSTATUS_MPP<<1)) | MSTATUS_MPRV) );

    volatile int vlmax = 0;
    asm volatile (""vsetvli %0, x0, e32, m1"" : ""=r"" (vlmax));
    asm(""csrs mstatus, t0"");
    asm volatile(""vle32ff.v v4, 0(%0)"" :: ""r"" (mem));

    asm(""li t0,"" QU(MSTATUS_MPRV) ); //clear MPRV bit
    asm(""csrc mstatus, t0"");

    if(read_csr(vl) != OFFSET) exit(__LINE__);{noformat}

From what I can understand, it executes a {{vle32ff.v}} twice: one that is expected to fault on the 5th element (the {{OFFSET}} constant == 5), and one that is expected to fault on the first element.  But since LMUL=1 and SEW=32, VL is only 4 and the first {{vle32ff.v}} doesn’t fault on _any_ element.

I tried modifying {{OFFSET}} to 3 to get it to fault on the 3rd element, but the LSU throws an assertion:

{noformat}Error: /scratch/verif/jsmith/federation/builds/coreip_p670/verilog/design/SiFive_LDPipe.sv, 18613: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LDPipes.LDPipes_0: at time 248442500 ps
assert failed (verification library): unrolled load should return blocking in-order from MAL-70 until MAL-1871  @[LDPipe.scala 1908:18]
Fatal: /scratch/verif/jsmith/federation/builds/coreip_p670/verilog/design/assertions/SiFive_LDPipe_assert.sv, 413: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LDPipes.LDPipes_0.SiFive_LDPipe_assert: at time 248442500 ps
 called from file /scratch/verif/jsmith/federation/builds/coreip_p670/verilog/design/assertions/SiFive_LDPipe_assert.sv, line 413.{noformat}

Maybe this is something that [~accountid:5bb6808b9ba2930990f81895] hasn’t implemented yet?",21/Aug/22 8:31 AM;5acffeafaa802f2a797a955c;[~accountid:5bb6808b9ba2930990f81895] I’m planning to add a new exception type {{ExcType.TYPE_VECTORLS}} (I’m not married to that name) for this case.  This exception type is used so the ROB knows that it has to wait for the instruction to complete before trapping to the exception vector and updating vstart.,"21/Aug/22 7:46 PM;5bb6808b9ba2930990f81895;{quote}{{unrolled load should return blocking in-order from MAL-70 until MAL-1871 @[LDPipe.scala 1908:18]}}{quote}

That’s a new assertion that I didn’t expect us to hit from this Jira ticket.  Can you please open a separate ticket for it with instructions to reproduce?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU [TGV]: drive vstart in ExcReq interface,,,,,,MAL-2399,122847,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,8/16/2022 12:43,8/17/2022 14:16,9/28/2022 0:51,8/17/2022 12:35,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"For [https://sifive.atlassian.net/browse/MAL-2398|https://sifive.atlassian.net/browse/MAL-2398|smart-link] calculating {{vstart}} after a fault, we need to report the faulting element number to the ROB from the LSU.

We already have this information in the LSU LSTPipe stages: {{uopNum}} and {{uopOffset}}.

[~accountid:61730c9cbcb57400683f15a6] design discussion notes:

* for unit-stride we need to set {{vstart}} to the first element of a VLEN access since any fault/interrupt inside this size will kill the LTB/VRF write.
* for indexed/strided-load we will have 1 LSU uop per elements which will be easier to find an element level fault.
* in this case it will be something like
{{elementsPerVlen = (vlen / vsew)}}
{{vagu_rrElementNum = Mux(strided, uopNum x elementsPerVlen, uopNum)}}
(it should be more correct to speak about CoreDataBit rather than vlen here since it is the actual limiter for fault handling.)",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2400,MAL-2401,,,,,,,,,,,,MAL-2398,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-17T12:35:27.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25364,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00k13:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
TGV: load/store faults vstart,,,,,,MAL-2398,122846,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,8/16/2022 12:38,9/16/2022 10:32,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,TGV_RTL/RDU,,,,,,,0,,,,,John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2399,MAL-2400,MAL-2401,,,,,,,,,MAL-2209,,,MAL-2600,MAL-2636,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-17T12:35:27.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2209,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,,,,,,,,,,,,,2|i00k0v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,15,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV]:: Cosim vs RTL write data mismatch for vslideup instruction with VL=0,[TGV]:: Cosim vs RTL write data mismatch ,Execution Unit ,,,,MAL-2396,122829,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/16/2022 9:53,9/7/2022 17:43,9/28/2022 0:51,8/17/2022 8:47,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,TGV,,,"*Error::*
\[COSIM-ERROR]\[0] m_dut_inst_item: \[47094] InstInfo: VLD=1 | PC=0x0000000080006ca0 | INSN=0x3b04cc57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r24=0xfffffffffffffffffffffffeffffffff mask=ffff | READY=1 | CSR_TIMER=47094 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x000000008000a2b8 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=2 | SEW=64 | LMUL=m1 | VSEGELT=0
\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x0000000080006ca0 | INSN=0x3b04cc57 | INST_DST=NONE | REDUCTION = false | WR: en=false


*Debug-Info:*
*v24 0xfffffffefffffffefffffffefffffffe*
Looks like VL=0 set by following instruction
core   0: 0x0000000080006c8e (0xc18f7057) vsetivli zero, 30, e64, m1, tu, mu
core   0: 0x0000000080006ca0 (0x3b04cc57) vslideup.vx v24, v16, s1   //Incase VL-0, No Element are updated in the register 
core   0: 3 0x0000000080006ca0 (0x3b04cc57) e64 m1 l2
Please let me know expected behaviour.
0:      46976 vrf\[24]=\[fffffffffffffffffffffffeffffffff]\[ffff]


*Config::* coreip_p670
*Compiler::* SFC
*SHA1::* 8a674a9e13517a3fe87577987e694f7b6700aa3e
*Logs::*{{ gamma26:: //scratch/naveenr/aug-16/federation/builds/coreip_p670/sim/sim/rerun.outline_data_mismatch/rat_default_T_0550/rat/default/waves.fsdb}}
*rerun.outline::*

(copied into {{/work/nicolasb/tgv_bug_outlines/rat/MAL-2396.outline}})


**

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": [
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+MEM_ERROR_INJECT=.\.tag_array_.ext,0,1,32:.\.data_arrays_0_.ext,0,1,32:.\.syssram.ext,0,1,32:.\.island.\.lim\.syssram.ext,0,1,32:.\.tagged_tables_0_.ext,0,1,32:.\.base_table_0_.*ext,0,132"",
""+verbose""
],
""subdir"": ""rat_default_T_0550"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 2940712173
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",David Kravitz,Naveen Rathore,Nicolas Brunie,,,,,,,,,,,,,5fd15143b4a74900763834e0,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8a674a9e13517a3fe87577987e694f7b6700aa3e,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-17T08:47:14.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/7e5a10653b127848389753872943d874b9b1e1d7,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00jx3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,32:34.9,"16/Aug/22 12:32 PM;5fd15143b4a74900763834e0;Not sure if the problem is in VEX or Sequencer, but bumping to [~accountid:6065017e90e3950069cf01c5] to take the next step","17/Aug/22 2:00 AM;6065017e90e3950069cf01c5;RTL trace:

{noformat}C                   0:      47093 [1] pc=[0000000080006c96] W[r11=00000000000043d6][1] R[r 3=000000008000c3c0] R[r 0=0000000000000000] inst=[8ce1d583] lhu     a1, -1842(gp)
C                   0:      47093 [1] pc=[0000000080006c9a] W[r12=00000000800386d0][1] R[r12=0000000080038c8a] R[r 0=0000000000000000] inst=[a4660613] addi    a2, a2, -1466
C                   0:      47093 [1] pc=[0000000080006c9e] W[r 0=0000000000000000][0] R[r12=00000000800386d0] R[r 9=8000000000000000] inst=[0000ea04] c.sd    s1, 16(a2)
Error: Instruction-by-Instruction check failed
C                   0:      47094 [1] pc=[0000000080006ca0] W[r 0=0000000000000000][0] R[r 9=8000000000000000] R[r 0=0000000000000000] inst=[3b04cc57] vslideup.vx v24, v16, s1
C                   0:      47094 [1] pc=[0000000080006ca4] W[r11=0000000000000002][1] R[r 9=8000000000000000] R[r 0=0000000000000000] inst=[0024859b] addiw   a1, s1, 2
C                   0:      47094 [1] pc=[0000000080006ca8] W[r 0=0000000000000000][0] R[r 3=000000008000c3c0] R[r11=0000000000000002] inst=[88b18fa3] sb      a1, -1889(gp)
C                   0:      47094 [1] pc=[0000000080006cac] W[r 9=8000000000000000][1] R[r 9=8000000000000000] R[r 9=8000000000000000] inst=[00008cc5] c.or    s1, s1
C                   0:      47094 [1] pc=[0000000080006cae] W[r13=0000000080056cae][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00050697] auipc   a3, 0x50
C                   0:      47094 [1] pc=[0000000080006cb2] W[r 0=0000000000000000][0] R[r13=0000000080056cae] R[r14=0000000000000002] inst=[16e680a3] sb      a4, 353(a3)
C                   0:      47094 [1] pc=[0000000080006cb6] W[r 8=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00075417] auipc   s0, 0x75
C                   0:      47094 [1] pc=[0000000080006cba] W[r 8=000000008007bd90][1] R[r 8=19239189efefdefd] R[r 0=0000000000000000] inst=[0da40413] addi    s0, s0, 218
C                   0:      47094 [1] pc=[0000000080006cbe] W[f 9=734f32cfe38a4528][1] R[r 8=000000008007bd90] R[r 0=0000000000000000] inst=[00003004] c.fld   fs1, 32(s0)
C                   0:      46976 vrf[24]=[fffffffffffffffffffffffeffffffff][ffff]
C                   0:      47095 [1] pc=[0000000080006cc0] W[r12=ffffffffffffffff][1] R[r28=0000000000000001] R[r 9=8000000000000000] inst=[029e563b] divuw   a2, t3, s1{noformat}","17/Aug/22 2:17 AM;6065017e90e3950069cf01c5;{noformat}   0: 0x0000000080006c8e (0xc18f7057) vsetivli zero, 30, e64, m1, tu, mu{noformat}

does not set {{vl}} to zero, it tries to set {{vl}} to 30 but as LMUL=1 ({{m1}}) and SEW=64b {{e64}}, vl is set to {{2}}

the zero register used as destination only means that the actual result value {{vl}} is discarded

This can be checked later in the cosim logs

{noformat}core   0: 0x0000000080006cf6 (0xc08c7057) vsetivli zero, 24, e16, m1, tu, mu   <= vl set to 8 (LMUL=1, AVL=24) 
(...)
core   0: 0x0000000080006d06 (0x4ae32657) vzext.vf2 v12, v14
core   0: 3 0x0000000080006d06 (0x4ae32657) e16 m1 l8 v12 0x008a009c00610083008a009e00600051 (vl=8 used){noformat}

I think the old value of {{vl}} is kept only when rs1 = {{x0}} for {{vsetvl}}



The problem may be more related to an overflow of the slide amount leading to an unmodified {{vslideup.vx}} destination","17/Aug/22 2:45 AM;6065017e90e3950069cf01c5;It seems the shift amount is still too short by one bit (the Slider’s {{shiftAmtWidth}} was not properly set).

I am checking a fix.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]::  COSIM VS RTL MCAUSE MISMATCH,[TGV]::  COSIM VS RTL MCAUSE MISMATCH,,,,,MAL-2395,122821,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/16/2022 8:37,9/7/2022 17:43,9/28/2022 0:51,8/17/2022 16:57,,,,,,,,,,,,,RTL/RDU,,,,,,,,,0,TGV,,,"*Error:*
\[COSIM-ERROR]\[0] COSIM VS RTL MCAUSE MISMATCH
\[COSIM-ERROR]\[0] Dut state: CSR_TIMER=32760 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x00000000800096c0 | MCAUSE=0x0000000000000002 | VSTART=0 | VL=8 | SEW=16 | LMUL=m1 | VSEGELT=0

\[COSIM-ERROR]\[0] Cosim state: CSR_TIMER=0 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x00000000800096c0 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=8 | SEW=16 | LMUL=m1 | VSEGELT=0

\[COSIM-ERROR]\[0] COSIM VS RTL PC MISMATCH

\[COSIM-ERROR]\[0] m_dut_inst_item: \[32928] InstInfo: VLD=1 | PC=0x00000000800096c0 | INSN=0x00006291 | INST_DST=INT | REDUCTION = false | WR: en=true r5=0x0000000000004000 mask=ff | READY=1 | CSR_TIMER=32928 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x00000000800096c0 | MCAUSE=0x0000000000000002 | VSTART=0 | VL=8 | SEW=16 | LMUL=m1 | VSEGELT=0

*Debug-Trace in Cosim::*
core   0: 0x000000008000336a (0xc0877057) vsetivli zero, 14, e16, m1, tu, mu
core   0: 3 0x000000008000336a (0xc0877057)
core   0: 0x00000000*8000336e* (0x26f63757) [vand.vi|http://vand.vi] v14, v15, 12
core   0: 3 0x000000008000336e (0x26f63757) e16 m1 l8 v14 0x000c000800080004000c000800080004

In Design it take Interrupt on  PC=0x8000336e

*Config::* coreip_p670
*Compiler::* SFC
*SHA1::*  8a674a9e13517a3fe87577987e694f7b6700aa3e
*Logs::* gamma26:://scratch/naveenr/aug-16/federation/builds/coreip_p670/sim/sim/rerun.outline_pc_mismatch/rat_default_T_0122/rat/default/waves.fsdb
*Rerun.outline::* 
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": \[
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+MEM_ERROR_INJECT=._\.tag_array_.ext,1,0,32:._\.data_arrays_0_._ext,1,0,32:._\.syssram._ext,1,0,32:._\.island.\.lim\.syssram._ext,1,0,32:._\.tagged_tables_0_._ext,1,0,32:._\.base_table_0_.*ext,1,032"",
""+verbose""
],
""subdir"": ""rat_default_T_0122"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 4079953217
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
",David Kravitz,Josh Smith,Naveen Rathore,,,,,,,,,,,,,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,6235105a3eacc50071ff07ec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,16/Aug/22 3:00 PM;ug:03996552-4b14-4132-be2b-a08c9c621951;Screen Shot 2022-08-16 at 6.00.43 PM.png;https://sifive.atlassian.net/secure/attachment/75958/Screen+Shot+2022-08-16+at+6.00.43+PM.png,,,,,,,,,,,,,,,,8a674a9e13517a3fe87577987e694f7b6700aa3e,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-17T16:56:58.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,147ec85b9cfc6676312489bf0cd9dbbfaf5d2375,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00jvj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,53:51.7,16/Aug/22 8:53 AM;5acffeafaa802f2a797a955c;mcause = 0x2 should be an illegal instruction exception.,"16/Aug/22 2:38 PM;5fd15143b4a74900763834e0;Haven’t fully root-caused this yet, but the problem is a legal instruction is seeing the wrong {{vlmul}} value (LMUL=4 instead of LMUL=1), which then appears to result in an illegal {{rs2}} starting point.","16/Aug/22 2:58 PM;5fd15143b4a74900763834e0;Still not fully root-caused, but clear enough that [~accountid:5acffeafaa802f2a797a955c] needs to take a look.

Here are the instructions at the time of interest. The {{vand.vi}} triggers the exception.

{noformat}    80003356:	c18fffd7          	vsetivli t6, 31, e64, m1, tu, mu
    8000335a:	b70c2057          	vmacc.vv	v0,v24,v16
    8000335e:	81018d93          	addi	s11,gp,-2032 # 8000afd0 <fromhost+0x90>
    80003362:	088db427          	fsd	fs0,136(s11) # bc6088 <_prog_start-0x7f439f78>
    80003366:	01cd0b63          	beq	s10,t3,8000337c <no_wfi+0x2f1e>
    8000336a:	c0877057          	vsetivli zero, 14, e16, m1, tu, mu
    8000336e:	26f63757          	vand.vi	v14,v15,12{noformat}

It looks to me like the REN stage is trying to read the result of the 2nd {{vsetivli}} before it actually gets written into the VSRF. The read appears to be occurring then due to {{vsetRewindStall_ID_REG}} and {{vsetRewindDone_ID}} asserting.",17/Aug/22 5:50 AM;5acffeafaa802f2a797a955c;Yeah you appear to be right.  It looks like an issue with the vtype/vl recovery after a flush.,"17/Aug/22 1:20 PM;5acffeafaa802f2a797a955c;The problem was the following scenario:

* A flush occurs
* Either no vset instructions were in flight or all of them are rewound after the flush. The ROB rewind is still going.
* A new vset instruction comes through ID stage and updates the vtype/vl information in ID
* The ROB rewind finishes, and we incorrectly try to recover the ID copy of vtype/vl from the VSRF. This overwrites vtype/vl from the new vset instruction

My fix was to add a flag that remembers that we already finished rewinding the vset colors before the ROB rewind finishes.  This should prevent the VSRF read and overwrite of the new vset information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Implement Vector Index Buffer ,,,,,,MAL-2394,122817,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,8/16/2022 8:09,8/30/2022 2:25,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"The VIB (Vector Index Buffer) is a buffer located in TGV’s Baler.

* It is written by *uops* on the TGV side which read index value from main PRF
* It is read for the LSU and the Baler side
** the LSU read the index as the byte offset relative to base address to calculate the actual address in the vector AGU
** Requires 1~8 uops to load the full index data to 1~8 VIB entries
** Wait until all the indexes of the indexed load store are loaded in VIB before wakeup the first uop in LSU (it simplifies the design and will stay in this way for the initial TGV version)
** Element width of index and data might be different
*** LMUL=1 SEW=8 {{vluxei64}} means data eew=8 and index eew=64, so
**** It requires 8 VIB entries of index to calculate addresses for 1 LTB entry of data in VAGU
*** LMUL=8 SEW=64 {{vluxei8}} means data eew=64 and index eew=8, so
**** It requires 1 VIB entries of index to calculate addresses for 8 LTB entry of data in VAGU
* The plan is to set VIB size to 16 and reserve last 8 entries for oldest indexed load store in Baler ISSQ
* Still unclear how to tag VIB entries correctly to let VAGU locate the correct index entry when VIB {{uopID}} and LTB {{uopID}} is not 1:1 matching",Brad Wu,David Kravitz,John Ingalls,Nicolas Brunie,Yohann Rabefarihy,,,,,,,,,,,62103777eb2978006893b778,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,6065017e90e3950069cf01c5,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2066,MAL-2452,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2066,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00jun:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,42:31.7,"16/Aug/22 10:42 AM;5fd15143b4a74900763834e0;Not sure we’ll solve it this way, but because the VIB → VAGU moves will occur at different times than the STB → SDPipe or LDPipe → LTB moves, there is no requirement that the uops be the same. The data uops can restart at 0 after the index uops, and refer to the data sizes, not the index sizes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV/Crypto] TGV Vector Crypto Micro-Architecture Specification for SM3 Instructions,,,,,,MAL-2393,122812,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/16/2022 7:11,9/22/2022 3:44,9/28/2022 0:51,,,,,,,,,,,,,,Documentation,,,,,,,,,0,,,,"The following items will be detailed in the “[TGV Vector Crypto Micro-Architecture Specification|https://github.com/sifive/arch-specs/blob/master/core/tgv_crypto.adoc]” document:

* Instruction definitions
* Micro-op specifications
* Micro-op micro-architecture specifications",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2391,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2391,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00jtj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV/Crypto] TGV Vector Crypto Micro-Architecture Specification for SHA2 Instructions,,,,,,MAL-2392,122810,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/16/2022 7:08,9/22/2022 3:44,9/28/2022 0:51,,,,,,,,,,,,,,Documentation,,,,,,,,,0,,,,"The following items will be detailed in the “[TGV Vector Crypto Micro-Architecture Specification|https://github.com/sifive/arch-specs/blob/master/core/tgv_crypto.adoc]” document:

* Instruction definitions
* Micro-op specifications
* Micro-op micro-architecture specifications",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2391,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{branch={count=1, dataType=branch}, json={""cachedValue"":{""errors"":[],""summary"":{""branch"":{""overall"":{""count"":1,""lastUpdated"":null,""dataType"":""branch""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2391,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00jt3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV/Crypto] TGV Vector Crypto Micro-Architecture Specification,,,,,,MAL-2391,122809,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/16/2022 7:05,9/22/2022 3:44,9/28/2022 0:51,,,,,,,,,,,,,,Documentation,,,,,,,,,0,,,,"The following items will be detailed in the “[TGV Vector Crypto Micro-Architecture Specification|https://github.com/sifive/arch-specs/blob/master/core/tgv_crypto.adoc]” document:

* Instruction definitions
* Micro-op specifications
* Micro-op micro-architecture specifications",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2392,MAL-2393,MAL-2691,MAL-2692,MAL-2693,MAL-2694,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-5,,[TGV] specify vector crypto uops needed to implement RISC-V vector crypto extension,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,dark_teal,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00jsv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Assertion Fail : ROB Retire Hang,Assertion Fail : ROB Retire Hang,,,,,MAL-2390,122804,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Deepika S K,622a9d30c4d0fe0069575ac9,Deepika S K,622a9d30c4d0fe0069575ac9,Deepika S K,622a9d30c4d0fe0069575ac9,8/16/2022 5:03,8/17/2022 8:50,9/28/2022 0:51,8/16/2022 11:15,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"*Error :* 

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/RIT-mallard-Base-Tests/386/builds/coreip_p650/verilog/design/SiFive_ROB.sv"", 9904: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob: at time 15484922500 ps
assert failed (verification library): ROB Retire Hang around entry 115   @[ROB.scala 779:9]{noformat}

Tracing the waveform,  {{robExcOldest}} is seen to be asserted low.
From {{Sifive_ROB.sv}},

{noformat}robExcOldest = excMonValid & (_robRetirePtr_T == excMonState_gid | _T_99 | _T_104){noformat}

{{excMonState_gid}} transistions from {{0x78}} to {{0x92}}, while {{_robRetirePtr_T}} is stalled at {{0x78}}.

*Waveform :* 

!image-20220816-120213.png|width=100%!

----

*Regression :* fed/master/RIT-mallard/386

*Config :* coreip_p650

*Commit :* 364b346

*Simscope link :* [*https://simscope.internal.sifive.com/sigs/740/cm6pjsw3f0la*|https://simscope.internal.sifive.com/sigs/740/cm6pjsw3f0la]

*rerun.outline :* 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingISATuple_T_0099"",
  ""subtest"": ""valtrix/rv32i/more_st_add.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3627595094
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dump Path :* 

{{gamma28 : /scratch/deepikas/mallard-RIT-386/federation/builds/coreip_p650/sim/sim/more_st_add.outline/sting_StingISATuple_T_0099/sting/valtrix/rv32i/more_st_add.conf}}
",Deepika S K,John Ingalls,Josh Smith,,,,,,,,,,,,,622a9d30c4d0fe0069575ac9,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1540,,,,,,,,,,,,,,,,,,16/Aug/22 5:03 AM;ug:0c84c1d9-358d-4f68-993a-932052da7479;image-20220816-120213.png;https://sifive.atlassian.net/secure/attachment/75932/image-20220816-120213.png,,,,,,,,,,,,,,,,364b346085d0b554194fad2117320e144eb1a24a ,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5ecca5e339e45b2b0b45314b22cebe9565c0405c,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i00jrr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,51:06.4,"16/Aug/22 7:51 AM;5acffeafaa802f2a797a955c;I think this hang is due to prefetch instructions not sending completions back to the ROB properly.  I think [~accountid:5bb6808b9ba2930990f81895] already fixed this in [https://github.com/sifive/federation/pull/25328|https://github.com/sifive/federation/pull/25328|smart-link] 

I already reproduced the failure. I’m going to try cherry-picking that commit and see if that fixes it.","16/Aug/22 11:14 AM;5acffeafaa802f2a797a955c;After cherry-picking the fix from [https://github.com/sifive/federation/pull/25328|https://github.com/sifive/federation/pull/25328|smart-link] , the test passes the hanging point.  It’s still running for me (after more than 1.2 million cycles).  I’m going to resolve this ticket as already fixed though.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] fix flush application in horizontal reduction unit,,,,,,MAL-2389,122791,120712,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,8/16/2022 1:06,9/13/2022 15:05,9/28/2022 0:51,8/26/2022 7:00,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Kira Tsao,Nicolas Brunie,,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2220,MAL-2604,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-26T06:38:04.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00jov:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,120712,[TGV] review and refactor flush timing in VexPipe,Done
[TGV] fix flush application in vector division,,,,,,MAL-2388,122790,120712,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,8/16/2022 1:03,9/13/2022 15:04,9/28/2022 0:51,8/31/2022 19:29,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Kira Tsao,Nicolas Brunie,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2220,MAL-2604,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-31T19:29:15.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00jon:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,120712,[TGV] review and refactor flush timing in VexPipe,Done
[TGV] Assert error for FP reduction min/max,[TGV] Assert error  FP reduction min/max,,,,,MAL-2387,122788,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Shaka Kao,5f94696c29bd8a006f94f0e1,Shaka Kao,5f94696c29bd8a006f94f0e1,8/16/2022 0:51,9/7/2022 17:43,9/28/2022 0:51,8/16/2022 18:54,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"P670 simulation.

Assert error:

{noformat}Error: ""/scratch/shakak/fed/p670_regr/Build/coreip_p670/verilog/design/SiFive_FreeListBanked.sv"", 2024: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.free
assert failed (verification library): Banked freelist exhaustion. Check your nPRs parameter.  @[FreeList.scala 477:9]{noformat}



git hash: {{07cf68f3127b0b0e48cb4ec638ad1f50feb1f17d}}

rerun:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+verbose""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vfredmax.vs"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vfredmax.vs_Mask-7_Masking-1_Exception-0_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_NoSelfCheck-1_FLMUL-0_NonzeroVstart-1_VstartPercent-10_Sample-100_LMUL-1_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 4282876139
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Brian Grayson,Fu-Ching Yang,Hsinyi Lee,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,Shaka Kao,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5dcdcc6a99e7ea0c60b0e6aa,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-16T18:53:37.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,bca2e786528c717d67ff6d7df16f5763f2280265,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00jo7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,57:23.8,16/Aug/22 4:57 AM;5acffeafaa802f2a797a955c;[~accountid:62103777eb2978006893b778] This is probably something that I should look at instead.  I’ll take this ticket.,"16/Aug/22 10:18 AM;5acffeafaa802f2a797a955c;Yeah, this is simply due to one bank of the Freelist being used very heavily and becoming empty while the other banks are relatively full.

I suppose I can modify the Freelist to work around these issues for now, even if it’s not what we decide to do in the end for load-balancing the banks.",16/Aug/22 6:54 PM;5acffeafaa802f2a797a955c;Possible performance impact because this may affect the number of freelist stall cycles.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Implement Vector Mask Buffer,,,,,,MAL-2386,122784,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/15/2022 23:53,8/23/2022 15:57,9/28/2022 0:51,8/19/2022 12:41,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"The VMB (Vector Mask Buffer) is a buffer located in TGV’s Baler.

* It is written by *uops* on the TGV side which read mask value in the mask PRF
* It is read for the LSU and the Baler side
** the LSU probes the masks to drive the vector AGU (which access correspond to active element)
** The Baler uses the mask in the VMB to prepare old-destination-data in LTB  / STB (To be checked)

(from spec)

{quote}the Vector unit will transfer mask data from the Mask Unit to a dedicated VLENB-width buffer that the LSU will read during its RR pipeline stage{quote}

VMB entries are {{VLENB}}-wide so they cannot be used for all the uops in a sequence.

+*Part of the spec relevant to mask or VMB:*+

[https://github.com/sifive/arch-specs/blob/master/core/tgv_mas.adoc#192-masks|https://github.com/sifive/arch-specs/blob/master/core/tgv_mas.adoc#192-masks]

[https://github.com/sifive/arch-specs/blob/master/core/tgv_mas.adoc#1935-vector-mask-buffer|https://github.com/sifive/arch-specs/blob/master/core/tgv_mas.adoc#1935-vector-mask-buffer]",Brad Wu,David Kravitz,John Ingalls,Nicolas Brunie,Yohann Rabefarihy,Zhen Wei,,,,,,,,,,62103777eb2978006893b778,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,6065017e90e3950069cf01c5,61730c9cbcb57400683f15a6,5e49f622a17f930c9b94b6cd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,16/Aug/22 2:41 AM;ug:57c1528d-c032-4679-8e67-960f3039970a;image-20220816-092103.png;https://sifive.atlassian.net/secure/attachment/75926/image-20220816-092103.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-19T12:41:07.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2212,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/b99f90fdbd17dcb6cc3924e034c1fe17bb178143,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00jnb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,41:58.6,"16/Aug/22 2:41 AM;62103777eb2978006893b778;Hi [~accountid:6065017e90e3950069cf01c5] , after discussed with [~accountid:5e49f622a17f930c9b94b6cd] , we found out if we want to have 1:1 matching between VMB (VLENB per entry) and LTB entries, then it will become hard for the VMB/LTB allocation in the following case.

!image-20220816-092103.png|width=1127,height=670!

These are 2 issues we currently found if VMB and LTB entries is 1:1 mapping.

# If Baler uop (A) try to allocate 8 VMB entries, then LSU uop (B) need to have a mechanism to allocate the same LTB entries at LSTR stage.
# If Baler uop (A) try to allocate 8 VMB entries at VISS, and LSU uop in LSTR should not allocate the LTB entry indexes that uop (A) claimed.
# Need to reserve 8 entries for the oldest LDST instruction like the LTB.



We still prefer the design choice to have VLEN bits per VMB entry (with entry number < LTB size) because it has the following benefits

# Only 1 Baler uop needed to read the mask data, and write to 1 destination
# At LSTA stage, it only requires to read 1 VMB entry to do the address calculation. Because LSTA process address generation in linear manner, it can naturally read 1 bit per element from VMB.
# No mapping problem like the above issues.

But this design choice should check whether uop can allocate VMB entry in Baler ISSQ. ","16/Aug/22 2:51 AM;6065017e90e3950069cf01c5;My understanding was that we were going to have at most 1 VMB entry per LTB entry but not necessarily a 1:1 mapping (in the same they don’t need to have the same buffer ids), for unmasked L/S no VMB entry is allocated.

So for your point 1. we only need to have the same number of entries available, not necessarily at the same position.

We keep space in VMB for oldest uop (oldest masked ?) to ensure forward progress.","16/Aug/22 4:29 AM;61730c9cbcb57400683f15a6;For issue 1)

Yes vagu is claiming 8 entries of LTB if we need it. This is already what we do.

All are tagged with gid+uopid so there is no  need to have the same entries (but the same number of entry). That said it would be rather good to direct map to avoid tag match mechanism. Which imply that vmb cannot be shared between ltb and stb.

Issues 2)

If the mask is all zeroed for an entire ltb entry, we still need to handle mu/ma behavior so the entry would be claimed.

If there is a special case where we can kill the ltb claimed and vrf access this will be an optimisation. (Fake claimed, or based on the uopID sent)

Maybe I didn't understood where is the issue. So please confirm that this is ok.

The issue with Vlen bits per VMB entry is that you might not often used the whole vlen bits but still you lock it for an instruction. Then you'll need to process the chunk of VMB entry data needed for each LTB entries.

E.g. Going with VLENB size of VMB entries  means you can have 8 times the numbers of 128b unit-stride masked load in flight for a given size of the VMB compare to VLEN bits

For the 3rd point, yes you need 8 entries but they are 8 times smaller.



For the pros of your solution:

I think we still need one bal uop to read mask data, and we should try to write up to 8 entries at once. What if the mask is forwarded from mask unit? Are you sure that you will always get all the mask data at once ?

From an LSU perspective we will need to extract each elements so this will not be different unless for the read request where we will do 8 rather than 1. (But still 8x smaller data transfer)

And mapping will still be an issue to be solved by tagging the entry (with gid only).","16/Aug/22 4:32 AM;62103777eb2978006893b778;If there is no 1:1 mapping between VMB and LTB, then I think there is no good reason to split mask to VLENB segments, either in byte-per-bit or element-per-bit format.

Because mask is read in LSTA, it’s not going to be OoO address generation, so per-instruction-mask is sufficient. Furthermore, it provides these additional benefits

# 1 entry per instruction (potentially 1 entry can alias to multiple instruction if mask is not changed)
# AGU select mask from fewer VMB entries compared to VLENB-sized entry
# It’s simpler to do the tag matching, no uopID matching needed","16/Aug/22 5:06 AM;5fd15143b4a74900763834e0;Do we need a meeting to discuss VMB details? I could do something early my time that could catch most of you at least during “awake” hours. It’s hard to follow as a thread.

- The VMB should be VLEN bits wide, with one entry per gid
- The number of VMB entries should be tunable independent of LTB/STB/VIB entries. It will almost definitely be less than LTB entries.
- How the VMB is accessed – all at once vs. per-uop – should be based on whatever the VAGU thinks will work best
- We have ideas for how to optimize operations when a mask is all-0, but that’s a post-Panda activity so just write down your ideas and move on 🙂 ","16/Aug/22 5:18 AM;6065017e90e3950069cf01c5;{quote}The VMB should be VLEN bits wide, with one entry per gid{quote}

Ok so the MAS is out-of-date

I don’t know if we need a meeting but we need to agree on a way to discuss, either a meeting or here or a thread on slack [https://sifive.slack.com/archives/C02LGLVN2LD/p1660638959248899|https://sifive.slack.com/archives/C02LGLVN2LD/p1660638959248899|smart-link] , but the 3 in parallel might prove difficult to follow.","16/Aug/22 5:20 AM;6065017e90e3950069cf01c5;[~accountid:61730c9cbcb57400683f15a6] 's

{quote}If the mask is all zeroed for an entire ltb entry, we still need to handle mu/ma behavior so the entry would be claimed.{quote}

For me this still falls under the masked category, so an entry will be allocated in VMB.

I was referring to unmasked load/stores (so opcode bit 25 = 1), which are not impact by any mask.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vmfne doesn't set fflags,[TGV] vmfne,,,,,MAL-2385,122757,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Zhiqiang Hao,5d02d411febd110bc78aabc3,Zhiqiang Hao,5d02d411febd110bc78aabc3,8/15/2022 12:14,9/7/2022 17:43,9/28/2022 0:51,8/15/2022 20:13,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"Commit: {{c8006aba77cc996924174fe0da92bce769507f72}}

Config: {{coreip_u8_minimal_vector}}

Rerun:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+verbose""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vmfne.vv"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vmfne.vv_Mask-7_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_NoSelfCheck-0_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-1_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-1"",
  ""seed"": {
    ""value"": 2674432585
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



{noformat}C                   0:      18690 [1] pc=[0000000080001542] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[73de1f57] vmfne.vv v30, v29, v28{noformat}



v29:

{noformat}.4byte 0x565bd4b5, 0xff9220bf, 0x5e8876e2, 0x4ec64ef5{noformat}

v28:

{noformat}.4byte 0x50abda0a, 0xabe57af0, 0x0abef6ad, 0x3a70d025{noformat}



As {{0xff9220bf}} (NaN) is an input, NV should be set in fflags



On RTL, fflags is still 0:

{noformat}C                   0:      18821 [1] pc=[0000000080001638] W[r 5=0000000000000000][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[001022f3] csrr    t0, fflags{noformat}",Andrew Hanselman,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Kira Tsao,Nicolas Brunie,Zhiqiang Hao,,,,,,,,609d7e1f5998a6006800dcc5,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2375,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i00ji7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,12:27.4,15/Aug/22 8:12 PM;5e1a4f5ec578120daca5ff8e;Confirm this issue is same as [https://sifive.atlassian.net/browse/MAL-2375|https://sifive.atlassian.net/browse/MAL-2375|smart-link]  and it’s already been fixed by [PR-25299|https://github.com/sifive/federation/pull/25299]. Latest master can passed the rerun.,16/Aug/22 6:25 AM;6065017e90e3950069cf01c5;I don't think this can have any performance impact. It was just a clock gating issue,"16/Aug/22 7:16 AM;609d7e1f5998a6006800dcc5;No performance impact, but not a clock-gating issue like accumulator PRA set twice error. I think this was the same as some FP compares using qNaN inputs to set invalid operation flag.","16/Aug/22 7:31 AM;6065017e90e3950069cf01c5;Sorry I mixed bugfixes, but my conclusion was sound 🙂 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Align VEX clock gating with scalar clock gating pattern,,,,,,MAL-2384,122750,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,8/15/2022 11:44,8/18/2022 17:20,9/28/2022 0:51,8/15/2022 17:39,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"We had moved the clock gate for the VEX outside of the module to capture VEX level flops not contained in the Vex Pipes, Issue Queues, or PRFs. Upon inspection, it’s just the vector accumulators which are not clock gated in the VEX. Moving the clock gate outside of VEX diverges from the clock gating pattern used in  scalar RDU/IEX/FEX, so we want to move it back in with some clarifications.

# Move {{vexClockEn}} back into VEX
# Include vector accumulator instantiations in VEX clock domain
# Keep VEX clock gating coverage/assertion logic outside of VEX clock domain (addressed in item 1)

Scalar side uses a pattern where clock enable is determined by a few different sources:

# Generator config
# Chicken bits
# Pipeline active / internal keep awake clock enable signal
# Wakeup / external clock enable

RDU example here: [https://github.com/sifive/federation/blob/764a21c8bc0544c530f68aebbb14e0c10f46365b/mallard/src/main/scala/core/mallard/RDU.scala#L248-L256|https://github.com/sifive/federation/blob/764a21c8bc0544c530f68aebbb14e0c10f46365b/mallard/src/main/scala/core/mallard/RDU.scala#L248-L256]",Andrew Hanselman,Josh Smith,Nicolas Brunie,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-16T07:18:46.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,872f9f0cec238dbccb81d3ddd1b9dd431031a394,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00jgn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,05:28.8,"15/Aug/22 12:05 PM;5acffeafaa802f2a797a955c;After the point you made this morning, I looked back at the RDU because the RDU clock gate actually lives in FEU (which goes against what I myself said).  I think we might have the same problem with the RDU clock gate cover points.

I want to keep the actual clock gate outside of the RDU module though (because of the stupid way that {{withClock}} blocks work, you have to return anything you want to reference outside of the block), so we might have to move the cover points out into FEU.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
RAS forwarding issue while security context mismatch,,,,,,MAL-2383,122704,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Cyril Bresch,5fa5f3f5b45b2e0074939e18,Cyril Bresch,5fa5f3f5b45b2e0074939e18,Cyril Bresch,5fa5f3f5b45b2e0074939e18,8/13/2022 1:55,9/23/2022 9:24,9/28/2022 0:51,8/24/2022 9:38,,,,,,,,,,,,,RTL/Frontend,,,,,,,,,0,,,,"It does seem that enabling the secureBP will fail this assertion in the IFU.scala:1438

{noformat} assert(!(rasTargetCheckEn_F3 && (pcVA_F2 =/= alignPC(rasTarget_F3))), ""RAS forward target was incorrect""){noformat}

This RAS forwarding assertion does not stand anymore in case of security-context mismatch.
Disabling the RAS forwarding just in case of context security mismatch would be a sufficient solution. To me, it should not have much impact, the stack is already unbalanced.",Brian Grayson,Cyril Bresch,Frank Lhermet,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,Lun Li,Suraj Vellengar,,,,,,,5e1371705361330daaeaf389,5fa5f3f5b45b2e0074939e18,5cddd0c6c33a5d0dcf0b3fe2,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,5dbc8d4f3a09190c2ad5f41d,5e1377323e586d0dafebf4e3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1718,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Branch Prediction,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-24T05:51:59.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7f137167f48fa0a19ee1d6234262451242fcc7c9,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00j6n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,2,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,45:18.4,"17/Aug/22 9:30 AM;5fa5f3f5b45b2e0074939e18;[~accountid:5acffeafaa802f2a797a955c] [~accountid:5cddd0c6c33a5d0dcf0b3fe2] 

I'm just rethinking it. RAS forwarding introduces a slight bias between the RAS and NLP-hit prediction in the case of a RAS security context mismatch in F3.

To avoid security issues, a security context mismatch in the RAS should take precedence by blocking the rasForwarding in F3 and thus enforcing RAS redirect.

This should have little (to no?) impact on performance since this occurs on (low frequency) domain context switches with a high probability that in such case the RAS is already unbalanced, leading to later probable misprediction.

My only concern is the NLP update due to redirection. It would make sense to keep the update policy of the NLP as without the secure branch prediction feature, thus with the non-enforced secure prediction value.

Another solution would be to tag the NLP, but this has a higher hardware extra cost I think.","20/Aug/22 9:45 AM;5acffeafaa802f2a797a955c;[~accountid:5fa5f3f5b45b2e0074939e18] Yeah I agree we should prevent the RAS forwarding on a context mismatch.  I was just trying to figure out the best way to do that in the RTL.

I think we can probably do it by making sure the {{nlp.io.rasEmpty_F3}} input is zero on a context mismatch.  I don’t think we want to change the normal {{rasEmpty_F3}} signal coming from the RAS though, because that impacts other branch prediction control logic.  It looks like if we do that, it might prevent the NLP RAS entries from being allocated though.  If I understand you correctly, you didn’t want to change the NLP update/allocation policy.","22/Aug/22 12:20 PM;5fa5f3f5b45b2e0074939e18;I took a look at {{nlp.io.rasEmpty_F3}}, it prevents the forwarding just as needed. The assertion should hold \!
Thanks \!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion failed: LTB Entry should be cleared after a flush at LoadBuffer.scala:143,[TGV] Assertion failed: LTB Entry ,LSU (Load Store Unit),,,,MAL-2382,122639,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,8/12/2022 11:11,9/7/2022 17:43,9/28/2022 0:51,8/12/2022 13:25,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"cc: [~accountid:61730c9cbcb57400683f15a6] 

{noformat}Error: ""/scratch/sols/tgv4/federation/builds/43e7c18ae08_sfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LTBEntry_assert.sv"", 128: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.bal.ltb.ltbEntries_0.SiFive_LTBEntry_assert_0: at time 245502500 ps
Assertion failed: LTB Entry should be cleared after a flush

    at LoadBuffer.scala:143 assert(~ltbE_dataValid_q && ~ltbE_entryValid_q, ""LTB Entry should be cleared after a flush"")


Fatal: ""/scratch/sols/tgv4/federation/builds/43e7c18ae08_sfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LTBEntry_assert.sv"", 137: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.bal.ltb.ltbEntries_0.SiFive_LTBEntry_assert_0: at time 245502500 ps
$finish called from file ""/scratch/sols/tgv4/federation/builds/43e7c18ae08_sfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LTBEntry_assert.sv"", line 137.{noformat}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vle-vse"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

SFC

Waveform: gamma11:/scratch/sols/tgv4/federation/builds/43e7c18ae08_sfc/coreip_u8_minimal_vector/sim/sim/tgv_vle-vse.outline/vector/vle-vse",Alexandre Solomatnikov,David Kravitz,Yohann Rabefarihy,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/43e7c18ae08,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-12T15:11:59.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25300,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00is7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,12/Aug/22 11:16 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;This is very dependent on timing: establish and flush must happen in the same cycle. Not re-producible with MFC or later commits.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[TGV] Hit ""Accumulator ready set twice"" assert for floating-point compare instructions","[TGV] Hit ""Accumulator ready set twice"" assert ",,,,,MAL-2381,122628,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Shaka Kao,5f94696c29bd8a006f94f0e1,Shaka Kao,5f94696c29bd8a006f94f0e1,8/12/2022 7:19,9/7/2022 17:43,9/28/2022 0:51,8/16/2022 7:54,,,,,,,,,,,Panda DR,,TGV_RTL/MU,,,,,,,,,0,TGV,,,"Problem:

* vector floating-point compare instructions hit “Accumulator ready set twice” assert.

*git hash: 0da6ea548765e890a1326cfcebf59a096e2a6299*

{noformat}commit 0da6ea548765e890a1326cfcebf59a096e2a6299 (HEAD -> master, origin/master, origin/HEAD)
Author: Prasad Krishna Saravu <85243721+psaravu@users.noreply.github.com>
Date:   Fri Aug 12 16:08:47 2022 +0530{noformat}



*Failed tests/instructions:*

{noformat}regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfeq.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfeq.vv/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfge.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfge.vv/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfgt.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfgt.vv/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfle.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfle.vv/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmflt.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmflt.vv/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfne.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfne.vv/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmslt.vx/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmfeq.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmfeq.vv/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmfge.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmfge.vv/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmfgt.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmfgt.vv/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmfle.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmfle.vv/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmflt.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmflt.vv/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmfne.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmfne.vv/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmfeq.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmfeq.vv/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmfge.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmfge.vv/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmfgt.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmfgt.vv/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmfle.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmfle.vv/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmflt.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmfne.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmfne.vv/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmfeq.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmfge.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmflt.vf/simulation.out
regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmfne.vf/simulation.out{noformat}

*Reproduce bug:*

server: gamma11
simulation log folder: 
{{/scratch/shakak/mal-2237-ZeroMask-regr/federation/Build_0812/coreip_u8_minimal_vector/sim/regr/tgv-regr-zeroMask.outline/}}
Rerun outline for {{vmfeq.vv}} (LMUL=2)
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+verbose""
  ],
  ""subdir"": ""t0000_lmul2"",
  ""subtest"": ""vmfeq.vv"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vmfeq.vv_Mask-2_Masking-1_Exception-0_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_NoSelfCheck-1_FLMUL-0_NonzeroVstart-1_VstartPercent-10_Sample-100_LMUL-2_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-1"",
  ""seed"": {
    ""value"": 4182448092
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Andrew Hanselman,Nicolas Brunie,Shaka Kao,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,15/Aug/22 1:57 AM;ug:113b86d8-ecfc-456b-a6a8-529c0abb7d7d;Xnip2022-08-15_16-12-29.png;https://sifive.atlassian.net/secure/attachment/75888/Xnip2022-08-15_16-12-29.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-16T07:55:31.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,9b3c174a54e643d3167884ddb56e81c5d5b3e2ec,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00ipr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,39:02.3,"15/Aug/22 1:57 AM;5f94696c29bd8a006f94f0e1;Hi [~accountid:609d7e1f5998a6006800dcc5], I’m not sure current clock gating mechanism/timing is correct or not for the accumulator.

For a chunk of the accumulator that is “used”, the {{ready}} of this chunk is not zero (for example, {{0xFF}}). Now, if this chunk is selected again, ideally, the {{readyClearVec}} signal should clear the {{ready}} to {{0x0}}. Unfortunately, when {{readyClearVec}} sends {{0xFF}} to the accumulator, at this moment, the accumulator’s clock is gated, and thus the {{ready}} still keeps {{0xFF}}. So, when a mask-out uop in RDU, and {{readySetVec}} sends “set ready” to the accumulator, it causes an “Accumulator ready set twice” assert error.

!Xnip2022-08-15_16-12-29.png|width=66.66666666666666%!

\[{color:#ff5630}*Question*{color}] There are two cycles of latency from VEX active (not vexIdle) to resume VEX clock. Is it the expected behavior?

But no matter what, even VEX clock is resumed right after {{~vexIdle}} (next cycle), the {{readyClearVex}} hint is still missed.



I temporarily set the non-gated clock to VEX, and the rerun test passed. The {{ready}} for each chunk can be cleared (set to 0x0) correctly.

{noformat}-  val vex = withClock(vexClock) { Module(new VEX(mp, bParams, isa))}
+  val vex = withClock(clock) { Module(new VEX(mp, bParams, isa))}{noformat}



Regression result for {{vtg-tgv-tests.outline}} (enable masking; set mask value to zero)

{noformat}|                                                                                         name   |                   config   | simulator   |   cputime |   bucket | UUID         |
|------------------------------------------------------------------------------------------------|----------------------------|-------------|-----------|----------|--------------|
| regr_clock/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector   | vcs         |     54.54 |        1 | d4207c5a28   |
| regr_clock/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector   | vcs         |     60.08 |        1 | 7579f15103   |
| regr_clock/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector   | vcs         |     59.49 |        1 | 5f2990ca17   |


  Bucket  Failure                                      Count
--------  -----------------------------------------  -------
       1  COSIM-ERROR# COSIM VS RTL WRDATA MISMATCH        3

Summary:
      |   Total Verilog Compiles |   Total Verilog Sims |   Incomplete/Skipped |   Build Fails |   Sim Failures |   Total Failed
------+--------------------------+----------------------+----------------------+---------------+----------------+----------------
 Jobs |                        1 |                 1276 |                    1 |             0 |              3 |              3{noformat}

 ","15/Aug/22 3:39 PM;609d7e1f5998a6006800dcc5;Regarding the “2-cycle” delay. I think it actually is still only 1-cycle. {{vAccClockEnable}} is combinational, and {{VEX_CLOCKGATE_en}} is an alias for the flopped {{clockEn_q}}. The waveforms make it hard to read. I was confused initially myself. The rising edge of the clock still occurs at the end of the first cycle after {{clockEn}} when {{clockEn_q}} is valid. Meaning the rising edge will load the values in that cycle. I have a change testing that checks ID and REN (in case of stall) for vAcc instructions in order to enable the PRAs for the relevant buffers.",15/Aug/22 3:44 PM;609d7e1f5998a6006800dcc5;[~accountid:62632262d7f1b80069c030b8] is working on something that should make {{idle}} more accurately reflect when the clock should be turned on. That’s equivalent to when data could cross the clock boundary (wakeup) or clock is required to stay on for internal flops (keep awake). [https://sifive.atlassian.net/browse/MAL-2384|https://sifive.atlassian.net/browse/MAL-2384|smart-link] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] VEX chunk tail mode for compare and add/sub with carry,,,,,,MAL-2380,122626,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,8/12/2022 6:28,9/21/2022 7:29,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,Implement RTL for chunk based tail for some mask instructions. Details in MAS updates: [https://sifive.atlassian.net/browse/MAL-2274|https://sifive.atlassian.net/browse/MAL-2274|smart-link] ,Andrew Hanselman,Nicolas Brunie,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00ipb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,04:50.5,"20/Sep/22 11:04 AM;6065017e90e3950069cf01c5;[~accountid:609d7e1f5998a6006800dcc5] , any update on this task ?",21/Sep/22 7:29 AM;609d7e1f5998a6006800dcc5;Actively working on this. More “in progress” than it was before. I need to do a better job updating the state of tickets when higher priority things come about.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV]:: Cosim vs RTL write data mismatch for PC=0x80007e96    (Vadd.vx),[TGV]:: Cosim vs RTL write data mismatch,,,,,MAL-2379,122624,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/12/2022 6:04,9/7/2022 17:43,9/28/2022 0:51,8/12/2022 17:17,,,,,,,,,,,,,TGV_RTL/RDU,TGV_RTL/VEX,,,,,,,,0,TGV,,,"*Error::*
{{[COSIM-ERROR][0] m_dut_inst_item: [66658] InstInfo: VLD=1 | PC=0x0000000080007e96 | INSN=0x02064c57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r24=0xafd3cc3e3b8d03ea}}*44fc17021a5747b3*{{ mask=ffff | READY=1 | CSR_TIMER=66658 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x000000008000ab38 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=2 | SEW=32 | LMUL=mf2 | VSEGELT=0}}
{{[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000080007e96 | INSN=0x02064c57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r24=0xafd3cc3e3b8d03ea}}*24fad702fa5607b3*{{ mask=00ef}}

*Debug-Info::*   
Here Lmul=mf2(1/2) , SEW=32

{noformat}core   0: 0x0000000080007e96 (0x02064c57) vadd.vx v24, v0, a2
core   0: 3 0x0000000080007e96 (0x02064c57) e32 mf2 l2 v24 0xafd3cc3e3b8d03ea24fad702fa5607b3{noformat}

As Per cosim, Only lower 64 Bits suppose to be updated and Upper 64Bits remains unchanged.
Undisturbed part is matching between Design & Cosim.

v 0  0xd4cea33f35e30b9b24fad702fa5607b3
v24 0xafd3cc3e3b8d03ea0000000200000002
a2  0x000000000000

So lower 64Bits of destination register v24 = v0\[63:0]
and Upper 64 Bits of V24 = v24\[127:64]



*SHA1::*   cce4a738ec7b2c7522f3e1df7b77b44b6c0d9631
*Config::* coreip_p670
*Waves::*  gamma26:: //scratch/naveenr/aug-12/federation/builds/coreip_p670/sim/sim/rerun.outline/rat_default_T_0832/rat/default/waves.fsdb
*Rerun.outline:*

copied into {{/work/nicolasb/tgv_bug_outlines/rat/MAL-2379.outline}}

*outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": [
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+verbose""
],
""subdir"": ""rat_default_T_0832"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 1191447403
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Josh Smith,Naveen Rathore,Nicolas Brunie,,,,,,,,,,,,,5acffeafaa802f2a797a955c,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,cce4a738ec7b2c7522f3e1df7b77b44b6c0d9631,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-12T17:17:30.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,37b3fd4816166824259c539bd09f31382cde0c7f,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,1,,,,100,,,No,,,,,,,,,,,,2|i00iov:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,30:26.1,12/Aug/22 6:30 AM;6065017e90e3950069cf01c5;reproduced on master `{{7a27569b7f7423c89a8c097ffe87f7048ce0a350}}`,"12/Aug/22 7:17 AM;6065017e90e3950069cf01c5;the {{v0}} input for the {{vadd.vx v24 <- v0 + a2/x12}} at pc {{0x80007e96}} is wrong

It is d4ce_a33f_35e3_0b9b_44fc_1702_1a57_47b3 and should be d4ce_a33f_35e3_0b9b_24fa_d702_fa56_07b3 (coming from a vadd.vx v0, v24, a2 at PX 0x80007bca","12/Aug/22 7:19 AM;6065017e90e3950069cf01c5;In the RTL trace the output value of the source {{vadd.vx v0, v24, a2}} at PC {{0x80007bca}} looks correct.",12/Aug/22 7:32 AM;6065017e90e3950069cf01c5;It looks like the physical mapping of {{v0}} (which was set v0 {{0x1007}} by the {{vadd.vx}} at t PC {{0x80007bca}} is modified around time 66277 to {{0x1002}} by an instruction which is flushed without the mapping being reverted ).,12/Aug/22 7:34 AM;6065017e90e3950069cf01c5;there are two flush requests occurring back to back around time 62281 and the second one should affect the mapping done at time 66277,"12/Aug/22 8:31 AM;5acffeafaa802f2a797a955c;This is a map table recovery/RHF rewind issue.  The cycle after a flush, the Map Table tries to undo any updates from the previous cycle (instructions that are currently in DIS stage, and not in the RHF yet).  The same map table write ports are used by the DIS recovery and the RHF rewind.  We don’t expect to see any valid RHF rewind updates until at least 2 cycles after the flush so there isn’t usually a problem with using the same write ports.

However, in this case two flushes happen in back-to-back cycles, one for GID 0x27 (which shouldn’t rewind anything), and one for GID 0x1f (which should rewind the v0 update).  Because of the speculative rewind mechanism, we read out the RHF entry for the v0 update after the first flush, and because the {{lastFlushGid}} is updated by the second flush, we try to rewind the v0 update earlier than expected.  The rewind happens in the same cycle as the DIS-stage map table recovery, and loses priority on the map table write ports.  So the v0 rewind gets dropped.","12/Aug/22 8:54 AM;5acffeafaa802f2a797a955c;I think for the RHF rewind GID comparison here, {{lastFlushGid}} probably needs one more pipeline stage:

{noformat}      val rhfRewGidYounger_RT3 = io.lastFlushGid.compare(rhfRewUpdatePre_RT3.bits.gid){noformat}",12/Aug/22 9:15 AM;5acffeafaa802f2a797a955c;I’ll try to get this fixed today,"12/Aug/22 3:29 PM;5acffeafaa802f2a797a955c;There was also a second issue (aside from the Map Table write port conflict), where the second flush would not restart the rewind.  The first rewind finished when the second rewind should have started, but because the {{lastFlushGid}} used to determine when we are done rewinding still came from the first flush.  So I changed the rewind logic to start a new rewind if the current rewind is on the last cycle, but there was another flush seen on the previous cycle (meaning {{lastFlushGid}} was about to change).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] XPROP failing with VRDU assert,[TGV] XPROP failing with VRDU assert,,,,,MAL-2378,122622,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/12/2022 5:11,9/7/2022 17:43,9/28/2022 0:51,8/12/2022 7:58,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"At Dave P’s suggestion, originating with Megan, I ran {{coreip_p670}} with MFC in XPROP mode. Both outlines that I ran failed very quickly with the “Large vrgather should not sequence a first uop with vl=0” assert.

It probably doesn’t matter which commit or outline you use, but in my case it was

{noformat}commit 3cb95d7ed1f60225b4a03cc8643532858b1df808 (HEAD)
/work/nicolasb/tgv_bug_outlines/sting/MAL-2369-LTB.outline{noformat}

There will probably be additional asserts going off after this is fixed. When you (whoever that is) find the next one, file a new bug for it and tag the next person in line.",David Kravitz,,,,,,,,,,,,,,,5fd15143b4a74900763834e0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-12T07:58:33.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/286731b220138711cd19168d8443a53f871210f9,,,n/a,,,,,,,,,Other -- Put in description,Simulation-STiNG,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00iof:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,see the desciption,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[LSU-UT] LSU returning wrong misaligned data from L2->LoadQ fast path,[LSU-UT] LSU returning wrong misaligned data,,,,,MAL-2377,122564,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Abhinay Kayastha,5e13703feb2ae70ea1dfe6b2,Abhinay Kayastha,5e13703feb2ae70ea1dfe6b2,8/11/2022 12:16,8/17/2022 8:43,9/28/2022 0:51,8/11/2022 17:38,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"For an idempotent memory location, the L2 fastpath data through the LoadQ is getting the wrong misaligned data.

Op dispatched with GID 'h31 at time 87468000
DR response for LSU's Get request at time 90058000 (sourceID 10)
Mismatch on writeback for the value at address 'h80fcc18 (base pa for the load : 'h80fcc14, base va: 'hffffffc29a64bc14, size: 8B)



Error msg: 
Core: 0 LSUMMCAgent:receiveCosimTrans 
    ####  t:819, req_t:819, module:Cosim(ordinality=0, channel=A, is_input=1), addr:0x80fcc14 nbytes:8 Optype:LOAD Paramtype:MIN SourceID:0  isReq:0  isReady:1      #### 0000000000000000    ####  corrupt:0 denied:0
isAq: 0, isRL: 0, is_fence: 0, is LR/SC: 0
\[MMC_PRINT]: \[doLoad] mem data mismatch expected: f4, actual: 00



Waves and logs at : gamma02:/scratch/verif/abhinayk/federation/builds/unit_lsu/sim/sim/rerun.outline/lsu_unit_test_amo_stress_T_0102/lsu_unit_test",Abhinay Kayastha,John Ingalls,Vijith KS,,,,,,,,,,,,,5e13703feb2ae70ea1dfe6b2,5bb6808b9ba2930990f81895,5fa30ce971ab9e006a1d63d8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-70,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-11T19:24:52.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25284,,,n/a,,,,,,,,,Simulation-Unit Test,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00ibj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"git checkout LSU_Parameter_replay_misaligned
build unit_lsu
./sitest @rerun.outline


rerun.outline:

override_testbench_in_outline(""lsuunit"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
  ""name"": ""lsu_unit_test"",
  ""raw_plusargs"": \[
    ""+mmc_verbosity=4""
  ],
  ""subdir"": ""lsu_unit_test_amo_stress_T_0102"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 630311759
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""uvm"": {
    ""max_quit_count"": ""1"",
    ""set_config_int"": \[
      ""*,fp_load_wgt_min,5"",
      ""*,fp_load_wgt_max,10"",
      ""*,fp_store_wgt_min,5"",
      ""*,fp_store_wgt_max,10"",
      ""*,integer_load_wgt_min,5"",
      ""*,integer_load_wgt_max,10"",
      ""*,integer_amo_wgt_min,75"",
      ""*,integer_amo_wgt_max,90"",
      ""*,integer_store_wgt_min,5"",
      ""*,integer_store_wgt_max,10""
    ],
    ""testname"": ""lsu_tb_test"",
    ""verbosity"": ""none""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,17:54.6,"11/Aug/22 6:17 PM;5bb6808b9ba2930990f81895;Yes, this is a real bug, found by LSU TB\!  The L2 fastpath data through the LoadQ is getting the wrong misaligned data.  Fix in [https://github.com/sifive/federation/pull/25284|https://github.com/sifive/federation/pull/25284|smart-link] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion blocking the useage of vsetvli in sting tests,[TGV] Assertion block vsetvli,,,,,MAL-2376,122553,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Yohann Rabefarihy,61730c9cbcb57400683f15a6,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,8/11/2022 10:27,9/7/2022 17:43,9/28/2022 0:51,8/17/2022 1:03,,,,,,,,,,,Panda DR,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"seems like a new assertion was added in PR [https://github.com/sifive/federation/pull/25224|https://github.com/sifive/federation/pull/25224|smart-link]  which is preventing us from using vsetvli. 



I see all the sting tests failing in nightly. 

",Alexandre Solomatnikov,David Kravitz,John Ingalls,Srivatsa Yogendra,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-11T17:17:52.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00i93:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,36:56.8,11/Aug/22 10:36 AM;5fd15143b4a74900763834e0;[~accountid:61730c9cbcb57400683f15a6] can you comment this out for now? You’ll have to come up with something more precise later.,11/Aug/22 12:47 PM;5fd15143b4a74900763834e0;This should solve the problem: [https://github.com/sifive/federation/pull/25271|https://github.com/sifive/federation/pull/25271|smart-link] ,"11/Aug/22 1:17 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;Hmm, this assertion should only fire if there is a vector load or store very close to {{vsetvli}} instructions. Is it happening in all Sting tests?",11/Aug/22 1:32 PM;5a938e9c0913194d2d262658;Yea seems like the new snippet does it [https://github.com/sifive/federation/blob/43e7c18ae08262a52afedae984b1ff0d09c57afa/sting/snippets/vector/misc/tgv/ldst.ss#L42|https://github.com/sifive/federation/blob/43e7c18ae08262a52afedae984b1ff0d09c57afa/sting/snippets/vector/misc/tgv/ldst.ss#L42],"12/Aug/22 7:02 AM;5fd15143b4a74900763834e0;The assertion has been disabled on master as of [https://github.com/sifive/federation/commit/cac424cef96a26b248e32abbd03f08980b54a8de|https://github.com/sifive/federation/commit/cac424cef96a26b248e32abbd03f08980b54a8de|smart-link] 

Leaving this open, but at lower priority, for [~accountid:61730c9cbcb57400683f15a6] to come up with a better-tuned version, or eliminate the need for one when arbitrary-`vl` is supported.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vmflt.vf FP exception flag mismatch,[TGV] vmflt.vf FP exception,,,,,MAL-2375,122547,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,8/11/2022 8:59,9/7/2022 17:43,9/28/2022 0:51,8/15/2022 20:13,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error Message*

{noformat}[SetCurrentPhase][c8] Name: main_e Val: 4
Scoreboard config: xLen=64 | fLen=64 | vLen=128 | vaddrExtended=42 | vec_reg_count=32 | enable_check=1 | vreg_mask_skip=1 | verbosity=0 | enable_wrdata_check=1 | error_count=1 | stall_time=600000 | enable_cosim_mmc=0
Reset m_pl2_csc_inner_agents  c8
Reset m_pl2_mmc_inner_agents  c8
[COSIM-ERROR][0] COSIM VS RTL PC MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [14667] InstInfo: VLD=1 | PC=0x0000000080000b96 | INSN=0x00001297 | INST_DST=INT | REDUCTION = false | WR: en=true r5=0x0000000080001b96 mask=ff | READY=1 | CSR_TIMER=14667 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080001eb8 | MCAUSE=0x0000000000000002 | VSTART=0 | VL=4 | SEW=32 | LMUL=m1 | VSEGELT=0
[COSIM-ERROR][0] m_cosim_inst_info: VLD=0                 | PC=0x0000000080000ba0 | INSN=0x00001297 | INST_DST=INT | REDUCTION = false | WR: en=true r5=0x0000000080002ba0 mask=ff
[COSIM-ERROR][0] COSIM VS RTL PC MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [14667] InstInfo: VLD=1 | PC=0x0000000080000b9a | INSN=0x28e28293 | INST_DST=INT | REDUCTION = false | WR: en=true r5=0x0000000080001e24 mask=ff | READY=1 | CSR_TIMER=14667 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080001eb8 | MCAUSE=0x0000000000000002 | VSTART=0 | VL=4 | SEW=32 | LMUL=m1 | VSEGELT=0
[COSIM-ERROR][0] m_cosim_inst_info: VLD=0                 | PC=0x0000000080000ba4 | INSN=0x28e28293 | INST_DST=INT | REDUCTION = false | WR: en=true r5=0x0000000080002dc0 mask=ff
sifive_test_results_pkg::set@(t=298473000): Test Result Setting for Index ID [3] Done [1] Success [0] Exit Code [13107]
sifive_test_results_pkg::set@(t=298483000): Test Result Setting for Index ID [4] Done [1] Success [0] Exit Code [0]{noformat}

*Rerun Outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0000_lmul8"",
  ""subtest"": ""vmflt.vf"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vmflt.vf_Mask-7_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_NoSelfCheck-0_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-8_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-1"",
  ""seed"": {
    ""value"": 1171232718
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

It looks like the {{vmflt.vf}} here instruction is generating different flags than cosim/VTG expected.

{noformat}14388 [1] pc=[0000000080000a96] W[r 0=0000000000000000][0] R[f 7=ffffffff7a7e4a38] R[r 0=0000000000000000] inst=[6e93d857] vmflt.vf v16, v9, ft7{noformat}

Cosim continues the test normally, but RTL moves into the FAIL loop because the fflags check here did not match:

{noformat}14664 [1] pc=[0000000080000b8c] W[r 5=0000000000000000][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[001022f3] csrr    t0, fflags{noformat}

RTL is producing 0, while cosim expects {{0x10}}

{noformat}    80000b8c:	001022f3          	frflags	t0
    80000b90:	4341                li	t1,16
    80000b92:	00530763          	beq	t1,t0,80000ba0 <test_49_end+0x178>{noformat}",Andrew Hanselman,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,,,,,,,,,,,609d7e1f5998a6006800dcc5,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2385,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-15T11:48:17.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00i7r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Aug/22 8:48 AM;609d7e1f5998a6006800dcc5;Vector compare module is not raising the invalid operation exception during compare instructions. Specifically, the quiet NaN flag is not being considered in RTL currently.

[RVV 13.13. Vector Floating-Point Compare Instructions|https://github.com/riscv/riscv-v-spec/blob/master/v-spec.adoc#1313-vector-floating-point-compare-instructions]

{quote}{{vmfeq}} and {{vmfne}} raise the invalid operation exception only on signaling NaN inputs. {{vmflt}}, {{vmfle}}, {{vmfgt}}, and {{vmfge}} raise the invalid operation exception on both signaling and quiet NaN inputs. {{vmfne}} writes 1 to the destination element when either operand is NaN, whereas the other compares write 0 when either operand is NaN.{quote}



{noformat}frf[ 7]=[
  ffffffff -> N/A
  7a7e4a38 -> 0_1_1110_1001_0x3e4a38
]
vrf[ 9]=[
  7a427fd4 -> 0_1_1110_1001_0x027fd4
  96ca1fff -> 1_0_0101_1011_0x0a1fff
  e7879e62 -> 1_1_1001_1110_0x079e62
  ffc04653 -> 1_1_1111_1111_0x004653 (quiet? NaN)
]{noformat}

It looks like one of the inputs to the compare is a qNaN. We need to update the {{VectorCompareUnit}} to correctly signal exceptions for comparison operations per the RVV spec.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] fix flush application in permute engine,,,,,,MAL-2374,122546,120712,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/11/2022 8:56,9/13/2022 15:05,9/28/2022 0:51,9/6/2022 11:15,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2220,MAL-2604,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-06T11:15:17.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/fb320d21c58f5d3136d79692fd87db513bf04f70,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00i7j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,120712,[TGV] review and refactor flush timing in VexPipe,Done
[TGV] accumulator set ready twice in vmsleu.vi test,[TGV] accumulator  vmsleu.vi test,,,,,MAL-2373,122538,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/11/2022 6:24,9/7/2022 17:43,9/28/2022 0:51,8/11/2022 23:55,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*git sha1:* {{e45500a17a44d75db505388a2f75e1ca27b9cfa2}}

*configuration:* {{u8_minimal_vector}}

*error:*

*error*

{noformat}Error: ""/scratch/nicolasb/federation/builds_mfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VectorAccumulator_assert.sv"", 77: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.vAccumulators_4.SiFive_VectorAccumulator_assert: at time 494222500 ps
Assertion failed: Accumulator ready set twice
    at VEX.scala:444 assert(!((io.readySetVec & ready).orR), ""Accumulator ready set twice"")

Fatal: ""/scratch/nicolasb/federation/builds_mfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VectorAccumulator_assert.sv"", 79: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.vAccumulators_4.SiFive_VectorAccumulator_assert: at time 494222500 ps
$finish called from file ""/scratch/nicolasb/federation/builds_mfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VectorAccumulator_assert.sv"", line 79.{noformat}

waves: {{gamma12:/scratch/nicolasb/federation/builds_mfc/coreip_u8_minimal_vector/sim/vmsleu-acc-set-dy-twice/rerun.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmsleu.vi/waves.fsdb}}

*outline: (copied into* {{/work/nicolasb/tgv_bug_outlines/vtg/MAL-2373.outline}}*)*

*outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vmsleu.vi"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vmsleu.vi_Mask-7_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_NoSelfCheck-0_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-1_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-1"",
  ""seed"": {
    ""value"": 2837408832
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""default""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Andrew Hanselman,Cristóbal Ramirez Lazo,David Kravitz,Nicolas Brunie,,,,,,,,,,,,609d7e1f5998a6006800dcc5,62632262d7f1b80069c030b8,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11/Aug/22 8:41 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220811-154145.png;https://sifive.atlassian.net/secure/attachment/75706/image-20220811-154145.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-11T23:53:57.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/f4d6cdd0466e8ee271ec678f35c470e51ead304d,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00i5r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,43:22.7,"11/Aug/22 6:26 AM;6065017e90e3950069cf01c5;[~accountid:609d7e1f5998a6006800dcc5] / [~accountid:5e1a4f5ec578120daca5ff8e]  / [~accountid:5f94696c29bd8a006f94f0e1] / [~accountid:62103777eb2978006893b778]  I don’t know if this was a latent bug or if it was introduced by one of my recent PR, so I will dig a bit before dispatching it.","11/Aug/22 8:41 AM;6065017e90e3950069cf01c5;I think we have a problem with vector accumulator clock gating. Looks like the readyVec is not reset when it should be

!image-20220811-154145.png|width=1824,height=108!",11/Aug/22 8:43 AM;6065017e90e3950069cf01c5;[~accountid:609d7e1f5998a6006800dcc5] & [~accountid:62632262d7f1b80069c030b8] could you take a look ?,"11/Aug/22 9:43 AM;609d7e1f5998a6006800dcc5;[~accountid:62632262d7f1b80069c030b8] I think there are two options for how to fix this:

# -Remove clock gating from around vAccum PRA-
## -currently S2V/V2S PRAs do not have clock gating, hence why we didn’t run into this issue previously-
# ⭐ Add an additional signal to the S2V/V2S/vAccum clock enable signal that is true when there are instructions in REN that will clear PRA bits via {{*PraClearReq}} 
## We should just be able to add {{entryRequired_REN.orR}} to the clock enable expression

Additionally, if we want to add clock gating to the S2V/V2S PRAs using {{s2vClockEn}} and {{v2sClockEn}}, that is something we should be able to do after this bug fix.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]:: Assertion: LTB data LDWB should come 2 cycles after LDR tag Match,[TGV]:: Assertion : LTB data LDWB ,LSU (Load Store Unit),,,,MAL-2372,122534,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/11/2022 4:39,9/7/2022 17:43,9/28/2022 0:51,8/18/2022 17:16,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"*Error:*
Error: ""/scratch/naveenr/aug-10/federation/builds/coreip_p670/verilog/design/assertions/SiFive_LTBEntry_assert.sv"", 88: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.bal.ltb.ltbEntries_1.SiFive_LTBEntry_assert: at time 6246942500 ps
Assertion failed: LTB data LDWB should come 2 cycles after LDR tag Match
at LoadBuffer.scala:130 assert(io.data_LDWB(i).valid, ""LTB data LDWB should come 2 cycles after LDR tag Match"")

*Debug-Info::*  
Here FlushReq  coincide  with EntryValid and Tagmatch.

!image-20220811-113617.png|width=1017,height=340!

*SHA1::* 3cb95d7ed1f60225b4a03cc8643532858b1df808
*Config::* coreip_u8_minimal_vector
*Waves::* gamma26:://scratch/naveenr/aug-10/federation/builds/coreip_p670/sim/sim/rerun.outline_ldr_assert_2/sting_StingSiFiveTuple_T_0120/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb
*rerun.outline:*
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""sting"",
""raw_plusargs"": \[
""+cosim_scoreboard_trap_epc_count=128"",
""+cosim_scoreboard_stall_time=1000000"",
""+axi_mem_latency_cycles=40"",
""+axi_mem_dither_cycles=200"",
""+amba_vip_select=2"",
""+gdi_amba_test_enable=1"",
""+gdi_tlc_test_enable=1"",
"""",
""+verbose""
],
""subdir"": ""sting_StingSiFiveTuple_T_0120"",
""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 3070005326
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""reset_vector_scheme"": ""first_mem_periph_sys""
},
""uvm"": {
""set_config_string"": \[
""uvm_test_top,torture_read_inbound,10101010:80808080"",
""uvm_test_top,torture_inbound,10101010:80808080""
],
""testname"": ""torture_test""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",Andrew Lenharth,David Kravitz,John Ingalls,Naveen Rathore,Srivatsa Yogendra,,,,,,,,,,,5f74f3dc3fe0760069553268,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,6235105a3eacc50071ff07ec,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11/Aug/22 4:39 AM;ug:00e334db-2e60-4fae-a5b5-d5d39244fe5c;image-20220811-113617.png;https://sifive.atlassian.net/secure/attachment/75694/image-20220811-113617.png,,,,,,,,,,,,,,,,3cb95d7ed1f60225b4a03cc8643532858b1df808,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-08-31T22:04:01.000-0700"",""stateCount"":3,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/f162a2fe1db01001cb6e65fdd9367597ba32c6f9,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,3,0,,,,100,,,No,,,,,,,,,,,,2|i00i4v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,30:44.7,"11/Aug/22 7:30 AM;5fd15143b4a74900763834e0;I believe the possibility of this, but could not replicate in my area (with the given SHA1), so can’t verify any fix.","13/Aug/22 6:13 PM;5f74f3dc3fe0760069553268;Bug tracking reproduction issue: [https://sifive.atlassian.net/browse/PEHD-912|https://sifive.atlassian.net/browse/PEHD-912|smart-link] 
In short, this path: gamma26:://scratch/naveenr/aug-10/federation/builds/coreip_p670 has identical output from MFC as David’s attempt at reproduction and mine (modulo paths).  The software in verif/ differs considerable between the above path and my reproduction attempts.  Given the OMIR and DTS output are the same, this hints at something going wrong in process, or a difference in environment (stale compiles?  I saw some notes in sitest about needing to force rebuilds, I didn’t look into it) or method of building/running.

For what it’s worth, I was running ‘make run TEST_OUTLINES=/work/nicolasb/tgv_bug_outlines/sting/MAL-2372.outline’ (where that outline is the one given by David).","16/Aug/22 7:59 AM;6235105a3eacc50071ff07ec;Hi [~accountid:5fd15143b4a74900763834e0] 
Getting same Assertion with MFC Compiler.

*SHA1::* c8006aba77cc996924174fe0da92bce769507f72
*Config::* coreip_p670
*Logs::*  gamma25::/scratch/naverath/MFC/federation/builds/coreip_p670/sim/sim/rerun.outline_ldwb/sting_StingSiFiveTuple_T_0002/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb

*Steps to reproduce failure::*
  git checkout c8006aba77cc996924174fe0da92bce769507f72
 ./scripts/quick-submodule-update
 BUILD_DIR=builds ./generate-build coreip_p670
 cd builds/coreip_p670/
  source load-modules
  make sim
  cd sim/
  gvim rerun.outline_ldwb
  ./sitest @rerun.outline_ldwb  +verbose --waves=fsdb


*Rerun.Outline::*
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""sting"",
""raw_plusargs"": \[
""+cosim_scoreboard_trap_epc_count=128"",
""+cosim_scoreboard_stall_time=1000000"",
""+axi_mem_latency_cycles=40"",
""+axi_mem_dither_cycles=20"",
""+amba_vip_select=2"",
""+gdi_amba_test_enable=1"",
""+gdi_tlc_test_enable=1"",
"""",
""+verbose""
],
""subdir"": ""sting_StingSiFiveTuple_T_0002"",
""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 1739872929
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""reset_vector_scheme"": ""first_mem_periph_sys""
},
""uvm"": {
""set_config_string"": \[
""uvm_test_top,torture_read_inbound,10101010:80808080"",
""uvm_test_top,torture_inbound,10101010:80808080""
],
""testname"": ""torture_test""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))","16/Aug/22 8:16 AM;5fd15143b4a74900763834e0;OK, I’ll try to reproduce again this afternoon","17/Aug/22 10:31 AM;5a938e9c0913194d2d262658;We are running into this on SFC also, and with the new sting release. Were you able to reproduce the failure [~accountid:5fd15143b4a74900763834e0] ?","17/Aug/22 11:19 AM;5fd15143b4a74900763834e0;I have reproduced it, and have a fix. It passed all the load/store tests but when I ran {{sting_tgv.outline}}, a lot of tests are failing. Should I proceed or debug the failures first?","17/Aug/22 11:59 AM;5a938e9c0913194d2d262658;If it passed on the failing outline, you should be good to merge it in","18/Aug/22 5:16 PM;5fd15143b4a74900763834e0;Took a lot of fiddling, and some help from [~accountid:5bb6808b9ba2930990f81895], but this is now fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Rename from vfredsum/vfwredsum to vfredusum/vfwredusum,[TGV] Rename from vfredsum/vfwredsum,,,,,MAL-2371,122526,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Lance Huang,62aae145188d08006fe3031f,Lance Huang,62aae145188d08006fe3031f,Lance Huang,62aae145188d08006fe3031f,8/11/2022 1:56,9/7/2022 17:43,9/28/2022 0:51,8/12/2022 6:35,,,,,,,,,,,,,Verification,,,,,,,,,0,TGV,,,"This is originated from instruction count loss in [https://sifive.atlassian.net/browse/MAL-2253|https://sifive.atlassian.net/browse/MAL-2253|smart-link] 

In {{rvv_isa_inst_tgv.rb}}, the unordered FP sum reduction is “vfredsum”, and the actual instruction generated by VTG is vfred{color:#ff5630}*u*{color}sum

{{vfredsum}} (the old name) was temporary because of it used to not be supported by VTG [https://sifive.atlassian.net/browse/VI-7539|https://sifive.atlassian.net/browse/VI-7539|smart-link]

And it is now supported by VTG, so switch it to correct instruction name: {{vfredusum}}

Besides, {{vfwredsum}} has the same issue, so switch it to {{vfwredusum}}",Lance Huang,,,,,,,,,,,,,,,62aae145188d08006fe3031f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-12T06:28:33.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00i33:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Create VRDU clock enable,,,,,,MAL-2370,122472,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,8/10/2022 11:06,8/18/2022 17:20,9/28/2022 0:51,8/17/2022 11:27,,,,,,,,,,,,,Power,TGV_RTL/RDU,,,,,,,,0,,,,"VRDU has no top level clock gate, some power should be saved by clock gating the complete module when TGV is Idle.",Cristóbal Ramirez Lazo,,,,,,,,,,,,,,,62632262d7f1b80069c030b8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-17T11:26:00.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,a4e4a8d1793bea547aeccc08341c3194e4f9059b,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,0,,,,100,,,,,,,,,,,,,,,2|i00hrr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Aug/22 11:11 AM;62632262d7f1b80069c030b8;VRDU shows some dynamic power (0.197 mW) on register category, and it can be because the module is not completely clock gated. So, a top level  VRDU clock will be set on TGV level.

Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv
Power Unit: mW
Category       Internal    Switching      Leakage        Total
----------------------------------------------------------------
register          0.214        0.000        1.553        1.767

Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv/vrdu
Power Unit: mW
Category       Internal    Switching      Leakage        Total
----------------------------------------------------------------
register          0.197        0.000        0.156        0.353","17/Aug/22 11:29 AM;62632262d7f1b80069c030b8;After set the VRDU clock there is a reduction on dynamic power

Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv
Power Unit: mW
Category       Internal    Switching      Leakage        Total
----------------------------------------------------------------
register          0.097        0.000        1.632        1.729 

Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv/vrdu
Power Unit: mW
Category       Internal    Switching      Leakage        Total
----------------------------------------------------------------
register          0.063        0.000        0.169        0.232",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]:: STB Assertion:: when(dataValid) { assert(entryValid) } ,[TGV]:: STB Assertion,LSU (Load and Store),,,,MAL-2369,122460,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/10/2022 10:16,9/7/2022 17:43,9/28/2022 0:51,8/12/2022 8:18,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"*Error:*
Error: ""/scratch/naveenr/aug-10/federation/builds/coreip_p670/verilog/design/assertions/SiFive_STBEntry_assert.sv"", 70: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.bal.stb.stbEntries_0.SiFive_STBEntry_assert: at time 5425162500 ps
Assertion failed
at StoreBuffer.scala:67 when(dataValid) { assert(entryValid) }

Fatal: ""/scratch/naveenr/aug-10/federation/builds/coreip_p670/verilog/design/assertions/SiFive_STBEntry_assert.sv"", 72: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.bal.stb.stbEntries_0.SiFive_STBEntry_assert: at time 5425162500 ps



*SHA1::  3cb95d7ed1f60225b4a03cc8643532858b1df808*
*Config::* coreip_p670
*Waves::*     gamma26:://scratch/naveenr/aug-10/federation/builds/coreip_p670/sim/sim/rerun.outline_stb_assert/sting_StingSiFiveTuple_T_0187/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb
*rerun.outline::*
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""sting"",
""raw_plusargs"": \[
""+cosim_scoreboard_trap_epc_count=128"",
""+cosim_scoreboard_stall_time=1000000"",
""+axi_mem_latency_cycles=40"",
""+axi_mem_dither_cycles=20"",
""+amba_vip_select=2"",
""+gdi_amba_test_enable=1"",
""+gdi_tlc_test_enable=1"",
"""",
""+verbose""
],
""subdir"": ""sting_StingSiFiveTuple_T_0187"",
""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 4195286077
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""reset_vector_scheme"": ""first_mem_periph_sys""
},
""uvm"": {
""set_config_string"": \[
""uvm_test_top,torture_read_inbound,10101010:80808080"",
""uvm_test_top,torture_inbound,10101010:80808080""
],
""testname"": ""torture_test""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",David Kravitz,John Ingalls,Naveen Rathore,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,6235105a3eacc50071ff07ec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10/Aug/22 11:21 PM;ug:00e334db-2e60-4fae-a5b5-d5d39244fe5c;image-20220811-062105.png;https://sifive.atlassian.net/secure/attachment/75678/image-20220811-062105.png,,,,,,,,,,,,,,,,3cb95d7ed1f60225b4a03cc8643532858b1df808,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=4}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":4,""lastUpdated"":""2022-08-31T22:04:01.000-0700"",""stateCount"":4,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":4,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/b0920875b6c8a7533dd314edc7193c4f7018e8a7,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,4,0,,,,100,,,No,,,,,,,,,,,,2|i00hp3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,07:26.2,"10/Aug/22 8:07 PM;5fd15143b4a74900763834e0;The root cause is a flush arriving at around the same time {{entryValid}} and {{dataValid}} are about to be set. In this particular situation, {{entryValid}} goes high the same cycle that the flush arrives; the flush clears {{entryValid}} but {{dataValid}} goes high on the cycle after the flush. Will try to come up with a solution that covers the widest range of “ships passing in the night”.

The outline has been copied to {{/work/nicolasb/tgv_bug_outlines/sting/MAL-2369.outline}}","10/Aug/22 11:21 PM;6235105a3eacc50071ff07ec;Hi [~accountid:5fd15143b4a74900763834e0] ,
Seeing same issue with LDR side, where Flush and entryValid came in same cycle.
EntryValid cleared due to flush, But DataValid not got cleared.


Error: ""/scratch/naveenr/aug-10/federation/builds/coreip_p670/verilog/design/assertions/SiFive_LTBEntry_assert.sv"", 94: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.bal.ltb.ltbEntries_1.SiFive_LTBEntry_assert: at time 12940762500 ps
Assertion failed: LTB entry already in use


Waves:: gamma26://scratch/naveenr/aug-10/federation/builds/coreip_p670/sim/sim/rerun.outline_ldr_assert_1/sting_StingSiFiveTuple_T_0204/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb


!image-20220811-062105.png|width=1227,height=262!

rerun.outline::
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""sting"",
""raw_plusargs"": \[
""+cosim_scoreboard_trap_epc_count=128"",
""+cosim_scoreboard_stall_time=1000000"",
""+axi_mem_latency_cycles=40"",
""+axi_mem_dither_cycles=500"",
""+amba_vip_select=2"",
""+gdi_amba_test_enable=1"",
""+gdi_tlc_test_enable=1"",
""+MEM_ERROR_INJECT=.*\.icWayPredArray._ext,1,0,25:._\.RamBank._ext,1,0,15:._\.cc_banks._ext,1,0,32:._\.l2_tlb_ram_ext,1,0,25"",
""+disable_ecc_correctable_asserts=1"",
""+verbose""
],
""subdir"": ""sting_StingSiFiveTuple_T_0204"",
""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 2296348196
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""reset_vector_scheme"": ""first_mem_periph_sys""
},
""uvm"": {
""set_config_string"": \[
""uvm_test_top,torture_read_inbound,10101010:80808080"",
""uvm_test_top,torture_inbound,10101010:80808080""
],
""testname"": ""torture_test""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",11/Aug/22 4:59 AM;5fd15143b4a74900763834e0;Investigating the LTB entry assert now. Will do them as a single PR if I can fix it soon.,"11/Aug/22 5:29 AM;5fd15143b4a74900763834e0;[~accountid:6235105a3eacc50071ff07ec], is the LTB entry failure with a different commit? I tried to replicate in my STB entry area, but the outline passed.","11/Aug/22 7:36 AM;6235105a3eacc50071ff07ec;Yes[~accountid:5fd15143b4a74900763834e0] 
LTB entry assert commit is Different.
*SHA1::* 3cb95d7ed1f60225b4a03cc8643532858b1df808
*Config:*: coreip_p670
*Waves::* gamma26://scratch/naveenr/aug-10/federation/builds/coreip_p670/sim/sim/rerun.outline_ldr_assert_1/sting_StingSiFiveTuple_T_0204/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb
*rerun.outline::*
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""sting"",
""raw_plusargs"": \[
""+cosim_scoreboard_trap_epc_count=128"",
""+cosim_scoreboard_stall_time=1000000"",
""+axi_mem_latency_cycles=40"",
""+axi_mem_dither_cycles=500"",
""+amba_vip_select=2"",
""+gdi_amba_test_enable=1"",
""+gdi_tlc_test_enable=1"",
""+MEM_ERROR_INJECT=.*\.icWayPredArray._ext,1,0,25:._\.RamBank._ext,1,0,15:._\.cc_banks._ext,1,0,32:._\.l2_tlb_ram_ext,1,0,25"",
""+disable_ecc_correctable_asserts=1"",
""+verbose""
],
""subdir"": ""sting_StingSiFiveTuple_T_0204"",
""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 2296348196
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""reset_vector_scheme"": ""first_mem_periph_sys""
},
""uvm"": {
""set_config_string"": \[
""uvm_test_top,torture_read_inbound,10101010:80808080"",
""uvm_test_top,torture_inbound,10101010:80808080""
],
""testname"": ""torture_test""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))","11/Aug/22 9:49 AM;5fd15143b4a74900763834e0;Sorry, cannot reproduce the LTB Entry assert with the given hash (which is the same as [https://sifive.atlassian.net/browse/MAL-2372|https://sifive.atlassian.net/browse/MAL-2372|smart-link], which I also couldn’t reproduce)","12/Aug/22 8:12 AM;5fd15143b4a74900763834e0;The STB Entry portion of this ticket was fixed with [https://github.com/sifive/federation/commit/b0920875b6c8a7533dd314edc7193c4f7018e8a7|https://github.com/sifive/federation/commit/b0920875b6c8a7533dd314edc7193c4f7018e8a7|smart-link] 

Still haven’t recreated the LTB Entry assert. Should we close this one and file the other when it comes up again?","12/Aug/22 8:18 AM;5bb6808b9ba2930990f81895;Yes, that LTB fix (if any) will be in a different module (not STB).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Treating LMUL<=1 ordered reduction as singleUop failed some tests,,,,,,MAL-2368,122444,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,8/10/2022 8:09,8/10/2022 8:09,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,,,,"[https://github.com/sifive/federation/pull/25220#discussion_r942520345|https://github.com/sifive/federation/pull/25220#discussion_r942520345]

Treating LMUL<=1 ordered reduction as {{singleUop}} failed some tests, but it should be able to sequence like simple reduction uops. Will revisit it and see what cause the fails.",Brad Wu,Nicolas Brunie,,,,,,,,,,,,,,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00hlj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] add configurable support for fast (1-cycle) vslide,,,,,,MAL-2367,122439,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/10/2022 6:47,8/10/2022 6:47,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,{{fastSlideSupport}} configurability in {{VexPipe}}'s slide unit and permutation engine was disabled pending a proper performance and PPA analysis of this feature. TBD,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00hkf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV]:: Vector RHF can rewind incorrectly if flush happens during last cycle of rewind,[TGV]:: Vector RHF ,Execution Unit ,,,,MAL-2366,122438,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/10/2022 6:30,9/7/2022 17:43,9/28/2022 0:51,8/11/2022 18:04,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"*Error:*
Error: ""/scratch/naveenr/aug-10/federation/builds/coreip_p670/verilog/design/SiFive_LdQEntry.sv"", 1125: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LdQ.ldqEntries_0: at time 3091382500 ps
assert failed (verification library): LdQEntry FSM Hang  @\[LoadQ.scala 2461:14]
Fatal: ""/scratch/naveenr/aug-10/federation/builds/coreip_p670/verilog/design/assertions/SiFive_LdQEntry_assert.sv"", 253: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LdQ.ldqEntries_0.SiFive_LdQEntry_assert: at time 3091382500 ps
$finish called from file ""/scratch/naveenr/aug-10/federation/builds/coreip_p670/verilog/design/assertions/SiFive_LdQEntry_assert.sv"", line 253.

*Debug-Info::*
Looks like following load related entry created in the LDQ entry-0, But never deallocated.

DataFsm for entry-0 stuck at state=1

C 0:      59561 \[1] pc=\[0000000080007a74] W\[r25=0000d13a41aaef84]\[1] R\[r 9=000000008000abf8] R\[r 0=0000000000000000] inst=\[0384bc83] ld      s9, 56(s1)
core   0: 0x0000000080007a74 (0x0384bc83) ld      s9, 56(s1)
core   0: 3 0x0000000080007a74 (0x0384bc83) x25 0x0000d13a41aaef84 mem 0x000000008000ac30-0x000000008000ac30



*SHA1::  3cb95d7ed1f60225b4a03cc8643532858b1df808*
*Config::* coreip_p670
*Waves::* gamma26:://scratch/naveenr/aug-10/federation/builds/coreip_p670/sim/sim/rerun.outline_ldr_assert/rat_default_T_0615/rat/default/waves.fsdb
*rerun.outline::* 

outline copied into {{/work/nicolasb/tgv_bug_outlines/rat/MAL-2366.outline}}



*outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": [
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+MEM_ERROR_INJECT=.\.tag_array_.ext,1,0,32:.\.data_arrays_0_.ext,1,0,32:.\.syssram.ext,1,0,32:.\.island.\.lim\.syssram.ext,1,0,32:.\.tagged_tables_0_.ext,1,0,32:.\.base_table_0_.*ext,1,032"",
""+verbose""
],
""subdir"": ""rat_default_T_0615"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 2623541900
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",David Kravitz,John Ingalls,Josh Smith,Naveen Rathore,Nicolas Brunie,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3cb95d7ed1f60225b4a03cc8643532858b1df808,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-11T18:03:41.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,7af032ecb48830df88a14d19eb560b401ab30f34,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00hk7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,30:37.6,"10/Aug/22 7:30 AM;5fd15143b4a74900763834e0;[~accountid:5e1a4f5ec578120daca5ff8e]/[~accountid:6065017e90e3950069cf01c5], can you please take a look at this? There’s a {{vmulhsu.v}} shortly after the last retired instruction. Maybe there’s a completion count mismatch??","10/Aug/22 8:54 AM;6065017e90e3950069cf01c5;Looks like the {{vmulsu.vx v24, v8, x12}} uops are stuck in issue queues.

srcTag(3) corresponding to {{rd}} is valid but never ready, it looks like the instruction is waiting for {{v24}} (old-destination-data).","10/Aug/22 9:55 AM;5fd15143b4a74900763834e0;The prior instruction writing {{v24}} looks like it retired, according to the trace:

{noformat}C                   0:      60143 [1] pc=[0000000080007540] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[038cbc57] vadd.vi v24, v24, -7
C                   0:      60143 [1] pc=[0000000080007544] W[r14=000000008000a544][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00003717] auipc   a4, 0x3
C                   0:      60143 [1] pc=[0000000080007548] W[r 0=0000000000000000][0] R[r 3=000000008000b3c0] R[r15=5994db6e698c8ba3] inst=[84f19323] sh      a5, -1978(gp)
C                   0:      60140 vrf[24]=[614111c1b939d587513e144829a6bde4][ffff]{noformat}","10/Aug/22 10:10 AM;6065017e90e3950069cf01c5;From what I am reading, there may be an issue with v24 mapping in the maptable. It does not get properly rewinded during a flush which clears a previous {{vmulsu}} from the issQ.","10/Aug/22 10:14 AM;6065017e90e3950069cf01c5;the previous valid operations write PRB x01b (the one used by the [vadd.vi|http://vadd.vi] commiting at time 60140) , at some point mapping gets updated to 0x14 from what looks to be a flushed vmulsu. I trying to track the RHF update.","11/Aug/22 3:28 PM;5acffeafaa802f2a797a955c;As Nicolas helped to debug, the issue is when the RHF sees two flushes close to each other.  The first flush triggers an RHF rewind, and the second flush happens during the last cycle of the first rewind.  The second flush should trigger a second rewind, but logic in the VRDU will not trigger a rewind of the RHF if the RHF is currently empty.  The problem is that {{rhfEmpty}} was asserted during the cycle that the second flush occured.  {{rhfEmpty}} relies on comparing the read and write pointers, but didn’t take into account that with the speculative rewind, the write pointer may be backed up on the last cycle of rewind.",11/Aug/22 6:04 PM;5acffeafaa802f2a797a955c;The change that I just merged in seemed to fix the issue for me.,11/Aug/22 11:39 PM;6065017e90e3950069cf01c5;Thanks [~accountid:5acffeafaa802f2a797a955c] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Set csid for simple reduction instructions that are queued in sequencer entries,[TGV] Set csid,Execution Unit ,Iss Queue,,,MAL-2365,122418,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,8/10/2022 3:31,9/7/2022 17:43,9/28/2022 0:51,8/12/2022 6:19,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,TGV,,,"In the sequencer, the reduction sequencer will not generate sequence for entries with entry id > 0. If a simple reduction instruction queued in such entries and is a {{singleUop}}, then the {{csid}} will not be set by reduction sequencer.

The fix is to assign the csid (stores mask id offset, a.k.a midOfst) to it when the entry is ready to issue, just like the bypassed simple reduction uop does.



Commit: master {{b1c033258b632a78fca8c332e377f39891ecd540}}

Config: {{coreip_p670}}

Outline:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vredand.vs"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vredand.vs_Mask-7_Masking-1_Exception-0_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_NoSelfCheck-1_FLMUL-0_NonzeroVstart-1_VstartPercent-10_Sample-150_LMUL-1_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 1000616885
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}",Brad Wu,Nicolas Brunie,,,,,,,,,,,,,,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,MAL-2071,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-12T06:18:44.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00hfr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"Commit: master b1c033258b632a78fca8c332e377f39891ecd540

Config: coreip_p670

Outline:

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": \[
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vredand.vs"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vredand.vs_Mask-7_Masking-1_Exception-0_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_NoSelfCheck-1_FLMUL-0_NonzeroVstart-1_VstartPercent-10_Sample-150_LMUL-1_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 1000616885
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,25:46.3,10/Aug/22 5:25 AM;6065017e90e3950069cf01c5;In this case is {{singleUop}} predicate true for the reduction insn ? (implying a bypass of the {{ReductionSequencer}} which only manages  bottom of buffer  {{entry(0)}}),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Dispatch bypass optimization,,,,,,MAL-2364,122417,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Ian Chuang,61aaae1d9615eb006f5ff922,Ian Chuang,61aaae1d9615eb006f5ff922,8/10/2022 2:59,9/21/2022 9:02,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/ISS,TGV_RTL/RDU,,,,,,,,0,,,,"The dispatch bypass policy is currently too restrictive on the dispatch stage of the P670 vector pipeline. For example, the dequeuing port 1 can only consider the enqueuing port 0 as the bypass candidate when the entry 0 is occupied. That will have a conflict if the entry 0 and the enqueueing port 0 target the same issue queue. However, if we can consider entry 1 or others as candidates to bypass, that would improve performance. 

For more details, refer to [https://sifive.atlassian.net/browse/SPARTA-2068|https://sifive.atlassian.net/browse/SPARTA-2068|smart-link].",Andrew Hanselman,Brian Grayson,Fu-Ching Yang,Ian Chuang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,609d7e1f5998a6006800dcc5,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,61aaae1d9615eb006f5ff922,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Mid Core,Vector,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|i00hfj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
COSIM VS RTL PC MISMATCH ,COSIM VS RTL PC MISMATCH ,,,,,MAL-2363,122242,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Josh Smith,5acffeafaa802f2a797a955c,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,8/8/2022 7:51,8/10/2022 10:16,9/28/2022 0:51,8/10/2022 4:51,,,,,,,,,,,,,RTL/Frontend,,,,,,,,,0,,,,"There is a PC mismatch seen after executing the {{bgeu    t6, a3, pc + 6}} instruction. When look at the values of t6 and a3 the t6 = 0x03 and a3 = 0x00 so according to the bgeu the branch should be taken. COSIM takes the branch while RTL doesn’t. which cause the RTL VS COSIM PC MISMATCH 

*COSIM CODE*

{noformat}core   0: 0x0000000080004fb2 (0x00dff363) bgeu    t6, a3, pc + 6
core   0: 3 0x0000000080004fb2 (0x00dff363)
core   0: 0x0000000080004fb8 (0x04d00093) li      ra, 77
core   0: 3 0x0000000080004fb8 (0x04d00093) x 1 0x000000000000004d{noformat}

*RTL CODE*

{noformat}C0: 63296 [1] pc=[0000000080004fb2] W[r 0=0000000000000000][0] R[r31=0000000000000003] R[r13=0000000000000000] inst=[00dff363] bgeu    t6, a3, pc + 6
C0: 63296 [1] pc=[0000000080004fb6] W[r 8=0000000000bc614e][1] R[r 0=0000000000000000] R[r15=ffffffffffffffff] inst=[0000843e] c.mv    s0, a5
C0: 63297 [1] pc=[0000000080004fb8] W[r 1=000000000000004d][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[04d00093] li      ra, 77{noformat}

*SHA:* [+1c17038+|https://simscope.internal.sifive.com/models/undefined--master--1c1703896fcc94224c8f5948674f73714f44bc9e]

*config:* coreip_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""rat_default_T_0495"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 4173399325
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath*

{{gamma25:/scratch/ishitashah/tgv_regression/sign_173_test_failure/federation/builds2/coreip_p670/sim/rerundir1_pc/pc_rerun.outline/rat_default_T_0495/rat/default}}",David Kravitz,Ishita Shah,,,,,,,,,,,,,,5fd15143b4a74900763834e0,607e26355431a500701f5aed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2347,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00ge7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,42:50.7,"10/Aug/22 4:42 AM;5fd15143b4a74900763834e0;[~accountid:5acffeafaa802f2a797a955c], can you please look at this branch behavior? Let me know if it’s actually a TGV problem.",10/Aug/22 4:51 AM;5fd15143b4a74900763834e0;This looks like a duplicate of MAL-2347,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Incorrect store data going into STB,[TGV] Incorrect store STB,LSU (Load Store Unit),,,,MAL-2362,122380,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,Duplicate,David Kravitz,5fd15143b4a74900763834e0,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,8/9/2022 14:08,9/7/2022 17:43,9/28/2022 0:51,8/10/2022 7:55,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"Seems like we are not able to read back the same data we are writing by using a vector store. 

the instructions are 

{noformat}890a774e: 44d0039b            addiw t2,zero,1101
890a7752: 01539393            slli  t2,t2,0x15
890a7756: 40038393            addi  t2,t2,1024
890a775a: 0203eea7            vse32.v v29,(t2)
890a775e: 44d0039b            addiw t2,zero,1101
890a7762: 01539393            slli  t2,t2,0x15
890a7766: 40038393            addi  t2,t2,1024
890a776a: 0203ee87            vle32.v v29,(t2){noformat}

We are accessing the same address in vector store and vector load, but the vector load is returning a garbage data. 

the data in v29 before the store operation is 

{noformat}C0:    1189672 vrf[29]=[05c37ae3259dfa9b05c37b3e259dfa63][ffff]{noformat}

the data read back to the v29 reg after load operation is 

{noformat}C0:    1189684 vrf[29]=[60639619d0487ddb8f8684456c080393][ffff]{noformat}



To recreate this failure:

# Clone federation and checkout the commit 68675ec1960ff1726286b6c90cfa2678d6c41ed8
# build coreip_u8_minimal_vector and rerun the simulation using the outline
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=500"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+MEM_ERROR_INJECT=.*\\.cc_banks.*ext,1,0,25:.*\\.icDataArray.*ext,1,0,10:.*\\.RamBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,25:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.icTagArray.*ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,20:.*\\.TagRAM_ext,1,0,20:.*\\.l1dcDataArrayBank.*ext,1,0,20"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0129"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 220567535
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



the waves are located at {{verif02:/scratch/srivatsa/dbg_regr/68675ec1960ff1726286b6c90cfa2678d6c41ed8/builds/68675ec1960ff1726286b6c90cfa2678d6c41ed8/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0129/sting/sifive/vector/vector_tgv_dev.conf}}",David Kravitz,Srivatsa Yogendra,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2342,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,09/Aug/22 3:08 PM;srivatsa;Screen Shot 2022-08-09 at 14.59.32.png;https://sifive.atlassian.net/secure/attachment/75612/Screen+Shot+2022-08-09+at+14.59.32.png,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00h7r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,50:39.5,"09/Aug/22 3:08 PM;5a938e9c0913194d2d262658;i see the write data from the stb in tgv module sending the wrong data to be written into the LSU.

At time 23795862500, i see the 

!Screen Shot 2022-08-09 at 14.59.32.png|width=1530,height=108!

Tracing the data back through the stb, i see this value is a random initialized value. So, im guessing that the the mux selecting the data to be sent , has some issue. ","09/Aug/22 3:50 PM;5fd15143b4a74900763834e0;Strong chance this is the same as [https://sifive.atlassian.net/browse/MAL-2342|https://sifive.atlassian.net/browse/MAL-2342|smart-link]. I’ll try to confirm that diagnosis, but for now, consider this a duplicate.","09/Aug/22 3:52 PM;5a938e9c0913194d2d262658;Im able to recreate the failure on SFC, it fails in a similar signature, but at a different PC, than mentioned in the ticket. 

The waves for the SFC run is in {{verif02:/scratch/srivatsa/dbg_regr/68675ec1960ff1726286b6c90cfa2678d6c41ed8/builds/sfc/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0129/sting/sifive/vector/vector_tgv_dev.conf}}",10/Aug/22 7:55 AM;5fd15143b4a74900763834e0;Confirmed in waves this is a duplicate of MAL-2342. The store data is being read just as the producing instruction is finishing. We don't have the bypass logic in place for this yet.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] document method on how to run new simple power tests on TGV,,,,,,MAL-2361,122374,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/9/2022 12:31,8/10/2022 2:43,9/28/2022 0:51,,,,,,,,,,,,,,Power,TGV_RTL/Top,,,,,,,,0,,,,"To check that TGV dynamic power is properly gated it would be good to have a set of power tests, each exercising a different set of instructions such that we can check that unused units are properly gated.

It would be interesting to have an extension to [https://sifive.atlassian.net/wiki/spaces/CIP/pages/2311488252/How+to+Run+PowerArtist+on+P670|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2311488252/How+to+Run+PowerArtist+on+P670|smart-link]  which explains how to run these vector specific power test suite.

(GEMM and int8 matmult exist for x280 it seems) but a larger suite could be more useful.

Note: p670 does not instantiate the private extension required to execute the int8 matmul bench",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00h6f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] move VEX clock gate to the TGV level,,,,,,MAL-2360,122373,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/9/2022 12:24,8/11/2022 18:06,9/28/2022 0:51,8/10/2022 19:50,,,,,,,,,,,,,Power,TGV_RTL/VEX,,,,,,,,0,,,,"VEX has no top level clock gate, some power should be saved by moving the internal clock gate to the top level (with correct condition).",Cristóbal Ramirez Lazo,Nicolas Brunie,,,,,,,,,,,,,,62632262d7f1b80069c030b8,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-10T19:48:24.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,a9c016b33c58c9504c41f733a1229a0cb73a7246,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00h67:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,40:23.6,09/Aug/22 12:25 PM;6065017e90e3950069cf01c5;[~accountid:62632262d7f1b80069c030b8]  could you detail your power artist results here,"10/Aug/22 6:40 AM;62632262d7f1b80069c030b8;VEX shows some dynamic power (0.115 mW) on register category, and it can be because the module is not completely clock gated. So, a top level VEX clock will be set on TGV level.  

Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv
Power Unit: mW
Category       Internal    Switching      Leakage        Total
----------------------------------------------------------------
register          0.346        0.000        1.572        1.918

Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv/vex
Power Unit: mW
Category       Internal    Switching      Leakage        Total
----------------------------------------------------------------
register          0.115        0.000        1.185        1.300","10/Aug/22 6:41 AM;62632262d7f1b80069c030b8;After the suggested modifications, dynamic power on register category for VEX now is 0

Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv
Power Unit: mW
Category       Internal    Switching      Leakage        Total
----------------------------------------------------------------
register          0.214        0.000        1.553        1.767

Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv/vex
Power Unit: mW
Category       Internal    Switching      Leakage        Total
----------------------------------------------------------------
register          0.000        0.000        1.178        1.178",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[TGV]: vmacc.vx not executed correctly, It leads to COSIM vs RTL data mismatch",[TGV]: vmacc.vx not executed correctly COSIM vs RTL ,,,,,MAL-2359,122357,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/9/2022 9:59,9/7/2022 17:43,9/28/2022 0:51,8/15/2022 23:41,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error::* 
\[COSIM-ERROR]\[0] m_dut_inst_item: \[63613] InstInfo: VLD=1 | PC=0x0000000080006806 | INSN=0xb783e057 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r0=0x80ceb200000000f800000200000000f9 mask=ffff r1=0x0cb03e085e7e6708814fc758814fc750 mask=ffff r2=0x6a04bf483b2537486a04bf483b08c548 mask=ffff r3=0x6a04bf483a82e8486a04bf483a731d48 mask=ffff | READY=1 | CSR_TIMER=63613 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x000000008000aee0 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=8 | SEW=64 | LMUL=m4 | VSEGELT=0
\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x0000000080006806 | INSN=0xb783e057 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r0=0x40675a00000001000000020000000101 mask=e000 r1=0x065822042f28278840a7e7ac40a7e7ac mask=ffff r2=0x350262a41dccb728350262a41db04528 mask=ffff r3=0x350262a41d2a6828350262a41d1a9d28 mask=ffff

*Debug-Info::*
{{vmacc.vx vd, rs1, vs2, vm    # vd[i] = +(x[rs1] * vs2[i]) + vd[i]}} 

core   0: 0x0000000080006806 (0xb783e057) vmacc.vx v0, v24, t2
core   0: 3 0x0000000080006806 (0xb783e057) e64 m4 l8 v 0 0x40675a000000010000000200*00000101* v 1 0x065822042f28278840a7e7ac40a7e7ac v 2 0x350262a41dccb728350262a41db04528 v 3 0x350262a41d2a6828350262a41d1a9d28


Here::  
   v0::   0x00000200000001000000020000000101
   v24:: 0x0001fe00000000000000000000000000

Since v24 initial elements are 0x00 , So multiplication result will be zero.
Hence no update is expected on vd\[0], It seems cosim is doing correct.

Design trace::
C                   0:      63613 \[1] pc=\[0000000080006806] W\[r 0=0000000000000000]\[0] R\[r 7=0000000000002054] R\[r 0=0000000000000000] inst=\[b783e057] vmacc.vx v0, v24, t2

C                   0:      63610 vrf\[ 0]=\[80ceb200000000f800000200000000f9]\[ffff]

*Config::* coreip_p670
*SHA1::*  d02d9b7690da7065bf3e544cdac3c28a25bda986
*Waves::* gamma26:: //scratch/naveenr/july-9/federation/builds/coreip_p670/sim/sim/rat.outline/rat_default_T_0307/rat/default/waves.fsdb
*rerun.outline:*
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": \[
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+MEM_ERROR_INJECT=._\.tag_array_.ext,1,0,32:._\.data_arrays_0_._ext,1,0,32:._\.syssram._ext,1,0,32:._\.island.\.lim\.syssram._ext,1,0,32:._\.tagged_tables_0_._ext,1,0,32:._\.base_table_0_.*ext,1,032"",
""+verbose""
],
""subdir"": ""rat_default_T_0307"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 1083730830
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",David Kravitz,Kira Tsao,Naveen Rathore,Srivatsa Yogendra,,,,,,,,,,,,5fd15143b4a74900763834e0,5e1a4f5ec578120daca5ff8e,6235105a3eacc50071ff07ec,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,d02d9b7690da7065bf3e544cdac3c28a25bda986,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i00h2n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,31:42.7,"09/Aug/22 10:31 AM;5fd15143b4a74900763834e0;[~accountid:5e1a4f5ec578120daca5ff8e] , please take a look. Not sure if this is a datapath problem or a clone of the {{vl}} corruption in [https://sifive.atlassian.net/browse/MAL-2314|https://sifive.atlassian.net/browse/MAL-2314|smart-link] and [https://sifive.atlassian.net/browse/MAL-2354|https://sifive.atlassian.net/browse/MAL-2354|smart-link].","09/Aug/22 6:41 PM;5e1a4f5ec578120daca5ff8e;Also passed this rerun. 

{noformat}*** PASSED *** finished after 341517 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 1,707,582,500 ps.
*Verdi* : Close all FSDB Files at 1,707,582,500 ps.
$finish at simulation time           1707582500
           V C S   S i m u l a t i o n   R e p o r t 
Time: 1707582500 ps
CPU Time:    888.520 seconds;       Data structure size:  54.1Mb
Tue Aug  9 18:30:53 2022
-W- test [sim/rerun2.outline/rat_default_T_0307/rat/default] effective cpulimit_multiplier (42.0) set too high, actual walltime: 839.0 seconds vs timeout 63000 seconds!
2022-08-09T18:30:54-0700: Simulation sim/rerun2.outline/rat_default_T_0307/rat/default complete, passed
kirat@gamma25:/scratch/kirat/tokyo/federation/builds/coreip_p670/sim${noformat}","09/Aug/22 8:03 PM;5e1a4f5ec578120daca5ff8e;assed also on the latest master federation with clean session in gamma26

{{kirat@gamma26:/scratch/kirat/tokyo/federation/builds/coreip_p670/sim/sim/rerun.outline/rat_default_T_0081/rat/default}}",09/Aug/22 10:09 PM;5a938e9c0913194d2d262658;[~accountid:6235105a3eacc50071ff07ec] will try to recreate the failure locally. ,"10/Aug/22 2:06 AM;6235105a3eacc50071ff07ec;Hi  [~accountid:5e1a4f5ec578120daca5ff8e] ,
Issue is reproducible on [~accountid:5a938e9c0913194d2d262658] mentioned commit-id
c2c9e663a1ad832030239e4ab670ec2d2163251c


gamma26:: /scratch/naveenr/TGV/federation/builds/coreip_p670/sim/sim/rerun.outline_vmacc/rat_default_T_0307/rat/default/waves.fsdb","11/Aug/22 8:28 AM;5e1a4f5ec578120daca5ff8e;After several experiment, checking the generating test with [~accountid:5e0651c861d95d0d9aa546ac] , we are sure the test environment/firrtl are totally the same. Only the generated verilog are different. And this is causing by my default setting {{export FIRTOOL_BUILD_MODE = debug}}

With {{export FIRTOOL_BUILD_MODE = debug}}, the test will passed.

But if we {{unset FIRTOOL_BUILD_MODE}}, test will failed.



Same story happened at [https://sifive.atlassian.net/browse/MAL-2355|https://sifive.atlassian.net/browse/MAL-2355|smart-link] side.","15/Aug/22 11:40 PM;5e1a4f5ec578120daca5ff8e;Confirm this test can be pass on latest master *WITHOUT* setting {{export FIRTOOL_BUILD_MODE = debug}}

And also tried setting {{+useSFC ?= 0}} in {{mk/base_configs/coreip_p670.mk}}, and still passed the test.

[~accountid:5a938e9c0913194d2d262658] [~accountid:6235105a3eacc50071ff07ec] Just like we did in [https://sifive.atlassian.net/browse/MAL-2355|https://sifive.atlassian.net/browse/MAL-2355|smart-link] , I’ll also close this ticket.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]: Tail elements data mismatch for vmulhu.vv with TA=0,[TGV]: Tail elements data mismatch for vmulhu.vv,,,,,MAL-2358,122346,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/9/2022 8:04,9/7/2022 17:43,9/28/2022 0:51,8/15/2022 19:06,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error::*

{noformat}[COSIM-ERROR][0] m_dut_inst_item: [18930] InstInfo: VLD=1 | PC=0x0000000080000d6c | INSN=0x92082c57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r24=0xffffffcdffffffc4000000930000009d mask=ffff r25=0xfffffff5fffffff400000002ffffffc4 mask=ffff | READY=1 | CSR_TIMER=18930 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x000000008000b0d8 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=8 | SEW=8 | LMUL=m2 | VSEGELT=0
[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000080000d6c | INSN=0x92082c57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r24=0xffffffcdffffffc4000000930000009d mask=1111 r25=0x000000000000000000000000ffffffc4 mask=0001{noformat}




*Debug-info::   //*As per cosim trace only v25 only 1 element suppose to be updated and Tail elements filled with zero’s

{noformat}core   0: 0x0000000080000d5e (0xc132f5d7) vsetivli a1, 5, e32, m8, tu, mu
core   0: 0x0000000080000d6c (0x92082c57) vmulhu.vv v24, v0, v16
core   0: 3 0x0000000080000d6c (0x92082c57) e32 m8 l5 v24 0xffffffcdffffffc4000000930000009d v25 0x000000000000000000000000ffffffc4{noformat}



But Design filling non-Zero data to tail elements. Not sure it is linked to [https://sifive.atlassian.net/browse/MAL-2354|https://sifive.atlassian.net/browse/MAL-2354|smart-link] or not.

{noformat}C  0:      18930 [1] pc=[0000000080000d6c] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[92082c57] vmulhu.vv v24, v0, v16
C                   0:      18914 vrf[25]=[fffffff5fffffff400000002ffffffc4][ffff]
C                   0:      18914 vrf[24]=[ffffffcdffffffc4000000930000009d][ffff]{noformat}





*Config::  coreip_p670*
*SHA1:* {{d02d9b7690da7065bf3e544cdac3c28a25bda986}}
*Waves:*  gamma26: /scratch/naveenr/july-9/federation/builds/coreip_p670/sim/sim/rat.outline/rat_default_T_0081/rat/default/waves.fsdb
*rerun.outline::*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": [
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+MEM_ERROR_INJECT=.\.tag_array_.ext,1,0,32:.\.data_arrays_0_.ext,1,0,32:.\.syssram.ext,1,0,32:.\.island.\.lim\.syssram.ext,1,0,32:.\.tagged_tables_0_.ext,1,0,32:.\.base_table_0_.*ext,1,032"",
""+verbose""
],
""subdir"": ""rat_default_T_0081"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 3213347012
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Kira Tsao,Naveen Rathore,Nicolas Brunie,Srivatsa Yogendra,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1a4f5ec578120daca5ff8e,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,d02d9b7690da7065bf3e544cdac3c28a25bda986,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i00h07:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,13:10.3,09/Aug/22 8:13 AM;5fd15143b4a74900763834e0;[~accountid:5e1a4f5ec578120daca5ff8e] please take a look at this,09/Aug/22 8:13 AM;5e1a4f5ec578120daca5ff8e;[~accountid:5fd15143b4a74900763834e0] sure,"09/Aug/22 5:52 PM;5e1a4f5ec578120daca5ff8e;[~accountid:6235105a3eacc50071ff07ec] same here, I can’t reproduce the issue at my end, still seeing passed.

{noformat}*** PASSED *** finished after 432509 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 2,162,542,500 ps.
*Verdi* : Close all FSDB Files at 2,162,542,500 ps.
$finish at simulation time           2162542500
           V C S   S i m u l a t i o n   R e p o r t 
Time: 2162542500 ps
CPU Time:    932.580 seconds;       Data structure size:  54.1Mb
Tue Aug  9 17:00:09 2022
-W- test [sim/rerun.outline/rat_default_T_0081/rat/default] effective cpulimit_multiplier (42.0) set too high, actual walltime: 881.6 seconds vs timeout 63000 seconds!
2022-08-09T17:00:10-0700: Simulation sim/rerun.outline/rat_default_T_0081/rat/default complete, passed
kirat@gamma25:/scratch/kirat/tokyo/federation/builds/coreip_p670/sim${noformat}

Sting version: {{valtrix/sting/2.0.17}}

Steps I took:

{noformat}rm -rf federation/
git clone git@github.com:sifive/federation.git
cd federation/
git co d02d9b7690da7065bf3e544cdac3c28a25bda986
./scripts/quick-submodule-update
BUILD_DIR=builds ./generate-build coreip_p670
module purge
cd builds/coreip_p670/
source load-modules 
make sim
cd sim
vi rerun.outline // Copied rerun content from Jira
./sitest @rerun.outline --sim=vcs +verbose --waves=fsdb -l{noformat}","09/Aug/22 8:03 PM;5e1a4f5ec578120daca5ff8e;Passed also on the latest master federation with clean session in gamma26

{{kirat@gamma26:/scratch/kirat/tokyo/federation/builds/coreip_p670/sim/sim/rerun.outline/rat_default_T_0081/rat/default}}",09/Aug/22 10:08 PM;5a938e9c0913194d2d262658;[~accountid:6235105a3eacc50071ff07ec] will try to recreate this locally.,"10/Aug/22 2:13 AM;6235105a3eacc50071ff07ec;Hi Kira,
issue is reproducible on [~accountid:5a938e9c0913194d2d262658] mentioned commit-id
c2c9e663a1ad832030239e4ab670ec2d2163251c


gamma26::/scratch/naveenr/TGV/federation/builds/coreip_p670/sim/sim/rerun.outline_vmulh/rat_default_T_0081/rat/default/waves.fsdb","11/Aug/22 8:23 AM;5e1a4f5ec578120daca5ff8e;Confirmed that this issue has been fixed in latest master, no matter setting {{FIRTOOL_BUILD_MODE}} to debug or default.",15/Aug/22 10:24 AM;5a938e9c0913194d2d262658;Can we close this issue [~accountid:5e1a4f5ec578120daca5ff8e] ?,"15/Aug/22 7:05 PM;5e1a4f5ec578120daca5ff8e;[~accountid:5a938e9c0913194d2d262658] Yes, I think we can resolve this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] clarify and enforce constraint on nPRs in VPRF,,,,,,MAL-2357,122343,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Won't Do,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/9/2022 6:00,8/20/2022 13:59,9/28/2022 0:51,8/20/2022 13:59,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"It seems the current number of vector PRFs in {{p670}} configuration (128) is not enough to ensure freeList will not stall. We need to determine the constraint(s) the number of vector PRFs should enforce and add them as {{require}} in the codebase.

[https://sifive.atlassian.net/browse/MAL-2349|https://sifive.atlassian.net/browse/MAL-2349|smart-link] ",Josh Smith,Nicolas Brunie,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00gzj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,59:58.3,"20/Aug/22 1:59 PM;5acffeafaa802f2a797a955c;I don’t think this is necessary anymore after https://github.com/sifive/federation/pull/25354 , so I’m going to close the ticket.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion MSHR failure : MSHR Entry Valid Non-Reusable Hang,[TGV] Assertion MSHR failure : MSHR Entry,Execution Unit ,Vex pipe,,,MAL-2356,122341,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Known Error,David Kravitz,5fd15143b4a74900763834e0,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,8/9/2022 5:54,9/7/2022 17:43,9/28/2022 0:51,8/10/2022 4:50,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"We see the below assertion failure.

*Error message* 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_174_test_fails/federation/builds2/coreip_p670/verilog/design/SiFive_MSHREntry.sv"", 1272: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.mshrEntries_0: at time 12959942500 ps
assert failed (verification library): MSHR Entry Valid Non-Reusable Hang  @[MSHR_Mallard.scala 4222:14]
Fatal: ""/scratch/ishitashah/tgv_regression/sign_174_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", 616: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.mshrEntries_0.SiFive_MSHREntry_assert: at time 12959942500 ps{noformat}

*SHA:* [+c2c9e66+|https://simscope.internal.sifive.com/models/undefined--master--c2c9e663a1ad832030239e4ab670ec2d2163251c]

*config:* coreip_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0070"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 4212127356
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath*

{{gamma25:/scratch/ishitashah/tgv_regression/sign_174_test_fails/federation/builds2/coreip_p670/sim/rerundir1_mshr1/mshr1_rerun.outline/sting_StingSiFiveTuple_T_0070/sting/sifive/vector/vector_tgv_dev.conf}}",Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Ishita Shah,Jaksa Djordjevic,,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,607e26355431a500701f5aed,5e137307c578120daca51d52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2349,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-11T16:06:57.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,, https://github.com/sifive/federation/commit/15dd35aabf8095e8087ffb3c769fad6d87568a1e,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,No,,,,,,,,,,,,2|i00gz3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,28:18.0,"09/Aug/22 6:28 AM;5fd15143b4a74900763834e0;This appears to be a duplicate of MAL-2349. The freelist bank0 is exhausted, while the other banks are not. We have a [PR in flight|https://github.com/sifive/federation/pull/25185] to get rid of these types of failures while we figure out the correct long-term solution.",09/Aug/22 3:52 PM;5fd15143b4a74900763834e0;Confirmed this is a duplicate of MAL-2349,10/Aug/22 4:49 AM;5fd15143b4a74900763834e0;Reopening to change disposition.,"10/Aug/22 4:50 AM;5fd15143b4a74900763834e0;There is a known issue when `vPRs` is set to 128. The TGV RTL team is working with Josh and the Dabble team to come up with a long-term solution. In the short term, we've set `vPRs` back to 144.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]:: Cosim vs RTL write data mismatch for vzext.vf2 ,[TGV]:: Cosim vs RTL vzext.vf2 ,Execution Unit ,Vector,,,MAL-2355,122331,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/9/2022 3:20,9/7/2022 17:43,9/28/2022 0:51,8/15/2022 22:46,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error::*
\[COSIM-ERROR]\[0] m_dut_inst_item: \[50464] InstInfo: VLD=1 | PC=0x0000000080003c26 | INSN=0x4ba32c57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r24=0x0000000000003b670000000000009c80 mask=ffff r25=0x0000000000000d210000000000009d4e mask=ffff r26=0x0000000000003b670000000000009c80 mask=ffff r27=0x0000000000000d210000000000009d4e mask=ffff | READY=1 | CSR_TIMER=50464 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x000000008000a098 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=16 | SEW=32 | LMUL=m4 | VSEGELT=0
\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x0000000080003c26 | INSN=0x4ba32c57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r24=0x00000d2100009d4e00003b6700009c80 mask=ffff r25=0x00000d2100009d4e00003b6700009c80 mask=ffff r26=0x00000d2100009d4e00003b6700009c80 mask=fffc r27=0x00000d2100009d4e00003b6700009c80 mask=fffc

*Debug_info::*
As per description, {{vzext.vf2 vd, vs2, vm  # Zero-extend SEW/2 source to SEW destination}}
It seems Design placing Extendended Zero’s at wrong place.

*V26 0x0d219d4e3b679c800d219d4e3b679c80*    


Core   0: 0x0000000080003c22 (0xc12af757) vsetivli a4, 21, e32, m4, tu, mu
core   0: 3 0x0000000080003c22 (0xc12af757) x14 0x0000000000000010
core   0: 0x0000000080003c26 (0x4ba32c57) vzext.vf2 v24, v26
core   0: 3 0x0000000080003c26 (0x4ba32c57) e32 m4 l16 v24 0x00000d2100009d4e00003b6700009c80 v25 0x00000d2100009d4e00003b6700009c80 v26 0x00000d2100009d4e00003b6700009c80 v27 0x00000d2100009d4e00003b6700009c80

Design trace::
 C                   0:      50464 \[1] pc=\[0000000080003c26] W\[r 0=0000000000000000]\[0] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[4ba32c57] vzext.vf2 v24, v26
C                   0:      50237 vrf\[24]=\[0000000000003b670000000000009c80]\[ffff]
C                   0:      50238 vrf\[25]=\[0000000000000d210000000000009d4e]\[ffff]
C                   0:      50239 vrf\[26]=\[0000000000003b670000000000009c80]\[ffff]
C                   0:      50240 vrf\[27]=\[0000000000000d210000000000009d4e]\[ffff]
C


*Config::*  coreip_u8_minimal_vector
*SHA1::  d02d9b7690da7065bf3e544cdac3c28a25bda986*
*Waves::* gamma26:: /scratch/naveenr/july-9/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline_rat_wr_mismatch/rat_default_T_0683/rat/default
*rerun.outline::* 
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": \[
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+verbose""
],
""subdir"": ""rat_default_T_0683"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 3036266455
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",Andrew Lenharth,Kira Tsao,Naveen Rathore,Srivatsa Yogendra,,,,,,,,,,,,5f74f3dc3fe0760069553268,5e1a4f5ec578120daca5ff8e,6235105a3eacc50071ff07ec,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,d02d9b7690da7065bf3e544cdac3c28a25bda986,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i00gwv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,03:38.3,"09/Aug/22 9:03 AM;5e1a4f5ec578120daca5ff8e;Tried twice with clean clone federation, same commit ID and certain build, with copied rerun.outline, I am not able to reproduce this issue, can you check again?","09/Aug/22 9:43 AM;6235105a3eacc50071ff07ec;Same failure on Simscope:
[https://simscope.internal.sifive.com/sigs/703/cm0gsy5ydvfj|https://simscope.internal.sifive.com/sigs/703/cm0gsy5ydvfj]

I ran on Head of master and it is reproducible.",09/Aug/22 9:44 AM;5e1a4f5ec578120daca5ff8e;[~accountid:6235105a3eacc50071ff07ec] Does the STiNG need to be a certain version? BTW I don’t have permission to access Simscope,"09/Aug/22 10:01 AM;6235105a3eacc50071ff07ec;It is RAT generated Stimulus.
I don’t think so any specific version required here.
Rerunning same outline on Head of the master, Will let you know results shortly.","09/Aug/22 4:50 PM;5e1a4f5ec578120daca5ff8e;{noformat}*** PASSED *** finished after 542909 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 2,714,542,500 ps.
*Verdi* : Close all FSDB Files at 2,714,542,500 ps.
$finish at simulation time           2714542500
           V C S   S i m u l a t i o n   R e p o r t 
Time: 2714542500 ps
CPU Time:    596.020 seconds;       Data structure size:  34.9Mb
Tue Aug  9 09:11:57 2022
-W- test [sim/rerun.outline/rat_default_T_0683/rat/default] effective cpulimit_multiplier (10.5) set too high, actual walltime: 534.0 seconds vs timeout 15750 seconds!
2022-08-09T09:11:57-0700: Simulation sim/rerun.outline/rat_default_T_0683/rat/default complete, passed{noformat}

I still getting passed with the rerun. My STiNG version is: 

* valtrix/sting/2.0.17

If you want to double check, I’m on {{gamma25}}

Here’s the steps I took:

{noformat}rm -rf federation/
git clone git@github.com:sifive/federation.git
cd federation/
git co d02d9b7690da7065bf3e544cdac3c28a25bda986
./scripts/quick-submodule-update
BUILD_DIR=builds ./generate-build coreip_u8_minimal_vector
cd builds/coreip_u8_minimal_vector/
module purge
source load-modules 
make sim
cd sim
vi rerun.outline // Copied content from Jira
./sitest @rerun.outline --sim=vcs +verbose --waves=fsdb -l{noformat}",09/Aug/22 10:03 PM;5a938e9c0913194d2d262658;[~accountid:5e1a4f5ec578120daca5ff8e] can u try with the commit id {{c2c9e663a1ad832030239e4ab670ec2d2163251c}},"09/Aug/22 10:04 PM;5a938e9c0913194d2d262658;Can u point us to ur run, and we will try to see if the test case was executed again?","10/Aug/22 1:10 AM;6235105a3eacc50071ff07ec;Hi Kira,
issue is reproducible on [~accountid:5a938e9c0913194d2d262658]  mentioned commit-id
         c2c9e663a1ad832030239e4ab670ec2d2163251c


gamma26:://scratch/naveenr/TGV/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/rat_default_T_0683/rat/default/waves.fsdb","11/Aug/22 8:31 AM;5e1a4f5ec578120daca5ff8e;After several experiments, check the generating test with [~accountid:5e0651c861d95d0d9aa546ac] , we are sure the test environment/firrtl are totally the same. Only the generated verilog files are different. And this is causing by my default setting {{export FIRTOOL_BUILD_MODE = debug}}

With {{export FIRTOOL_BUILD_MODE = debug}}, the test will passed.

But if we {{unset FIRTOOL_BUILD_MODE}}, test will failed.



I did some trace and found the logic that use to select zext data has different behavioral. 

Same story happened at [https://sifive.atlassian.net/browse/MAL-2359|https://sifive.atlassian.net/browse/MAL-2359|smart-link] side.",11/Aug/22 9:34 AM;5f74f3dc3fe0760069553268;Does the release build fail if you try different randomization seeds?,"15/Aug/22 7:33 PM;5e1a4f5ec578120daca5ff8e;[~accountid:5f74f3dc3fe0760069553268] , I tried several times, this test will always passed if {{export FIRTOOL_BUILD_MODE = debug}}, even I changed the seed/superseed. And always failed if we aren’t setting {{FIRTOOL_BUILD_MODE}} to {{debug}}.","15/Aug/22 8:57 PM;5e1a4f5ec578120daca5ff8e;Confirm this test can be pass on latest master *WITHOUT* setting {{export FIRTOOL_BUILD_MODE = debug}}

[~accountid:5a938e9c0913194d2d262658] [~accountid:6235105a3eacc50071ff07ec] shall we close this ticket?",15/Aug/22 9:38 PM;5a938e9c0913194d2d262658;Yea that should be good. Might have been fixed by some other commits to master ,"15/Aug/22 10:44 PM;5e1a4f5ec578120daca5ff8e;I also tried setting {{+useSFC ?= 0}} in {{mk/base_configs/coreip_u8_minimal_vector.mk}}, and still passed the test.","16/Aug/22 7:12 AM;5f74f3dc3fe0760069553268;Firrtl 1.12 is default in federation now and should have deterministic randomization between modes (at least for chisel-visible state).  (Though 1.11 seeds won’t behave identically to 1.12 seeds)

There is a lot of randomized state in the designs (and a huge amount in the testbenches).  So far, on the old version, we haven’t seen a failure which wasn’t reproducible with a different seed, but how much sampling was needed to find it was variable.  This should be fixed in 1.12.

From what I was seeing in sitest, the seed in the outline takes precedence for register randomization seeding over superseed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]:: Extra registers write-back in RTL compare to COSIM(PC=0x8000a026) for vand.vv,[TGV]:: Extra registers  RTL compare to COSIM(PC=0x8000a026) for vand.vv,Execution Unit ,,,,MAL-2354,122328,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/9/2022 2:45,9/7/2022 17:43,9/28/2022 0:51,8/11/2022 12:45,,,,,,,,,,,,,TGV_RTL/RDU,TGV_RTL/SEQ,,,,,,,,0,TGV,,,"*Error::*

{noformat}[COSIM-ERROR][0] m_dut_inst_item: [65341] InstInfo: VLD=1 | PC=0x000000008000a026 | INSN=0x26f586d7 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r13=0x020a080a020a0806020a080a020a0806 mask=ffff r14=0x18954040080182441895404008018244 mask=ffff r15=0x00000000000000040000000000000004 mask=ffff r16=0x18954040080182441895404008018244 mask=ffff r17=0x00000000000000040000000000000004 mask=ffff r18=0x10850040080180041085004008018004 mask=ffff r19=0x00000000000000040000000000000004 mask=ffff r20=0x00000000000000040000000000000004 mask=ffff | READY=1 | CSR_TIMER=65341 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x000000008000a998 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=2 | SEW=64 | LMUL=m1 | VSEGELT=0
[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x000000008000a026 | INSN=0x26f586d7 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r13=0x020a080a020a0806020a080a020a0806 mask=ffff{noformat}

*Debug-Trace::*   

{noformat}core   0: 0x000000008000a022 (0xc18bf057) vsetivli zero, 23, e64, m1, tu, mu
core   0: 3 0x000000008000a022 (0xc18bf057)
core   0: 0x000000008000a026 (0x26f586d7) vand.vv v13, v15, v11   //VL=2, SEW=64 and Lmul=0x1
core   0: 3 0x000000008000a026 (0x26f586d7) e64 m1 l2 v13 0x020a080a020a0806020a080a020a0806{noformat}

*//Design trace*

{noformat}C0:      65341 [1] pc=[000000008000a026] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[26f586d7] vand.vv v13, v15, v11
C                   0:      65334 vrf[13]=[020a080a020a0806020a080a020a0806][ffff]
C                   0:      65335 vrf[15]=[00000000000000040000000000000004][ffff]
C                   0:      65336 vrf[17]=[00000000000000040000000000000004][ffff]
C                   0:      65336 vrf[14]=[18954040080182441895404008018244][ffff]
C                   0:      65337 vrf[19]=[00000000000000040000000000000004][ffff]
C                   0:      65337 vrf[16]=[18954040080182441895404008018244][ffff]
C                   0:      65338 vrf[18]=[10850040080180041085004008018004][ffff]
C                   0:      65339 vrf[20]=[00000000000000040000000000000004][ffff]{noformat}




*SHA1::* {{d02d9b7690da7065bf3e544cdac3c28a25bda986}}
*Config::* coreip_p670

*Waves::* {{gamma26:: /scratch/naveenr/july-9/federation/builds/coreip_p670/sim/sim/rerun.outline_rat_wr-mismatch/rat_default_T_0710/rat/default}}
*rerun.outline::*

outline copied in {{/work/nicolasb/tgv_bug_outlines/rat/MAL-2354.outline}}

*outline*


{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": [
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+MEM_ERROR_INJECT=.\.tag_array_.ext,1,0,32:.\.data_arrays_0_.ext,1,0,32:.\.syssram.ext,1,0,32:.\.island.\.lim\.syssram.ext,1,0,32:.\.tagged_tables_0_.ext,1,0,32:.\.base_table_0_.*ext,1,032"",
""+verbose""
],
""subdir"": ""rat_default_T_0710"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 3146335667
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



",David Kravitz,Naveen Rathore,Nicolas Brunie,,,,,,,,,,,,,5fd15143b4a74900763834e0,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2314,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,09/Aug/22 5:58 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220809-125802.png;https://sifive.atlassian.net/secure/attachment/75583/image-20220809-125802.png,,,,,,,,,,,,,,,,d02d9b7690da7065bf3e544cdac3c28a25bda986,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-11T01:23:32.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/8334cd63d54dbe6ad1c94091583747ab0ee59071,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00gw7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,12:52.5,"09/Aug/22 5:12 AM;5fd15143b4a74900763834e0;[~accountid:6065017e90e3950069cf01c5], please triage this to see if it’s VEX vs. Sequencer problem, and assign appropriately.","09/Aug/22 5:35 AM;6065017e90e3950069cf01c5;The problem is similar to [https://sifive.atlassian.net/browse/MAL-2314|https://sifive.atlassian.net/browse/MAL-2314|smart-link]  the {{vl}} values is corrupted in {{VectorSequencer}} queue, but this time the valid is legal and so leads to over sequencing (8 uops vs 1) rather than an assertion firing.",09/Aug/22 5:49 AM;6065017e90e3950069cf01c5;TL;DR; problem is either in the sequencer or around surrounding {{vset}}. I don’t think it is in VEX.,"09/Aug/22 5:58 AM;6065017e90e3950069cf01c5;!image-20220809-125802.png|width=1403,height=635!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Data mismatch on vcompress.vm inst,[TGV] Data mismatch vcompress.vm inst,Execution Unit ,Vector,,,MAL-2353,122268,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,8/8/2022 11:18,9/7/2022 17:43,9/28/2022 0:51,9/2/2022 6:23,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"Seems like RTL calculates that the correct number of elements to update, but the actual update to registers is completely flawed on a vcompress.vm instruction with VL=128, sew =8. 



{noformat}core   0: 0x00000000800011b6 (0x5e802c57) vcompress.vm v24, v8, v0
On cosim the reg updates are 
core   0: 3 0x00000000800011b6 (0x5e802c57) e8 m8 l128 
v24 0xca8ec5e4e09d267d2433661a9788fe1f 
v25 0x0e37e8078bb92898c88da61f20c53e50 
v26 0x2cf1a6e53bd79fc628be2a28ff7c7831 
v27 0x197a740c85a9eda0620aae6b051d1e9b 
v28 0xffffffffffffffffffffffffff524796{noformat}

But RTL seems to fill it with 1s at elements where are supposed to be updated

{noformat}C0:33311 vrf[24]=[ffffffffffffffffff33661a9788fe1f][ffff]
C0:33312 vrf[25]=[0e37ffffffff2898c88da61f20c53e50][ffff]
C0:33314 vrf[26]=[ffffffffffffffffffffffffff7c7831][ffff]
C0:33316 vrf[27]=[ffffff0c85a9ffffffffff6b051d1e9b][ffff]
C0:33317 vrf[28]=[5a77c6ffffffffffffffffffff524796][ffff]{noformat}

And its doing a mix of all 1’s and undisturbed update for the tail part….



To recreate this failure 

# clone federation and checkout the commit 1c1703896fcc94224c8f5948674f73714f44bc9e
# build coreip_u8_minimal_vector and rerun the simulation using the outline
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.cc_banks.*ext,1,0,25:.*\\.cc_dir_ext,0,1,15:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.icTagArray.*ext,1,0,5:.*\\.icWayPredArray.*ext,1,0,15:.*\\.l1dcTagArray.*ext,1,0,20:.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.RamBank.*ext,1,0,15:.*\\.icDataArray.*ext,1,0,15"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""t0000_lmul8"",
  ""subtest"": ""vcompress.vm"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vcompress.vm_Mask-7_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_NoSelfCheck-0_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-8_TGV-1_IMM-1_LdStAccFault-1_TAILAgnostic-1"",
  ""seed"": {
    ""value"": 1839606485
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}



The waves are generated at {{gamma12:/scratch/srivatsa/debug_regr/1c1703896fcc94224c8f5948674f73714f44bc9e/builds/1c1703896fcc94224c8f5948674f73714f44bc9e/coreip_u8_minimal_vector/sim/sim/rerun.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm}}",David Kravitz,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2316,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00gjj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,29:14.1,08/Aug/22 3:29 PM;5fd15143b4a74900763834e0;Is this any different than [https://sifive.atlassian.net/browse/MAL-2316|https://sifive.atlassian.net/browse/MAL-2316|smart-link] ?,"08/Aug/22 3:37 PM;5a938e9c0913194d2d262658;yea, looking at how RTL has updated the regs, it seems to be different. But we can link it together and check if the fix of [https://sifive.atlassian.net/browse/MAL-2316|https://sifive.atlassian.net/browse/MAL-2316|smart-link] fixes this on RTL.",12/Aug/22 1:06 AM;6065017e90e3950069cf01c5;I think this one is for me,"02/Sep/22 6:22 AM;6065017e90e3950069cf01c5;The test can no longer be run on master it seems:

I also believe most of the {{vcompress.vm}} issues have been fixed and the only remaining issue is on the VTG side: [https://sifive.atlassian.net/browse/VI-8027|https://sifive.atlassian.net/browse/VI-8027|smart-link]  

{noformat}2022-09-02T06:19:41-0700: Running test sim/MAL-2353.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm
VENV_PATH =
/scratch/nicolasb/federation/software/tests/vector/vector_tests_gen/vector_virtual_env/test_env
CMake Warning (dev) in CMakeLists.txt:
  No project() command is present.  The top-level CMakeLists.txt file must
  contain a literal, direct call to the project() command.  Add a line of
  code such as

    project(ProjectName)

  near the top of the file, but after cmake_minimum_required().

  CMake is pretending there is a ""project(Project)"" command on the first
  line.
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Warning at util.cmake:17 (message):
  cannot find SPIKE

  Fixxed by cmake -DSPIKE=/path/to/spike

Call Stack (most recent call first):
  CMakeLists.txt:5 (include)


Traceback (most recent call last):
  File ""/scratch/nicolasb/federation/riscv-vector-tests/main.py"", line 246, in <module>
    test_set = run(**data.inst[arg.get().inst])
  File ""/scratch/nicolasb/federation/riscv-vector-tests/main.py"", line 189, in run
    i.check(test, env, inst, AVL = AVL, SEW = SEW, LMUL = LMUL)
  File ""/scratch/nicolasb/federation/riscv-vector-tests/checker.py"", line 216, in check
    ite = (label.data.width() * len(label.data) // nf) // max(des_eew, 8) - count_ones_in_vm(inst.op[2].vread(arg.get().VLEN * lmul // SEW, env.vl, 1)[0])
  File ""/scratch/nicolasb/federation/riscv-vector-tests/generate.py"", line 446, in vread
    return Data(SEW, [VReg._vregs[self._get_pos(i, SEW, LMUL, nf)] for i in range(AVL)])
  File ""/scratch/nicolasb/federation/riscv-vector-tests/generate.py"", line 446, in <listcomp>
    return Data(SEW, [VReg._vregs[self._get_pos(i, SEW, LMUL, nf)] for i in range(AVL)])
  File ""/scratch/nicolasb/federation/riscv-vector-tests/riscv_isa_impl/register.py"", line 34, in __getitem__
    return self.data[key]
IndexError: list index out of range
make[3]: *** [CMakeFiles/rv64mv_p_vcompress.vm.asm.dir/build.make:100: rv64mv_p_vcompress.vm.S] Error 1
make[2]: *** [CMakeFiles/Makefile2:154: CMakeFiles/rv64mv_p_vcompress.vm.asm.dir/all] Error 2
make[1]: *** [CMakeFiles/Makefile2:189: CMakeFiles/only_asm.dir/rule] Error 2
make: *** [Makefile:187: only_asm] Error 2

VROOM: Building Component Repository
Object Model JSON   : /scratch/nicolasb/federation/builds_mfc/coreip_u8_minimal_vector/firrtl/SiFiveCoreDesignerAlterations.objectModel.json

Traceback (most recent call last):
  File ""/scratch/nicolasb/federation/software/tests/vector/vector_tests_gen/gen_vec_test.py"", line 380, in <module>
    main()
  File ""/scratch/nicolasb/federation/software/tests/vector/vector_tests_gen/gen_vec_test.py"", line 323, in main
    close_fds=False,
  File ""/sifive/tools/python/python/rhel8/3.7.1/lib/python3.7/subprocess.py"", line 481, in run
    output=stdout, stderr=stderr)
subprocess.CalledProcessError: Command '['make -j1 only_asm']' returned non-zero exit status 2.
=== sitest found errors in test sim/MAL-2353.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm:
Error: subprocess program.elf.before_compile_0. exited with status 1
2022-09-02T06:19:46-0700: Error: simulation sim/MAL-2353.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm failed
Error: some simulations failed{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion StoreBuffer: SDFP0 request match entry should have data valid,[TGV] Assertion StoreBuffer : SDFP0 request,LSU (Load Store Unit),,,,MAL-2352,122241,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,8/8/2022 7:39,9/7/2022 17:43,9/28/2022 0:51,8/9/2022 12:46,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"We see below assertion failure 

*Error message*

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_173_test_failure/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_StoreBuffer_assert.sv"", 86: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.bal.stb.SiFive_StoreBuffer_assert: at time 3177822500 ps
Assertion failed: SDFP0 request match entry should have data valid
    at StoreBuffer.scala:138 assert(Mux1H(sdfp_vstbRdMatchVec_q(sd), stbEntries.map(_.io.data.valid)), s""SDFP$sd request match entry should have data valid"")
Fatal: ""/scratch/ishitashah/tgv_regression/sign_173_test_failure/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_StoreBuffer_assert.sv"", 88: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.bal.stb.SiFive_StoreBuffer_assert: at time 3177822500 ps{noformat}

*SHA:* [*1c17038*|https://simscope.internal.sifive.com/models/undefined--master--1c1703896fcc94224c8f5948674f73714f44bc9e]

*config:* coreip_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=10"",
    ""+axi_mem_dither_cycles=10"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+pl2_randomBlockDirWrFifoEnable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0094"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1978852347
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath*

{{gamma25:/scratch/ishitashah/tgv_regression/sign_173_test_failure/federation/builds2/coreip_p670/sim/rerundir1_store/store_rerun.outline/sting_StingSiFiveTuple_T_0094/sting/sifive/vector/vector_tgv_dev.conf}}

*Path of disassemble file*

{{gamma25:/scratch/ishitashah/tgv_regression/sign_173_test_failure/federation/builds2/coreip_p670/sim/rerundir1_store/store_rerun.outline/sting_StingSiFiveTuple_T_0094/sting/sifive/vector/vector_tgv_dev.conf/asm.txt}}",Alexandre Solomatnikov,David Kravitz,Ishita Shah,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,607e26355431a500701f5aed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,08/Aug/22 6:42 PM;sols;MAL-2352.png;https://sifive.atlassian.net/secure/attachment/75538/MAL-2352.png,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-09T14:34:46.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25198,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00gdz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,43:08.2,"08/Aug/22 8:43 AM;5fd15143b4a74900763834e0;Not sure exactly why the assertion is firing here. Only thought is that there’s a flush around that time. Maybe the assertion needs to take that into account, or ???? Passing to Alex for further diagnosis.",08/Aug/22 11:31 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;This test passed with SFC,"08/Aug/22 6:42 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;This is an assertion issue introduced in [https://github.com/sifive/federation/commit/4a36e8d24bbb|https://github.com/sifive/federation/commit/4a36e8d24bbb|smart-link] 

The assertion doesn’t take into account flush request that resets {{data.valid}}:

!MAL-2352.png|width=1335,height=907!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion VEX: At most one tag should be broadcasted during any cycle,[TGV] Assertion VEX,Execution Unit ,Vex Pipe,,,MAL-2351,122233,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,8/8/2022 6:02,9/7/2022 17:43,9/28/2022 0:51,8/19/2022 0:53,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"We see the below assertion failure from VEX block

*Error Message* 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_173_test_failure/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_VexPipe_1_assert.sv"", 299: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_1.SiFive_VexPipe_1_assert: at time 740782500 ps
Assertion failed: At most one tag should be broadcasted during any cycle.
    at VexPipe.scala:921 assert(PopCount(allTagInjects.asUInt) <= 1.U, ""At most one tag should be broadcasted during any cycle."")

Fatal: ""/scratch/ishitashah/tgv_regression/sign_173_test_failure/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_VexPipe_1_assert.sv"", 301: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_1.SiFive_VexPipe_1_assert: at time 740782500 ps{noformat}

*SHA:* [+1c17038+|https://simscope.internal.sifive.com/models/undefined--master--1c1703896fcc94224c8f5948674f73714f44bc9e]

*config:* coreip_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.tag_array_.*ext,0,1,32:.*\\.data_arrays_0_.*ext,0,1,32:.*\\.syssram.*ext,0,1,32:.*\\.island.*\\.lim\\.syssram.*ext,0,1,32:.*\\.tagged_tables_0_.*ext,0,1,32:.*\\.base_table_0_.*ext,0,132""
  ],
  ""subdir"": ""rat_default_T_0697"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2342718735
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath*

{{gamma25:/scratch/ishitashah/tgv_regression/sign_173_test_failure/federation/builds2/coreip_p670/sim/rerundir1_vex/vex_rerun.outline/rat_default_T_0697/rat/default}}

*Path of trace*

{{@gamma25:}}

{{/scratch/ishitashah/tgv_regression/sign_173_test_failure/federation/builds2/coreip_p670/sim/rerundir1_vex/vex_rerun.outline/rat_default_T_0697/rat/default/temp.dasm}}

*Path of disassemble file*

{{@gamma25:}}

{{/scratch/ishitashah/tgv_regression/sign_173_test_failure/federation/builds2/coreip_p670/sim/rerundir1_vex/vex_rerun.outline/rat_default_T_0697/rat/default/asm.txt}}",Ishita Shah,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,607e26355431a500701f5aed,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,18/Aug/22 6:22 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220818-132203.png;https://sifive.atlassian.net/secure/attachment/76096/image-20220818-132203.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-19T00:53:17.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/a5a31a4ae953ba8683cae0ae15b5f22247a55090,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00gc7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,21:30.8,15/Aug/22 10:21 AM;5a938e9c0913194d2d262658;[~accountid:6065017e90e3950069cf01c5] [~accountid:5fd15143b4a74900763834e0] Any update on this issue? It has been open for quite a while,"15/Aug/22 10:24 AM;6065017e90e3950069cf01c5;Not yet, I will check it this week.","18/Aug/22 6:22 AM;6065017e90e3950069cf01c5;The issue is a tag collision between the permutation engine and the division unit in {{exPipes_1}}

!image-20220818-132203.png|width=1401,height=457!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: SiFive_NLP_assert,Assertion Failure: SiFive_NLP_assert,NLP (Next Line Predictor),,,,MAL-2350,122231,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,8/8/2022 5:48,8/19/2022 12:46,9/28/2022 0:51,8/10/2022 8:38,,,,,,,,,,,,,RTL/Frontend,,,,,,,,,0,,,,"*Error*:

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-xprop-coreip_mallard-test-nightly-xprop/128/builds/coreip_p650/verilog/design/assertions/SiFive_NLP_assert.sv"", 137: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.ifu.nlp.SiFive_NLP_assert: at time 9864342500 ps
Assertion failed: NLP read has more than one valid matching entry

    at NLP.scala:426 assert(!(io.valid_F1 && PopCount(Cat(nlpHits_F1)) > 1.U) || io.nlpBankConflict_F1, ""NLP read has more than one valid matching entry""){noformat}

At {{T:9864322500ps}}, {{ifu.nlp.SiFive_NLP_assert.nlpHits_F1[1:0]}} & {{ifu.nlp.SiFive_NLP_assert.io_valid_F1}} transition to xx, triggering the assertion. Tracing back the source, {{lruEntry_*}} signals are seen to be latching xx from {{ifu.nlp.mainLru.lruArray_254,}} which is always uninitialized.

Dump at {{gamma27:/scratch/saurabhs/mallard_master_xprop_128/federation/builds/coreip_p650/sim/sting_StingTuple_T_0065/sting/valtrix/regress_base}}

*Steps to reproduce*:

* Checkout *3cdd42f*
* Build *coreip_p650*
* Run empty test to compile once. {{./sitest @empty}}
* create a directory test,
{{mkdir -p sting_StingTuple_T_0065/sting/valtrix/regress_base}}
cd path just created
* {noformat}scp -r <username>@sigma113:/scratch/jenkins/archived-builds/fed/master/nightly-mallard-xprop-coreip_mallard-test-nightly-xprop/128/builds/coreip_p650/sim/sim-xprop/moaoRIT-nightly.outline/sting_StingTuple_T_0065/sting/valtrix/regress_base/* .{noformat}
* {noformat}Modify the vcs.sim.rerun.local to
  a. replace the simv to your local simv
  b. add this in any place +fsdbfile\=waves.fsdb +verbose
Modify cosim.cfg dtb to point to your local directory{noformat}
* run with {{source ./vcs.sim.rerun.local 2>&1 | tee simulation.err2}}",Josh Smith,Megan Wachs,Saurabh Singh,,,,,,,,,,,,,5acffeafaa802f2a797a955c,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-10T08:37:58.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,cc78de28a599e186c6d0e1c5b200b08a899470bc,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00gbr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,17:54.7,09/Aug/22 11:17 AM;5acffeafaa802f2a797a955c;This was likely caused by [https://github.com/sifive/federation/pull/24971|https://github.com/sifive/federation/pull/24971|smart-link] .  I forgot to test that change out with xprop.,19/Aug/22 12:46 PM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;since this was introduced and fixed recently marking affectsPreviously = no,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion ROB: ROB Retire Hang around entry,[TGV] Assertion ROB,Instruction decode and dispatch,Scalar ROB,,,MAL-2349,122226,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Known Error,Nicolas Brunie,6065017e90e3950069cf01c5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,8/8/2022 4:46,9/7/2022 17:43,9/28/2022 0:51,8/10/2022 4:46,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,TGV,,,"We see the below assertion failure message from ROB block. 

*Error Message* 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_173_test_failure/federation/builds2/coreip_p670/verilog/design/SiFive_ROB.sv"", 13881: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob: at time 25711022500 ps
assert failed (verification library): ROB Retire Hang around entry 159   @[ROB.scala 781:9]
Fatal: ""/scratch/ishitashah/tgv_regression/sign_173_test_failure/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_ROB_assert.sv"", 1967: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert: at time 25711022500 ps{noformat}

The last instruction executed was *vwsub.vx* 

{noformat}RTL CODE
C0: 257168 [1] pc=[0000000020206336] W[r 0=0000000000000000][0] R[r 7=0000000000000004] R[r 0=0000000000000000] inst=[cea3e457] vwsub.vx v8, v10, t2
C0: 257168 [1] pc=[000000002020633a] W[r 7=0000000000000010][1] R[r 6=0000000000000010] R[r 0=0000000000000000] inst=[60531393] sext.h  t2, t1{noformat}

*SHA:* [+1c17038+|https://simscope.internal.sifive.com/models/undefined--master--1c1703896fcc94224c8f5948674f73714f44bc9e]

*Config: coreip_p670*

*rerun.outline*

outline copied in {{/work/nicolasb/tgv_bug_outlines/sting/MAL-2349.outline}}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+pl2_randomBlockGlobalArbEnable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0216"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3280293006
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath*

{{gamma25:/scratch/ishitashah/tgv_regression/sign_173_test_failure/federation/builds2/coreip_p670/sim/rerundir1_rob/rob_rerun.outline/sting_StingSiFiveTuple_T_0216/sting/sifive/vector/vector_tgv_dev.conf$}}",Brian Grayson,David Kravitz,Fu-Ching Yang,Hsinyi Lee,I-Cheng Cheng,Ishita Shah,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5dcdcc6a99e7ea0c60b0e6aa,5d7bfdaa003e040c3e175060,607e26355431a500701f5aed,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2356,MAL-2348,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,08/Aug/22 6:41 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220808-134049.png;https://sifive.atlassian.net/secure/attachment/75505/image-20220808-134049.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-10T00:51:04.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/15dd35aabf8095e8087ffb3c769fad6d87568a1e,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,No,,,,,,,,,,,,2|i00gan:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,29:22.4,"08/Aug/22 5:29 AM;5fd15143b4a74900763834e0;[~accountid:607e26355431a500701f5aed], in case of a ROB hang, the most-likely suspect is in the group of instructions *right after* the trace ends. Because we don’t have permission to create files in your directories, can you please disassemble the full program.elf, or find a way to point us to an assembly file? Thanks","08/Aug/22 6:24 AM;607e26355431a500701f5aed;Path for trace

{{@gamma25: /scratch/ishitashah/tgv_regression/sign_173_test_failure/federation/builds2/coreip_p670/sim/rerundir1_rob/rob_rerun.outline/sting_StingSiFiveTuple_T_0216/sting/sifive/vector/vector_tgv_dev.conf/temp.dasm }}

Path for disassemble file

{{@gamma25: /scratch/ishitashah/tgv_regression/sign_173_test_failure/federation/builds2/coreip_p670/sim/rerundir1_rob/rob_rerun.outline/sting_StingSiFiveTuple_T_0216/sting/sifive/vector/vector_tgv_dev.conf/asm.txt }}","08/Aug/22 6:41 AM;6065017e90e3950069cf01c5;Looks like the next instructions are either LLP arithmetic, or reductions. 

!image-20220808-134049.png|width=915,height=161!","08/Aug/22 7:53 AM;5fd15143b4a74900763834e0;Honestly, I was expecting a load or store there. Looks like the ball is still in your (or Kira’s) court, Nicolas.",08/Aug/22 8:35 AM;6065017e90e3950069cf01c5;For now what I can see is there there are two reductions in the ROB group whose gid is {{0x94}} and that the ROB is missing one completion request (and thus hanging) and this entry.,"08/Aug/22 10:18 AM;6065017e90e3950069cf01c5;There is a stall occurring because of the VRF free list. One of the 4 banks (bank0 ? corresponding to the lowest 32 bits) is completely empty.

From [~accountid:5acffeafaa802f2a797a955c] 

{quote}I'm guessing this happened because you reduced the number of physical registers. The TGV free list has 4 banks, and if one bank becomes completely empty then REN will stall. We probably want the size of each bank to be more than the number of architectural registers plus a few so we don't hang if we only use one bank{quote}

We indeed reduced the number of VPRF to match SPARTA landing zone for {{p670}} in [https://github.com/sifive/federation/pull/25113|https://github.com/sifive/federation/pull/25113|smart-link] .

I don’t know if this is really just a repartition problem or if there is a free problem also.",09/Aug/22 5:38 AM;6065017e90e3950069cf01c5;The problem “disappears” when increasing the number of VPRFs from {{128}} to {{144.}},"10/Aug/22 2:41 AM;6065017e90e3950069cf01c5;The problem has been worked around by [https://github.com/sifive/federation/pull/25185|https://github.com/sifive/federation/pull/25185|smart-link]  

It requires further performance analysis: [https://sifive.atlassian.net/browse/SPARTA-2080|https://sifive.atlassian.net/browse/SPARTA-2080|smart-link] ","10/Aug/22 4:46 AM;5fd15143b4a74900763834e0;There is a known issue when `vPRs` is set to 128. The TGV RTL team is working with Josh and the Dabble team to come up with a long-term solution. In the short term, we've set `vPRs` back to 144.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assert failed with stall_REN Hang,Assert failed stall_REN Hang,,,,,MAL-2348,122216,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Josh Smith,5acffeafaa802f2a797a955c,Hsinyi Lee,5dcdcc6a99e7ea0c60b0e6aa,Hsinyi Lee,5dcdcc6a99e7ea0c60b0e6aa,8/8/2022 3:00,8/9/2022 11:06,9/28/2022 0:51,8/9/2022 11:06,,,,,,,,,,,,,RTL/RDU,,,,,,,,,0,,,,"I got an assert failed:

{noformat}Error: ""/scratch/jenkins/archived-builds/performance-regression/score_guard_pcs/483/builds/coreip_p670/verilog/design/SiFive_RDU.sv"", 7386: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu: at time 2273862500 ps
assert failed (verification library): stall_REN Hang  @[RDU.scala 1347:9]
Error: ""/scratch/jenkins/archived-builds/performance-regression/score_guard_pcs/483/builds/coreip_p670/verilog/design/SiFive_ROB.sv"", 13881: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob: at time 2273862500 ps
assert failed (verification library): ROB Retire Hang around entry 128   @[ROB.scala 781:9]
Fatal: ""/scratch/jenkins/archived-builds/performance-regression/score_guard_pcs/483/builds/coreip_p670/verilog/design/assertions/SiFive_ROB_assert.sv"", 1967: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert: at time 2273862500 ps
$finish called from file ""/scratch/jenkins/archived-builds/performance-regression/score_guard_pcs/483/builds/coreip_p670/verilog/design/assertions/SiFive_ROB_assert.sv"", line 1967.{noformat}

commit: 2022-08-07.c2c9e663a1a

config: p670

waveform: {{/nfs/teams/perf/tmp-he/users/hsinyil/80144/0080/144/waves.fsdb}}

reproduce:

{noformat}/nfs/teams/perf/tmp-he/users/hsinyil/80144/0080/144/rerun_rtlsim{noformat}

or

{noformat}# edit ""federation/test-outlines/sparta-checkpoint.outline""
checkpoint_list = %w [
0080/144
]
... (not changed after setting checkpoint_list)

$ cd builds/p670/sim
$ ./sitest @../../../test-outlines/sparta-checkpoint.outline{noformat}",Deepika S K,Hsinyi Lee,John Ingalls,Josh Smith,Nicolas Brunie,Rakesh Palakurthi,,,,,,,,,,622a9d30c4d0fe0069575ac9,5dcdcc6a99e7ea0c60b0e6aa,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,62350e943eacc50071ff0753,,,,,,,,,,,,,,,,,MAL-2286,,,,,,,,,,,,,,,MAL-2349,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00g8f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,05:46.5,09/Aug/22 11:05 AM;5acffeafaa802f2a797a955c;This looks like another duplicate of MAL-2349,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[COSIM-ERROR][#] COSIM VS RTL PC MISMATCH,[COSIM-ERROR][#] COSIM VS RTL PC MISMATCH,LSU (Load Store Unit),ROB (Reorder Buffer),,,MAL-2347,122198,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,8/8/2022 0:51,8/30/2022 0:06,9/28/2022 0:51,8/11/2022 9:38,,,,,,,,,,,,,RTL/Frontend,,,,,,,,,0,,,,"*Error*:

{noformat}[COSIM-ERROR][0] m_dut_inst_item: [186405] InstInfo: VLD=1 | PC=0xffff860006809b3e | INSN=0x00008316 | INST_DST=INT | REDUCTION = false | WR: en=true r6=0xffff848001a00018 mask=ff | READY=1 | CSR_TIMER=186405 | PRV=1 | MSTATUS=0x8000000a00006080 | MTVEC=0x0000000080000400 | MCAUSE=0x000000000000000a | VSTART=0 | VL=0 | SEW=8 | LMUL=m1 | VSEGELT=0
[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0xffff860006809b40 | INSN=0x00008316 | INST_DST=NONE | REDUCTION = false | WR: en=false{noformat}

Error occurs after executing the following instruction: 
{{ffff860006809b3a: 000c7363 bgeu	s8,zero,ffff860006809b40 <jmp1_3_16_f14_c0_276>}}

From RTL log: 

{noformat}C0:     186311 [1] pc=[ffff860006809b3a] W[r 0=0000000000000000][0] R[r24=fffffffffffffffb] R[r 0=0000000000000000] inst=[000c7363] bgeu    s8, zero, pc + 6
C0:     186311 [1] pc=[ffff860006809b3e] W[r 6=ffff848001a00018][1] R[r 0=0000000000000000] R[r 5=ffff848001a00010] inst=[00008316] c.mv    t1, t0
C0:     186322 [1] pc=[ffff860006809b40] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00000001] c.nop;jmp1_3_16_f14_c0_276{noformat}

{{r24=fffffffffffffffb}} > {{r 0=0000000000000000}} in this instance. COSIM does take the branch but RTL doesn’t, executes the next PC {{0xffff860006809b3e}}  causing the PC mismatch.

At IFU boundary, at {{T:3721102500ps}}, fetch request {{ifu.io_req_bits_pc[50:0]=7860006809b00,}} returns the culprit {{PC=0xffff860006809b3e}} on {{ifu.io_imemResp_ID_0_bits_fetch_pc[50:0]}} twice, at {{T:3721782500ps}} & {{T:3724202500ps.}}

In IFUIQ block, {{T_6_pc = head[0] ? _bitsPre_3_T_143 : _bitsPre_2_T_143; (SiFive_IFUIQ.sv L680)}}
{{head[0]}} is deasserted and we pick up {{0xffff860006809b3e}} instead of {{0xffff860006809b40.}}

*Build*:  coreip_p550

*Commit*: c884cc0

*Regression*: master/nightly-mallard/343

*Simscope*: [https://simscope.internal.sifive.com/sigs/704/clxmcs6fs6hi|https://simscope.internal.sifive.com/sigs/704/clxmcs6fs6hi]

*rerun.outline*:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingInstMemTuple_T_0366"",
  ""subtest"": ""sifive/branches/br_waw_ld_shadow.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3873701796
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",François Donati,John Ingalls,Josh Smith,Megan Wachs,Pradyumna Panda,Saurabh Singh,,,,,,,,,,624f6b22f813eb00692ee29a,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,607e270b81e7b900681be5a8,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2363,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2331,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-11T09:33:38.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,43e7c18ae08262a52afedae984b1ff0d09c57afa,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00g4f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,37:36.1,"08/Aug/22 8:09 AM;607e26f781e7b900681be48c;[~accountid:5bb6808b9ba2930990f81895] 

[~accountid:607e27ab074a0b006a588a51] pointed this was first seen in [https://jenkins-ci.internal.sifive.com/job/fed/job/Post-Merge-Short/3538/|https://jenkins-ci.internal.sifive.com/job/fed/job/Post-Merge-Short/3538/]

Three MAL fixes were checked in

* [#25050|https://github.com/sifive/federation/pull/25050]
* [#25092|https://github.com/sifive/federation/pull/25092]
* [#24951|https://github.com/sifive/federation/pull/24951]

I’m trying to revert these and determine the causing commit, locally. Will update.","08/Aug/22 8:37 PM;5bb6808b9ba2930990f81895;[~accountid:607e26f781e7b900681be48c] let us know what your experiments show to find the likely commit.

I see the correct inputs to the branch instruction, which are not from a load.  The {{bgeu}} should be taken, but instead if falls through (is not taken).

I’m guessing this is from [https://sifive.atlassian.net/browse/MAL-2331|https://sifive.atlassian.net/browse/MAL-2331|smart-link] [https://github.com/sifive/federation/pull/25092|https://github.com/sifive/federation/pull/25092|smart-link], but I’ll wait for [~accountid:607e26f781e7b900681be48c] to confirm.","09/Aug/22 5:29 AM;607e26f781e7b900681be48c;[~accountid:5bb6808b9ba2930990f81895] , reverting the three PRs I mentioned didn’t work. I had to look beyond. [https://github.com/sifive/federation/pull/25048|https://github.com/sifive/federation/pull/25048|smart-link]  seems to be causing this failure. The mismatch didn’t happen on commit before this. ","09/Aug/22 9:23 AM;5bb6808b9ba2930990f81895;That’s strange, [https://github.com/sifive/federation/pull/25048|https://github.com/sifive/federation/pull/25048|smart-link] was a TGV fix, and should not have affected P550 (no TGV).","10/Aug/22 8:04 AM;607e26f781e7b900681be48c;[~accountid:5bb6808b9ba2930990f81895] My thoughts exactly. Also, this failure is seen on other configs not only p550. I’m reassigning this back to you. ","10/Aug/22 8:49 AM;5bb6808b9ba2930990f81895;I see the correct inputs to the branch instruction, which are not from a load. The {{bgeu}} should be taken, but instead if falls through (is not taken).

[~accountid:5acffeafaa802f2a797a955c] can someone in the IFU or IEX please take a look at this?","10/Aug/22 9:06 AM;5acffeafaa802f2a797a955c;[~accountid:607e26f781e7b900681be48c] Wait, are you saying you see this same sort of failure on Bullet also?","10/Aug/22 9:16 AM;607e26f781e7b900681be48c;[~accountid:5acffeafaa802f2a797a955c] My bad, I meant other config than p550. ",10/Aug/22 9:59 AM;5acffeafaa802f2a797a955c;[~accountid:607e26f781e7b900681be48c] [~accountid:5bb6808b9ba2930990f81895] Do either of you have a waveform that I can look at?  I appear to be having trouble reproducing this failure,10/Aug/22 10:39 AM;607e26f781e7b900681be48c;Dump is available at {{gamma27:/scratch/saurabhs/mallard_master_343/federation/builds/coreip_p550/sim/sim/PC_mismatch.outline/sting_StingInstMemTuple_T_0366/sting/sifive/branches/br_waw_ld_shadow.conf}},"10/Aug/22 11:34 AM;5acffeafaa802f2a797a955c;It looks like this was introduced with this PR: [https://github.com/sifive/federation/pull/25049|https://github.com/sifive/federation/pull/25049|smart-link] 

[~accountid:624f6b22f813eb00692ee29a] The {{bgeu}} instruction is followed by {{c.mv}}, and the pair of instructions was converted into a conditional move operation.  The {{bgeu}} dispatches with GID 0xe and executes before the {{c.mv}} can dispatch with GID 0xf.  So what happens is that the branch sets the {{predFalse}} bit for GID 0xf, then the {{predFalse}} bit gets cleared when the {{c.mv}} dispatches.

Before your changes, {{predFalse}} gets cleared when an ROB entry retires or gets flushed.  After your changes, it gets cleared when an instruction dispatches to that ROB entry.  The conditional move case is special because the branch can execute before the move dispatches.","11/Aug/22 9:38 AM;624f6b22f813eb00692ee29a;Scenario and origin of the fail is as described by Josh

I just merged the fix in master (https://github.com/sifive/federation/pull/25259)",19/Aug/22 12:45 PM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;Since this was introduced 2 weeks ago I will mark affectsPreviously = no,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Floating point order reduction hanged due to tag injection failed,[TGV] Floating point order ,Execution Unit ,Floating point,,,MAL-2346,122193,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,8/7/2022 22:59,9/7/2022 17:43,9/28/2022 0:51,8/8/2022 6:26,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"During testing all-0 mask, we encounter {{vfredosum.vs}}/ {{vfwredosum.vs}} hanged.

Reproduce outline:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vfredosum.vs"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vfredosum.vs_Mask-2_Masking-1_Exception-0_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_NoSelfCheck-1_FLMUL-0_NonzeroVstart-1_VstartPercent-10_Sample-100_LMUL-1_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 895794063
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Kira Tsao,Nicolas Brunie,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2237,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-08T06:09:34.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00g3b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][Tech-debt] adding vector divider asserts to catch division hanging,,,,,,MAL-2345,122168,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/6/2022 20:38,8/6/2022 20:39,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"I was pretty sure this task already existed, but couldn’t find it",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00fxz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV][Tech-debt] adding permute engine assert to detect stalls,,,,,,MAL-2344,122167,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/6/2022 20:36,8/6/2022 20:39,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00fxr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Assertion failed: LTB doesn't reserved the right number of entries,[TGV] Assertion failed : LTB,LSU (Load Store Unit),,,,MAL-2343,122148,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Yohann Rabefarihy,61730c9cbcb57400683f15a6,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,8/5/2022 15:21,9/7/2022 17:43,9/28/2022 0:51,8/11/2022 5:34,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"cc: [~accountid:5fd15143b4a74900763834e0] if you have time, please, take a look

{noformat}2022-08-05T12:57:42-0700: Compiling simulator testbench /scratch/sols/tgv3/federation/builds/8cf96a28e87_sfc/coreip_u8_minimal_vector/sim/vcs.program.uvm.waves.xprop.2310fdf48bc168fc1262bfbd2de07619
2022-08-05T13:03:44-0700: Finished compiling simulator testbench /scratch/sols/tgv3/federation/builds/8cf96a28e87_sfc/coreip_u8_minimal_vector/sim/vcs.program.uvm.waves.xprop.2310fdf48bc168fc1262bfbd2de07619
2022-08-05T13:03:44-0700: Running test sim/tgv_vle-vse.outline/vector/vle-vse
=== sitest found errors in test sim/tgv_vle-vse.outline/vector/vle-vse:
Reset m_pl2_mmc_inner_agents  c8
Error: ""/scratch/sols/tgv3/federation/builds/8cf96a28e87_sfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LoadBuffer_assert.sv"", 51: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.bal.ltb.SiFive_LoadBuffer_assert_0: at time 251462500 ps
Assertion failed: LTB doesn't reserved the right number of entries

    at LoadBuffer.scala:223 assert(PopCount(io.vltb_lstrVecFreeNdxVec(ls)) === io.lstrVec_vltbClaim(ls).bits + 1.U, ""LTB doesn't reserved the right number of entries"")


Fatal: ""/scratch/sols/tgv3/federation/builds/8cf96a28e87_sfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LoadBuffer_assert.sv"", 60: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.bal.ltb.SiFive_LoadBuffer_assert_0: at time 251462500 ps{noformat}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vle-vse"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Command:

{noformat}time make useSFC=1 sim && cd sim && time ./sitest @../../../../test-outlines/tgv_vle-vse.outline -j2 --wave=fsdb --local --skip-duplicate-test-check --force-single-build{noformat}

Waveform: gamma11:/scratch/sols/tgv3/federation/builds/8cf96a28e87_sfc/coreip_u8_minimal_vector/sim/sim/tgv_vle-vse.outline/vector/vle-vse",Alexandre Solomatnikov,David Kravitz,John Ingalls,Yohann Rabefarihy,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/0c5609db754e6f8a0d0261a3b3029949c61d60dc,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-19T10:15:20.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00ftj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,41:30.6,"10/Aug/22 5:41 AM;61730c9cbcb57400683f15a6;PR is up : [https://github.com/sifive/federation/pull/25224|https://github.com/sifive/federation/pull/25224|smart-link] 

this was an issue with the computation of the number of uop needed inside the agu.

Since we only have the VL inside the payload (no VL forwarding to the LSU for now) the PR also update vle-vse test in order to use vsetivli meanwhile.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Store & Load data mismatch later in MAL-2334 because bypass is missing baler,[TGV] Store & Load data mismatch MAL-2334,LSU ,Baler,,,MAL-2342,122146,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/5/2022 14:47,9/7/2022 17:43,9/28/2022 0:51,8/16/2022 8:17,,,,,,,,,,,,,TGV_RTL/BAL,TGV_RTL/RDU,,,,,,,,0,TGV,,,"After taking care of the initial [https://sifive.atlassian.net/browse/MAL-2334|https://sifive.atlassian.net/browse/MAL-2334|smart-link] issue, and getting all the other Baler bug fixes recently checked in, there’s another cosim mismatch later in the test.

Haven’t root caused it yet, but want a ticket to help with tracking.



{noformat}[COSIM-ERROR][0] COSIM VS RTL WRDATA MISMATCH
[COSIM-ERROR][0] COSIM VS RTL WRINFO MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [444605] InstInfo:
VLD=1 | PC=0x000000080400b6f0 | INSN=0x0202f207 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r4=0xb577820e586efb2d9c0da49f44403a47 mask=ffff | READY=1 | CSR_TIMER=444605 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080000400 | MCAUSE=0x000000000000000b | VSTART=0 | VL=2 | SEW=64 | LMUL=m1 | VSEGELT=0
[COSIM-ERROR][0] m_cosim_inst_info:
VLD=0 | PC=0x000000080400b6f0 | INSN=0x0202f207 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r4=0xd8bd50488ca96437d8bd50386de1be87 mask=0000
Pending PC in the Instruction Queue: 2
[0][444605] InstInfo: VLD=1 | PC=0x000000080400b6f4 | INSN=0x204012b7 | INST_DST=INT | REDUCTION = false | WR: en=false r5=0x0000000000000000 mask=ff | READY=0 | CSR_TIMER=444605 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080000400 | MCAUSE=0x000000000000000b | VSTART=0 | VL=2 | SEW=64 | LMUL=m1 | VSEGELT=0
[0][444605] InstInfo: VLD=1 | PC=0x000000080400b6f8 | INSN=0x6002829b | INST_DST=INT | REDUCTION = false | WR: en=true r5=0x0000000020401600 mask=ff | READY=0 | CSR_TIMER=444605 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080000400 | MCAUSE=0x000000000000000b | VSTART=0 | VL=2 | SEW=64 | LMUL=m1 | VSEGELT=0{noformat}",Alexandre Solomatnikov,Brad Wu,David Kravitz,John Ingalls,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,62103777eb2978006893b778,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2362,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,08/Aug/22 3:54 PM;sols;MAL-2342.png;https://sifive.atlassian.net/secure/attachment/75533/MAL-2342.png,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/c41fada4a845e5d3782d2575557af19a15d3e164,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-08-15T21:21:51.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/9f3e2db57e661a374066d0fbda1fd848b3337702,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i00ft3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,see MAL-2334,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,08:22.7,"06/Aug/22 11:08 AM;5bb6808b9ba2930990f81895;Which test, commit, and steps to reproduce?  I’ve fixed a couple bugs lately in the area of address generation in/after unrolling ops in the LSTPipe, which appeared with similar syndromes to this one.  The latest was [https://sifive.atlassian.net/browse/MAL-2332|https://sifive.atlassian.net/browse/MAL-2332|smart-link].","06/Aug/22 8:01 PM;5fd15143b4a74900763834e0;Pretty sure we’re sending the wrong data out, and I’ll update when closer to root causing. I have the waves, which were generated with [https://sifive.atlassian.net/browse/MAL-2334|https://sifive.atlassian.net/browse/MAL-2334|smart-link]'s same commit plus cherry-picks of the PRA fix and something else I can’t recall at the moment. Will let you know if there’s any suspicions about the problem being in the LSU.","08/Aug/22 7:49 AM;5fd15143b4a74900763834e0;[~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] what I see is that a {{vwmaccsu.vv}} instruction is going to write {{v4}} which is {{prIdx = 0x6a}} at this time. The VEX pipe broadcasts that tag on {{exPipeTag_5_0_0}} at 8,891,822,500, which is the exact same cycle the store uop ({{vse64.v v4, (t0)}} @ PC=80400b6e4) gets sent from VRDU DIS into the Baler issue queue.

All that is fine, except when the read request comes out of the Baler to the VRF, the {{prIdx}} is correct, but {{balVexPrfReadReq_ISS.valid}} is not asserted, so the VRF returns junk and not the correct value. Based on this code (Baler.scala, lines 234++) …

{noformat}  val srcTag = balerIssQ.io.issReq_ISS.bits.srcInfo(0).tag
  io.balVexPrfReadReq_ISS.map {
    _ := Pipe(balerIssQ.io.issReq_ISS.valid && srcTag.valid && srcTag.ready, srcTag.prIdx, 0)
  }{noformat}

{{srcTag.ready}} is not true when that uop issues. I don't know if the problem is that {{srcTag.ready}} should not be in the map, or if the issue queue should be setting {{ready}} in the issue queue entry, or if there’s another possibility. Bouncing to you for a decision on that.

Created [https://github.com/sifive/federation/tree/MAL-2342|https://github.com/sifive/federation/tree/MAL-2342|smart-link] so you can see what I’m seeing. This is {{coreip_p670}}compiled with SFC. The outline file is in {{/work/nicolasb/tgv_bug_outlines/sting/MAL-2342.outline}}and a waves file is in {{/home/davidk2/waves/MAL-2342.rc}}","08/Aug/22 3:54 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;[~accountid:5fd15143b4a74900763834e0] it looks like something is wrong with PRA because in this case PRA should set {{srcTag.ready}} to 1 but it doesn’t:

!MAL-2342.png|width=893,height=796!

I don’t understand why there are 2 PRA ports for baler but baler issue queue has only 1 input port (connected to the dispatch buffer).",08/Aug/22 3:57 PM;5fd15143b4a74900763834e0;LTB PRA is sized as {{nBalPipes}}. What should it be instead?,08/Aug/22 3:59 PM;5fd15143b4a74900763834e0;Isn’t this a store? Stores should look at the main/mask PRA to determine readiness of their operands.,"08/Aug/22 4:02 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;Yes, it is for vector store and in this case it is from {{vexPra}}:

{noformat}  // Main PRF info
  val vexPra   = Module(
    new PRA(
      nEnt         = tp.vPRs,
      nRead        = (tp.nVexPipes * tp.nVSrcs) + (tp.nBalPipes * tp.nBalerSrcs),{noformat}

I think the number of PRA ports for the baler should be equal to the number of ports from dispatch buffer to the baler issue queue.

Right now I see there is only 1 such port in Verilog.","08/Aug/22 4:05 PM;5fd15143b4a74900763834e0;None of that is logic I touched. I only built the LTB PRA so far. Increase the number of vexPra ports to be what they should be

But a question: why aren’t sources marked {{.ready}} when they issue from the Baler issue queue? Like, it the uop goes in there well before its source is ready, what will the Baler issue queue do? Basically, why is {{srcTag.ready}} part of the VEX read {{.valid}} equation? Isn’t the fact that the uop is issuing “proof” that the source is ready?","08/Aug/22 4:11 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;According to [~accountid:5acffeafaa802f2a797a955c] :

{quote}That ready bit means that the value is in the PRF, not on the bypass network.

The PRA is one source of that information.  If the PRA says that it is ready, then we’ll remember that.  Otherwise we’ll wait until we see the tag broadcast, and when the value makes it to the WB stage, we set the source ready bit.{quote}","08/Aug/22 4:16 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;The value for vector store should be from bypass from vector divide.

Is bypass implemented for the baler?",08/Aug/22 4:56 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;Bypass is not implemented because {{vexPipeFwdData}} is not connected to anything in the baler.,08/Aug/22 5:20 PM;5fd15143b4a74900763834e0;There wasn’t anything to connect it to until the store buffer was built,"08/Aug/22 5:24 PM;5fd15143b4a74900763834e0;btw, it looked to me like the data should be coming from a {{vwmaccsu.vv}} instruction, not the divider, but that was so this morning.","08/Aug/22 5:26 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;{quote}There wasn’t anything to connect it to until the store buffer was built{quote}

Bypass logic is independent of functional units in VEX.","08/Aug/22 5:28 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;{quote}btw, it looked to me like the data should be coming from a {{vwmaccsu.vv}} instruction, not the divider, but that was so this morning.{quote}

The last instruction that writes {{v25}} is {{vdivu.vv}}:

{noformat}C                   0:     195765 [1] pc=[00000002020e26fe] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[82492cd7] vdivu.vv v25, v4, v18
C                   0:     195763 vrf[25]=[ffffffffffffffffffffffffffffffff][ffff]

C                   0:     195843 [1] pc=[00000002020e276e] W[r 0=0000000000000000][0] R[r 5=0000000020010e00] R[r 0=0000000000000000] inst=[02028ca7] vse8.v  v25, (t0)
Error: Instruction-by-Instruction check failed
C                   0:     195955 [1] pc=[00000002020e277a] W[r 0=0000000000000000][0] R[r 5=0000000020010e00] R[r 0=0000000000000000] inst=[02028c87] vle8.v  v25, (t0)
C                   0:     195953 vrf[25]=[88e7dd9288e7dd92ffe7dd92ffe7dd92][ffff]{noformat}","08/Aug/22 5:34 PM;5fd15143b4a74900763834e0;In my run it was {{v4}} and the {{vwmaccsu}}.

I understand bypass logic is independent of VEX functional units. I’m saying there was noplace in the Baler for the bypass data to connect to until you build the store buffer. Where was it supposed to go before that?","08/Aug/22 5:41 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;Maybe, it is the diff between SFC and MFC.

We should stop using MFC until they make it usable.

Bypass output could be left unconnected, just like PRF read response was unconnected.","08/Aug/22 5:53 PM;5fd15143b4a74900763834e0;If we don’t use bypass, do some of the tag broadcasts into Baler need to be tied off?","08/Aug/22 6:01 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;{quote}If we don’t use bypass, do some of the tag broadcasts into Baler need to be tied off?{quote}

I think it is better to implement bypass as in VexPipe: [https://github.com/sifive/federation/blob/c41fada4a845e5d3782d2575557af19a15d3e164/block-tgv-sifive/src/main/scala/core/tgv/VexPipe.scala#L351|https://github.com/sifive/federation/blob/c41fada4a845e5d3782d2575557af19a15d3e164/block-tgv-sifive/src/main/scala/core/tgv/VexPipe.scala#L351]","08/Aug/22 6:02 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;It is better to implement bypass in the baler itself, so the output of bypass can be used for both vector loads and stores.","08/Aug/22 6:13 PM;5fd15143b4a74900763834e0;Not 100% certain, but I thought load data was getting into the bypass network for VEX operations. But maybe load → store bypassing would be different (and useful for memcpy)?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV]: tail elements not updated correctly for vrgatheri16 with TA=0 (Undisturbed),[TGV]: tail elements vrgatheri16,Execution Unit ,Vector,,,MAL-2341,122138,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/5/2022 12:04,9/7/2022 17:43,9/28/2022 0:51,8/7/2022 20:56,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"\[COSIM-ERROR]\[0] m_dut_inst_item: \[188698] InstInfo: VLD=1 | PC=0x0000000080003a34 | INSN=0x3a260357 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r6=0x00000000000000000000800080008000 mask=ffff | READY=1 | CSR_TIMER=188698 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x000000008000c070 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=6 | SEW=8 | LMUL=m2 | VSEGELT=0
\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x0000000080003a34 | INSN=0x3a260357 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r6=0xe045a954ca1ad2be8755800080008000 mask=003f



*Debug-Info*

Here tail policy is Undisturbed, But Design filling all tail elements with 0x00

Here previous value:
v 6 0xe045a954ca1ad2be87554476bd6033ae
v 2 0xd0239cf48165168047e51b2f367dc220
v12 0x000000002f1853a2000004a000016b42



core 0: 0x0000000080003a30 (0xc0137057) vsetivli zero, 6, e8, m2, tu, mu //Undisturbed
core 0: 0x0000000080003a34 (0x3a260357) vrgatherei16.vv v6, v2, v12 //VL=6
core 0: 3 0x0000000080003a34 (0x3a260357) e8 m2 l6 v 6 0x*e045a954ca1ad2be8755*800080008000

But Design filled all tail elements to 0x00
C 0: 188698 \[1] pc=\[0000000080003a34] W\[r 0=0000000000000000]\[0] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[3a260357] vrgatherei16.vv v6, v2, v12
C 0: 188696 vrf\[ 6]=\[*00000000000000000000*800080008000]\[ffff]

*Config::* coreip_u8_minimal_vector
*SHA::* 0a5a53ca7a8a5864723c3ec91bdda1feed6a00e4
*Waves::* gamma26:: /scratch/naveenr/july-4/federation/builds/coreip_u8_minimal_vector/sim/sim/rat.outline/rat_default_T_0993/rat/default
*rerun.outline::*



{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": [
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+verbose""
],
""subdir"": ""rat_default_T_0993"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 3626369528
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



*Outline copied into:* {{/work/nicolasb/tgv_bug_outlines/rat/MAL-2341.outline}}",Naveen Rathore,Nicolas Brunie,,,,,,,,,,,,,,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0a5a53ca7a8a5864723c3ec91bdda1feed6a00e4,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/b9dddbb3b96a1c54a51c7c21fa71bc5cf3ca0ecc,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i00frb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,43:12.5,"05/Aug/22 12:43 PM;6065017e90e3950069cf01c5;I think it may have been fixed by [https://github.com/sifive/federation/pull/25117|https://github.com/sifive/federation/pull/25117|smart-link]  (for MAL-2333)

I cannot reproduce with a master branch with this latest fix, I am going to try to backport the fix to the sha1 reported here and update the ticket accordingly.",05/Aug/22 2:12 PM;6065017e90e3950069cf01c5;confirmed [https://github.com/sifive/federation/pull/25117|https://github.com/sifive/federation/pull/25117|smart-link]  fixes the issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU performance: L1MSHR clearing its reusable and retiring just before being reused,,,,,,MAL-2340,122137,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,8/5/2022 11:48,9/16/2022 17:13,9/28/2022 0:51,9/2/2022 16:07,,,,,,,,,,,,,Performance,RTL/LSU,,,,,,,,0,,,,"[https://sifive.atlassian.net/browse/SPARTA-1944|https://sifive.atlassian.net/browse/SPARTA-1944|smart-link] highlighted a scenario where a L1MSHR is about to be reused, but because we are over the {{mshrKeeper_overThreshold}}, the mechanisms from the LSTPipe to prevent this are overridden.  This leads to the LSTPipe establishing a new MSHR with a dependency on the retiring MSHR, also preventing fast return.

We can move {{io.mshrKeeper_overThreshold}} around in {{mshrE_clearReusable_in}} to still be qualified by {{io.lstr/lstm_mshrEntryVAHashIdxCxtMatchMightReuse}}.

We can also try making a related fix in {{mshrE_reqDirtyWriteBack}} around the {{io.mshrCleaning_overThreshold}}, to help further after [https://sifive.atlassian.net/browse/MAL-2142|https://sifive.atlassian.net/browse/MAL-2142|smart-link].",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,MAL-2336,MAL-1303,MAL-2142,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1202,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Load/Store,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{repository={count=8, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":8,""lastUpdated"":""2022-09-01T19:32:19.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":8,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25804,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,3,1,,,,100,,,,,,,,,,,,,,,2|i00fr3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[FPU] measure IEX multiplier power on Coremark bench,,,,,,MAL-2339,122130,120494,Sub-task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Won't Do,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/5/2022 10:18,9/21/2022 10:58,9/28/2022 0:51,8/22/2022 13:07,,,,,,,,,,,,,Power,RTL/IEX,,,,,,,,0,,,,[https://sifive.atlassian.net/wiki/spaces/CIP/pages/2313453576/PD+study+15+P550+and+P650+2-cycle+integer+MUL|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2313453576/PD+study+15+P550+and+P650+2-cycle+integer+MUL|smart-link]  shows power measurement on the Dhrystone benchmark. [~accountid:5e1371705361330daaeaf389] is suggesting Coremark may be more interesting. ,Brian Grayson,Mehul Thakkar,Nicolas Brunie,,,,,,,,,,,,,5e1371705361330daaeaf389,622a8208db58c100687dd15a,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2198,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00fpj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,21:12.2,"05/Aug/22 10:21 AM;5e1371705361330daaeaf389;To be clear, on Dhrystone, there is only one multiply, and the inputs are always the same, and Josh latches the inputs, so there is effectively ZERO dynamic power in the multiplier when running Dhrystone.

CoreMark does a lot more dynamically-different multiplies, and would be a better reflection of the power impact of 2-cycle vs. 3-cycle IMUL.",22/Aug/22 1:01 PM;622a8208db58c100687dd15a;why it's assigned to me ? [~accountid:61ccb01d90cfd20071b96af2] after last 1:1 i thought you are already running Coremark. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,120494,Investigate IEX multiplier power optimizations (for 3 to 2-cycle IEX MUL change),Done
[TGV]:: Vector load store forwarding:: Vector Load is getting wrong data(PC=0x887036a4),[TGV]:: Vector load store forwarding,LSU (Load Store Unit),,,,MAL-2338,122080,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,David Kravitz,5fd15143b4a74900763834e0,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/5/2022 3:29,9/7/2022 17:43,9/28/2022 0:51,8/5/2022 7:13,Panda DR,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"*Error::*
\[COSIM-ERROR]\[0] m_dut_inst_item: \[585951] InstInfo: VLD=1 | PC=0x00000000887036a4 | INSN=0x0202d087 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r1=0xcfa3a3911ffd6f22cfa3a3911ffd*6f22* mask=ffff | READY=1 | CSR_TIMER=585951 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080000400 | MCAUSE=0x000000000000000b | VSTART=0 | VL=8 | SEW=16 | LMUL=m1 | VSEGELT=0
\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x00000000887036a4 | INSN=0x0202d087 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r1=0x99164333e49163828db74421a059*657e* mask=0000
sifive_test_results_pkg::set@(t=11721413000): Test Result Setting for Index ID \[3] Done \[1] Success \[0] Exit Code \[13107]



Debug-trace::
core   0: 0x0000000088703698 (0x0202d0a7) *vse16.v v1, (t0)*
core   0: 3 0x0000000088703698 (0x0202d0a7) e16 m1 l8 mem 0x0000000040010200-0x0000000040010200 *0x657e* mem 0x0000000040010202-0x0000000040010202 0xa059 mem 0x0000000040010204-0x0000000040010204 0x4421 mem 0x0000000040010206-0x0000000040010206 0x8db7 mem 0x0000000040010208-0x0000000040010208 0x6382 mem 0x000000004001020a-0x000000004001020a 0xe491 mem 0x000000004001020c-0x000000004001020c 0x4333 mem 0x000000004001020e-0x000000004001020e 0x9916

core   0: 0x00000000887036a4 (0x0202d087) *vle16.v v1, (t0)*
core   0: 3 0x00000000887036a4 (0x0202d087) e16 m1 l8 v 1 0x99164333e49163828db74421a059*657e* mem 0x0000000040010200-0x0000000040010200 mem 0x0000000040010202-0x0000000040010202 mem 0x0000000040010204-0x0000000040010204 mem 0x0000000040010206-0x0000000040010206 mem 0x0000000040010208-0x0000000040010208 mem 0x000000004001020a-0x000000004001020a mem 0x000000004001020c-0x000000004001020c mem 0x000000004001020e-0x000000004001020e


*SHA::  0a5a53ca7a8a5864723c3ec91bdda1feed6a00e4*
*Config:*  coreip_u8_minimal_vector
*rerun.outline:*
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""sting"",
""raw_plusargs"": \[
""+cosim_scoreboard_trap_epc_count=128"",
""+cosim_scoreboard_stall_time=1000000"",
""+axi_mem_latency_cycles=40"",
""+axi_mem_dither_cycles=200"",
""+amba_vip_select=2"",
""+gdi_amba_test_enable=1"",
""+gdi_tlc_test_enable=1"",
"""",
""+verbose""
],
""subdir"": ""sting_StingSiFiveTuple_T_0153"",
""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 1794549098
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""reset_vector_scheme"": ""first_mem_periph_sys""
},
""uvm"": {
""set_config_string"": \[
""uvm_test_top,torture_read_inbound,10101010:80808080"",
""uvm_test_top,torture_inbound,10101010:80808080""
],
""testname"": ""torture_test""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))



*Waves::*
gamma26:: //scratch/naveenr/july-4/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline_sting_wrdata_mismtach_1/sting_StingSiFiveTuple_T_0153/sting/sifive/vector/vector_tgv_dev.conf//waves.fsdb
",David Kravitz,Naveen Rathore,,,,,,,,,,,,,,5fd15143b4a74900763834e0,6235105a3eacc50071ff07ec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0a5a53ca7a8a5864723c3ec91bdda1feed6a00e4,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00fbr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,13:00.3,"05/Aug/22 7:13 AM;5fd15143b4a74900763834e0;I replicated the failing case, which then passed after cherry-picking the commits for MAL-2325.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Predict when it's okay to avoid reading the NLP to save power,,,,,,MAL-2337,122044,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Jeffrey Huang,627586097de1ec00695bca96,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/4/2022 15:09,9/23/2022 7:31,9/28/2022 0:51,,,,,,,,,,,,,,Power,RTL/Frontend,,,,,,,,0,,,,"In the IFU, the NLP burns the most dynamic power behind the ICache Data Array.  To reduce dynamic power, it is desirable to avoid reading the NLP as much as possible.

There are probably a couple ways to achieve this. One idea is to predict when we won’t see an NLP hit on the next fetch.  We already do something similar with the BDP by storing a bit in the NLP to indicate that when that NLP entry was trained, the target fetch group of the NLP branch/jump did not have any conditional branches.

We can do something similar with the NLP by adding a bit to the NLP entry indicating that after we hit that NLP entry, the target fetch group did not see another NLP hit.

Since the NLP is now split up into separate tag and data arrays, we can be a little bit more careful by only gating off the read of the data array.  If we still read the tag array, we can detect when the “no NLP hit at the target of this entry” bit is wrong and correct it.",Brian Grayson,Chia-I Chen,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,,,,,,,,,,5e1371705361330daaeaf389,61aaafab977c5b007241043c,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2076,,,,,,,,,,,,,,,,,,,,,,,,,,Branch Prediction,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-26T12:26:44.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1,,,,,,,,,,,,,,,,,,,2|i00f3r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,2,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,29/Aug/22 12:50 PM;5acffeafaa802f2a797a955c;I’m going to reassign to [~accountid:627586097de1ec00695bca96] for now,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
LSU performance: LSTM dependency on adjacent pipe reusable MSHR next-establish,,,,,,MAL-2336,122043,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,8/4/2022 15:07,9/1/2022 19:43,9/28/2022 0:51,8/5/2022 11:40,,,,,,,,,,,,,Performance,RTL/LSU,,,,,,,,0,,,,"[https://sifive.atlassian.net/browse/SPARTA-1944|https://sifive.atlassian.net/browse/SPARTA-1944|smart-link] highlighted a scenario where adjacent pipelines LSTM stages could create a false MSHR dependency {{lstm_mshrWaitForDependency}} blocking data return when

# LSTM#0 is unable to claim a MSHR, and
# LSTM#0 is reusing a MSHR (already existing or establishing from LSTO), and
# LSTM#1 wants to reuse the same MSHR as LSTM#0.

This was introduced in [https://sifive.atlassian.net/browse/MAL-673|https://sifive.atlassian.net/browse/MAL-673|smart-link], although the timing need was additional fixed later in [https://sifive.atlassian.net/browse/MAL-717|https://sifive.atlassian.net/browse/MAL-717|smart-link].",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,MAL-717,,,,MAL-2340,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-673,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Load/Store,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=4}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":4,""lastUpdated"":""2022-09-01T19:01:44.000-0700"",""stateCount"":4,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":4,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25095,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,4,0,,,,100,,,,,,,,,,,,,,,2|i00f3j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,2,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Add better clock gating for NLP flop arrays,,,,,,MAL-2335,122033,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Jeffrey Huang,627586097de1ec00695bca96,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/4/2022 14:18,9/26/2022 10:28,9/28/2022 0:51,,,,,,,,,,,,,,Power,RTL/Frontend,,,,,,,,0,,,,"This was partially addressed in [https://sifive.atlassian.net/browse/MAL-2300|https://sifive.atlassian.net/browse/MAL-2300|smart-link] but, there is another flop array for the nlpTargetNoBr hint bit which could probably also benefit from creating common clock enables for groups of entries.  I can see from a synthesis run that the tool is creating one clock gate for the entire flop array.",Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=DECLINED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-04T19:50:38.000-0700"",""stateCount"":1,""state"":""DECLINED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00f1b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Sep/22 8:27 AM;5acffeafaa802f2a797a955c;Note that this could also be affected by the move to CIRCT 1.16.0, because they are changing the way that the verilog gets generated to (hopefully) help with inferred clock gating. [https://github.com/sifive/federation/pull/26304|https://github.com/sifive/federation/pull/26304|smart-link]

Instead of verilog like this:


{noformat}always @(posedge clock) begin
  flop_q <= enable ? flop_d : flop_q 
end{noformat}

We should be getting verilog more like this (which is the pattern that most tools recognize for inferring clock gating)

{noformat}always @(posedge clock) begin
  if (enable)
    flop_q <= flop_d
end{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] Baler sending bogus tag broadcasts to VEX,[TGV] Baler sending bogus VEX,LSU ,Baler,,,MAL-2334,122029,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,Zhiqiang Hao,5d02d411febd110bc78aabc3,Zhiqiang Hao,5d02d411febd110bc78aabc3,8/4/2022 12:10,9/23/2022 11:11,9/28/2022 0:51,8/5/2022 14:52,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"Commit: {{c3d2229e2558baca7f6101012052ecb825394017}}

Config: {{coreip_p670}}

Rerun:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0198"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 649275185
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}





Code:

{noformat}core   0: 0x0000000400987382 (0x060a1057) vfredusum.vs v0, v0, v20
e32 m1 l4{noformat}

v20\[0] = 0xd7985a53 = -3.35027749519e+14, this is the major element of this run

v0\[0] = 0xcd9d221a (-329532224.0) 0x924a6dc1 (-6.3875243276e-28) 0x9e1a34b8 (-8.1635940993e-21) 0x4929b704 (695152.25)



So the result should be closed to v20\[0]



On RTL:

{noformat}C                   0:     146519 vrf[ 0]=[cd9d221a924a6dc19e1a34b8f151a5ae][ffff]{noformat}

So RTL gives out the result {{0xf151a5ae}}, which is {{-1.03812258407e+30}}, and it’s far more smaller than v20\[0]",Brad Wu,David Kravitz,Kira Tsao,Nicolas Brunie,Zhiqiang Hao,,,,,,,,,,,62103777eb2978006893b778,5fd15143b4a74900763834e0,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,04/Aug/22 11:26 PM;ug:57c1528d-c032-4679-8e67-960f3039970a;image-20220805-061906.png;https://sifive.atlassian.net/secure/attachment/75435/image-20220805-061906.png,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-05T14:48:38.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/c41fada4a845e5d3782d2575557af19a15d3e164,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00f0f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,39:32.7,"04/Aug/22 8:39 PM;5e1a4f5ec578120daca5ff8e;The title of this Jira is wrong, this is un-order reduction. [~accountid:62103777eb2978006893b778] is going to take a look.","04/Aug/22 11:26 PM;62103777eb2978006893b778;Hi [~accountid:6065017e90e3950069cf01c5] , I think this issue is caused by temp register index assignment of vfredusum.

The reduction sequencer generated 3 uOps for {{vfredusum.vs v0, v0, v20}}

# vadd tmp0, v0, v0
# vadd tmp0, tmp0, tmp0  (RAW + WAW to uop1)
# vadd v0, tmp0, v20          (RAW to uop2)

uop2 need to wait for uop1 finished before it could be issued because of WAW dependency, but uop3 could be issued as soon as uop1 broadcasted tmp0.

Maybe tuning tmp index assignment could solve this issue?

!image-20220805-061906.png|width=1596,height=468!



Update: After further investigation, uop3 is waken up by baler. I’m still look into it because the instructions sequence does not have any vector load store.","05/Aug/22 2:47 AM;6065017e90e3950069cf01c5;{{tmp0}} is renamed so uop3 should be waken up by uop2 and not uop1.

I like the Baler track better, maybe a tagID problem or a valid problem",05/Aug/22 3:44 AM;62103777eb2978006893b778;It’s the problem that Baler’s {{balVexPipeTag_ISS.valid}} does not qualify {{balerIssQ.io.issReq_ISS.bits.destInfo(0).valid}}. So that is not the bug from the reduction sequencer. Sorry [~accountid:6065017e90e3950069cf01c5] .,"05/Aug/22 3:47 AM;6065017e90e3950069cf01c5;No problem [~accountid:62103777eb2978006893b778] , I am sure there are bugs in the reduction sequencer too, we just need to use it more.

Thank you for taking care of this task.",05/Aug/22 4:39 AM;5fd15143b4a74900763834e0;Should I take over from here?,"05/Aug/22 4:57 AM;62103777eb2978006893b778;[~accountid:5fd15143b4a74900763834e0] Sure.

After the fix (probably wrong): {{balVexPipeTag_ISS.valid            := balerIssQ.io.issReq_ISS.valid && balerIssQ.io.issReq_ISS.bits.destInfo(0).valid}} 

The test still failed at the following {{vse64}} + {{vle64}} instruction. You have more experience to fix these issue than me.","05/Aug/22 2:52 PM;5fd15143b4a74900763834e0;Made the fix as proposed by [~accountid:62103777eb2978006893b778].

Test still failing later. That's been filed as MAL-2342",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vcompress.vm inst not updating all the elements (due to dual tag bcasts conflict),[TGV] vcompress.vm,Execution Unit ,Vector,,,MAL-2333,122027,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,8/4/2022 11:19,9/7/2022 17:43,9/28/2022 0:51,8/5/2022 12:32,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"I see the vcompress.vm instruction is not updating the elements 17-22 in the next vector reg, when mask allows for 22 elements to be updated for the case when vl =64, sew = 8 and lmul =4

the instruction is 

{noformat}core   0: 0x000000008000807e (0x5e84a057) vcompress.vm v0, v8, v9
core   0: 3 0x000000008000807e (0x5e84a057) e8 m4 l64 
v 0 0xf4f4f4500484c0746cf4b40c0406ce9c 
v 1 0x5276a08425cc29e86378f4f4f4f4f4f4{noformat}

and the reg values for v8 and v9 are 

{noformat}v 9 0x5008f4ec4a5cac24780484c080746cd8

v 8 0xb66cf4c8b40cf4800406f4ce9cb8f4dc
v 9 0x5008f4ec4a5cac24780484c080746cd8
v10 0xf4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4
v11 0xf4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4{noformat}

from lower 64 bits of v9 reg, we see that 22 elements are supposed to be updated, and RTL is not updating v1, but undisturbed writes are being made to v2 and v3. 

{noformat}C 0:      90441 vrf[ 0]=[f4f4f4500484c0746cf4b40c0406ce9c][ffff]
C 0:      90442 vrf[ 2]=[00000000000000000000000000000000][ffff]
C 0:      90443 vrf[ 3]=[00000000000000000000000000000000][ffff]{noformat}



To recreate this failure, 

# clone federation and checkout the commit c3d2229e2558baca7f6101012052ecb825394017
# build coreip_u8_minimal_vector and rerun the simulation using the outline 
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.tag_array_.*ext,1,0,32:.*\\.data_arrays_0_.*ext,1,0,32:.*\\.syssram.*ext,1,0,32:.*\\.island.*\\.lim\\.syssram.*ext,1,0,32:.*\\.tagged_tables_0_.*ext,1,0,32:.*\\.base_table_0_.*ext,1,032"",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""rat_default_T_0188"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1965205714
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



the waves are at {{verif00:/scratch/srivatsa/dbg_regr/c3d2229e2558baca7f6101012052ecb825394017/builds/c3d2229e2558baca7f6101012052ecb825394017/coreip_u8_minimal_vector/sim/sim/rerun.outline/rat_default_T_0188/rat/default}}



outline copied into {{/work/nicolasb/tgv_bug_outlines/rat/MAL-2333.outline}}",Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-05T12:32:04.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/b9dddbb3b96a1c54a51c7c21fa71bc5cf3ca0ecc,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00ezz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,20:00.0,05/Aug/22 6:20 AM;6065017e90e3950069cf01c5;[https://github.com/sifive/federation/pull/25117|https://github.com/sifive/federation/pull/25117|smart-link]  should fix the problem,"05/Aug/22 9:09 AM;6065017e90e3950069cf01c5;A few details:

* the bug is that the permute engine tries to forward a result (coming from the permute unit) while a previous result staged in {{resultRF}}, because of a previous tag broadcast conflict, is also trying to broadcast its tag. The staged result has priority and broadcast adequately, but the internal tag broadcast conflict is not detected and the new result is simply dropped.
* The fix consists in detecting both internal and external tag broadcast conflicts and manage them properly, that is staging a new result if it conflicts with an old result tag broadcast",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: unroll causes LSTA wrong address forward from WB stage,LSU: unroll causes LSTA WB stage,,,,,MAL-2332,122024,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,8/4/2022 11:09,8/5/2022 8:16,9/28/2022 0:51,8/4/2022 19:59,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"{noformat}2022-08-03T15:48:23-0700: Running test sim2/tgv_vle-vse.outline/vector/vle-vse
=== sitest found errors in test sim2/tgv_vle-vse.outline/vector/vle-vse:
Reset m_pl2_mmc_inner_agents  c8
[COSIM-ERROR][0] COSIM VS RTL PC MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [11937] InstInfo: VLD=1 | PC=0x0000000080000a38 | INSN=0x00004505 | INST_DST=INT | REDUCTION = false | WR: en=true r10=0x0000000000000001 mask=ff | READY=1 | CSR_TIMER=11937 | PRV=0 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080000d00 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=4 | SEW=32 | LMUL=m1 | VSEGELT=0

[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000080000a2a | INSN=0x00004505 | INST_DST=INT | REDUCTION = false | WR: en=true r4=0x0000000000000001 mask=ff

sifive_test_results_pkg::set@(t=245313000): Test Result Setting for Index ID [3] Done [1] Success [0] Exit Code [13107]{noformat}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vle-vse"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

{noformat}time make useSFC=1 sim && cd sim && time ./sitest @../../../../test-outlines/tgv_vle-vse.outline -j2 --wave=fsdb --local --skip-duplicate-test-check --force-single-build{noformat}

Waveform: gamma11:/scratch/sols/tgv4/federation/builds/d820ac45550/coreip_u8_minimal_vector/sim/sim2/tgv_vle-vse.outline/vector/vle-vse",Alexandre Solomatnikov,John Ingalls,,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2306,,,,,,,,,,,,,,,,,,04/Aug/22 11:11 AM;sols;MAL-2332.png;https://sifive.atlassian.net/secure/attachment/75417/MAL-2332.png,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/5fe45c645dc7b2f74489f1ea0f10b04a7f457807,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-04T21:20:17.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25101,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00ezb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14:18.3,"04/Aug/22 11:11 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;STB sends correct data to the LSU:

!MAL-2332.png|width=1952,height=429!","05/Aug/22 8:14 AM;5bb6808b9ba2930990f81895;while this was found in a TGV test, it can also occur in a scalar core behind an unrolling-then-faulting misaligned",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Create clock gate for RAS array,,,,,,MAL-2331,121982,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/3/2022 22:10,8/8/2022 20:37,9/28/2022 0:51,8/4/2022 16:07,,,,,,,,,,,,,Power,RTL/Frontend,,,,,,,,0,,,,The RAS array is large enough in P550 and P650 that it probably warrants its own explicit clock gate.,Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2347,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{repository={count=2, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":2,""lastUpdated"":""2022-08-08T23:05:57.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,3325e7ccf559508cda0e40c372f86664073ec89b,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00epz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,04/Aug/22 4:07 PM;5acffeafaa802f2a797a955c;PowerArtist is showing less than 0.1mW improvement on Dhrystone. But I suspect it will be worth a bit more in real PPA.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LTB returning complete to ROB before Load returns data,[TGV] LTB returning complete to ROB,LSU ,,,,MAL-2330,121978,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,David Kravitz,5fd15143b4a74900763834e0,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,8/3/2022 21:16,9/7/2022 17:43,9/28/2022 0:51,8/4/2022 18:40,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"{{p670}}

{noformat}=== sitest found errors in test sim/tgv_vle-vse.outline/vector/vle-vse:
Reset m_pl2_mmc_inner_agents  dc
[COSIM-ERROR][0] COSIM VS RTL WRDATA MISMATCH
[COSIM-ERROR][0] COSIM VS RTL WRINFO MISMATCH

[COSIM-ERROR][0] m_dut_inst_item: [9385] InstInfo: VLD=1 | PC=0x0000000080000966 | INSN=0x0206e087 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r1=0x2f4f7fd42f4f7fd42f4f7fd42f4f7fd4 mask=ffff | READY=1 | CSR_TIMER=9385 | PRV=0 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080000d00 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=4 | SEW=32 | LMUL=m1 | VSEGELT=0

[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000080000966 | INSN=0x0206e087 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r1=0x100f0e0d0c0b0a090807060504030201 mask=ffff

sifive_test_results_pkg::set@(t=190533000): Test Result Setting for Index ID [3] Done [1] Success [0] Exit Code [13107]

Error: ""/scratch/sols/tgv3/federation/builds/8bcf68e32b6_sfc/coreip_p670/verilog/design/assertions/SiFive_LdQEntry_assert.sv"", 411: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LdQ.ldqEntries_0.SiFive_LdQEntry_assert_0: at time 190542500 ps
Assertion failed (verification library): LdQEntry must retire (i.e. complete and resolve) before ROB entry retires  @[LoadQ.scala 2360:16]

Fatal: ""/scratch/sols/tgv3/federation/builds/8bcf68e32b6_sfc/coreip_p670/verilog/design/assertions/SiFive_LdQEntry_assert.sv"", 420: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LdQ.ldqEntries_0.SiFive_LdQEntry_assert_0: at time 190542500 ps{noformat}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vle-vse"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Command:

{noformat}time make useSFC=1 sim && cd sim && time ./sitest @../../../../test-outlines/vtg-tgv-load-store-tests.outline --wave=fsdb --local --skip-duplicate-test-check --force-single-build -j2{noformat}",Alexandre Solomatnikov,David Kravitz,John Ingalls,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2325,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/8bcf68e32b6c4e8505ea0c74634919550e9b1dda,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00ep3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,40:05.9,04/Aug/22 6:40 PM;5bb6808b9ba2930990f81895;this is likely a duplicate of https://sifive.atlassian.net/browse/MAL-2325,"05/Aug/22 6:29 AM;5fd15143b4a74900763834e0;Confirming: I replicated the failing case, which then passed after cherry-picking the commits for [https://sifive.atlassian.net/browse/MAL-2325|https://sifive.atlassian.net/browse/MAL-2325|smart-link].",05/Aug/22 7:13 AM;5fd15143b4a74900763834e0;Duplicate of MAL-2325,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] align p670 VEX configuration (JSON) to plan of record,,,,,,MAL-2329,121976,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/3/2022 20:01,9/21/2022 15:33,9/28/2022 0:51,8/5/2022 12:37,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"[~accountid:5e137458efa19b0e976b5c7a]  pointed out some discrepancies in {{p670}} configuration [https://sifive.slack.com/archives/C01MHGLSZ0D/p1659566640717509|https://sifive.slack.com/archives/C01MHGLSZ0D/p1659566640717509|smart-link]

* units (vector div and mask unit)  repartition

{quote}Correlation has found some differences in which units are on which pipes. I’d like to confirm that what’s coded up in the RTL is POR so I can align Dabble to the RTL. According to this [JSON|https://github.com/sifive/federation/blob/master/specs/design-definitions/tiles/tile_p670.json] in Federation, the vector div unit is on pipe 0 and the vector mask unit is on pipe 1. Dabble currently has the vector div unit on pipe 1 and the vector unit on pipe 0. (edited) {quote}

* {{PRF}} configuration

{quote}Also in that same JSON, it says that the vector RF has 144 entries. Is this POR? Dabble is configured to 128. (edited) {quote}



Using {{p670}}  landing page as single source of truth: [https://sifive.atlassian.net/wiki/spaces/CIP/pages/2164360009/Performance+Architecture+P670+RTL+Performance+Landing+Zone|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2164360009/Performance+Architecture+P670+RTL+Performance+Landing+Zone|smart-link] ",Alexandre Solomatnikov,Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Kathlene Magnus,Knute Lingaard,Nicolas Brunie,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e137458efa19b0e976b5c7a,5e1374fb7a22c90da0c60495,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2686,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-05T12:37:32.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/8cf96a28e87e33053db2cd463ed3a30db5c8c413,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00eon:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Find a way to get PowerArtist to optimize away robOrderNum field,,,,,,MAL-2328,121971,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,François Donati,624f6b22f813eb00692ee29a,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/3/2022 17:07,8/11/2022 9:39,9/28/2022 0:51,8/9/2022 9:26,,,,,,,,,,,,,Power,RTL/RDU,,,,,,,,0,,,,"Currently, PowerArtist isn’t able to detect that the {{orderNum}} field for an instruction is only used for simulation purposes.  It’s used to dump information which the performance correlation team uses for analysis.  These flops get removed during synthesis, but PowerArtist still reports them as having non-zero power, so it’s inflating the PowerArtist numbers.

We’ve had similar problems in the past with PowerArtist not being able to detect that simulation-only fields aren’t useful because there is in fact a circular loop through the design (over multiple pipeline stages) so it’s not simply dangling.

This isn’t going to be a real power reduction since synthesis takes care of it.",François Donati,Josh Smith,,,,,,,,,,,,,,624f6b22f813eb00692ee29a,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-08T01:33:57.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,081536302e2368a686f37253bf688694ff95626e,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00enj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,53:26.9,"03/Aug/22 9:39 PM;5acffeafaa802f2a797a955c;I tried some changes which checks {{p(GrandCentralVisibilityKey)}} to see if we are at full visibility, because that’s required to include the performance correlation hooks in the simulation.  If we are using less than full visibility, I tied off the {{orderNum}} values at DIS stage, and saw that the fields were optimized away in the verilog.

This had a much larger impact than I was expecting.  Removing all the {{orderNum}} fields reduced power by over 4mW at the core level according to PowerArtist.

If we want to use this GrandCentral Visibility trick, we actually have to change one of the JSON parameters (at least for the PowerArtist build).  We need to set {{grandCentralVisibility}} to {{unobfuscated}} instead of {{full}}.","04/Aug/22 7:03 PM;5acffeafaa802f2a797a955c;[~accountid:5ca54304bb1ed00ac5e5e852] said that the performance correlation team isn’t using the {{orderNum}} field anymore.  They use the {{globalID}} field instead.

[~accountid:624f6b22f813eb00692ee29a] I think we can go ahead and just remove the {{orderNum}} logic from Mallard and TGV.","08/Aug/22 1:53 AM;624f6b22f813eb00692ee29a;I just merged bea280e5798b6df0e1417fbcf9f812e8b35cc259 commit that remove orderNum from the code base.
And I confirm the 4+ mW reduction on PowerArtist results with that change.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Add better clock enables to the IEX/FEX PRAs,,,,,,MAL-2327,121951,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/3/2022 13:24,8/4/2022 14:07,9/28/2022 0:51,8/4/2022 13:32,,,,,,,,,,,,,Power,RTL/RDU,,,,,,,,0,,,,Currently the PRA module doesn’t have very good clock gating because the PRA is maintained as a single bit-vector.  We should group bits together (4 or 8 bits) and have them share common clock enables so that better clock gating can be inferred.,John Ingalls,Josh Smith,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-04T13:32:13.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,ee42d650c84570eb78097cdf73e0879c84bf347e,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00ejb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,03/Aug/22 9:11 PM;5acffeafaa802f2a797a955c;Adding common enables for groups of 8 bits in the PRA saves about 0.2mW in Dhrystone according to PowerArtist,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Request for connection function between LSU and Baler modules for DV unit-level testing,,,,,,MAL-2326,121931,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Deborah Soung,5aff4effae1b5f0825635e84,Deborah Soung,5aff4effae1b5f0825635e84,Deborah Soung,5aff4effae1b5f0825635e84,8/3/2022 11:05,8/10/2022 13:47,9/28/2022 0:51,8/10/2022 13:03,,,,,,,,,,,,,Verification,,,,,,,,,0,,,,"DV is developing a unit-level test harness for LSU-Baler. In the test harness, we want the LSU-Baler to get connected exactly as they would in the actual design.

To facilitate this, I think it makes sense for designers to put LSU-Baler connections into some connection function in the design Scala, which can then be called by both designers and DV.",Deborah Soung,John Ingalls,Nicolas Brunie,,,,,,,,,,,,,5aff4effae1b5f0825635e84,5bb6808b9ba2930990f81895,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-11T09:29:53.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00egv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,25:05.5,"03/Aug/22 12:25 PM;5bb6808b9ba2930990f81895;This sounds reasonable; how?

I’m pretty tapped out on bandwidth right now.  Can you or someone on the LSU DV team please propose a change in a Pull Request?","03/Aug/22 12:52 PM;5aff4effae1b5f0825635e84;For sure, I will work on a PR for this\!","04/Aug/22 3:22 PM;5aff4effae1b5f0825635e84;[~accountid:5bb6808b9ba2930990f81895] I have an approach that I think would simplify connections for both designers + DV.

I think the signals from line 217-233 here [https://github.com/sifive/federation/blob/750bde3fb2c3c1f0db0b618479e961297fdf7444/block-tgv-sifive/src/main/scala/core/tgv/TGV.scala#L217|https://github.com/sifive/federation/blob/750bde3fb2c3c1f0db0b618479e961297fdf7444/block-tgv-sifive/src/main/scala/core/tgv/TGV.scala#L217] could go into some {{LSUVectorInterface}} bundle. That bundle can go into the IOs of {{LSUModule}}, {{Baler}}, and {{TGV}} (I think this will also get rid of some repeated code for you).

In the design and in the testbench, it should then be a simple matter of hooking up the bundles with {{<>}}.

Are there any red flags you see with this approach? If you ok this, I will go ahead with implementation.","04/Aug/22 3:24 PM;5bb6808b9ba2930990f81895;Sure, that seems reasonable and helpful, thanks\!

Could {{LSUModuleIO}} extend {{LSUVectorIO}}?","04/Aug/22 3:56 PM;5aff4effae1b5f0825635e84;Yeah, sounds like a great idea\!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LTB PRA is returning ready too soon,[TGV] LTB PRA ,LSU ,,,,MAL-2325,121921,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,8/3/2022 8:26,9/7/2022 17:43,9/28/2022 0:51,8/5/2022 10:17,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"{noformat}Error: ""/scratch/verif/johni/MAL-2318/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_IssQEntry_36_assert.sv"", 79: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.bal.balerIssQ.entries_0.SiFive_IssQEntry_36_assert: at time 244742500 ps
Assertion failed (verification library): make sure we don't match tag on a source that's marked ready  @[MallardUtil.scala 605:20]{noformat}

with MFC:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vle-vse"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Alexandre Solomatnikov,David Kravitz,John Ingalls,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2330,,,,,,,,,,,,,,,MAL-2318,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,04/Aug/22 3:02 PM;sols;MAL-2325.png;https://sifive.atlassian.net/secure/attachment/75425/MAL-2325.png,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/4c75e3017c2ecd1646c18be3ba05d232252e1917,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-05T10:16:26.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/f46f989d7e9eca8423ae306cd10b344d4a3d4712,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00eev:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,27:27.6,04/Aug/22 2:27 PM;5fd15143b4a74900763834e0;Per [~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] : it looks like baler issue queue gets ready from PRA and the next cycle gets pipe tag match,"04/Aug/22 3:02 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;2 highlighted signals:

!MAL-2325.png|width=1341,height=811!","04/Aug/22 5:07 PM;5fd15143b4a74900763834e0;The LTB PRA was evaluating ready based on what turned out to be the entry “established” state, which is totally disconnected from data movement/readiness/valid. That mistake was made because the “established” signal got used as the {{.valid}} for the {{TBData}} class.","05/Aug/22 10:17 AM;5fd15143b4a74900763834e0;Fixed how LTB entries are reported ""ready"" to the PRA logic.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[Healdsburg] L1 Data MSHRs 24->32,,,,,,MAL-2324,121920,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Benoy Alexander,5e1370feefa19b0e976b5c24,Benoy Alexander,5e1370feefa19b0e976b5c24,Benoy Alexander,5e1370feefa19b0e976b5c24,8/3/2022 8:17,9/26/2022 14:13,9/28/2022 0:51,8/3/2022 11:08,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"Recent studies show demands replaying due to not enough the L1 (data) MSHRs.  Study shows that there is good performance from the additional MSHRs.

_Note: P650 is at 24 today_",Benoy Alexander,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,,5e1370feefa19b0e976b5c24,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Load/Store,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-03T11:22:15.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00een:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Investigate use of carry-lookahead style instruction boundary detection,,,,,,MAL-2323,121919,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Jeffrey Huang,627586097de1ec00695bca96,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/3/2022 8:12,9/19/2022 12:47,9/28/2022 0:51,8/26/2022 14:45,,,,,,,,,,,,,Implementation,RTL/Frontend,,,,,,,,0,,,,"In Mallard, the fetch unit has to detect instruction boundaries because we can have either 16 or 32 bit instructions.  Even in P650 with 24B-wide fetch this logic is one of the more critical paths.  In Healdsburg we are discussing going to 48B-wide which will make this problem much worse.

The current logic in Mallard uses a combination of ripple and carry-select style logic. [~accountid:5e137289b783d60db0a03c05] put together a document describing how we could generate carry-lookahead style boundary detection logic instead.  We should try to implement the new logic and evaluate whether it’s faster than the current style with some synthesis experiments.  This may help even with P650 timing.

Link to the document:

[https://docs.google.com/document/d/1ts2LDp07B1T0VehwsvdN0e0kLqCP1ZX1LHvy1tbim5s/edit#heading=h.1j9e9yb8b31p|https://docs.google.com/document/d/1ts2LDp07B1T0VehwsvdN0e0kLqCP1ZX1LHvy1tbim5s/edit#heading=h.1j9e9yb8b31p|smart-link] ",David Mielke,Jeffrey Huang,Josh Smith,,,,,,,,,,,,,5e137289b783d60db0a03c05,627586097de1ec00695bca96,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26/Aug/22 10:14 AM;ug:12b76939-5cd7-4f44-92e1-122c9b804a69;截屏2022-08-26 上午9.18.02.png;https://sifive.atlassian.net/secure/attachment/76636/%E6%88%AA%E5%B1%8F2022-08-26+%E4%B8%8A%E5%8D%889.18.02.png,26/Aug/22 10:14 AM;ug:12b76939-5cd7-4f44-92e1-122c9b804a69;截屏2022-08-26 上午9.18.10.png;https://sifive.atlassian.net/secure/attachment/76635/%E6%88%AA%E5%B1%8F2022-08-26+%E4%B8%8A%E5%8D%889.18.10.png,26/Aug/22 10:14 AM;ug:12b76939-5cd7-4f44-92e1-122c9b804a69;截屏2022-08-26 上午9.25.55.png;https://sifive.atlassian.net/secure/attachment/76638/%E6%88%AA%E5%B1%8F2022-08-26+%E4%B8%8A%E5%8D%889.25.55.png,26/Aug/22 10:14 AM;ug:12b76939-5cd7-4f44-92e1-122c9b804a69;截屏2022-08-26 上午9.26.13.png;https://sifive.atlassian.net/secure/attachment/76637/%E6%88%AA%E5%B1%8F2022-08-26+%E4%B8%8A%E5%8D%889.26.13.png,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-19T11:01:10.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,81604312922cf5f2b10fc8d9a32277cbcf03129c,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00eef:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/25898/files],,,,,,,,,,,,,03:48.3,"03/Aug/22 8:15 AM;5acffeafaa802f2a797a955c;For reference, the current logic to find instruction boundaries in {{IFU.scala}} is here:

{noformat}  // Try to improve timing on finding instruction boundaries by using a carry-select type structure.
  private def findInstructionBoundariesSplit(valid: Seq[Bool], rvc: Seq[Bool]): Seq[Bool] = {
    val n       = valid.size
    val left    = findInstructionBoundaries(valid.take(n/2), rvc.take(n/2))

    val right1  = findInstructionBoundaries(false.B +: valid.drop(n/2), false.B +: rvc.drop(n/2)).tail.asUInt
    val right0  = findInstructionBoundaries(true.B  +: valid.drop(n/2), false.B +: rvc.drop(n/2)).tail.asUInt
    val right   = Mux(!left.last || rvc(n/2-1), right1, right0)

    left ++ right.asBools
  }{noformat}","05/Aug/22 10:03 AM;5e137289b783d60db0a03c05;Hey [~accountid:627586097de1ec00695bca96] , feel free to ask any questions if the doc doesn’t make sense.  Thanks for looking at this.","08/Aug/22 2:54 PM;5e137289b783d60db0a03c05;Hey [~accountid:627586097de1ec00695bca96], do you a rough estimate on when you will have results?  I am asking not pressure you but to figure out what I should do.  If it will take a while then I need to start working on the “instruction marker bit” contingency plan.  If it will not take too long then I can wait.  Thanks.","09/Aug/22 10:23 AM;627586097de1ec00695bca96;Hey [~accountid:5e137289b783d60db0a03c05] , I'm currently working on another ticket on reduce power. I might have to finish that first before I can focus on this. It will take about a week to get results. Is this OK? or I can try to be faster.",09/Aug/22 10:43 AM;5e137289b783d60db0a03c05;About a week should be fine. Thanks\!,"26/Aug/22 10:14 AM;627586097de1ec00695bca96;Hi all, I used {{./generated-scripts/open_chip}} to open Genus and used {{report_timing -nworst 10 -from [get_pins * -hier -filter {@full_name =~ *validMask_F3_reg[2]/CP*}] -to [get_pins * -hier -filter {@full_name =~ *partialValid_F3_reg/D*}]}} to check the delay on the path from {{validMask_F3_reg/CP}} to {{partialValid_F3_reg/D}}. The latency reduced from {{62ps }}to {{53ps}}.

!截屏2022-08-26 上午9.18.02.png|width=550,height=214!

!截屏2022-08-26 上午9.18.10.png|width=600,height=221!



I also check the delay from {{icDataRotCtl_F3_reg[0]/CP}} to {{lateRedirect_F4_REG_reg/D}}. The latency reduced from {{-209ps}} to {{-198ps}}.

!截屏2022-08-26 上午9.25.55.png|width=636,height=220!

!截屏2022-08-26 上午9.26.13.png|width=1081,height=464!



It looks like this improvement optimizes the latency around 10ps.",26/Aug/22 12:27 PM;5e137289b783d60db0a03c05;Thanks Jeffrey.  I was not convinced that on p650 the lookahead implementation would be faster than the select implementation.  It is good to see that it is 10ps faster.  I expect a larger improvement on Healdsburg.,"07/Sep/22 5:30 PM;627586097de1ec00695bca96;This week, I created a chisel submodule that contains the instruction boundary detection function. And then synthesize only that submodule. In this way, the synthesis tool can fully optimizing the boundary detection logic.

I set the target clock period is {{0.100ns}}. After using lookahead logic, in p650, the slack of the critical path changed from {{-98ps}} to {{-66ps}}. In Healdburg, the slack of the critical path changed from {{-180ps}} to {{-86ps}}. Optimization is obvious.","07/Sep/22 5:34 PM;5acffeafaa802f2a797a955c;[~accountid:5e137289b783d60db0a03c05] [~accountid:5e1371705361330daaeaf389] I want to try to reproduce/verify Jeffrey’s results, but from his latest synthesis runs this is looking a lot more promising.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] investigate vector FP conversion module area,,,,,,MAL-2322,121916,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/3/2022 7:53,8/3/2022 8:00,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,TGV_RTL/VEX,,,,,,,,0,,,,"In {{ppa_tgv_20220729}} synthesis only run of {{p670}}, the two instances of {{VectorFcvtUnit}} exhibit large areas ( > 5K um^2), we need to understand if this is an optimizable cost or a real thing.

{noformat}fcvtmod           area (um^2):     5,213
fcvtmod           area (um^2):     5,362{noformat}

Physical design runs exhibit similar values:

{noformat}            Instance                         Module              Cell Count  Cell Area  Net Area   Total Area 
--------------------------------------------------------------------------------------------------------------
      fcvtmod                   SiFive_VectorFcvtUnit_1               43092   5042.352  3062.107     8104.459 
      fcvtmod                   SiFive_VectorFcvtUnit                 43939   5222.846  3113.717     8336.563 {noformat}",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00edr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV]: Cosim vs RTL mismtach for vslidedown.vx instruction,[TGV]: Cosim vs RTL vslidedown.vx ,Execution Unit ,Vector,,,MAL-2321,121913,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,8/3/2022 4:07,9/7/2022 17:43,9/28/2022 0:51,8/7/2022 20:57,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Error::*

{noformat}[COSIM-ERROR][0] m_dut_inst_item: [109528] InstInfo: VLD=1 | PC=0x0000000080007180 | INSN=0x3f84cc57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r24=0x00000000000000007ff8000000000000 mask=ffff | READY=1 | CSR_TIMER=109528 | PRV=3 | MSTATUS=0x8000000a00007e00 | MTVEC=0x0000000080009928 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=8 | SEW=8 | LMUL=m4 | VSEGELT=0
[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000080007180 | INSN=0x3f84cc57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r24=0x7ff80000000000007ff8000000000000 mask=0000{noformat}




*Debug-Info::*  S1=0x8, SEW=8, Lmul=4,  VL=8

{noformat}core   0: 0x0000000080007166 (0x0024f057) vsetvli zero, s1, e8, m4, tu, mu

core   0: 0x0000000080007180 (0x3f84cc57) vslidedown.vx v24, v24, s1
core   0: 3 0x0000000080007180 (0x3f84cc57) e8 m4 l8 v24 0x7ff80000000000007ff8000000000000{noformat}



*SHA1::*  {{febf4d1e9521243fbe7883f26d6d33faa78c0037}}

*Config:* {{ }}coreip_u8_minimal_vector
*rerun.outline:*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": [
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+verbose""
],
""subdir"": ""rat_default_T_0057"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 3718184933
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}


outline copied into {{/work/nicolasb/tgv_bug_outlines/MAL-2321.outline}}



*Logs::*
{{gamma26:/scratch/naveenr/master/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline_Wr-data/rat_default_T_0057/rat/default/waves.fsdb}}",Naveen Rathore,Nicolas Brunie,,,,,,,,,,,,,,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,febf4d1e9521243fbe7883f26d6d33faa78c0037,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{repository={count=1, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-05T08:40:38.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/b9dddbb3b96a1c54a51c7c21fa71bc5cf3ca0ecc,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i00ed3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,N/A,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,57:34.7,07/Aug/22 8:57 PM;6065017e90e3950069cf01c5;fixed by [https://github.com/sifive/federation/commit/b9dddbb3b96a1c54a51c7c21fa71bc5cf3ca0ecc|https://github.com/sifive/federation/commit/b9dddbb3b96a1c54a51c7c21fa71bc5cf3ca0ecc|smart-link] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Data forwarding optimization for div/rem instructions,,,,,,MAL-2320,121886,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Ian Chuang,61aaae1d9615eb006f5ff922,Ian Chuang,61aaae1d9615eb006f5ff922,8/2/2022 23:35,8/3/2022 8:16,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"We have several things that can be done here:

* anticipate the tag broadcast of a division (similar to what was done in {{FexPipe}} and what has been done for the horizontal FP red unit in [https://sifive.atlassian.net/browse/MAL-2176|https://sifive.atlassian.net/browse/MAL-2176|smart-link] )
** This will optimize data forwarding between a division/rem and any non-div/rem operations
** div/rem children will still suffer from extra latency because the divider is going to block them from issuing
** [https://sifive.atlassian.net/browse/MAL-2235|https://sifive.atlassian.net/browse/MAL-2235|smart-link] 
* allow unblocking issuing to the divider in advance such that a new division/rem reach the divider the first cycle it is empty",Ian Chuang,I-Cheng Cheng,Nicolas Brunie,Zhen Wei,,,,,,,,,,,,61aaae1d9615eb006f5ff922,5d7bfdaa003e040c3e175060,6065017e90e3950069cf01c5,5e49f622a17f930c9b94b6cd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,MAL-2235,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00e7b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] LSU: RR unrolled Uop for single DLEN,[TGV] LSU: RR unrolled Uop for single DLEN,LSU ,,,,MAL-2319,121863,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Yohann Rabefarihy,61730c9cbcb57400683f15a6,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,8/2/2022 17:32,9/7/2022 17:43,9/28/2022 0:51,8/30/2022 2:54,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"This is for {{LMUL>1}} vector stores.

{noformat}Error: ""/scratch/sols/tgv3/federation/builds/e215179d8d7/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LSTPipe_assert.sv"", 5469: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LSTPipes_0.SiFive_LSTPipe_assert_0: at time 246662500 ps
Assertion failed (verification library): LSTR unrolled UopNum should have a UopOffset  @[LSTPipe.scala 5538:18]

Fatal: ""/scratch/sols/tgv3/federation/builds/e215179d8d7/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LSTPipe_assert.sv"", 5478: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LSTPipes_0.SiFive_LSTPipe_assert_0: at time 246662500 ps{noformat}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vle-vse"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Waveform: gamma11:/scratch/sols/tgv3/federation/builds/e215179d8d7/coreip_u8_minimal_vector/sim/sim2/tgv_vle-vse.outline/vector/vle-vse",Alexandre Solomatnikov,David Kravitz,John Ingalls,Yohann Rabefarihy,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,,MAL-2318,,,,,,,,,,,,,,,MAL-1553,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/521f8630894960d3a77a8c765e0b7a94036e2690,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{branch={count=1, dataType=branch}, json={""cachedValue"":{""errors"":[],""summary"":{""branch"":{""overall"":{""count"":1,""lastUpdated"":null,""dataType"":""branch""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i00e2f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,46:15.6,02/Aug/22 5:46 PM;5bb6808b9ba2930990f81895;We’re not doing LMUL>1 until [https://sifive.atlassian.net/browse/MAL-2008|https://sifive.atlassian.net/browse/MAL-2008|smart-link] ,02/Aug/22 5:56 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;This has nothing to do with LTB or [https://sifive.atlassian.net/browse/MAL-2008|https://sifive.atlassian.net/browse/MAL-2008|smart-link] ,02/Aug/22 5:59 PM;5bb6808b9ba2930990f81895;this has to do with [https://sifive.atlassian.net/browse/MAL-1553|https://sifive.atlassian.net/browse/MAL-1553|smart-link] ,"02/Aug/22 6:06 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;Address generation for unit-stride, unaligned vector load/store ops [https://sifive.atlassian.net/browse/MAL-1553|https://sifive.atlassian.net/browse/MAL-1553|smart-link]  was done, at least unaligned vector stores used to work 2 weeks ago.","02/Aug/22 6:11 PM;5bb6808b9ba2930990f81895;[https://sifive.atlassian.net/browse/MAL-1553|https://sifive.atlassian.net/browse/MAL-1553|smart-link] is still open, and the PR attached to it was just laying the foundation, so I don’t think that’s done","03/Aug/22 7:34 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;cc: [~accountid:5fd15143b4a74900763834e0]

This needs to be fixed to make forward progress","04/Aug/22 12:45 PM;5bb6808b9ba2930990f81895;I’m seeing the signal {{vagu_rrUnroll}} at [https://github.com/sifive/federation/blob/706ec7a7ef5c8f31d650d7d358d865ecd27881ec/block-tgv-sifive/src/main/scala/core/tgv/VectorAGU.scala#L48|https://github.com/sifive/federation/blob/706ec7a7ef5c8f31d650d7d358d865ecd27881ec/block-tgv-sifive/src/main/scala/core/tgv/VectorAGU.scala#L48] turn on, which is a new scenario.

Is the VectorAGU _supposed_ to be unrolling another uop?","10/Aug/22 5:38 AM;61730c9cbcb57400683f15a6;This was mainly due to a bad calculation of the number of uop needed for agu. I made the whole vle-vse code work except lmul8 part for [https://sifive.atlassian.net/browse/MAL-2343|https://sifive.atlassian.net/browse/MAL-2343|smart-link] so I think this is not relevant anymore.

Do you agree to close this one [~accountid:5fd15143b4a74900763834e0] ?","10/Aug/22 5:40 AM;5fd15143b4a74900763834e0;If vle-vse is passing on master, then we can close. Do you have the commit that fixes it?

If it’s still dependent on a PR, then close after it mergers.","10/Aug/22 8:40 AM;5bb6808b9ba2930990f81895;[~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] did you work around this by changing the test?  If so, we should add the scenario back into the test, and make the fix.","10/Aug/22 8:55 AM;5fd15143b4a74900763834e0;I think Yohann changed the test, but agree with the sentiment to actually fix this if needed.","30/Aug/22 2:53 AM;61730c9cbcb57400683f15a6;Looks like this PR: [https://github.com/sifive/federation/pull/25679|https://github.com/sifive/federation/pull/25679|smart-link] 

is addressing this issue correctly.

and this “bug” or un-started task: [https://sifive.atlassian.net/browse/MAL-2518|https://sifive.atlassian.net/browse/MAL-2518|smart-link] 

is addressing the whole store lmul>1 story .

so I’ll close this one for clarity sake.

Please reopen if not agree.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LsIssQ Entry must have issued to be valid in this pipe @[LsIssQ.scala 589:14],[TGV] LsIssQ ,LSU ,Issue queue ,,,MAL-2318,121860,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,8/2/2022 15:36,9/7/2022 17:43,9/28/2022 0:51,8/3/2022 10:07,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"{noformat}Error: ""/scratch/sols/tgv3/federation/builds/e215179d8d7/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LsIssQEntry_assert.sv"", 287: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.lsIssQ.entries_0.SiFive_LsIssQEntry_assert_0: at time 244582500 ps
Assertion failed (verification library): IssQ Entry must have issued to be valid in this pipe  @[LsIssQ.scala 589:14]

Fatal: ""/scratch/sols/tgv3/federation/builds/e215179d8d7/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LsIssQEntry_assert.sv"", 296: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.lsIssQ.entries_0.SiFive_LsIssQEntry_assert_0: at time 244582500 ps{noformat}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vle-vse"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Waveform is at gamma11:/scratch/sols/tgv3/federation/builds/e215179d8d7/coreip_u8_minimal_vector/sim/sim/tgv_vle-vse.outline/vector/vle-vse",Alexandre Solomatnikov,John Ingalls,,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2319,,,,,,,,,,,,,,,,,,,,,,,,MAL-2325,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1553,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/4c75e3017c2ecd1646c18be3ba05d232252e1917,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-03T11:34:17.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25052,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00e1z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,01:53.5,"02/Aug/22 6:01 PM;5bb6808b9ba2930990f81895;I’m seeing a different assertion in my rerun from commit 4c75e3017c2ecd1646c18be3ba05d232252e1917

{noformat}Error: ""/scratch/verif/johni/MAL-2318/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_IssQEntry_36_assert.sv"", 79: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.bal.balerIssQ.entries_0.SiFive_IssQEntry_36_assert: at time 244742500 ps
Assertion failed (verification library): make sure we don't match tag on a source that's marked ready  @[MallardUtil.scala 605:20]{noformat}","02/Aug/22 11:40 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;Re-produced again in fresh clone of federation: 

gamma11:/scratch/sols/MAL-2318/builds/4c75e3017c2/coreip_u8_minimal_vector/sim/sim/tgv_vle-vse.outline/vector/vle-vse

Full command:

{noformat}time make useSFC=1 sim && cd sim && time ./sitest @../../../../test-outlines/tgv_vle-vse.outline -j2 --wave=fsdb --local --skip-duplicate-test-check --force-single-build{noformat}

Notice: {{make useSFC=1 sim}}

{noformat}2022-08-02T18:38:55-0700: Generating test list
2022-08-02T18:38:55-0700: Finished generating test list
2022-08-02T18:38:55-0700: Deduping unique builds
2022-08-02T18:38:56-0700: Compiling simulator testbench /scratch/sols/MAL-2318/builds/4c75e3017c2/coreip_u8_minimal_vector/sim/vcs.program.uvm.waves.xprop.d9c73cae40cd6b2545f357e26c069d85
2022-08-02T18:44:25-0700: Finished compiling simulator testbench /scratch/sols/MAL-2318/builds/4c75e3017c2/coreip_u8_minimal_vector/sim/vcs.program.uvm.waves.xprop.d9c73cae40cd6b2545f357e26c069d85
2022-08-02T18:44:26-0700: Running test sim/tgv_vle-vse.outline/vector/vle-vse
=== sitest found errors in test sim/tgv_vle-vse.outline/vector/vle-vse:
Reset m_pl2_mmc_inner_agents  c8
Error: ""/scratch/sols/MAL-2318/builds/4c75e3017c2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LsIssQEntry_assert.sv"", 287: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.lsIssQ.entries_0.SiFive_LsIssQEntry_assert_0: at time 244582500 ps
Assertion failed (verification library): IssQ Entry must have issued to be valid in this pipe  @[LsIssQ.scala 589:14]

Fatal: ""/scratch/sols/MAL-2318/builds/4c75e3017c2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LsIssQEntry_assert.sv"", 296: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.lsIssQ.entries_0.SiFive_LsIssQEntry_assert_0: at time 244582500 ps

$finish called from file ""/scratch/sols/MAL-2318/builds/4c75e3017c2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LsIssQEntry_assert.sv"", line 296.


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 48916 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 244,582,500 ps.

*Verdi* : Close all FSDB Files at 244,582,500 ps.
""/scratch/sols/MAL-2318/vsrc/sim/common/../TestDriver.sv"", 529: TestDriver.assert_final_phase.final_error: started at 244582500ps failed at 244582500ps
	Offending '(current_phase === shutdown_e)'


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 48916 simulation cycles (in TestDriver.report_phase_actions)
2022-08-02T18:46:16-0700: Error: simulation sim/tgv_vle-vse.outline/vector/vle-vse failed
Error: some simulations failed

real	7m22.032s
user	8m47.411s
sys	0m32.456s
/scratch/sols/MAL-2318/builds/4c75e3017c2/coreip_u8_minimal_vector/sim{noformat}","02/Aug/22 11:49 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;Also, re-produced at more recent commit:

{noformat}git lg -10
* 899023a5f1a - (HEAD -> tmp) software/tests/vector/vle-vse: comment out ""j pass"" (41 minutes ago) <Alex Solomatnikov>
* e11f4d9ca5c - (origin/master, origin/HEAD, master) [MAL-1729][TGV] Instantiate min(nVDiv, dBytes >> sew) dividers in VexPipe (#21535) (57 minutes ago) <Shaka Kao>
* febf4d1e952 - Update verilator to 4.225-nightly (#24987) (2 hours ago) <Nathan Graybeal>
* b7d281d21c9 - Fix xmr plate issue (#25025) (4 hours ago) <Nathan Graybeal>
* 26b0b9d02bc - [MAL-2303][TGV] fixing idle of permute engine (#24994) (4 hours ago) <Nicolas Brunie>
* b64ce054b78 - [MAL-2176] [TGV] Implement anticipation mechanism for VectorFPHRZRedUnit (#24962) (5 hours ago) <Kira Tsao>
* 8b9e9b3a1a5 - Use bundles to clean up tapped signals around beatRowOdd (#25019) (5 hours ago) <Alvin Tung>
* 0e76dc0df3c - [CIP-3654] revert back to 3-cycle FMUL and full shared custom multiplier for now (#25005) (6 hours ago) <ozturkerdinc>
*   7e58abee02f - Merge pull request #25014 from sifive/DOPS-873_cust_deliv_fpass (6 hours ago) <Nathan Graybeal>
|\  
| * f3f7cd107a4 - DOPS-873 comment out failing test (9 hours ago) <Quentin Neill>{noformat}

{noformat}2022-08-02T23:39:18-0700: Compiling simulator testbench /scratch/sols/tgv4/federation/builds/899023a5f1a/coreip_u8_minimal_vector/sim/vcs.program.uvm.waves.xprop.a24b3d6ef0a5d0b46a74e1e321040901
2022-08-02T23:45:12-0700: Finished compiling simulator testbench /scratch/sols/tgv4/federation/builds/899023a5f1a/coreip_u8_minimal_vector/sim/vcs.program.uvm.waves.xprop.a24b3d6ef0a5d0b46a74e1e321040901
2022-08-02T23:45:12-0700: Running test sim/tgv_vle-vse.outline/vector/vle-vse
=== sitest found errors in test sim/tgv_vle-vse.outline/vector/vle-vse:
Reset m_pl2_mmc_inner_agents  c8
Error: ""/scratch/sols/tgv4/federation/builds/899023a5f1a/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LsIssQEntry_assert.sv"", 287: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.lsIssQ.entries_0.SiFive_LsIssQEntry_assert_0: at time 244582500 ps
Assertion failed (verification library): IssQ Entry must have issued to be valid in this pipe  @[LsIssQ.scala 589:14]

Fatal: ""/scratch/sols/tgv4/federation/builds/899023a5f1a/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LsIssQEntry_assert.sv"", 296: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.lsIssQ.entries_0.SiFive_LsIssQEntry_assert_0: at time 244582500 ps

$finish called from file ""/scratch/sols/tgv4/federation/builds/899023a5f1a/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LsIssQEntry_assert.sv"", line 296.


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 48916 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 244,582,500 ps.

*Verdi* : Close all FSDB Files at 244,582,500 ps.
""/scratch/sols/tgv4/federation/vsrc/sim/common/../TestDriver.sv"", 529: TestDriver.assert_final_phase.final_error: started at 244582500ps failed at 244582500ps
	Offending '(current_phase === shutdown_e)'


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 48916 simulation cycles (in TestDriver.report_phase_actions)
2022-08-02T23:46:05-0700: Error: simulation sim/tgv_vle-vse.outline/vector/vle-vse failed
Error: some simulations failed

real	6m48.704s
user	8m44.803s
sys	0m33.998s{noformat}","03/Aug/22 8:27 AM;5bb6808b9ba2930990f81895;Ah, using SFC still, okay, that explains it.  I’ll create a separate Jira ticket for the BalIssQ assertion that I saw with MFC: [https://sifive.atlassian.net/browse/MAL-2325|https://sifive.atlassian.net/browse/MAL-2325|smart-link] ","03/Aug/22 9:36 AM;5bb6808b9ba2930990f81895;Is this a LMUL>1 case?  I’m seeing the signal {{vagu_rrUnroll}} at [https://github.com/sifive/federation/blob/706ec7a7ef5c8f31d650d7d358d865ecd27881ec/block-tgv-sifive/src/main/scala/core/tgv/VectorAGU.scala#L48|https://github.com/sifive/federation/blob/706ec7a7ef5c8f31d650d7d358d865ecd27881ec/block-tgv-sifive/src/main/scala/core/tgv/VectorAGU.scala#L48] turn on, which is a new scenario.","03/Aug/22 9:43 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;The load is supposed to load 128 bits, {{LMUL}} should not matter, {{vl}} should.","03/Aug/22 9:59 AM;5bb6808b9ba2930990f81895;Okay, I can fix this assertion in this Jira ticket, then the test runs into [https://sifive.atlassian.net/browse/MAL-2319|https://sifive.atlassian.net/browse/MAL-2319|smart-link] just like the LMUL>1 case.

Is the VectorAGU _supposed_ to be unrolling another uop?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[TGV] vslideup.vi v15, v0, 1 seems to be never woken up on p670","[TGV] vslideup.vi v15, v0, 1",Execution Unit ,Vector,,,MAL-2317,121851,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/2/2022 14:42,9/7/2022 17:43,9/28/2022 0:51,8/3/2022 7:29,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"+*configuration:*+ {{p670}} RTL build with CIRCT

+*git sha1:*+ {{062dd9d739283af30bb77c37f237a4b5db1c43ea }}(HEAD -> MAL-2303_tgv-perm-eng-idle-fix, origin/MAL-2303_tgv-perm-eng-idle-fix)

+*error:*+

{noformat}=== sitest found errors in test sim/rerun.o",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,02/Aug/22 2:42 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220802-214026.png;https://sifive.atlassian.net/secure/attachment/75286/image-20220802-214026.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-03T07:29:13.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/6a8e96c61801644811fb7851440b321f3899920c,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00dzz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Aug/22 8:43 PM;6065017e90e3950069cf01c5;Details:

* a new complex sequence from a {{vrgather.vx}} is dispatched
* one of the uop is stored in an {{IssQEntry}}
** the {{gid}} stored in {{cmplxGidIssued}} already matches the uop’s {{gid}} (previous value remaining)
** {{cmplxBlocked}} raises because a simple permute is executed and forces {{io.cmplxReady}} to be {{false}}
** this leads the {{IssQEntry}}'s {{io.cmplxBlock.valid}} to be set to true and as {{io.cmplxBlock.bits}} matches the uop’s {{gid}}, it is now considered as part of the on-going sequence",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vcompress.vm mismatch,[TGV] vcompress.vm mismatch,Execution Unit ,Vector,,,MAL-2316,121847,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Zhiqiang Hao,5d02d411febd110bc78aabc3,Zhiqiang Hao,5d02d411febd110bc78aabc3,8/2/2022 13:56,9/7/2022 17:43,9/28/2022 0:51,9/2/2022 6:04,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"On nightly we found a {{vcompress.vm}} mismatch in VTG test on {{lmul=4}}



vrf8:

{{0x7bd64c40f16adc5cb052882d8b3a6260}}

vrf9:

{{0xf16adc5cb052882d8b3a62602e6c6c06}}

vrf14:

{{0x7925827d3bdb9394298867db50f641e2}}



{noformat}core   0: 0x0000000080000af6 (0x0522f2d7) vsetvli t0, t0, e32, m4, ta, mu
core   0: 3 0x0000000080000af6 (0x0522f2d7) x 5 0x0000000000000006
core   0: 0x0000000080000afa (0x5e872a57) vcompress.vm v20, v8, v14{noformat}



There are errors on both RTL side & spike side.



RTL:

{noformat}C                   0:      10718 vrf[20]=[ffffffffffffffffffffffffb052882d][ffff]
C                   0:      10719 vrf[21]=[cd145fc401b4a2ebc00367f707273722][ffff]{noformat}

Based on value in vreg 14, elem 0 & elem 5 will be put into v20



There’s also an error on spike (spike shouldn’t update v21 on ta policy). [~accountid:5d02d411febd110bc78aabc3] will provide a fix

{noformat}core   0: 0x0000000080000afa (0x5e872a57) vcompress.vm v20, v8, v14
core   0: 3 0x0000000080000afa (0x5e872a57) e32 m4 l6 v20 0xffffffffffffffff8227188bb052882d v21 0xffffffffffffffffffffffffffffffff{noformat}



rerun:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0000_lmul4"",
  ""subtest"": ""vcompress.vm"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vcompress.vm_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_NoSelfCheck-0_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-4_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-1"",
  ""seed"": {
    ""value"": 3959555285
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

outline copy into: {{/work/nicolasb/tgv_bug_outlines/MAL-2316.outline}}",Nicolas Brunie,Srivatsa Yogendra,Zhiqiang Hao,,,,,,,,,,,,,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2353,,,,,,,19/Aug/22 8:50 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220819-155025.png;https://sifive.atlassian.net/secure/attachment/76205/image-20220819-155025.png,02/Sep/22 6:04 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220902-130421.png;https://sifive.atlassian.net/secure/attachment/76966/image-20220902-130421.png,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-24T13:36:28.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00dzb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,17:10.0,02/Aug/22 8:17 PM;6065017e90e3950069cf01c5;What was the git hash for the nightly ? is this on {{coreip_u8_minimal_vector}} or {{coreip_p670}}?,"02/Aug/22 8:52 PM;5d02d411febd110bc78aabc3;oh sorry I forgot to put this

commit: {{e22daff600f43587d7a0213eb8c823bea23cf753}}

config: {{coreip_p670}}",02/Aug/22 9:00 PM;6065017e90e3950069cf01c5;Thanks [~accountid:5d02d411febd110bc78aabc3] ,"03/Aug/22 5:34 PM;5d02d411febd110bc78aabc3;sorry I forgot to add the outline file, just add it now","19/Aug/22 8:49 AM;6065017e90e3950069cf01c5;One of the the bug seems due to the fact that the intermediay nano-op are setting tail agonistic policy when using the {{VectorPermuteUnit}} during a large {{vcompress.vm}} sequence, this leads the compression staged data ({{compStagedData}}, data accumulated when a nano-op does not produce enough element to fill a result register after grouping with previous staged data) to be all1s extended. This staged data will be or-Ed without masking to the next grouped elements in the next cycles, the tails saturate to all1s hidding new elements.

!image-20220819-155025.png|width=1474,height=481!",29/Aug/22 8:58 PM;5a938e9c0913194d2d262658;[~accountid:6065017e90e3950069cf01c5] Is this issue closed? I see a merged PR linked. ,29/Aug/22 11:00 PM;6065017e90e3950069cf01c5;[~accountid:5a938e9c0913194d2d262658]  I am waiting for [https://sifive.atlassian.net/browse/VI-8027|https://sifive.atlassian.net/browse/VI-8027|smart-link]  to be resolved before closing this issue. The merged PR fixed part of the problem.,"02/Sep/22 6:04 AM;6065017e90e3950069cf01c5;The main issue has been fixed but I am still seeing the test fail (cosim and RTL agree but VTG expects something different_

!image-20220902-130421.png|width=1539,height=783!



closing this bug, and tracking [https://sifive.atlassian.net/browse/VI-8027|https://sifive.atlassian.net/browse/VI-8027|smart-link] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Improve timing of GID generation in DIS stage,,,,,,MAL-2315,121832,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,François Donati,624f6b22f813eb00692ee29a,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/2/2022 10:22,9/27/2022 7:19,9/28/2022 0:51,8/17/2022 5:36,,,,,,,,,,,,,Implementation,RTL/RDU,,,,,,,,0,,,,"While synthesizing the {{coreip_healdsburg}} RDU, one of the top timing paths starts at the GID generation in DIS stage and has a few endpoints.

The current logic basically counts the number of older instructions in DIS stage that start ROB groups:

{noformat}  // Determine GID for each instruction
  // - Note that even for instruction 0 we may have to increment robWrPtr if openGroup is valid and instruction 0 starts a group
  for (i <- 0 until mp.nRename) {
    val olderAllocs = PopCount(groupEnd_DIS.take(i+1).asUInt)
    instGid_DIS(i) := rob.io.robWrPtr.increment(olderAllocs, robParams.nEnt)
  }{noformat}



I think we probably have enough time to move this back into REN stage, or at least pre-compute at the end of REN stage the increment amount needed for each instruction in DIS stage.",Josh Smith,Vaibhav Gupta,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,623e4830b75ca80070580145,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,02/Aug/22 10:23 AM;jsmith;MAL-2315.txt;https://sifive.atlassian.net/secure/attachment/75270/MAL-2315.txt,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-17T05:16:49.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,b65a14a34ac10d6ab78f24d4ca3287b7b39e5ac2,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00dw7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,02/Aug/22 10:23 AM;5acffeafaa802f2a797a955c;I’ve attached a sample timing path from synthesizing the RDU of {{coreip_healdsburg}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vl corruption in VectorSequencer entries during FIFO shift down,[TGV] vl corruption,,,,,MAL-2314,121827,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,8/2/2022 9:38,9/7/2022 17:43,9/28/2022 0:51,8/11/2022 12:38,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,TGV,,,"We see below assertion failure from VectorSequencer block.

*Error Message*

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_168_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_VectorSequencer_assert.sv"", 512: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.vectorSequencer.SiFive_VectorSequencer_assert: at time 2151742500 ps
Assertion failed: Next group offset  4 should never be less than -16 and always be negative
    at VectorSequencer.scala:1001 assert(nxtGrpOffset >= -(1 << (VectorPayloadConsts.ovldImmW - 1)).S && nxtGrpOffset <= 0.S, s""Next group offset %d should never be less than -${1 << (VectorPayloadConsts.ovldImmW - 1)} and always be negative"", nxtGrpOffset)

Fatal: ""/scratch/ishitashah/tgv_regression/sign_168_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_VectorSequencer_assert.sv"", 514: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.vectorSequencer.SiFive_VectorSequencer_assert: at time 2151742500 ps{noformat}

*SHA:*[*e22daff*|https://simscope.internal.sifive.com/models/undefined--master--e22daff600f43587d7a0213eb8c823bea23cf753]

*config:* coreip_p670

*rerun.outline*

outline copied in {{/work/nicolasb/tgv_bug_outlines/MAL-2314.outline}}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""rat_default_T_0491"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 265321685
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath* 

{{gamma25:/scratch/ishitashah/tgv_regression/sign_168_test_fails/federation/builds2/coreip_p670/sim/rerundir1_vector/vector_rerun.outline/rat_default_T_0491/rat/default}}",Alexandre Solomatnikov,David Kravitz,Ishita Shah,Nicolas Brunie,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,607e26355431a500701f5aed,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2354,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,08/Aug/22 7:46 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220808-144611.png;https://sifive.atlassian.net/secure/attachment/75509/image-20220808-144611.png,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-08-11T01:23:32.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/8334cd63d54dbe6ad1c94091583747ab0ee59071,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i00dvb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,44:12.4,02/Aug/22 9:44 AM;5fd15143b4a74900763834e0;This is [~accountid:6065017e90e3950069cf01c5]'s assert. Bumping to him for initial diagnosis.,"07/Aug/22 10:25 PM;6065017e90e3950069cf01c5;It looks like, {{vl}} is too large in the sequencer (0x80) for the current SEW configuration ({{1}} a.k.a. 16-bit elements).

So the sequencer is trying to sequence a 128-element operation on 16-bit elements (2048 bits) which exceeds VLMAX (1024 bits as VLEN=128b), so one of the internal sequencer counter overflows and this is caught by an assertion.



From what I can gather, the entry in the sequencer FIFO {{entries(3)}} is enqueued with a valid {{vl}} (=4) value. When it is moved from {{entries(3)}} to {{entries(2)}} as entries(0) becomes done, the {{vl}} values is corrupted and becomes {{0x80}}.

[~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] I don’t understand one of the code section dedicated to {{vl}} updates.

[https://github.com/sifive/federation/blob/master/block-tgv-sifive/src/main/scala/core/tgv/VectorSequencer.scala#L1346|https://github.com/sifive/federation/blob/master/block-tgv-sifive/src/main/scala/core/tgv/VectorSequencer.scala#L1346]

I don’t get why we need to manage {{entryDone(i)}} separately. If this predicates is true then the i-th entry is processed during this cycle and does not need to be updated.

Furthermore, the else branch of this else should not be updated if entries are shifted down (is it what is supposed to be covered by the entryDone(i) predicate ?)

{noformat}    when (io.vsrfWriteReq_WB.valid && (io.vsrfWriteReq_WB.bits.idx === entries(i).vsetSrcTag.prIdx(tp.vsetColorBits-2,0)) &&
          entryValid(i) && !entryFlush(i) && !entries(i).payload.ready) {    // vl must not be overwritten if it was already known

      assert(entryFirst(i))

      val vl = io.vsrfWriteReq_WB.bits.result.asTypeOf(new PackedVConfig).vl
      when (entryDone(i)) {
        when(i.U >= allocDelta) {
          entries(i.U - allocDelta).payload.vector.vlValid    := true.B
          entries(i.U - allocDelta).payload.vector.vconfig.vl := vl
        }
      } .otherwise {
        entries(i).payload.vector.vlValid    := true.B
        entries(i).payload.vector.vconfig.vl := vl
      }
    }{noformat}

 I tried the fix:

{noformat}diff --git a/block-tgv-sifive/src/main/scala/core/tgv/VectorSequencer.scala b/block-tgv-sifive/src/main/scala/core/tgv/VectorSequencer.scala
index e1450029397..9ddd10a973e 100644
--- a/block-tgv-sifive/src/main/scala/core/tgv/VectorSequencer.scala
+++ b/block-tgv-sifive/src/main/scala/core/tgv/VectorSequencer.scala
@@ -1349,14 +1349,18 @@ class VectorSequencer(val mp: MallardCoreParams, val bParams: BulletCoreParams)(
       assert(entryFirst(i))

       val vl = io.vsrfWriteReq_WB.bits.result.asTypeOf(new PackedVConfig).vl
+      // I don't get why we would need to update vl for the entry previous at position
+      // i-th if entryDone(i) is true
       when (entryDone(i)) {
         when(i.U >= allocDelta) {
           entries(i.U - allocDelta).payload.vector.vlValid    := true.B
           entries(i.U - allocDelta).payload.vector.vconfig.vl := vl
         }
       } .otherwise {
-        entries(i).payload.vector.vlValid    := true.B
-        entries(i).payload.vector.vconfig.vl := vl
+        when (!entryDoneOH.orR) {
+          entries(i).payload.vector.vlValid    := true.B
+          entries(i).payload.vector.vconfig.vl := vl
+        }
       }
     }
   }{noformat}

which seems to fix the problem at hand, but require clean-up and more investigations.

if an entry is not in the contiguous “done” range then it will be shifted and so should not be updated in place, only if no entry is updated and a {{vl}} update happens then they should be updated in place. As the entries are always processed in order, {{!entryDoneOH.orR}} means no entry were processed this cycle (but maybe a contiguous range near the end could still be flushed ? to be checked)","08/Aug/22 7:46 AM;6065017e90e3950069cf01c5;!image-20220808-144611.png|width=1395,height=683!","08/Aug/22 9:35 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;{quote}It looks like, {{vl}} is too large in the sequencer (0x80) for the current SEW configuration ({{1}} a.k.a. 16-bit elements).

So the sequencer is trying to sequence a 128-element operation on 16-bit elements (2048 bits) which exceeds VLMAX (1024 bits as VLEN=128b), so one of the internal sequencer counter overflows and this is caught by an assertion.{quote}

This should not happen - the sequencer should not get {{vl}} exceeding {{VLMAX}}.

If it does, then it’s a bug in {{vl}} calculation logic.","08/Aug/22 9:55 AM;6065017e90e3950069cf01c5;But here it is trying to update {{vl}} for an entry for which {{vlValid}} is already set. This should not happen either, right ?","08/Aug/22 10:32 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;{quote}But here it is trying to update {{vl}} for an entry for which {{vlValid}} is already set. This should not happen either, right ?{quote}

Yes, that is incorrect too",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vector div injecting tag after kill leading to ROB assertion: ROB cmplCnt underflow on entry,[TGV] vector div injecting  injecting tag after kill leading to ROB assertion: ROB,Execution Unit ,Vex ROB,,,MAL-2313,121822,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,8/2/2022 9:03,9/7/2022 17:43,9/28/2022 0:51,8/4/2022 12:51,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"We see below ROB assertion failure for underflow entry.

*Error Message*

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_168_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_ROB_assert.sv"", 1376: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert: at time 2873082500 ps
Assertion failed (verification library): ROB cmplCnt underflow on entry 68  @[ROB.scala 629:11]
Fatal: ""/scratch/ishitashah/tgv_regression/sign_168_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_ROB_assert.sv"", 1378: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert: at time 2873082500 ps{noformat}

*SHA:* [*e22daff*|https://simscope.internal.sifive.com/models/undefined--master--e22daff600f43587d7a0213eb8c823bea23cf753]

*config:* coreip_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""rat_default_T_0765"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 4129126065
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath* 

{{gamma25:/scratch/ishitashah/tgv_regression/sign_168_test_fails/federation/builds2/coreip_p670/sim/rerundir1_rob/rob_rerun.outline/rat_default_T_0765/rat/default}}",Ishita Shah,Josh Smith,Kira Tsao,Nicolas Brunie,,,,,,,,,,,,607e26355431a500701f5aed,5acffeafaa802f2a797a955c,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,03/Aug/22 12:56 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220803-075628.png;https://sifive.atlassian.net/secure/attachment/75314/image-20220803-075628.png,03/Aug/22 8:30 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220803-152906.png;https://sifive.atlassian.net/secure/attachment/75329/image-20220803-152906.png,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-04T12:51:06.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/e0ea766e05c9d6f40e6669a801825fee717f0fb6,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00duf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,56:36.0,"03/Aug/22 12:56 AM;6065017e90e3950069cf01c5;This problem seem to be a hiccup of division tag injection when a {{divKill}} signal is received simultaneously to the division trying to inject a tag

!image-20220803-075628.png|width=1166,height=612!","03/Aug/22 4:27 AM;5acffeafaa802f2a797a955c;That’s what {{instTagInjectKill_ISS}} is supposed to catch:

{noformat}      instTagInjectKill_ISS                      := io.flushReq.valid && io.flushReq.bits.gid.compare(stagedDivTag.bits.gid){noformat}

Was this not used properly?","03/Aug/22 5:28 AM;6065017e90e3950069cf01c5;It seems it was only partially, it was properly killing the first cycle when the tag needed to be invalidated because of the kill, but the tag was presented again for injection the cycle afterwards. I am still looking into the issue, so interpretation may be partial.","03/Aug/22 8:30 AM;6065017e90e3950069cf01c5;!image-20220803-152906.png|width=1361,height=176!

The tag is properly killed during the first cycle, but as {{divOutValid}} is maintained because it is not affected by the flush, the divider tries to broadcast the same tag once again during the next cycle, fixing under test.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Use one-hot decoders instead of index comparators for ReplacementArray,,,,,,MAL-2312,121813,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Won't Do,Swarnashri Chandrashekar,6287f376f0302e0068bff30c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/2/2022 8:41,9/23/2022 9:24,9/28/2022 0:51,8/31/2022 10:20,,,,,,,,,,,,,Implementation,Power,RTL/LSU,,,,,,,0,,,,"Opening this as a ticket for changing the ReplacementArray, similar to what was done in [https://sifive.atlassian.net/browse/MAL-2300|https://sifive.atlassian.net/browse/MAL-2300|smart-link] for the NLP flop arrays.",John Ingalls,Josh Smith,Swarnashri Chandrashekar,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,6287f376f0302e0068bff30c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2300,,,,,,,,,,,30/Aug/22 1:16 PM;ug:4233d19d-ca04-4b95-ba28-9c213471e434;image-20220830-201224.png;https://sifive.atlassian.net/secure/attachment/76786/image-20220830-201224.png,30/Aug/22 1:16 PM;ug:4233d19d-ca04-4b95-ba28-9c213471e434;image-20220830-201316.png;https://sifive.atlassian.net/secure/attachment/76785/image-20220830-201316.png,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{branch={count=1, dataType=branch}, json={""cachedValue"":{""errors"":[],""summary"":{""branch"":{""overall"":{""count"":1,""lastUpdated"":null,""dataType"":""branch""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00dsf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,53:01.2,"02/Aug/22 8:53 AM;5bb6808b9ba2930990f81895;Is the change that you envision?  In {{$federation/mallard/src/main/scala/core/mallard/ReplacementPolicies.scala}}:

{noformat}   val replArray_q = withClockAndReset(replArrayClock, reset_q) {
+    val writeUpdate_mruSetDcd = io.writeUpdate_mruSetWay.map(i => UIntToOH(i.bits.vAddrIdx))
     (0 until nSets).map { i =>
       val replSet                        = ReplacementPolicy.fromString(policy, nWays)
       val writeUpdate_mruWayEncThisIndex = Wire(Vec(nWritePorts, Valid(UInt(log2Ceil(nWays).W))))
       writeUpdate_mruWayEncThisIndex.zipWithIndex.foreach { case (w, j) =>
-        w.valid := io.writeUpdate_mruSetWay(j).valid && (io.writeUpdate_mruSetWay(j).bits.vAddrIdx === i.U)
+        w.valid := io.writeUpdate_mruSetWay(j).valid && writeUpdate_mruSetDcd(j)(i){noformat}

# This should be formally equivalent RTL.
# Is there a specific multi-bit-decoder logic cell in the synthesis libraries?  If yes, neat\!
# If not, then will this make any difference in PrimeTime power analysis, more than just PowerArtist?","02/Aug/22 9:00 AM;5acffeafaa802f2a797a955c;Yeah, something like that.  I’d be surprised if the synthesis tool was doing this sort of optimization itself.  But turning 128 or 256 index comparisons into a single decoder is definitely a win in both power and area I imagine.",02/Aug/22 9:14 AM;5bb6808b9ba2930990f81895;Simple question: isn’t that how a decoder is built?  🙂 ,"02/Aug/22 9:21 AM;5acffeafaa802f2a797a955c;Not at all.  The synthesis tools are pretty good at optimizing decoders like:

{noformat}val indexDec = (1.U(128.W) << index(6,0)){noformat}

That should generate very different (and substantially less) logic than:

{noformat}val indexDec = (0 until 128).map(i => index(6,0) === i.U).asUInt{noformat}","30/Aug/22 1:16 PM;6287f376f0302e0068bff30c;Power results for ReplacementArray before and after changes (both in debug mode):

Before changes (using comparators):

!image-20220830-201224.png|width=931,height=287!

After changes (using shifters):

!image-20220830-201316.png|width=933,height=287!

The power seems to have increased (+0.086 mW) when using shifters.","31/Aug/22 10:20 AM;5bb6808b9ba2930990f81895;Wow, that's the opposite result of what we expected!  Thank you for pushing through this analysis.  I guess we'll keep it as-is then.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] back-to-back misaligned vector load throughput is 1 per 8 clock cycles,,,,,,MAL-2311,121812,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,John Ingalls,5bb6808b9ba2930990f81895,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,8/2/2022 8:33,8/5/2022 1:34,9/28/2022 0:51,8/2/2022 8:41,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"cc: [~accountid:5fd15143b4a74900763834e0] 

The same test case as [https://sifive.atlassian.net/browse/MAL-2306|https://sifive.atlassian.net/browse/MAL-2306|smart-link]

{noformat}C                   0:      12334 [1] pc=[0000000080000bb0] W[r 0=0000000000000000][0] R[r14=0000000080001a13] R[r 0=0000000000000000] inst=[02070407] vle8.v  v8, (a4)
C                   0:      12332 vrf[ 8]=[232221201f1e1d1c1b1a191817161514][ffff]
Error: Instruction-by-Instruction check failed
C                   0:      12342 [1] pc=[0000000080000bb4] W[r 0=0000000000000000][0] R[r15=0000000080001a23] R[r 0=0000000000000000] inst=[02078487] vle8.v  v9, (a5)
C                   0:      12340 vrf[ 9]=[434241403f3e3d3c3b3a393837363534][ffff]
C                   0:      12353 [1] pc=[0000000080000bb8] W[r 0=0000000000000000][0] R[r16=0000000080001a33] R[r 0=0000000000000000] inst=[02080507] vle8.v  v10, (a6)
C                   0:      12351 vrf[10]=[434241403f3e3d3c3b3a393837363534][ffff]
C                   0:      12361 [1] pc=[0000000080000bbc] W[r 0=0000000000000000][0] R[r17=0000000080001a43] R[r 0=0000000000000000] inst=[02088587] vle8.v  v11, (a7)
C                   0:      12359 vrf[11]=[535251504f4e4d4c4b4a494847464544][ffff]
C                   0:      12404 [1] pc=[0000000080000bc0] W[r 0=0000000000000000][0] R[r21=0000000080001d4d] R[r 0=0000000000000000] inst=[020a85a7] vse8.v  v11, (s5)
C                   0:      12405 [1] pc=[0000000080000bc4] W[r 0=0000000000000000][0] R[r18=0000000080001d1d] R[r 0=0000000000000000] inst=[02090427] vse8.v  v8, (s2)
C                   0:      12406 [1] pc=[0000000080000bc8] W[r 0=0000000000000000][0] R[r19=0000000080001d2d] R[r 0=0000000000000000] inst=[020984a7] vse8.v  v9, (s3)
C                   0:      12407 [1] pc=[0000000080000bcc] W[r 0=0000000000000000][0] R[r20=0000000080001d3d] R[r 0=0000000000000000] inst=[020a0527] vse8.v  v10, (s4){noformat}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vle-vse"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Waveform: gamma11:/scratch/sols/tgv3/federation/builds/5750994d1e3/coreip_u8_minimal_vector/sim/sim3/tgv_vle-vse.outline/vector/vle-vse",Alexandre Solomatnikov,,,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1870,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/018f1ca43399b06a61a7be8e9ca958f054d78aba,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i00ds7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: exclude hwpfNdx bits from L1dcTag ECC,,,,,,MAL-2310,121811,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Binayak Tiwari,60a963ed8cbda700681b40c1,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,8/2/2022 8:29,8/2/2022 8:30,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/HWPF,RTL/LSU,,,,,,,0,,,,"The L1 D-Cache Tag Array is protected by SECDED ECC for dirty data coherence and address.  When we added {{hwpfNdx}} in the array as well in [https://sifive.atlassian.net/browse/MAL-818|https://sifive.atlassian.net/browse/MAL-818|smart-link], we included that in ECC for Chisel simplicity, but we don’t actually _need_ to: the {{hwpfNdx}} bits do not need error protection for functional safety.  We can omit them from the L1dcTag ECC encoded bits to save some ECC calculation time and area.",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-818,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00drz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,5,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Post Merge: Unexpected S2V completion pointer update during rewind,[TGV] Post Merge: Unexpected S2V ,,,,,MAL-2309,121620,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,Done,Krishnendu Patra,607e27ab074a0b006a588a51,Krishnendu Patra,607e27ab074a0b006a588a51,Krishnendu Patra,607e27ab074a0b006a588a51,7/31/2022 23:47,9/7/2022 17:43,9/28/2022 0:51,8/3/2022 7:45,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"*Error Message*:

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/Post-Merge-Short-ALL-test-ci-pre-merge/3474/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", 647: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert: at time 2794922500 ps
Assertion failed (verification library): Unexpected S2V completion pointer update during rewind  @[ROB.scala 833:13]

Fatal: ""/scratch/jenkins/archived-builds/fed/Post-Merge-Short-ALL-test-ci-pre-merge/3474/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", 649: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert: at time 2794922500 ps

$finish called from file ""/scratch/jenkins/archived-builds/fed/Post-Merge-Short-ALL-test-ci-pre-merge/3474/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", line 649.{noformat}

Commit ID: c81d98dd315813e81ce88d4245431e56f3075237

Config: coreip_u8_minimal_vector

Test: *torture_mmio80_T_2751/torture/mmio80*

rerun.outline:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""torture"",
  ""raw_plusargs"": [
    ""+clock_periph=4"",
    ""+clock_div0=4"",
    ""+clock_div1=4"",
    ""+clock_div2=4"",
    ""+clock_div3=4"",
    ""+clock_div4=4"",
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+enable_spike_cosim"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    """",
    ""+cosim_scoreboard_stall_time=1000000""
  ],
  ""subdir"": ""torture_mmio80_T_2751"",
  ""subtest"": ""mmio80"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1520496403
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""2000000""
  },
  ""program"": {
    ""torture_inbound"": true,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_inbound,80006400:80006800%20001c00:20002000"",
      ""uvm_test_top,torture_read_inbound,20000000:20001870%80005398:80006108""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Ishita Shah,Josh Smith,Karthikeyan K,Krishnendu Patra,,,,,,,,,,,,607e26355431a500701f5aed,5acffeafaa802f2a797a955c,5e0dd16e8dfdd40ec488ea2d,607e27ab074a0b006a588a51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,01/Aug/22 10:19 PM;ug:15383094-c284-4490-81a1-96744b73b3b3;reg3.JPG;https://sifive.atlassian.net/secure/attachment/75213/reg3.JPG,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-09T07:25:04.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,c4b47e54cfccaf83282d28df53896ef89a07faf1,,,n/a,,,,,,,,,Simulation-Torture,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00cnb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,06:02.4,"01/Aug/22 10:19 PM;607e27ab074a0b006a588a51;I have checked in waves like: *REG_3* signal goes high, that leads to this assertion failure, and *cmplPtrVec\[31:0]* value also changes from 1000 to 2000000. That could be the reason i believe. even i have tried tracing REG_3 signal didn't got enough clue.

!reg3.JPG|width=100%!



 ",01/Aug/22 10:19 PM;607e27ab074a0b006a588a51;[~accountid:609d7e1f5998a6006800dcc5] Can you please check on this?,"02/Aug/22 8:06 AM;607e26355431a500701f5aed;This issue we also see with the rat outline.

SHA: [+e22daff+|https://simscope.internal.sifive.com/models/undefined--master--e22daff600f43587d7a0213eb8c823bea23cf753]

config: coreip_u8_minimal_vector

rerun.outline

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""rat_default_T_0842"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3374085357
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}","02/Aug/22 10:00 AM;5acffeafaa802f2a797a955c;Andrew is on vacation this week, so I can try taking a look.","02/Aug/22 12:27 PM;5acffeafaa802f2a797a955c;I think this is an assertion issue related to [https://sifive.atlassian.net/browse/MAL-2166|https://sifive.atlassian.net/browse/MAL-2166|smart-link] . The following assertion was added for that ticket and is the same one firing in this case.

{noformat}    // MAL-2166: ROB full, rewind occurs, while free pointer is still at the oldest entry
    // The flush index cannot be older than the free pointer, so the free pointer should not change
    val triggerMal2166 = robWrIdxDecr.compare(cmplPtr) && robVec.valid.andR && robVectorClockEn && io.rewindReq.valid
    when (triggerMal2166) {
      ccover(true.B, 2,
        s""ROB_FULL_REWIND_WITH_${idString.toUpperCase}_AT_OLDEST"",
        s""ROB rewind occurs while ${idString} completion pointer is still at the oldest ROB entry"",
      )
    }
    when (RegNext(triggerMal2166, false.B)) {
      assert(RegNext(cmplPtrVec) === cmplPtrVec && RegNext(cmplPtrWrap) === cmplPtrWrap, s""Unexpected ${idString} completion pointer update during rewind"")
    }{noformat}

However in the failing torture test, the ROB has no valid vector instructions.  The ROB was completely full, but {{robVectorClockEn}} was on because {{io.dispHasV}} was asserted (but the vector instruction in DIS was stalled).  Because {{robVectorClockEn}} was asserted, the {{cmplPtrVec}} started moving again (its last update was from a long time ago when the last vector instruction was in the ROB).

I tried adding {{&& io.hasV}} to the {{triggerMal2166}} expression and the test passed.",03/Aug/22 7:45 AM;5acffeafaa802f2a797a955c;I modified the assertion and the test started passing in my work area. [~accountid:607e27ab074a0b006a588a51] if it looks okay for you can you please close the ticket?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Accumulator produces wrong results for vector compare instructions (for LMUL >=4),[TGV] Accumulator ,,,,,MAL-2308,121788,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Shaka Kao,5f94696c29bd8a006f94f0e1,Shaka Kao,5f94696c29bd8a006f94f0e1,8/2/2022 2:40,9/7/2022 17:43,9/28/2022 0:51,8/7/2022 17:21,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"Hi [@Andrew Hanselman|https://sifive.slack.com/team/U021VL97T27], after running the regression for vector floating point compare instructions, the failed tests are for LMUL >= 4. Below is an example:inst: {{vmfeq.vv v26, v4, v8}}
SEW=64; LMUL=4; VL=8,
the expected maskOut result is 0xFFFF_FF00
The VectorCompareUnit sends correct outputs (0xFFFC) to accumulator.

* result: 0'b1111_1111_1111_1100 (0xFFFC) for each uop (compare NOT equal for ALL 8 elements, so write {{0}} per each element)
* per waveform, the accu chunk data are correct (0xFFFC)
* however, the final WB result is 0xFFFF…..FFFF_CCCC

I switch to the divider task today and did not dig into this bug. If the div task can close smoothly, we can debug these cases next week. (since we got the info via TGV weekly report that you will OOO next week.)Here is an outline if you want to reproduce this case.

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0000_lmul4"",
  ""subtest"": ""vmfeq.vv"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vmfeq.vv_Masking-1_Exception-0_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_NoSelfCheck-1_FLMUL-1_NonzeroVstart-0_VstartPercent-0_Sample-150_LMUL-4_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-1"",
  ""seed"": {
    ""value"": 1345499493
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Brad Wu,Kira Tsao,Nicolas Brunie,Shaka Kao,,,,,,,,,,,,62103777eb2978006893b778,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,see Description,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-07T16:28:32.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00dmv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Aug/22 7:13 PM;5f94696c29bd8a006f94f0e1;Hi [~accountid:609d7e1f5998a6006800dcc5], I create a [PR|https://github.com/sifive/federation/pull/25142] to fix the accumulator obtaining the wrong vector command issue.","07/Aug/22 5:20 PM;5f94696c29bd8a006f94f0e1;PR ([https://github.com/sifive/federation/pull/25142|https://github.com/sifive/federation/pull/25142|smart-link] ) merged.

Note: This fix is not fully tested for P670 config.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: Issue stage pre-calculated age between replayed unrolled pieces,LSU: Issue stage,,,,,MAL-2307,121777,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,8/2/2022 0:37,8/12/2022 13:27,9/28/2022 0:51,8/2/2022 12:14,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"Most likely this is because LSU uses {{vlmul}} instead {{vl}}.

{noformat}Error: ""/scratch/sols/tgv3/federation/builds/5750994d1e3/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LSTPipe_assert.sv"", 4218: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LSTPipes_0.SiFive_LSTPipe_assert_0: at time 244582500 ps
Assertion failed (verification library): Issue stage pre-calculated age wrong versus LSTR stage 0  @[LSTPipe.scala 5333:20]

Fatal: ""/scratch/sols/tgv3/federation/builds/5750994d1e3/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LSTPipe_assert.sv"", 4227: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LSTPipes_0.SiFive_LSTPipe_assert_0: at time 244582500 ps

$finish called from file ""/scratch/sols/tgv3/federation/builds/5750994d1e3/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LSTPipe_assert.sv"", line 4227.{noformat}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vle-vse"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Waveform: gamma11:/scratch/sols/tgv3/federation/builds/5750994d1e3/coreip_u8_minimal_vector/sim/sim/tgv_vle-vse.outline/vector/vle-vse",Alexandre Solomatnikov,John Ingalls,,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-70,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/5750994d1e32f5b8beec248f30a4984e02d78593,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-08-02T14:34:38.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25011,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i00dkf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,15:16.2,02/Aug/22 10:44 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;Once LSU issue is fixed you can try [https://github.com/sifive/federation/commit/62eddcfb949003a05362344eeda5b4ea26025d8a|https://github.com/sifive/federation/commit/62eddcfb949003a05362344eeda5b4ea26025d8a|smart-link]  to use {{vsetivli}} instead of {{vsetvli}} for problematic testcase.,"05/Aug/22 8:15 AM;5bb6808b9ba2930990f81895;while this was found in a TGV test, it can also occur in a scalar core for a misaligned instruction",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LSU: unroll causes LSTA wrong address from PRF,[TGV] LSU: unroll causes LSTA wrong address from PRF,LSU (Load Store Unit),,,,MAL-2306,121775,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,8/2/2022 0:21,9/7/2022 17:43,9/28/2022 0:51,8/2/2022 10:52,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"{noformat}[COSIM-ERROR][0] m_dut_inst_item: [12342] InstInfo: VLD=1 | PC=0x0000000080000bb4 | INSN=0x02078487 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r9=0x434241403f3e3d3c3b3a393837363534 mask=ffff | READY=1 | CSR_TIMER=12342 | PRV=0 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080000d00 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=16 | SEW=8 | LMUL=m1 | VSEGELT=0

[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000080000bb4 | INSN=0x02078487 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r9=0x333231302f2e2d2c2b2a292827262524 mask=ffff{noformat}

{noformat}C                   0:      12334 [1] pc=[0000000080000bb0] W[r 0=0000000000000000][0] R[r14=0000000080001a13] R[r 0=0000000000000000] inst=[02070407] vle8.v  v8, (a4)
C                   0:      12332 vrf[ 8]=[232221201f1e1d1c1b1a191817161514][ffff]
Error: Instruction-by-Instruction check failed
C                   0:      12342 [1] pc=[0000000080000bb4] W[r 0=0000000000000000][0] R[r15=0000000080001a23] R[r 0=0000000000000000] inst=[02078487] vle8.v  v9, (a5)
C                   0:      12340 vrf[ 9]=[434241403f3e3d3c3b3a393837363534][ffff]
C                   0:      12353 [1] pc=[0000000080000bb8] W[r 0=0000000000000000][0] R[r16=0000000080001a33] R[r 0=0000000000000000] inst=[02080507] vle8.v  v10, (a6)
C                   0:      12351 vrf[10]=[434241403f3e3d3c3b3a393837363534][ffff]
C                   0:      12361 [1] pc=[0000000080000bbc] W[r 0=0000000000000000][0] R[r17=0000000080001a43] R[r 0=0000000000000000] inst=[02088587] vle8.v  v11, (a7)
C                   0:      12359 vrf[11]=[535251504f4e4d4c4b4a494847464544][ffff]
C                   0:      12404 [1] pc=[0000000080000bc0] W[r 0=0000000000000000][0] R[r21=0000000080001d4d] R[r 0=0000000000000000] inst=[020a85a7] vse8.v  v11, (s5)
C                   0:      12405 [1] pc=[0000000080000bc4] W[r 0=0000000000000000][0] R[r18=0000000080001d1d] R[r 0=0000000000000000] inst=[02090427] vse8.v  v8, (s2)
C                   0:      12406 [1] pc=[0000000080000bc8] W[r 0=0000000000000000][0] R[r19=0000000080001d2d] R[r 0=0000000000000000] inst=[020984a7] vse8.v  v9, (s3)
C                   0:      12407 [1] pc=[0000000080000bcc] W[r 0=0000000000000000][0] R[r20=0000000080001d3d] R[r 0=0000000000000000] inst=[020a0527] vse8.v  v10, (s4){noformat}

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vle-vse"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Waveform: gamma11:/scratch/sols/tgv3/federation/builds/5750994d1e3/coreip_u8_minimal_vector/sim/sim3/tgv_vle-vse.outline/vector/vle-vse",Alexandre Solomatnikov,John Ingalls,Nicolas Brunie,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5bb6808b9ba2930990f81895,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2279,,MAL-2332,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/018f1ca43399b06a61a7be8e9ca958f054d78aba,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-08-02T14:32:15.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25007,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i00djz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,15:34.5,"05/Aug/22 8:15 AM;5bb6808b9ba2930990f81895;while this was found in a TGV test, it can also occur in a scalar core behind an unrolling-then-faulting misaligned",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Make Baler have as much Dispatch/Issue/pipeline capacity as the LSU,,,,,,MAL-2305,121722,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,8/1/2022 15:33,8/1/2022 15:33,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"TGV uses the {{nBalPipes}}parameter, currently hardcoded = 1, to set the width of
- how many instructions/cycle can be dispatched to its issue queue
- how much stuff it can do per cycle in terms of moving data to or from the VRF

In the big picture, the Baler and LSU should be matched in terms of instruction rates and data bandwidths supported. This will probably involve some tweaks to, or replacement of, the {{nBalPipes}} parameter. Adding this task in addition to things like increasing Baler to two pipes, so that we can automatically level-set TGV’s load/store performance based on the LSU configuration.",Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2038,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,{},,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00d8v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Modify NLP to enable use of a dual-ported SRAM,,,,,,MAL-2304,121687,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,8/1/2022 12:02,9/23/2022 9:23,9/28/2022 0:51,8/2/2022 8:38,,,,,,,,,,,,,Implementation,Performance,RTL/Frontend,,,,,,,0,,,,"Currently the P650 NLP is micro-architected to make use of a single-ported memory.  We’ve known for a long time that it is better suited to a dual-ported memory for IPC and frequency reasons, but so far the SRAM macros that we’ve had access to have been too slow.

We are evaluating getting faster SRAMs from an external vendor, and it looks likely that we will end up making the decision to acquire those.  As of right now, the decision has been made that the NLP should support a parameter to use either a single ported memory (with the IPC and timing implications that come with that), or a dual ported memory.

This ticket is to track the RTL work for modifying the NLP to natively support a dual-ported memory as well.",Brian Grayson,Chia-I Chen,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,,,,,,,,,,5e1371705361330daaeaf389,61aaafab977c5b007241043c,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Branch Prediction,Front End,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-02T08:37:01.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,bbb9e224e3a13c2fba999edd9b6e866cb38a42ad,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00d13:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,3,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Aug/22 8:27 PM;5acffeafaa802f2a797a955c;I tested out P650 with the dual-ported SRAM configuration and ran Dhrystone and Coremark.  Performance slightly improved in both cases (presumably from removing the fetch stalls required to allow NLP updates happen):

* The main Dhrystone loop went from 71 cycles to 70 cycles
* The Coremark score went from 8.778 to 8.783","02/Aug/22 8:38 AM;5acffeafaa802f2a797a955c;Resolving for now because the RTL has been modified to support dual-ported memories.  No configuration has been updated yet because our current memories are still too slow to use.

Using the dual-ported memory can be enabled via JSON by setting the {{ifu}} {{dpsramNlp}} parameter to true.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion failed: At most one result should try to commit at EXN stage of VexPipe,[TGV] Assertion failed  EXN stage of VexPipe,Execution Unit ,,,,MAL-2303,121679,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,8/1/2022 9:16,9/7/2022 17:43,9/28/2022 0:51,8/2/2022 20:11,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"We see the below assertion failure from VexPipe block.

*Error message*

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_167_test_failure/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_VexPipe_1_assert.sv"", 397: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_1.SiFive_VexPipe_1_assert: at time 1980762500 ps
Assertion failed: At most one result should try to commit at EXN stage of VexPipe.
    at VexPipe.scala:1892 assert(PopCount(outputs.map(o => o._1).asUInt) <= 1.U, ""At most one result should try to commit at EXN stage of VexPipe."")

Fatal: ""/scratch/ishitashah/tgv_regression/sign_167_test_failure/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_VexPipe_1_assert.sv"", 399: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_1.SiFive_VexPipe_1_assert: at time 1980762500 ps{noformat}

*SHA:* [*8d5b9f2*|https://simscope.internal.sifive.com/models/undefined--master--8d5b9f2f633aafce2183b3e8a89979421bd4b2db]

+*Config:*+ coreip_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""rat_default_T_0884"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 547350751
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath*

{{gamma25:/scratch/ishitashah/tgv_regression/sign_167_test_failure/federation/builds2/coreip_p670/sim/rerundir1/rerun.outline/rat_default_T_0884/rat/default}}",David Kravitz,Ishita Shah,Nicolas Brunie,,,,,,,,,,,,,5fd15143b4a74900763834e0,607e26355431a500701f5aed,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-02T19:54:43.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/26b0b9d02bc12b0d5002789224364f1b6a23c1e7,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00czb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,43:54.3,01/Aug/22 9:43 AM;5fd15143b4a74900763834e0;[~accountid:6065017e90e3950069cf01c5] please take a look and pass on as appropriate,02/Aug/22 5:46 AM;6065017e90e3950069cf01c5;[https://github.com/sifive/federation/pull/24994|https://github.com/sifive/federation/pull/24994|smart-link]  should fix the problem,"02/Aug/22 5:47 AM;6065017e90e3950069cf01c5;A few details:

* the permute engine was not checking if result forward pipeline was active before entering idle mode, which could lead it to forward result at unwanted time or to prevent the next operation from correctly intializing the staged info state (because of a spurious complete maintained high).",02/Aug/22 8:11 PM;6065017e90e3950069cf01c5;Should be fixed by [https://github.com/sifive/federation/pull/24994|https://github.com/sifive/federation/pull/24994|smart-link] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Investigate single-cycle VectorALU optimizations,,,,,,MAL-2302,121664,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,8/1/2022 4:54,9/7/2022 12:11,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,Timing,,,,,,,,0,,,,"In a recent {{p670}}  synthesis ({{ppa_tgv_20220729}}), the first cycle of {{VexPipe}} appears close to the most critical path (although the actual most critical path seems to be on the scalar side around the {{NLP}})



+*Path analysis:*+ The path is located in {{VexPipe}} {{EX}} stage and goes from vector payload ({{opcode}}) through {{vectorALU}} to the mask pipeline register between {{RR}} and {{EX}} (this corresponds to the mask bypass bus).

{noformat}Path 3: VIOLATED (-58 ps) Setup Check with Pin tile/core/tgv/vex/exPipes_0/bpeMaskPreHi_EX_reg[0]/CP->D
           View: func_tt_0p750v_85c_typical_view
     Startpoint: (R) tile/core/tgv/vex/exPipes_1/instPayload_EX_cmn_ctrl_funct7_reg[5]/CP
       Endpoint: (R) tile/core/tgv/vex/exPipes_0/bpeMaskPreHi_EX_reg[0]/D
                
             Slack:=     -58  {noformat}

Timing:

* {{func7}} flop output: {{26 ps}}
* entry in vectorALU: {{111 ps}} (+85ps)
* output of vectorALU: {{257 ps}} (+146ps)
* flopped in mask register: {{395 ps}} (+138ps)

{noformat}#-----------------------------------------------------------------------------------------------------------------------------------------------------------------
#                            Timing Point                              Flags    Arc   Edge             Cell              Fanout Load Trans Delay Arrival Instance 
#                                                                                                                               (fF)  (ps)  (ps)   (ps)  Location 
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------
  tile/core/tgv/vex/exPipes_1/instPayload_EX_cmn_ctrl_funct7_reg[5]/CP -       -      R     (arrival)                       730    -     0     0       0    (-,-) 
  tile/core/tgv/vex/exPipes_1/instPayload_EX_cmn_ctrl_funct7_reg[5]/Q  -       CP->Q  R     DFQD4BWP240H8P57PDULVT            5  5.8    10    26      26    (-,-) 
  tile/core/tgv/vex/exPipes_1/fopt61321/ZN                             -       I->ZN  F     INVD2BWP240H8P57PDULVT            2  2.1     7     7      33    (-,-) 
  tile/core/tgv/vex/exPipes_1/g68875/ZN                                -       I->ZN  R     INVSKFD3BWP240H11P57PDULVT        1  2.1     8     8      41    (-,-) 
  tile/core/tgv/vex/exPipes_1/g53/ZN                                   -       A1->ZN F     AOI21SKRD6BWP240H8P57PDULVT       2  2.9    10     8      49    (-,-) 
  tile/core/tgv/vex/exPipes_1/g73992/ZN                                -       A2->ZN R     NR2D6BWP240H8P57PDULVT            1  4.3     9     8      57    (-,-) 
  tile/core/tgv/vex/exPipes_1/g74274/ZN                                -       A1->ZN F     NR2SKRD16BWP240H8P57PDULVT        3 10.9     7     8      65    (-,-) 
  tile/core/tgv/vex/exPipes_1/g73990/ZN                                -       A1->ZN R     NR2OPTPAD16BWP240H8P57PDULVT     16 14.7    10     8      73    (-,-) 
  tile/core/tgv/vex/exPipes_1/fopt61604/ZN                             -       I->ZN  F     INVD4BWP240H8P57PDULVT            2  3.0     6     6      79    (-,-) 
  tile/core/tgv/vex/exPipes_1/fopt61590/ZN                             -       I->ZN  R     INVD4BWP240H8P57PDULVT            5  4.0     7     6      86    (-,-) 
  tile/core/tgv/vex/exPipes_1/fopt61584/ZN                             -       I->ZN  F     INVD2BWP240H8P57PDULVT            2  2.1     7     6      92    (-,-) 
  tile/core/tgv/vex/exPipes_1/fopt61583/ZN                             -       I->ZN  R     INVSKFD4BWP240H8P57PDULVT         1  1.1     4     4      96    (-,-) 
  tile/core/tgv/vex/exPipes_1/g8938/Z                                  -       B2->Z  R     AO22D4BWP240H8P57PDULVT           3  2.2     6    14     111    (-,-) 
  tile/core/tgv/vex/exPipes_1/vectorALUOut_alu/fopt20122/Z             -       I->Z   R     BUFFSKRD3BWP240H8P57PDULVT        2  1.7     5    10     121    (-,-) 
  tile/core/tgv/vex/exPipes_1/vectorALUOut_alu/g20481/ZN               -       S->ZN  R     MUX2ND2BWP240H8P57PDULVT          3  2.8     9    21     142    (-,-) 
  tile/core/tgv/vex/exPipes_1/vectorALUOut_alu/g20703/ZN               -       A1->ZN R     INR2D4BWP240H8P57PDULVT           2  1.5     6    11     152    (-,-) 
  tile/core/tgv/vex/exPipes_1/vectorALUOut_alu/g20861/ZN               -       I->ZN  F     INVD2BWP240H8P57PDULVT            1  1.0     4     4     157    (-,-) 
  tile/core/tgv/vex/exPipes_1/vectorALUOut_alu/g20860/ZN               -       B->ZN  R     IOA21D2BWP240H11P57PDULVT         1  1.0     7     5     162    (-,-) 
  tile/core/tgv/vex/exPipes_1/vectorALUOut_alu/g20859/ZN               -       A1->ZN R     IOA21D6BWP240H8P57PDULVT          4  4.3     8    15     177    (-,-) 
  tile/core/tgv/vex/exPipes_1/vectorALUOut_alu/g20858/ZN               -       A1->ZN F     AOI21SKRD8BWP240H8P57PDULVT       4  4.4    11     9     187    (-,-) 
  tile/core/tgv/vex/exPipes_1/vectorALUOut_alu/fopt18492/ZN            -       I->ZN  R     INVSKFD4BWP240H8P57PDULVT         1  4.3    10     9     196    (-,-) 
  tile/core/tgv/vex/exPipes_1/vectorALUOut_alu/g18491/ZN               -       A2->ZN F     NR2D12BWP240H11P57PDULVT          2  6.8     8     8     203    (-,-) 
  tile/core/tgv/vex/exPipes_1/vectorALUOut_alu/g144/ZN                 -       A1->ZN R     ND2OPTPAD16BWP240H8P57PDULVT      5  5.7     5     5     208    (-,-) 
  tile/core/tgv/vex/exPipes_1/vectorALUOut_alu/g142/ZN                 -       I->ZN  F     INVSKRD10BWP240H8P57PDULVT        9  6.5     6     6     214    (-,-) 
  tile/core/tgv/vex/exPipes_1/vectorALUOut_alu/add_103_242_g19817/ZN   -       A1->ZN R     NR2OPTPAD2BWP240H11P57PDULVT      1  1.2     8     6     220    (-,-) 
  tile/core/tgv/vex/exPipes_1/vectorALUOut_alu/add_103_242_g19816/ZN   -       A1->ZN F     NR2OPTPAD2BWP240H11P57PDULVT      1  1.4     7     6     226    (-,-) 
  tile/core/tgv/vex/exPipes_1/vectorALUOut_alu/g19815/ZN               -       A1->ZN R     XNR2D4BWP240H8P57PDULVT           1  1.3     6    17     243    (-,-) 
  tile/core/tgv/vex/exPipes_1/vectorALUOut_alu/g19814/ZN               -       A1->ZN R     IOA21D8BWP240H8P57PDULVT          4  3.4     9    14     257    (-,-) 
  tile/core/tgv/vex/exPipes_1/g69828/ZN                                -       A1->ZN F     AOI21D2BWP240H11P57PDULVT         1  1.1    11     9     266    (-,-) 
  tile/core/tgv/vex/exPipes_1/g69827/ZN                                -       A2->ZN R     ND2SKFD2BWP240H8P57PDULVT         1  0.9     9     9     275    (-,-) 
  tile/core/tgv/vex/exPipes_1/g46543/ZN                                -       A1->ZN F     NR2SKRD2BWP240H8P57PDULVT         1  1.0     9     7     282    (-,-) 
  tile/core/tgv/vex/exPipes_1/g70629/ZN                                -       A1->ZN R     ND2D2BWP240H8P57PDULVT            1  2.0     8     7     289    (-,-) 
  tile/core/tgv/vex/exPipes_1/g70628/ZN                                -       A1->ZN F     ND2SKFD6BWP240H8P57PDULVT         3  4.0     8     7     296    (-,-) 
  tile/core/tgv/vex/exPipes_1/g70625/ZN                                -       A2->ZN R     ND2SKFD4BWP240H8P57PDULVT         1  2.8     8     7     304    (-,-) 
  tile/core/tgv/vex/exPipes_1/g39309/ZN                                -       A1->ZN F     AOI21D8BWP240H8P57PDULVT          1  2.1    10     7     311    (-,-) 
  tile/core/tgv/vex/exPipes_1/fopt57331/ZN                             -       I->ZN  R     INVSKFD6BWP240H8P57PDULVT         3  2.6     6     6     316    (-,-) 
  tile/core/tgv/vex/exPipes_0/g56532/ZN                                -       A1->ZN F     AOI21SKRD4BWP240H8P57PDULVT       1  1.3    10     7     324    (-,-) 
  tile/core/tgv/vex/exPipes_0/g55622/ZN                                -       A2->ZN R     ND2SKFD3BWP240H8P57PDULVT         1  1.1     7     7     330    (-,-) 
  tile/core/tgv/vex/exPipes_0/g50562/ZN                                -       I->ZN  F     INVD2BWP240H8P57PDULVT            1  1.5     5     5     336    (-,-) 
  tile/core/tgv/vex/exPipes_0/g50561/ZN                                -       A1->ZN R     ND2D4BWP240H8P57PDULVT            5  4.3     9     6     342    (-,-) 
  tile/core/tgv/vex/exPipes_0/g50560/ZN                                -       A1->ZN F     AOI22D1BWP240H11P57PDULVT         1  1.3    23    12     354    (-,-) 
  tile/core/tgv/vex/exPipes_0/g50925/ZN                                -       A2->ZN R     ND2SKFD3BWP240H8P57PDULVT         2  1.7    11    10     365    (-,-) 
  tile/core/tgv/vex/exPipes_0/mux__GEN_91[0]_940_20_g20223/Z           (p)     I2->Z  R     MUX4OPTDD2BWP240H8P57PDULVT       1  0.8     8    17     382    (-,-) 
  tile/core/tgv/vex/exPipes_0/mux__GEN_91[0]_940_20_g20224/Z           (p)     I1->Z  R     MUX2D2BWP240H8P57PDULVT           1  0.8     6    13     394    (-,-) 
  tile/core/tgv/vex/exPipes_0/bpeMaskPreHi_EX_reg[0]/D                 -       -      R     DFQD2BWP240H8P57PDULVT            1    -     -     0     395    (-,-) 
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------
{noformat}",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2226,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00cw7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Simplify bpeMask LUT in RR stage,,,,,,MAL-2301,121591,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,7/31/2022 17:51,8/18/2022 19:50,9/28/2022 0:51,8/1/2022 3:24,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"The forwarding path from EX* to RR includes {{bpeMaskLUT_RR}} → {{bpeMaskPre_EX}}, which is one of the critical path in VEX.

{{bpeMaskLUT_RR}} can be further optimized to remove 1 mux level in it, which can benefit the overall WNS.",Andrew Hanselman,Brad Wu,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,62103777eb2978006893b778,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2226,,,,,,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-09T07:06:28.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00cgv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Use one-hot decoders instead of index comparisons for NLP LRU array update,,,,,,MAL-2300,121589,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,7/31/2022 16:37,8/3/2022 10:24,9/28/2022 0:51,8/2/2022 8:42,,,,,,,,,,,,,Power,RTL/Frontend,,,,,,,,0,,,,"The NLP uses a flop-array for the replacement policy state.  In P650 the NLP has 256 sets and 2 ways, so a 256-entry array of a single bit each.  The current logic loops over each entry and compares the update index to the entry’s index, generating 256 comparators.  A more efficient way to do this would be with a one-hot decoder of the update index.",Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2312,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-02T08:41:53.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,d277fc0c12123373212c81c14fa60a6f1fde36e6,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00cgf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Remove JALR-related logic from 2nd branch pipe,,,,,,MAL-2299,121588,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Julian Bailey,629ab2a89bc7150068d00cdf,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,7/31/2022 15:50,8/18/2022 2:59,9/28/2022 0:51,8/16/2022 16:16,,,,,,,,,,,,,Implementation,Power,RTL/IEX,,,,,,,0,,,,"In the Mallard micro-architecture, it’s expected that even if there are multiple branch execution pipes, only one of them should support JALR instructions.  The RDU will steer JALR instructions to the lowest-indexed branch pipe.  For example in P650, integer pipes 2 and 3 support branches.  So only pipe 2 is expected to handle JALR instructions.

However, in {{ExPipe.scala}} there is only a {{branch}} parameter to indicate that this pipe supports branches or not.  There is not another parameter which indicates that this pipe should also support JALR instructions.  For P650 It looks like pipe 3 includes the logic for handling JALR instructions even though it’s unnecessary.  We should change the RTL to optimize away the JALR-specific logic from branch pipes which are not the lowest-indexed.  This should help reduce area in the issue queue for pipe 3 also.",Josh Smith,Julian Bailey,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,,,,,,,,,,,,,,,,,,,,,MAL-1784,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-16T16:15:00.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,f7c94d179c494c3a01c7e479aa7b5553d35ee060,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00cg7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,16:39.1,01/Aug/22 1:16 AM;629ab2a89bc7150068d00cdf;[~accountid:5acffeafaa802f2a797a955c] this is very similar to what I have done for simple branches no? Just that the pipe supports all the other instructions too?,01/Aug/22 7:50 AM;5acffeafaa802f2a797a955c;[~accountid:629ab2a89bc7150068d00cdf] There is overlap.  I didn’t think too hard about how these two things would interact.  But we can’t have just have the simple branch pipe be the JALR pipe also because the whole idea of the simple branch pipe was that there could be no destination register.,"01/Aug/22 7:55 AM;629ab2a89bc7150068d00cdf;Sorry I wasn’t clear…

We basically need a switch that disables supporting JALR in the EXPipe but allows the pipe to support all the other stuff. I didnt mean that Simple branch pipes need to support JALR…","01/Aug/22 8:03 AM;5acffeafaa802f2a797a955c;Oh yeah, something like that was what I had in mind.  Or the other way around, a switch that allows the JALR stuff but then also a requirement that the {{branch}} parameter is also true.",08/Aug/22 1:23 PM;629ab2a89bc7150068d00cdf;Just going to finish the simple branch stuff as this work has some cross-over with that…,"16/Aug/22 5:19 AM;629ab2a89bc7150068d00cdf;Hey Josh, would you expect {{io.branchResult_EX.bits.redirTgt}} to be stripped off when JALR is not supported by pipeline?


I have pushed some changes to the branch, see here in the draft PR: [https://github.com/sifive/federation/pull/25324/files|https://github.com/sifive/federation/pull/25324/files]

Need to test to ensure I haven’t broken anything…but this represents the first set of changes…I think I have pulled out most of the logic. There is some crossover with simpleBranchOnly support but I haven’t changed any of that yet, I am tempted to leave things as they are.
 ","16/Aug/22 5:37 AM;5acffeafaa802f2a797a955c;{quote}Hey Josh, would you expect {{io.branchResult_EX.bits.redirTgt}} to be stripped off when JALR is not supported by pipeline?{quote}

Yes, the {{redirTgt}} field is only used by JALR instructions, and it’s used to train the IJTP after mispredictions.","16/Aug/22 6:10 AM;629ab2a89bc7150068d00cdf;Cool thats what I thought, just wanted to double check it wasn’t used anywhere else\!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Tie vsetvl hint bit to false in IFU when there's no vector unit,,,,,,MAL-2298,121587,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,7/31/2022 11:08,9/3/2022 7:40,9/28/2022 0:51,8/1/2022 12:51,,,,,,,,,,,,,Implementation,RTL/Frontend,Timing,,,,,,,0,,,,"Currently, the scalar pipeline in P670 can only handle one {{vsetvl}} instruction per decode group.  The fetch unit has some logic to guarantee this by pre-decoding {{vsetvl}} instructions and preventing any from moving to ID stage if there is an older {{vsetvl}} also moving to ID.  This path has a lot of gate depth.

When no vector unit is present, we should tie-off the predecoding logic.",Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-01T12:51:41.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,499cadae891e105a00ddbd51a0b732b9d5761d3b,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00cfz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"Create design spec JSONs for P650 and P670 - mc, mc8, and mc16",,,,,,MAL-2297,121585,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Julian Bailey,629ab2a89bc7150068d00cdf,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,7/31/2022 9:04,9/23/2022 9:23,9/28/2022 0:51,8/9/2022 13:14,,,,,,,,,,,,,Implementation,,,,,,,,,0,,,,"The Physical design team is asking for design spec JSONs to be created for the MC versions of both P650 and P670.  They want mc, mc8, and mc16 versions.

We should largely be able to copy the examples from X280 under {{<federation>/specs/design/coreip/standard/x280{mc, mc8, mc16}.json}} to create {{p650{mc, mc8, mc16}.json}} and {{p670{mc, mc8, mc16}.json}} files.

The corresponding make files should also be created under {{<federation>/mk/base_configs}} so that these can be built and simulated in the federation make flow.  We should also test the PCS wake flow builds (examples given on the PCS github README page: [https://github.com/sifive/federation/tree/master/product-coreip-sifive|https://github.com/sifive/federation/tree/master/product-coreip-sifive|smart-link] )",Arjun Pal Chowdhury,Ernie Edgar,Josh Smith,Julian Bailey,Krishna Mayya,Mahima Venugopala,Nicolas Brunie,Robbie Adler,,,,,,,,5fb59104d670b8006e7569d6,5b9050cdf58aee2b8d67281e,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,625f14df0f5cf500697e579b,6261b4eb436629006f74ae2a,6065017e90e3950069cf01c5,5dcc1b25bb355b0ddbd19f53,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-08-09T13:13:08.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1b49dea35983f4cd4b4bd365a7e1c217403d5ae9,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,,,,,,,,,,,,,2|i00cfj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,38:34.8,"01/Aug/22 1:38 AM;629ab2a89bc7150068d00cdf;[~accountid:5acffeafaa802f2a797a955c] the p650mc.json already exists but it is a bit different to the x280mc.json, should I modify it?

Actually looking at the history of the p650mc.json there are reasons for the differences, so I should base the MC configs from this one rather than the x280?","01/Aug/22 8:00 AM;5acffeafaa802f2a797a955c;[~accountid:629ab2a89bc7150068d00cdf] Yeah you should base them on p650mc.json.  The differences appear to be in the power management controller and trace unit settings, etc….  Someone else will have to review those parts of the JSON because I don’t even know what they should really be.","01/Aug/22 9:01 AM;629ab2a89bc7150068d00cdf;Ffirst pass at the json files have been added and pushed to the branch [https://github.com/sifive/federation/tree/MAL-2297-Design_Spec_MC_P650_P670|https://github.com/sifive/federation/tree/MAL-2297-Design_Spec_MC_P650_P670|smart-link] 

p650: MC8 and MC16 are based on P650MC but with changes ported in from the X280MC8/MC16 (compared X280MC and X280MC8/MC16 and worked out the extra changes that might be appropriate).

P670: as per P650 but with Tile name changes to P670…

WIll work on the mk files and then test everything out…will the put together a draft pull request and get everything reviewed.",01/Aug/22 10:15 AM;5acffeafaa802f2a797a955c;Which changes did you port in from the X280 configurations?  It’s hard for me to tell from just staring at it.  Some of those changes might not be applicable.,"01/Aug/22 10:58 AM;629ab2a89bc7150068d00cdf;The p650mc config didnt define clusters, so the mc8 and mc16 defines clusters for trace and then organises them, just as they did for the x280. I can go through and comment sections if you want?



I should point out the changes ported were only for the p650mc8/mc16 & p670mc8/mc16. I basically diffed the x280mc against x280mc8 and worked out what was changed and just ported those over. ","01/Aug/22 11:17 AM;5acffeafaa802f2a797a955c;Ah, okay.  We probably need [~accountid:5b9050cdf58aee2b8d67281e] to look at the trace-related parts of the JSON files on that branch.  Also, I think the existing {{p650mc.json}} file might be missing some things like the PMC. Perhaps [~accountid:5fb59104d670b8006e7569d6] can help review that?",01/Aug/22 11:26 AM;5b9050cdf58aee2b8d67281e;[~accountid:629ab2a89bc7150068d00cdf] The trace configs on this branch look good to me.,"01/Aug/22 1:29 PM;5fb59104d670b8006e7569d6;Hi [~accountid:629ab2a89bc7150068d00cdf] 

To implement low power stuff (with PMC) you need to make sure two things are defined properly

# SMC/TMC module is present and SMC.powerGatingPresent=true
# Define PMC Port

* For MultiCluster configs (MC8, MC16) I see #1 is properly defined. However, I don’t see any PMCPort on MC8, MC16 Json files. If not defined please take reference from from X280MC8/16 Json and look for {{PMCPort}}
* For MC config I don't see any of SMC, PMCPort has been defined. Please look for {{SMC}} and {{PMCPort}} in corresponding x280mc.json file and copy paste the same.","01/Aug/22 11:06 PM;629ab2a89bc7150068d00cdf;Arjun, I will take a look at the PMC stuff and correct it today ",01/Aug/22 11:49 PM;629ab2a89bc7150068d00cdf;[~accountid:5fb59104d670b8006e7569d6] I have updated the related sections and think these are now correct.,"02/Aug/22 2:06 PM;5fb59104d670b8006e7569d6;The changes look good to me. 

Also please note in Panda we are going to have  Tile’s {{""clockCrossingType"": ""AsynchronousCrossing""}}.

Same thing for {{TraceEncoder }}as we are going to support DVFS. 

However, you may not need to enable the same as it may have some other repercussion. (Some cease monitor wrongly coded  in DV env will/may fail in simulation).

But we plan to enable that at some point in Panda. Just FYI.",03/Aug/22 2:30 PM;629ab2a89bc7150068d00cdf;Just going to try building these before we create the pull request.,"04/Aug/22 3:05 AM;629ab2a89bc7150068d00cdf;Debugging wake builds, I am running makeRTLCoreFor but it fails on some of the configs","05/Aug/22 4:29 AM;629ab2a89bc7150068d00cdf;Testing using 

{noformat}wake -x 'makeRTLCoreIPFor standardCore <Core_Name>{noformat}

Results:

||*Build*||*Status*||
|p650mc|OK|
|p650mc8|OK|
|p650mc16|Fails
{noformat}Exception in thread ""main"" java.lang.IllegalArgumentException: requirement failed: Diplomacy has detected a problem with your graph:
The following node node has 20 inward connections and no outward connections.                           
At least one outward connection was required.                                                             
                                                                                                        
node name: system_bus_xbar.node, serial: 526                                                              
nexus system_bus_xbar.node node:                                                                        
parents: system_bus_xbar/SubsystemCoherentSbus/subsystem/system                                           
locator:  (SystemBus.scala:58:53)                                                            
                                                                                                                
1 inward nodes bound: [query-fixer.node]                                                      
0 outward nodes bound: []                                                                                                                                                                                                                                                             
                                                                                                                                                                                                                                                                                      
number of known := bindings to inward nodes: 20                                                                                                                                                                                                                                       
number of known := bindings to outward nodes: 0 {noformat}|
|p670mc|Fails
* *build/product-coreip-sifive/p670mc/firrtl/design.fir:1:1: error: module ""MallardTile_1"" not deduplicated with ""MallardTile""*
* Along with other similar erros for TGV etc.
* Confusing as the JSON is identical to the P50mc json except switching p650 for p670?
* Advice please?|
|p670mc8|Fails, current error is similar to P650mc16 although probably wont work due to p670mc issue too.|
|p670mc16|Fails, current error is similar to P650mc16 although probably wont work due to p670mc issue too.|","05/Aug/22 4:45 AM;5acffeafaa802f2a797a955c;{quote}*build/product-coreip-sifive/p670mc/firrtl/design.fir:1:1: error: module ""MallardTile_1"" not deduplicated with ""MallardTile""*{quote}

Deduplication checks that the logic generated for each tile is identical, so that they can be stamped down in MC configurations.  This implies that there’s something inside tile 1 which is being generated differently from tile 0.  Since this happens with P670 but not P650, maybe it points to something inside of TGV. [~accountid:5fd15143b4a74900763834e0] [~accountid:6065017e90e3950069cf01c5] FYI

Unfortunately, I don’t know what the tricks are to narrow down where the problem is.  It might be useful to ask in the chisel channel on slack.",05/Aug/22 6:12 AM;6065017e90e3950069cf01c5;Most recently this was often due to using a generic {{ShouldBeRetimed}} versus SiFive’s own implementation.,05/Aug/22 6:13 AM;6065017e90e3950069cf01c5;[~accountid:629ab2a89bc7150068d00cdf] what’s your branch name ?,05/Aug/22 7:54 AM;629ab2a89bc7150068d00cdf;[~accountid:6065017e90e3950069cf01c5] [MAL-2297-Design_Spec_MC_P650_P670|https://github.com/sifive/federation/tree/MAL-2297-Design_Spec_MC_P650_P670],"05/Aug/22 10:21 AM;629ab2a89bc7150068d00cdf;[~accountid:6065017e90e3950069cf01c5] I ran: 

{noformat} wake -x 'makeRTLCoreIPFor useSFC standardCore ""p670mc""'{noformat}



And the result was:

{noformat}===== 'MallardTile', 'MallardTile_1', 'MallardTile_2', 'MallardTile_3' are marked as ""must deduplicate"", but did not deduplicate. =====
TileResetDomain
└── (MallardTile)
    └── MallardCore
        └── TGV
            └── VEX
                ├── VexPipe
                │   └── VectorIotaUnit [4]
                └── VexPipe_1
                    └── VectorIotaUnit_1 [5]
TileResetDomain_1
└── (MallardTile_1)
    └── MallardCore_1
        └── TGV_1
            └── VEX_1
                ├── VexPipe_2
                │   └── VectorIotaUnit_2 [0]
                └── VexPipe_3
                    └── VectorIotaUnit_3 [1]
TileResetDomain_2
└── (MallardTile_2)
    └── MallardCore_2
        └── TGV_2
            └── VEX_2
                ├── VexPipe_4
                │   └── VectorIotaUnit_4 [2]
                └── VexPipe_5
                    └── VectorIotaUnit_5 [3]
TileResetDomain_3
└── (MallardTile_3)
    └── MallardCore_3
        └── TGV_3
            └── VEX_3
                ├── VexPipe_6
                │   └── VectorIotaUnit_6 [4]
                └── VexPipe_7
                    └── VectorIotaUnit_7 [5]
Failure candidates:
 - [0] Modules 'VectorIotaUnit' and 'VectorIotaUnit_2' likely should dedup but do not.
 - [1] Modules 'VectorIotaUnit_1' and 'VectorIotaUnit_3' likely should dedup but do not.
 - [2] Modules 'VectorIotaUnit' and 'VectorIotaUnit_4' likely should dedup but do not.
 - [3] Modules 'VectorIotaUnit_1' and 'VectorIotaUnit_5' likely should dedup but do not.
 - [4] Modules 'VectorIotaUnit' and 'VectorIotaUnit_6' likely should dedup but do not.
 - [5] Modules 'VectorIotaUnit_1' and 'VectorIotaUnit_7' likely should dedup but do not.{noformat}","05/Aug/22 10:42 AM;629ab2a89bc7150068d00cdf;[~accountid:6065017e90e3950069cf01c5] 

Someone pointed me at the fir files as a result of running the build…

{{- [0] Modules 'VectorIotaUnit' and 'VectorIotaUnit_2' likely should dedup but do not.}}

The only differences in these two files is a printf statement on line 330…


{noformat}printf(clock, UInt<1>(""h1""), ""Assertion failed: VectorIotaUnit got un-ordered csid=VectorIotaUnit.io.tgvVectorCmd.bits.csid: IO[UInt<4>] and previous csid=VectorIotaUnit.prevCsid: Reg[UInt]\n    at VectorIotaUnit.scala:64 assert(!unOrderCsid, s\""VectorIotaUnit got un-ordered csid=${io.tgvVectorCmd.bits.csid} and previous csid=${prevCsid}\"")\n"") @[VectorIotaUnit.scala 64:9]{noformat}

vs

{noformat}      printf(clock, UInt<1>(""h1""), ""Assertion failed: VectorIotaUnit got un-ordered csid=VectorIotaUnit_2.io.tgvVectorCmd.bits.csid: IO[UInt<4>] and previous csid=VectorIotaUnit_2.prevCsid: Reg[UInt]\n    at VectorIotaUnit.scala:64 assert(!unOrderCsid, s\""VectorIotaUnit got un-ordered csid=${io.tgvVectorCmd.bits.csid} and previous csid=${prevCsid}\"")\n"") @[VectorIotaUnit.scala 64:9]{noformat}


Files can be found: gamma03 - /scratch/jbailey/federation/build/product-coreip-sifive/p670mc/verilog/design/dedup_failures/modules/VectorIotaUnit*.fir

It looks like the csid= portion of the message is different","05/Aug/22 10:51 AM;5acffeafaa802f2a797a955c;I think that printf statement is not doing what is intended.  It looks like it’s printing out the type of {{io.tgvVectorCmd.bits.csid}}, not the dynamic value.

I think you’d have to use the other formatting style with {{%d}} like in this assert:

{noformat}assert(robRetireHangCounter < mp.robRetire_hangThreshold, ""ROB Retire Hang around entry %d "", robRetirePtr){noformat}",05/Aug/22 11:33 AM;6065017e90e3950069cf01c5;Indeed the scala variable is printed and not the signal value,"05/Aug/22 11:35 AM;6065017e90e3950069cf01c5;I will test a fix and open a PR



{noformat}diff --git a/block-tgv-sifive/src/main/scala/core/tgv/VectorIotaUnit.scala b/block-tgv-sifive/src/main/scala/core/tgv/VectorIotaUnit.scala
index 01972d26491..199760d93e3 100644
--- a/block-tgv-sifive/src/main/scala/core/tgv/VectorIotaUnit.scala
+++ b/block-tgv-sifive/src/main/scala/core/tgv/VectorIotaUnit.scala

@@ -61,5 +62,5 @@ class VectorIotaUnit(bParams: BulletCoreParams, tp: TGVParams, latency: Int = 0)
   // Assertion to check if the csid of viota is issued in-order
   val prevCsid    = RegEnable(io.tgvVectorCmd.bits.csid, 0.U, io.tgvVectorCmd.valid)
   val unOrderCsid = io.tgvVectorCmd.valid && io.tgvVectorCmd.bits.csid.orR && ((io.tgvVectorCmd.bits.csid - prevCsid) =/= 1.U)
-  assert(!unOrderCsid, s""VectorIotaUnit got un-ordered csid=${io.tgvVectorCmd.bits.csid} and previous csid=${prevCsid}"")
+  assert(!unOrderCsid, s""VectorIotaUnit got un-ordered csid=%d and previous csid=%d"", io.tgvVectorCmd.bits.csid, prevCsid )
 }{noformat}","05/Aug/22 12:47 PM;6065017e90e3950069cf01c5;I am testing [https://github.com/sifive/federation/pull/25129|https://github.com/sifive/federation/pull/25129|smart-link] , how long does it usually take to build the {{p670mc}} ?","05/Aug/22 1:43 PM;6065017e90e3950069cf01c5;{noformat}$ ./scripts/runWake -x 'makeRTLCoreIPFor useSFC standardCore ""p670mc""'
Loading module for wake 0.27.0.
===== RTL RESULTS =====
Pass ""p670mc: succeeded""
Pass Unit{noformat}

PR base branch has been change to master and set on auto-merge.

You can rebase on master once it is merge and the issue should be fixed.",08/Aug/22 12:51 AM;629ab2a89bc7150068d00cdf;Cheers Nicolas :) I will give this a go today\!,"08/Aug/22 4:00 AM;629ab2a89bc7150068d00cdf;P650mc8, I am now getting a dedup error….this was building okay, so something has changed on master when i rebased:


{noformat}===== 'Cluster0', 'Cluster1' are marked as ""must deduplicate"", but did not deduplicate. =====
CoreIPSubsystem
├── (Cluster0)
│   ├── SubsystemClusterCbus0
│   │   ├── ClockGroupAggregator [0]
│   │   └── ClockGroup [1]
│   ├── SubsystemClusterJbar0
│   │   ├── ClockGroupAggregator_1 [2]
│   │   └── ClockGroup_1 [3]
│   ├── SubsystemCoherentClusterXbar0
│   │   ├── ClockGroupAggregator_2 [4]
│   │   └── ClockGroup_2 [5]
│   ├── SubsystemMMIOClusterXbar0
│   │   ├── ClockGroupAggregator_3 [6]
│   │   └── ClockGroup_3 [7]
│   ├── SubsystemClusterPMCOutXbar0
│   │   ├── ClockGroupAggregator_4 [8]
│   │   └── ClockGroup_4 [9]
│   └── SubsystemClusterPMCXbar0
│       ├── ClockGroupAggregator_5 [10]
│       └── ClockGroup_5 [11]
└── (Cluster1)
    ├── SubsystemClusterCbus1
    │   ├── ClockGroupAggregator_6 [0]
    │   └── ClockGroup_6 [1]
    ├── SubsystemClusterJbar1
    │   ├── ClockGroupAggregator_7 [2]
    │   └── ClockGroup_7 [3]
    ├── SubsystemCoherentClusterXbar1
    │   ├── ClockGroupAggregator_8 [4]
    │   └── ClockGroup_8 [5]
    ├── SubsystemMMIOClusterXbar1
    │   ├── ClockGroupAggregator_9 [6]
    │   └── ClockGroup_9 [7]
    ├── SubsystemClusterPMCOutXbar1
    │   ├── ClockGroupAggregator_10 [8]
    │   └── ClockGroup_10 [9]
    └── SubsystemClusterPMCXbar1
        ├── ClockGroupAggregator_11 [10]
        └── ClockGroup_11 [11]
Failure candidates:
 - [0] Modules 'ClockGroupAggregator' and 'ClockGroupAggregator_6' likely should dedup but do not.
 - [1] Modules 'ClockGroup' and 'ClockGroup_6' likely should dedup but do not.
 - [2] Modules 'ClockGroupAggregator_1' and 'ClockGroupAggregator_7' likely should dedup but do not.
 - [3] Modules 'ClockGroup_1' and 'ClockGroup_7' likely should dedup but do not.
 - [4] Modules 'ClockGroupAggregator_2' and 'ClockGroupAggregator_8' likely should dedup but do not.
 - [5] Modules 'ClockGroup_2' and 'ClockGroup_8' likely should dedup but do not.
 - [6] Modules 'ClockGroupAggregator_3' and 'ClockGroupAggregator_9' likely should dedup but do not.
 - [7] Modules 'ClockGroup_3' and 'ClockGroup_9' likely should dedup but do not.
 - [8] Modules 'ClockGroupAggregator_4' and 'ClockGroupAggregator_10' likely should dedup but do not.
 - [9] Modules 'ClockGroup_4' and 'ClockGroup_10' likely should dedup but do not.
 - [10] Modules 'ClockGroupAggregator_5' and 'ClockGroupAggregator_11' likely should dedup but do not.
 - [11] Modules 'ClockGroup_5' and 'ClockGroup_11' likely should dedup but do not.
{noformat}

Something isn’t right with the clock groups?","08/Aug/22 10:55 AM;629ab2a89bc7150068d00cdf;megan says SFC doesnt do multicluster so ignore errors caused by multicluster and SFC.

","08/Aug/22 1:20 PM;629ab2a89bc7150068d00cdf;||*Build*||*Status*||
|p650mc|{panel:bgColor=#e3fcef}
OK
{panel}|
|p650mc8|{panel:bgColor=#e3fcef}
OK
{panel}|
|p650mc16|{panel:bgColor=#e3fcef}
OK
{panel}|
|p670mc|{panel:bgColor=#e3fcef}
OK
{panel}|
|p670mc8|{panel:bgColor=#e3fcef}
OK
{panel}|
|p670mc16|{panel:bgColor=#e3fcef}
OK
{panel}|","09/Aug/22 2:11 AM;629ab2a89bc7150068d00cdf;All configurations are now compiling and building under “wake BuildRTL”.

Let CI complete and then PR should be good to go: [https://github.com/sifive/federation/pull/25157|https://github.com/sifive/federation/pull/25157|smart-link] ","09/Aug/22 1:14 PM;629ab2a89bc7150068d00cdf;The pull request has been merged in commit: [1b49dea35983f4cd4b4bd365a7e1c217403d5ae9|https://github.com/sifive/federation/commit/1b49dea35983f4cd4b4bd365a7e1c217403d5ae9]



Will mark this ticket as done….",09/Aug/22 1:36 PM;5acffeafaa802f2a797a955c;I think we usually reserve the “Fix Versions” field for bugs which may impact customer releases.  The “Fix Commit” field is fine to use for this.,,,,,,,,,,,,,,,,,,,Done
[TGV] Connect flush logic to LTBPipe,,,,,,MAL-2296,121573,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,7/30/2022 15:39,8/2/2022 14:35,9/28/2022 0:51,7/30/2022 16:17,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,,John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,MAL-2061,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2295,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-31T11:28:22.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24956,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00ccv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Connect flush logic to STBPipe,,,,,,MAL-2295,121572,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,7/30/2022 15:38,8/3/2022 11:20,9/28/2022 0:51,7/31/2022 11:40,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,and consolidate flush in STBEntries after [https://github.com/sifive/federation/pull/24942|https://github.com/sifive/federation/pull/24942|smart-link]  and [https://github.com/sifive/federation/pull/24922|https://github.com/sifive/federation/pull/24922|smart-link] ,John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,MAL-2294,MAL-2062,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2065,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2296,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-03T09:10:17.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2065,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24960,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00ccn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Connect flush logic to STB entries ,,,,,,MAL-2294,121571,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,7/30/2022 15:36,8/10/2022 2:13,9/28/2022 0:51,7/30/2022 15:37,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,,Hsinyi Lee,John Ingalls,,,,,,,,,,,,,,5dcdcc6a99e7ea0c60b0e6aa,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,MAL-2062,,,,MAL-2295,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2065,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2061,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-30T15:37:13.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2065,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24942,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00ccf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,13:11.0,"10/Aug/22 2:13 AM;5dcdcc6a99e7ea0c60b0e6aa;I’ve delete the previous comment, I found the wrong commit for the dabble drop, sorry. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[Power] Change ROB fflagsMem to not use RegInit, to help PowerArtist",,,,,,MAL-2293,121570,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,7/30/2022 13:26,8/3/2022 10:24,9/28/2022 0:51,7/30/2022 15:16,,,,,,,,,,,,,Power,RTL/RDU,,,,,,,,0,,,,"When using {{RegInit}} with {{when()}} blocks to add a load enable to a resettable register, at least PowerArtist appears to be having a hard time inferring the proper clock gating.  This is most likely due to how CIRCT is emitting the verilog by using {{?}} mux operators instead of {{if}} blocks on the registers.

In the ROB, the {{fflagsMem}} field holds the floating point exception flags, and should be almost completely inactive during Dhrystone.  However PowerArtist was reporting that the dynamic clock gating efficiency was 0% (always on).  It’s not clear if Design Compiler / Genus would have the same problem or this is just a PowerArtist artifact.

We should change {{fflagsMem}} to use a normal {{Reg}} and then reset the flops separately from the implied global reset.  After making this change, Power reported ~1mW reduction on Dhrystone in {{coreip_p650}}",Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-30T15:16:18.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,9881ea5ff2b504d3bf84f5153e0594320a8430b6,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,100,,,,,,,,,,,,,,,2|i00cc7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] TGV's own LongLatencyPipeline,,,,,,MAL-2292,121559,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,7/29/2022 19:28,9/8/2022 8:08,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"TGV has already implemented Fcvt, narrowing shift and recip approx, so having TGV’s custom LLP without these functions can save area and hopefully shorten LLP’s latency.

Also, it enable us the opportunity to proceed to phase out Bullet’s AugmentedVectorCommand [https://sifive.atlassian.net/browse/MAL-2018|https://sifive.atlassian.net/browse/MAL-2018|smart-link] .",Brad Wu,Nicolas Brunie,,,,,,,,,,,,,,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-29T22:39:39.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,,,,,,,,,,,,,,,,2|i00c9r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] large masked vslideup.vx returning incorrect result,[TGV] large masked vslideup.vx ,,,,,MAL-2291,121536,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/29/2022 11:19,9/7/2022 17:43,9/28/2022 0:51,7/29/2022 18:33,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"+*git sha1:*+ {{950aaea68ed}}

+*outline:*+ 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""subdir"": ""t0000_lmul4"",
  ""subtest",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2189,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-30T08:16:03.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/dd1b20d302d95b3ddc57b8c986b228eea9ed9c41,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00c5b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] tune the accuracy of TGV I/O constraints in P670/TGV only synthesis configuration,,,,,,MAL-2290,121535,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/29/2022 11:04,9/7/2022 13:29,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,,,,,,,,,0,,,,Use full tile ([https://github.com/sifive/federation/blob/master/specs/build-plans/pd/p670_tsmc_cln7ff_tsmc_H240_tile.json|https://github.com/sifive/federation/blob/master/specs/build-plans/pd/p670_tsmc_cln7ff_tsmc_H240_tile.json] )  synthesis results to improve the accuracy of TGV-only ([https://github.com/sifive/federation/blob/master/specs/build-plans/pd/p670_tsmc_cln7ff_tsmc_H240_tile.json|https://github.com/sifive/federation/blob/master/specs/build-plans/pd/p670_tsmc_cln7ff_tsmc_H240_tile.json] ) I/O constraints.,Brad Wu,Nicolas Brunie,,,,,,,,,,,,,,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00c53:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] add group path script to split TGV paths from non-vector p670 paths,,,,,,MAL-2289,121534,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Brad Wu,62103777eb2978006893b778,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/29/2022 11:02,9/7/2022 13:29,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,,,,,,,,,0,,,,"Progress:

* Merged {{tgv_path_group}} PR and wait until {{TGVR2R}} timing group stable enough before file another PR to auto include it.",Brad Wu,Colin Schmidt,Kira Tsao,Nicolas Brunie,Shaka Kao,,,,,,,,,,,62103777eb2978006893b778,608c619933d525006945bdcc,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-12T01:57:01.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,,,,,,,,,,,,,2|i00c4v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,47:47.1,29/Jul/22 11:02 AM;6065017e90e3950069cf01c5;[~accountid:62103777eb2978006893b778]  feel free to assign yourself this task if you have some time,02/Aug/22 7:47 AM;62103777eb2978006893b778;I’m still feels fussy about this. Do you want to do it like {{mallard/scripts/synthesis/group_path.tcl}} ?,"02/Aug/22 7:56 AM;6065017e90e3950069cf01c5;Me too. I think [~accountid:608c619933d525006945bdcc] introduced a new yaml/json based way to describe path grouping, but I did not check the details yet.","02/Aug/22 8:08 AM;608c619933d525006945bdcc;Yes {{group_path.tcl}} is deprecated. There are instructions/documentation at the top of {{group_path.yml}} that will enable our flow to generate tool-independent group_path constraints.
[https://github.com/sifive/federation/blob/4f0da97bd0c16b359c5b331b9631e1d3c7fa4b51/mallard/scripts/synthesis/group_path.yml#L1-L15|https://github.com/sifive/federation/blob/4f0da97bd0c16b359c5b331b9631e1d3c7fa4b51/mallard/scripts/synthesis/group_path.yml#L1-L15]","02/Aug/22 8:16 AM;62103777eb2978006893b778;[~accountid:608c619933d525006945bdcc] So if hammer apply the {{group_path.yml}}, we can get rid of strange path groups like this? (Or add additional REG2REG… groups in it?)

{noformat}            Analysis                                          Cost                                Critical              Violating 
              View                                            Group                              Path Slack     TNS       Paths   
----------------------------------------------------------------------------------------------------------------------------------
Total                                                                                                       -1217733.2      54855 
                                                                                                                                  
func_tt_0p750v_85c_typical_view                 auto_tile_clock_domain_ungatedClockNode_in_clock      -53.8  -316890.2      18858 
                                cg_enable_group_auto_tile_clock_domain_ungatedClockNode_in_clock        0.2        0.0          0 
                                                                           cg_enable_group_clock       75.7        0.0          0 
                                                                                           clock       26.2        0.0          0 
                                                                                         default   No paths        0.0          0 
                                                                                      V_jtag_TCK   No paths        0.0          0 
                                                                             virtual_async_clock     7921.2        0.0          0{noformat}","02/Aug/22 8:20 AM;608c619933d525006945bdcc;Those look like the default path groups based on clocks which we can’t remove if we want the tool to function properly, but you can add additional path groups using {{group_path.yml}} just like you have been doing with {{group_path.tcl}} you just need to create a data structure rather than raw TCL.","05/Aug/22 1:20 AM;62103777eb2978006893b778;After applied group path, the timing report will look like this

{noformat}            Analysis                                          Cost                                Critical               Violating 
              View                                            Group                              Path Slack     TNS        Paths   
-----------------------------------------------------------------------------------------------------------------------------------
func_ssg_0p675_0c_cworst_view                   auto_tile_clock_domain_ungatedClockNode_in_clock   No paths         0.0          0 
                                cg_enable_group_auto_tile_clock_domain_ungatedClockNode_in_clock     -443.5  -1525651.4       7194 
                                                                           cg_enable_group_clock       14.3         0.0          0 
                                                                                           clock   No paths         0.0          0 
                                                                                         default   No paths         0.0          0 
                                                                                         MEM2REG     -176.7    -35464.1       1497 
                                                                                         REG2MEM     -504.7   -140548.3       1300 
                                                                                         REG2REG     -738.8 -48677180.3     195774 
                                                                                             TGV     -740.9 -16611704.6      64810 
                                                                                      V_jtag_TCK   No paths         0.0          0 
                                                                             virtual_async_clock   No paths         0.0          0 
-----------------------------------------------------------------------------------------------------------------------------------
Total                                                                                                       -64368689.9     270575 
                                                                                                                                   
func_tt_0p750v_85c_typical_view                 auto_tile_clock_domain_ungatedClockNode_in_clock   No paths         0.0          0 
                                cg_enable_group_auto_tile_clock_domain_ungatedClockNode_in_clock     -219.2   -505799.2       5063 
                                                                           cg_enable_group_clock       73.5         0.0          0 
                                                                                           clock   No paths         0.0          0 
                                                                                         default   No paths         0.0          0 
                                                                                         MEM2REG      -75.5     -5491.1        180 
                                                                                         REG2MEM     -260.7    -48850.1        468 
                                                                                         REG2REG     -383.9 -16455990.5     142221 
                                                                                             TGV     -399.4  -5807341.8      53730 
                                                                                      V_jtag_TCK   No paths         0.0          0 
                                                                             virtual_async_clock   No paths         0.0          0 
-----------------------------------------------------------------------------------------------------------------------------------
Total                                                                                                       -21789019.6     201662 
{noformat}

I think {{REG2REG}} group also included {{auto_tile_clock_domain_ungatedClockNode_in_clock}}, {{virtual_async_clock}} and {{clock}} group. ","07/Aug/22 11:26 PM;62103777eb2978006893b778;Hi [~accountid:608c619933d525006945bdcc] ,

The timing result after applied {{TGVR2R}} group is strange:

{noformat}            Analysis                                          Cost                                Critical              Violating 
              View                                            Group                              Path Slack     TNS       Paths   
----------------------------------------------------------------------------------------------------------------------------------
Total                                                                                                       -2191600.3      65269 
                                                                                                                                  
func_tt_0p750v_85c_typical_view                 auto_tile_clock_domain_ungatedClockNode_in_clock   No paths        0.0          0 
                                cg_enable_group_auto_tile_clock_domain_ungatedClockNode_in_clock        0.1        0.0          0 
                                                                           cg_enable_group_clock       64.5        0.0          0 
                                                                                           clock   No paths        0.0          0 
                                                                                         default   No paths        0.0          0 
                                                                                         MEM2REG        2.0        0.0          0 
                                                                                         REG2MEM        0.6        0.0          0 
                                                                                         REG2REG      -44.6  -108903.7      10496 
                                                                                          TGVR2R     -100.1  -660485.2      16005 
                                                                                      V_jtag_TCK   No paths        0.0          0 
                                                                             virtual_async_clock   No paths        0.0          0 
----------------------------------------------------------------------------------------------------------------------------------
{noformat}

After I applied {{critical_range: 0.010}} to TGVR2R group to match REG2REG group’s config, it still not helping:

{noformat}            Analysis                                          Cost                                Critical              Violating 
              View                                            Group                              Path Slack     TNS       Paths   
----------------------------------------------------------------------------------------------------------------------------------
func_tt_0p750v_85c_typical_view                 auto_tile_clock_domain_ungatedClockNode_in_clock   No paths        0.0          0 
                                cg_enable_group_auto_tile_clock_domain_ungatedClockNode_in_clock        1.2        0.0          0 
                                                                           cg_enable_group_clock       69.0        0.0          0 
                                                                                           clock   No paths        0.0          0 
                                                                                         default   No paths        0.0          0 
                                                                                         MEM2REG        3.5        0.0          0 
                                                                                         REG2MEM        0.3        0.0          0 
                                                                                         REG2REG      -46.8   -64626.2       6371 
                                                                                          TGVR2R     -106.4  -635586.5      15117 
                                                                                      V_jtag_TCK   No paths        0.0          0 
                                                                             virtual_async_clock   No paths        0.0          0 
{noformat}

Could you please take a look? Thanks.

Run directory: {{iota06:/home/scratch_cln7ff/tgv/build/p670_tsmc_cln7ff_H240_tile}}

The synthesis result with {{TGVR2R}} group not applied is here for reference:
{{iotas: /home/bradw/synthesis_reports_TGV/p670_tsmc_cln7ff_H240_tile_20220805_ppa_tgv_20220805_21ce5b3_noTGVR2R}}

{noformat}            Analysis                                          Cost                                Critical              Violating 
              View                                            Group                              Path Slack     TNS       Paths   
----------------------------------------------------------------------------------------------------------------------------------
func_tt_0p750v_85c_typical_view                 auto_tile_clock_domain_ungatedClockNode_in_clock      -59.5  -318757.3      20174 
                                cg_enable_group_auto_tile_clock_domain_ungatedClockNode_in_clock        0.0        0.0          0 
                                                                           cg_enable_group_clock       65.6        0.0          0 
                                                                                           clock       26.2        0.0          0 
                                                                                         default   No paths        0.0          0 
                                                                                      V_jtag_TCK   No paths        0.0          0 
                                                                             virtual_async_clock     7921.2        0.0          0 
----------------------------------------------------------------------------------------------------------------------------------
{noformat}","10/Aug/22 6:57 PM;62103777eb2978006893b778;Hi [~accountid:608c619933d525006945bdcc] , after poking around some configs I’m still not able to get TGVR2R group to work properly 😞 

If you have any suggestions to solve this problem please let me know, thanks.","11/Aug/22 2:23 PM;608c619933d525006945bdcc;This is strange, the groups look to be all the same weight, and I cant see any way to make them have more effort. Let me look at this a bit.","11/Aug/22 4:33 PM;62103777eb2978006893b778;[~accountid:608c619933d525006945bdcc]  {{TGVR2R}} group is not auto included in the {{tgv_path_group}} branch now, but it can be manually included by {{-g}} option:
{{python3 mallard/scripts/synthesis/run_synth.py --wake-plan specs/build-plans/pd/7nm_H240.json specs/build-plans/pd/p670_tsmc_cln7ff_tsmc_H240_tile.json -g mallard/scripts/synthesis/group_path_tgv.yml}}



I intend to merge the {{tgv_path_group}} this Friday as it includes other fixes to synthesis flow. I’ll auto include {{TGVR2R}} group ({{group_path_tgv.yml}}) after it is stable enough.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
RTL power optimizations for P650 Panda,,,,,,MAL-2288,121523,,Epic,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,7/29/2022 8:59,9/14/2022 17:37,9/28/2022 0:51,,,,,,,,,,,,,,Power,RTL/Tile,,,,,,,,0,,,,,Josh Smith,Mehul Thakkar,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,622a8208db58c100687dd15a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2589,MAL-2591,MAL-2592,MAL-2617,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,9/1/2022 0:00,,ghx-label-9,,RTL power optimizations for P650 Panda,In Progress,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,orange,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00c2f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,7/1/2022 0:00,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[Power] Separate flops for Freelist return coming from RHF,,,,,,MAL-2287,121522,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,7/29/2022 8:55,8/3/2022 10:24,9/28/2022 0:51,7/30/2022 9:33,,,,,,,,,,,,,Power,RTL/RDU,,,,,,,,0,,,,"Right now the datapath for returning physical registers back to both the IEX and FEX freelists shares one common set of flops.  We read entries out of the RHF at retirement, and then flop them into the next pipeline stage where they get returned to the freelists.  The MSB of the physical register index indicates whether it is an integer or FP register.

However, in cases where FEX is not really used much (especially in Dhrystone), returning integer registers still ends up toggling a lot of logic in the FEX freelist because the IEX and FEX freelist return is driven by the same flops.

We should be able to separate the flops which capture the RHF read data into one set for integer, and one set for FP.",Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,30/Jul/22 6:51 AM;jsmith;Screen Shot 2022-07-30 at 6.51.20 AM.png;https://sifive.atlassian.net/secure/attachment/75134/Screen+Shot+2022-07-30+at+6.51.20+AM.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-31T09:20:59.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,8261f8599977b30eb05a9d29e52aaf7c412187b9,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00c27:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,30/Jul/22 6:55 AM;5acffeafaa802f2a797a955c;I added a screenshot with the results of the PowerArtist experiment with this change. It saves about 0.5mW.,30/Jul/22 9:32 AM;5acffeafaa802f2a797a955c;RDU-level synthesis results on {{coreip_p650}} looked okay.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
RDU hang assertions: connect io.disableHangCatcher,RDU hang assertions,,,,,MAL-2286,121514,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Deepika S K,622a9d30c4d0fe0069575ac9,Deepika S K,622a9d30c4d0fe0069575ac9,7/29/2022 2:48,8/9/2022 9:41,9/28/2022 0:51,7/29/2022 19:20,,,,,,,,,,,,,RTL/RDU,,,,,,,,,0,,,,"*Error message :* 

{noformat}Error: ""/scratch/deepikas/mallard-xprop-124/federation/builds/coreip_u8_minimal/verilog/design/assertions/SiFive_RDU_assert.sv"", 336: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.SiFive_RDU_assert: at time 28965402500 ps
Assertion failed (verification library): stall_REN Hang  @[RDU.scala 1355:9]
Fatal: ""/scratch/deepikas/mallard-xprop-124/federation/builds/coreip_u8_minimal/verilog/design/assertions/SiFive_RDU_assert.sv"", 338: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.SiFive_RDU_assert: at time 28965402500 ps
$finish called from file ""/scratch/deepikas/mallard-xprop-124/federation/builds/coreip_u8_minimal/verilog/design/assertions/SiFive_RDU_assert.sv"", line 338.{noformat}


*Debug details :* 
{{stallHangCounter_REN}} exceeds threshold \[ {{17'h1869F}} ], resulting in Assertion Fail. 
From the waveform, {{_stall_REN_T_1}} is held high from *26965382500* *ps* , the counter keeps incrementing , and crosses the threshold *@28965402500 ps* .

{noformat}stallHangCounter_REN <= _stall_REN_T_1 ? 17'(stallHangCounter_REN + 17'h1) : 17'h0;{noformat}

*Waveform  :* 

!image-20220729-094945.png|width=100%!

----

*Regression :* fed/master/nightly-mallard-xprop/124

*Simscope link :* [https://simscope.internal.sifive.com/sigs/749/clqrsncdceu6|https://simscope.internal.sifive.com/sigs/749/clqrsncdceu6]

*Sting test :* sting_StingTrapsTuple_T_0085/sting/valtrix/traps/excp_illegal_rvc_jr_badopnds.conf

*To reproduce :* 

* *Config :* coreip_u8_minimal
* *Commit :* fd90639b5bc83c02906194ff9639214f09f2da18
* *rerun.outline :* 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+pl2_randomBlockGlobalArbEnable=1"",
    """"
  ],
  ""subdir"": ""sting_StingTrapsTuple_T_0085"",
  ""subtest"": ""valtrix/traps/excp_illegal_rvc_jr_badopnds.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 400287661
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}


*Dump path :* {{gamma25 : /scratch/deepikas/mallard-xprop-124/federation/builds/coreip_u8_minimal/sim/sim/rdu_assert.outline/sting_StingTrapsTuple_T_0085/sting/valtrix/traps/excp_illegal_rvc_jr_badopnds.conf}}
",Deepika S K,Hsinyi Lee,John Ingalls,Josh Smith,Rakesh Palakurthi,,,,,,,,,,,622a9d30c4d0fe0069575ac9,5dcdcc6a99e7ea0c60b0e6aa,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,62350e943eacc50071ff0753,,,,,,,,,,,,,,,,,,,,,,MAL-2348,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29/Jul/22 2:50 AM;ug:0c84c1d9-358d-4f68-993a-932052da7479;image-20220729-094945.png;https://sifive.atlassian.net/secure/attachment/75094/image-20220729-094945.png,,,,,,,,,,,,,,,,fd90639b5bc83c02906194ff9639214f09f2da18,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-29T20:45:50.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24943,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00c0f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,36:53.5,"29/Jul/22 8:36 AM;5acffeafaa802f2a797a955c;[~accountid:5bb6808b9ba2930990f81895] I see that there’s an instruction with GID 0x3e that dispatches to the LSU but never sends a completion to the ROB.  This looks like an ROB hang that triggered the REN stall assertion first I guess.

It looks like a load that allocates a LDQ entry and an MSHR, but never finishes.","29/Jul/22 8:38 AM;5acffeafaa802f2a797a955c;This is also not the {{coreip_u8_minimal_vector}} configuration, so I don’t think it’s TGV-related.  Unless something added for TGV broke a scalar configuration.","08/Aug/22 1:54 AM;5dcdcc6a99e7ea0c60b0e6aa;I got a similar error message, is that the same issue?

commit: 2022-08-07.c2c9e663a1a

log: /nfs/teams/perf/tmp-he/regression/performance-regression/rtlsim-correlation/p67/2022-08-07.c2c9e663a1a/0080/144

{noformat}[910585] %Error: SiFive_RDU.sv:7386: Assertion failed in top.TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu: assert failed (verification library): stall_REN Hang  @[RDU.scala 1347:9]
%Error: /scratch/jenkins/archived-builds/performance-regression/score_guard_pcs/483/builds/coreip_p670/verilog/design/SiFive_RDU.sv:7386: Verilog $stop
Stopping...
[910585] %Error: SiFive_RDU_assert.sv:759: Assertion failed in top.TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.SiFive_RDU_assert
%Error: /scratch/jenkins/archived-builds/performance-regression/score_guard_pcs/483/builds/coreip_p670/verilog/design/assertions/SiFive_RDU_assert.sv:759: Verilog $stop
Stopping...
[910585] %Error: SiFive_ROB.sv:13881: Assertion failed in top.TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob: assert failed (verification library): ROB Retire Hang around entry 128   @[ROB.scala 781:9]
%Error: /scratch/jenkins/archived-builds/performance-regression/score_guard_pcs/483/builds/coreip_p670/verilog/design/SiFive_ROB.sv:13881: Verilog $stop
Stopping...
[910585] %Error: SiFive_ROB_assert.sv:1967: Assertion failed in top.TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert%Error: /scratch/jenkins/archived-builds/performance-regression/score_guard_pcs/483/builds/coreip_p670/verilog/design/assertions/SiFive_ROB_assert.sv:1967: Verilog $stop
Stopping...{noformat}","08/Aug/22 2:46 AM;62350e943eacc50071ff0753;[~accountid:5dcdcc6a99e7ea0c60b0e6aa]   How to reproduce the failure ?  Do we have any waveform dump (fsdb/vpd) ?  

commit-id looks very recent. This bug [MAL-2286|https://sifive.atlassian.net/browse/MAL-2286] fix is already present in your repo.  Please open a new jira on [~accountid:5acffeafaa802f2a797a955c]  ",08/Aug/22 3:02 AM;5dcdcc6a99e7ea0c60b0e6aa;I created another ticket [https://sifive.atlassian.net/browse/MAL-2348|https://sifive.atlassian.net/browse/MAL-2348|smart-link] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vrgather.vi using the wrong data source register index and offset,[TGV] vrgather.vi ,Execution Unit ,Vector,,,MAL-2285,121456,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,7/28/2022 10:53,9/7/2022 17:43,9/28/2022 0:51,7/29/2022 11:55,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"When vl =16, sew = 32 and LMUL =4, and we execute a [vrgather.vi|http://vrgather.vi] instruction, the RTl is updating only 2 vector registers , instead of 4. 



{noformat}C0:      16047 [1] pc=[0000000080000eaa] W[r 5=0000000000000010][1] R[r 5=0000000000000010] R[r 0=0000000000000000] inst=[0522f2d7] vsetvli t0, t0, e32, m4, ta, mu
C0:      16061 [1] pc=[0000000080000eae] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[32843657] vrgather.vi v12, v8, 8
C0:      16056 vrf[12]=[51d9658551d9658551d9658551d96585][ffff]
C0:      16057 vrf[13]=[51d9658551d9658551d9658551d96585][ffff]
C0:      16058 vrf[14]=[00000000000000000000000000000000][ffff]
C0:      16059 vrf[15]=[00000000000000000000000000000000][ffff]{noformat}



To recreate this failure, 

# clone federation and checkout the commit f57ba5c48541c005942f3f23a32dd5c9d326454b
# build coreip_u8_minimal_vector and rerun the test using the outline 
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""t0000_lmul4"",
  ""subtest"": ""vrgather.vi"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vrgather.vi_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_NoSelfCheck-0_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-4_TGV-1_IMM-1_LdStAccFault-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-1_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-0_TAILAgnostic-1"",
  ""seed"": {
    ""value"": 3012347359
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



The waves are generated at {{gamma12:/scratch/srivatsa/federation/builds/f57ba5c48541c005942f3f23a32dd5c9d326454b/coreip_u8_minimal_vector/sim/sim/rerun.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vrgather.vi}}",Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-29T11:55:30.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/e02545542049a44e5b8a112cab4ef57f3b4fc1d9,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00bof:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,57:34.3,"28/Jul/22 1:57 PM;6065017e90e3950069cf01c5;[~accountid:5a938e9c0913194d2d262658] , is it normal to have a very large number of {{TAILAgnostic-<value>}} (with different values) in {{generator_args}} ?","28/Jul/22 1:58 PM;5a938e9c0913194d2d262658;No that was a accidently pushed in , i have a fix on the way [https://github.com/sifive/federation/pull/24901|https://github.com/sifive/federation/pull/24901|smart-link] ",28/Jul/22 5:21 PM;6065017e90e3950069cf01c5;[~accountid:5a938e9c0913194d2d262658] [https://github.com/sifive/federation/pull/24912|https://github.com/sifive/federation/pull/24912|smart-link]  seems to fix the issue on my setup.,"28/Jul/22 5:23 PM;6065017e90e3950069cf01c5;A bit more details:

* the 4 registers would be updated, but the last two would wrongfully be updated with 0s values
* the 0s come from the fact that the {{vrgather.vi}} data index overflows (so 0 is written in the result element)
* the index overflows because the sequencer did not consider the proper index bounds when trying to determinate if the element index overflowed.
* the index bounds were correct for the first sequencing cycle so the first two uops sequenced were correct, and was wrong for the second sequencing cycle (leading to bad result from the last two uops sequenced).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[FPU] change configuration parameter from ""hasShareMultiplier"" to ""hasSharedMultiplier""",,,,,,MAL-2284,121429,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,7/28/2022 9:02,8/19/2022 2:57,9/28/2022 0:51,7/29/2022 10:06,,,,,,,,,,,,,RTL/FEX,,,,,,,,,0,,,,,Erdinc Ozturk,Nicolas Brunie,,,,,,,,,,,,,,61ccb01d90cfd20071b96af2,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-29T10:05:42.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00bif:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LSU TGV assert: ROB hang not retiring next store after vsetvli,[TGV] LSU TGV assert: ROB,LSU (Load Store Unit),ROB,,,MAL-2283,121438,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Warren Menezes,600773dcee80bd006f750bba,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,7/28/2022 9:49,9/7/2022 17:43,9/28/2022 0:51,8/3/2022 8:18,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"We see the below assertion getting fired up from the StQ_entry block.

*Error Message* 

{noformat}Reset m_pl2_mmc_inner_agents  dc
Error: ""/scratch/ishitashah/tgv_regression/sign_162_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_StQEntry_assert.sv"", 359: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.StQ.stqEntries_2.SiFive_StQEntry_assert: at time 7816122500 ps
Assertion failed (verification library): StQEntry FSM Hang  @[StoreQ.scala 1284:14]
Fatal: ""/scratch/ishitashah/tgv_regression/sign_162_test_fails/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_StQEntry_assert.sv"", 361: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.StQ.stqEntries_2.SiFive_StQEntry_assert: at time 7816122500 ps{noformat}

*SHA:* [*f57ba5c*|https://simscope.internal.sifive.com/models/undefined--master--f57ba5c48541c005942f3f23a32dd5c9d326454b]

*config:*coreip_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0085"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1674473996
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Dumppath

{{gamma25:/scratch/ishitashah/tgv_regression/sign_162_test_fails/federation/builds2/coreip_p670/sim/rerundir1/rerun.outline/sting_StingSiFiveTuple_T_0085/sting/sifive/vector/vector_tgv_dev.conf}}


Is this the same as  [https://sifive.atlassian.net/browse/VI-6756|https://sifive.atlassian.net/browse/VI-6756|smart-link] as in the temp.dasm we see that RTL last execute *vsetvli instruction*

*RTL CODE*

{noformat}C                   0:     162494 [1] pc=[0000000803045df6] W[r 6=0000000000000002][1] R[r 6=ffffffffffffffff] R[r 0=0000000000000000] inst=[01837357] vsetvli t1, t1, e64, m1, tu, mu
C                   0:     162494 [1] pc=[0000000803045dfa] W[r 7=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[000883b7] lui     t2, 0x88
C                   0:     162494 [1] pc=[0000000803045dfe] W[r 7=0000000000088401][1] R[r 7=0000000000000004] R[r 0=0000000000000000] inst=[4013839b] addiw   t2, t2, 1025{noformat}",Alexandre Solomatnikov,Andrew Hanselman,Ishita Shah,John Ingalls,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,609d7e1f5998a6006800dcc5,607e26355431a500701f5aed,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6756,MAL-2277,,,FED-2158,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/1180dc869cf2f48c194a55e0952d64e3581db8b4,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i00bkf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,53:55.9,"28/Jul/22 10:00 AM;607e26355431a500701f5aed;Also seen with the below outline


{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.tag_array_.*ext,1,0,32:.*\\.data_arrays_0_.*ext,1,0,32:.*\\.syssram.*ext,1,0,32:.*\\.island.*\\.lim\\.syssram.*ext,1,0,32:.*\\.tagged_tables_0_.*ext,1,0,32:.*\\.base_table_0_.*ext,1,032""
  ],
  ""subdir"": ""rat_default_T_0762"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3971232484
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*SHA:* [*f57ba5c*|https://simscope.internal.sifive.com/models/undefined--master--f57ba5c48541c005942f3f23a32dd5c9d326454b]

Config: *coreip_p670* ","28/Jul/22 12:53 PM;5bb6808b9ba2930990f81895;This looks very similar in the waves as a possible duplicate of [https://sifive.atlassian.net/browse/MAL-2277|https://sifive.atlassian.net/browse/MAL-2277|smart-link], but with a store instead of a load.  I see the instruction send resolve and complete from the LSU, but the ROB is not retiring this resolved-and-completed oldest-unretired instruction.","28/Jul/22 5:26 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;Yes, this looks like a duplicate of [https://sifive.atlassian.net/browse/MAL-2277|https://sifive.atlassian.net/browse/MAL-2277|smart-link] because in [https://sifive.atlassian.net/browse/MAL-2277|https://sifive.atlassian.net/browse/MAL-2277|smart-link] vle-vse test also hangs on vector store.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Change LI ICache replacement policy to true LRU for Healdsburg,,,,,,MAL-2282,121436,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Adam George,61b2a458657a0500706b9c39,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,7/28/2022 9:24,7/28/2022 9:24,9/28/2022 0:51,,,,,,,,,,,,,,RTL/Frontend,,,,,,,,,0,,,,Currently P550 and P650 use pseudo LRU replacement for the ICache.  We should use true LRU for Healdsburg.  The RTL already supports this option.  We just have to change the {{replacementPolicy}} IFU parameter from {{plru}} to {{lru}}.  I believe in the JSON files it’s the {{iCacheReplacement}} parameter.,John Ingalls,Josh Smith,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00bjz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] reduce the number of physical registers allocated by reduction operations,,,,,,MAL-2281,121433,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/28/2022 9:18,7/28/2022 9:18,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,"Reduction operations, in particular {{v[f]red(min/max).vs}} for large {{LMUL}} and {{SEW}} will allocate a lot of physical registers (assigned to extra arch register Ids). Those registers are only used once and never exposed:

The number could be reduced:

* by using a statically assigned accumulator (link to [~accountid:609d7e1f5998a6006800dcc5] 's ticket <>)
* by re-using the same physical register (different tag to ensure proper wake-up/forward)",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00bjb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Look into tying off IEX io.f2iNack completely,,,,,,MAL-2280,121405,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Won't Do,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,7/28/2022 5:52,9/3/2022 7:40,9/28/2022 0:51,7/30/2022 8:49,,,,,,,,,,,,,Implementation,RTL/IEX,Timing,,,,,,,0,,,,"We’ve seen some timing paths going through the IEX ExPipe → {{io.f2iNack}} → FexPipe {{instReplay_EX}} → other FEX endpoints.

The integer pipe only need to nack an f2i operation if an integer operation with latency longer than 1 cycle (multiply, divide, or some SCIE instructions) has already issued down the integer pipe and would end up trying to write back in the same cycle as the f2i integer writeback.

However, if we modify the configuration (P550, P650, Healdsburg) to move the f2i support to an integer pipe that doesn’t have a multiply, divide, or SCIE unit, then we can just completely tie {{io.f2iNack}} to {{false.B}} and remove all these timing paths.

Changing which integer pipe supports f2i operations in P550 or P650 may slightly change performance, so we should check with the performance modeling team to make sure nothing looks really bad.  And these paths appear to be meeting timing in P550 and P650, so we could just look at this for Healdsburg.",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2269,,,,,,,,,,,,,,,,,,,,,,,,,,Mid Core,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00bd3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/22 8:48 AM;5acffeafaa802f2a797a955c;So I checked that if we modified design JSON so that I2F operations are not on the same pipe as the integer multiplier or divider, then {{io.f2iNack}} already gets optimized away.  So we don’t need to do anything here.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Unexpected exception when running checkpoint snippets (0074/297),Unexpected exception ,,,,,MAL-2279,121389,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,I-Cheng Cheng,5d7bfdaa003e040c3e175060,I-Cheng Cheng,5d7bfdaa003e040c3e175060,7/27/2022 23:28,8/25/2022 21:38,9/28/2022 0:51,7/29/2022 15:50,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"We found a potential RTL issue where RTL retired PC sequence (2022-07-27.1ba9e11c06a) is not matched against the previous retired PC sequence (last pass: 2022-07-17.0a7d028b487). 

Based on retired PC log, we saw an unexpected exception occur at TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.csr.io_time\[63:0] = 756937 and waveform is located at /nfs/teams/perf/tmp-he/users/ichengc/assertion/0074_297/waves.fsdb

{noformat}0,756936,0000000000201494,011c0e33,r24,000000000038dbe8,r17,0000000000000020,r28,000000000038dc08,reg_is_remote_constant_p.part.0,""add     t3, s8, a7""
 0,756936,0000000000201498,000e4e83,r28,000000000038dc08,r0,0000000000000000,r29,0000000000000069,reg_is_remote_constant_p.part.0,""lbu     t4, 0(t3)""
 0,756936,000000000020149c,ff4e96e3,r29,0000000000000069,r20,0000000000000069,r0,0000000000000000,reg_is_remote_constant_p.part.0,""bne     t4, s4, pc - 20""
 0,756936,00000000002014a0,0204bf83,r9,0000000002a80a00,r0,0000000000000000,r31,0000000002a81060,reg_is_remote_constant_p.part.0,""ld      t6, 32(s1)""
 0,756937,00000000002014a4,000fdf03,r31,0000000002a81060,r0,0000000000000000,r30,000000000000002f,reg_is_remote_constant_p.part.0,""lhu     t5, 0(t6)""
 0,756937,00000000002014a8,015f0b63,r30,000000000000002f,r21,000000000000002f,r0,0000000000000000,reg_is_remote_constant_p.part.0,""beq     t5, s5, pc + 22""
 0,756937,00000000002014be,008fb783,r31,0000000002a81060,r0,0000000000000000,r15,00000000021db5e0,reg_is_remote_constant_p.part.0,""ld      a5, 8(t6)""
!!!!!! exception !!!!!!
 0,757531,ffffffff80002c1c,14021273,r4,00000000004ed7a0,r0,0000000000000000,r4,ffffffe000f82100,,""csrrw   tp, sscratch, tp""
 0,757535,ffffffff80002c20,00021f63,r4,ffffffe000f82100,r0,0000000000000000,r0,0000000000000000,,""bnez    tp, pc + 30""
 0,757939,ffffffff80002c3e,00223c23,r4,ffffffe000f82100,r2,0000003fff9fc940,r0,0000000000000000,,""sd      sp, 24(tp)""
 0,758131,ffffffff80002c42,01023103,r4,ffffffe000f82100,r0,0000000000000000,r2,ffffffd00009c000,,""ld      sp, 16(tp)""
 0,758726,ffffffff80002c46,0000712d,r2,ffffffd00009c000,r0,0000000000000000,r2,ffffffd00009bee0,,""c.addi16sp sp, -288""""{noformat}",Hsinyi Lee,I-Cheng Cheng,Josh Smith,,,,,,,,,,,,,5dcdcc6a99e7ea0c60b0e6aa,5d7bfdaa003e040c3e175060,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FED-2159,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-70,,MAL-2306,,,,,,,,,,,,,,,,28/Jul/22 12:06 AM;bb22362e-9e2f-4a2c-828e-a6702d88ae3f;image-20220728-070645.png;https://sifive.atlassian.net/secure/attachment/75043/image-20220728-070645.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-29T17:08:29.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24937,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,100,,,No,,,,,,,,,,,,2|i00b9j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,52:22.2,27/Jul/22 11:38 PM;5d7bfdaa003e040c3e175060;[~accountid:5bb6808b9ba2930990f81895]  Not sure if anything has seen this before. More info will be provided if this is new.,"27/Jul/22 11:52 PM;5dcdcc6a99e7ea0c60b0e6aa;[~accountid:5bb6808b9ba2930990f81895] 

It seems that there is a page fault when loading the address {{00000000021db5e0}} that was not there before

exception PC: {{00000000002014c2}}

address to load: {{00000000021db5e0}} ","28/Jul/22 12:06 AM;5d7bfdaa003e040c3e175060;Looks like PC 0x2014c2 try to load from address 0x0. 

!image-20220728-070645.png|width=100%!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Revisit scalRed and actScalRed reduction states after VectorFPHrzRedUnit supports vfredusum,,,,,,MAL-2278,121363,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,7/27/2022 20:00,9/22/2022 19:25,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,"In the PR [https://github.com/sifive/federation/pull/24748|https://github.com/sifive/federation/pull/24748|smart-link]  to fix the active element bug for {{vfred[min,max]}}, we introduced a separate scalar reduction state {{actScalRed}} for VL>1 masked {{vfred[min,max].}}

After {{VectorFPHrzRedUnit}} support {{vfredusum}}, VL>1 {{vfred[min,max]}} are the only instructions that require {{scalRed}} and {{actScalRed}}.
So we might want to merge {{scalRed}} and {{actScalRed}} in the future.",Brad Wu,Nicolas Brunie,,,,,,,,,,,,,,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2223,,,,,,,MAL-2234,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00b3r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] vle-vse test: ROB hang not retiring next load after vsetvli,[TGV] vle-vse test: ROB,LSU (Load Store Unit),,,,MAL-2277,121353,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Warren Menezes,600773dcee80bd006f750bba,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,7/27/2022 16:02,9/7/2022 17:43,9/28/2022 0:51,8/2/2022 13:19,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"cc: [~accountid:5bb6808b9ba2930990f81895] [~accountid:5fd15143b4a74900763834e0] 

This is a regression from last week - it used to work.

Waveform: gamma11:/scratch/sols/tgv4/federation/builds/a5b087a7255/coreip_u8_minimal_vector/sim/sim/tgv_vle-vse.outline/vector/vle-vse

Now even the first vector load from vle-vse test doesn’t complete because of assertion:

{noformat}2022-07-27T15:06:55-0700: Running test sim/tgv_vle-vse.outline/vector/vle-vse
=== sitest found errors in test sim/tgv_vle-vse.outline/vector/vle-vse:
Reset m_pl2_mmc_inner_agents  c8
Error: ""/scratch/sols/tgv4/federation/builds/a5b087a7255/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LdQEntry_assert.sv"", 723: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LdQ.ldqEntries_1.SiFive_LdQEntry_assert_0: at time 2120782500 ps
Assertion failed (verification library): LdQEntry FSM Hang  @[LoadQ.scala 2469:14]

Fatal: ""/scratch/sols/tgv4/federation/builds/a5b087a7255/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LdQEntry_assert.sv"", 732: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LdQ.ldqEntries_1.SiFive_LdQEntry_assert_0: at time 2120782500 ps

$finish called from file ""/scratch/sols/tgv4/federation/builds/a5b087a7255/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LdQEntry_assert.sv"", line 732.{noformat}

rerun.outline:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vle-vse"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 0
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Alexandre Solomatnikov,Andrew Hanselman,David Kravitz,John Ingalls,Srivatsa Yogendra,Warren Menezes,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,609d7e1f5998a6006800dcc5,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,5a938e9c0913194d2d262658,600773dcee80bd006f750bba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2283,,,,,,,01/Aug/22 10:20 AM;srivatsa;Screen Shot 2022-08-01 at 10.15.57.png;https://sifive.atlassian.net/secure/attachment/75175/Screen+Shot+2022-08-01+at+10.15.57.png,29/Jul/22 4:38 PM;ug:0810097f-c850-4f0a-81b4-4e959eb16d27;image-20220729-233444.png;https://sifive.atlassian.net/secure/attachment/75126/image-20220729-233444.png,29/Jul/22 6:16 PM;ug:0810097f-c850-4f0a-81b4-4e959eb16d27;image-20220730-011041.png;https://sifive.atlassian.net/secure/attachment/75129/image-20220730-011041.png,29/Jul/22 6:16 PM;ug:0810097f-c850-4f0a-81b4-4e959eb16d27;image-20220730-011346.png;https://sifive.atlassian.net/secure/attachment/75128/image-20220730-011346.png,,,,,,,,,,,,,https://github.com/sifive/federation/commit/a5b087a7255c8b3f7c08eb5bccd6b7e417319605,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-30T14:23:27.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/1180dc869cf2f48c194a55e0952d64e3581db8b4,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,2,,,,100,,,No,,,,,,,,,,,,2|i00b1r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,31:27.2,"28/Jul/22 7:31 AM;5fd15143b4a74900763834e0;I should be preaching to the choir here, but we need to make sure the basic loads and stores keep passing so we don’t do excessive backsliding and time wasting debug. Everyone working on loads and stores, anything in the Baler really, or making changes to src/dest fields, such as prIdx widths or values, needs to run {{vle-vse}} and the {{vtg-tgv-load-store-tests.outline}}. But first we’ve got to get them passing again.

Right now this looks like a [~accountid:61730c9cbcb57400683f15a6] or [~accountid:5bb6808b9ba2930990f81895] issue to isolate (and hand off if appropriate), but the rest of us need to be more careful about regression before checkins: [~accountid:5fd15143b4a74900763834e0] [~accountid:600773dcee80bd006f750bba] [~accountid:609d7e1f5998a6006800dcc5] ","28/Jul/22 11:40 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;[~accountid:600773dcee80bd006f750bba] I tried to run this test on a commit before your PR merge, it still failed the same way.","28/Jul/22 12:48 PM;5bb6808b9ba2930990f81895;The oldest instruction in the machine is hanging at ROB Id = 0x3f

{noformat}# Test 1 vector load followed by 1 vector store
  vle32.v v1, (a3)
    80000966: 0206e087            vle32.v v1,(a3){noformat}

I see this instruction 0x3f returning data from LDWB at 243202500 and then sending a {{tgvPipeCmplReq_WB}}.

Why is the ROB not retiring this resolved-and-completed oldest-unretired instruction?",28/Jul/22 1:04 PM;5fd15143b4a74900763834e0;Haven’t looked but my first thought would be to check that the ID of the completion message was the correct ROB ID and not aliased as [https://sifive.atlassian.net/browse/MAL-2272|https://sifive.atlassian.net/browse/MAL-2272|smart-link] describes.,28/Jul/22 1:48 PM;609d7e1f5998a6006800dcc5;I have a fix incoming for this. Vector stores are being tagged as {{s2v}} and completion count is being incremented by 2 (because of the changes in [https://sifive.atlassian.net/browse/MAL-1853|https://sifive.atlassian.net/browse/MAL-1853|smart-link]) that I merged last week. Not something I would have thought to run mem test outlines against.,"28/Jul/22 2:16 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;{quote}Vector *loads and* stores are being tagged as {{s2v}} and completion count is being incremented by 2{quote}

With [~accountid:609d7e1f5998a6006800dcc5]'s fix the first vector load completes but the first vector store still hangs because LSU never sends completion to the ROB",28/Jul/22 3:18 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;It looks like vector store completion doesn’t happen because baler uop for store is never issued. [~accountid:600773dcee80bd006f750bba] is it possible baler issue queue wakeup is not connected correctly?,28/Jul/22 3:41 PM;5fd15143b4a74900763834e0;Maybe you can cherry-pick the [https://github.com/sifive/federation/pull/24866|https://github.com/sifive/federation/pull/24866|smart-link] commit to see if that’s the problem. It shows up as an instruction that’s marked ready but never issues.,"28/Jul/22 5:17 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;{quote}Maybe you can cherry-pick the [https://github.com/sifive/federation/pull/24866|https://github.com/sifive/federation/pull/24866|smart-link] commit to see if that’s the problem. It shows up as an instruction that’s marked ready but never issues.{quote}

This doesn’t help.

The reason vector store uop is stuck is because {{tagID==3}} is hard-coded in generated Verilog, which seems to correspond to Baler, but actually vector store uop is dependent on vector reg, which has {{tagID==0}}.

{noformat}  wire  tagMatch_1_2 = info_tag_valid & io_exPipeTag_1_2_0_valid & info_tag_tagID == 3'h3 & info_tag_prIdx ==
    io_exPipeTag_1_2_0_bits_prIdx; // @[MallardUtil.scala 149:71]{noformat}

It looks like this is because it is hard-coded in:

{code:scala}src/main/scala/core/tgv/Baler.scala:122:    q.bits.tagID       := VectorPrfId.baler.asUInt{code}

[~accountid:600773dcee80bd006f750bba] ?","28/Jul/22 5:43 PM;5fd15143b4a74900763834e0;Yup, that’s wrong. Loads should have the source tag as Baler but stores should use Main (or maybe Mask if store is from architectural {{v0}}? What say you [~accountid:609d7e1f5998a6006800dcc5]?)",28/Jul/22 5:45 PM;600773dcee80bd006f750bba;Working on the fix for this. The issue is that the store uop source tagID should be 3 if it expects to get forwarding from Baler. I also got some fixes from Andrew will merge it and test it against the vle-vse test,"28/Jul/22 5:54 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;{quote}The issue is that the store uop source tagID should be 3 if it expects to get forwarding from Baler.{quote}

I don’t understand this comment. Store uop gets forwarded data from the Baler only if vector reg is written by the load uop, which should be done with vector reg {{tagID}}. Am I missing something?","28/Jul/22 5:57 PM;609d7e1f5998a6006800dcc5;I don’t think that store source info should ever have a Baler tagID. Right? A baler load could have a destination with Main (v1-v31) / Mask (v0) destination TagID. This load destination tag could wakeup a subsequent store. But that store is only ever reading from v0-v31 (main / mask).

Aside, I would really push for us to update the spreadsheet [here|https://docs.google.com/spreadsheets/d/15XvyRXg0AZGm1g1ZWwfT3J_vZeM56Im3Kh8T9OUQgXA/edit#gid=0] with the groups of uops (intermediate or otherwise) and their tag info. I think it would be something that would help us solidify a shared understanding of what sources are waiting on what tagIDs, and what destinations can possibly be written to. At least for me it is.",28/Jul/22 6:25 PM;600773dcee80bd006f750bba;Its the Store uop in the LsIssQ right? that should take a tagID of baler,"28/Jul/22 6:30 PM;609d7e1f5998a6006800dcc5;[~accountid:600773dcee80bd006f750bba] TagIDs indicate data source/destination buffer, not execution pipe.","28/Jul/22 6:32 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;{quote}Its the Store uop in the LsIssQ right? that should take a tagID of baler{quote}

No, it is the store uop in the baler issue queue",28/Jul/22 6:53 PM;600773dcee80bd006f750bba;[~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] can you send me a pointer to your workspace. I saw a couple of issues that had a store uops stuck in the LsIssQ. I made a fix for the issues seen and created a PR,28/Jul/22 7:09 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;[~accountid:600773dcee80bd006f750bba] gamma11:/scratch/sols/tgv4/federation/builds/3c5aa4741ff_m/coreip_u8_minimal_vector/sim/sim/tgv_vle-vse.outline/vector/vle-vse,"28/Jul/22 10:25 PM;600773dcee80bd006f750bba;[~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] the configuration I used for debugging is coreip_p670 so maybe that explains to me why I see a different point of failure.

For coreip_u8_minimal_vector when I run the same test, with my fixes, I see that the test progresses further to 

{noformat}800009e8:	26051a63          	bnez	a0,80000c5c <fail> {noformat}

so it executes the 2nd pair vle-vse instructions but gets a fail and then hangs. I think there is still some debug left to figure out why it hits a fail condition on the 2nd pair. But with the fixes from this PR [https://github.com/sifive/federation/pull/24914|https://github.com/sifive/federation/pull/24914|smart-link] 

I am able to progress further","28/Jul/22 11:54 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;[~accountid:600773dcee80bd006f750bba] yes, with [https://github.com/sifive/federation/pull/24914|https://github.com/sifive/federation/pull/24914|smart-link] vector store completes but there is a cosim error:

{noformat}[COSIM-ERROR][0] m_dut_inst_item: [11840] InstInfo: VLD=1 | PC=0x0000000080000966 | INSN=0x0206e087 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r0=0x100f0e0d0c0b0a090807060504030201 mask=ffff | READY=1 | CSR_TIMER=11840 | PRV=0 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080000d00 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=4 | SEW=32 | LMUL=m1 | VSEGELT=0

[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000080000966 | INSN=0x0206e087 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r1=0x100f0e0d0c0b0a090807060504030201 mask=ffff{noformat}

because vector load writes data into {{v0}} instead of {{v1}}:

{noformat}C                   0:      11824 [1] pc=[0000000080000962] W[r12=0000000000000004][1] R[r12=0000000000000004] R[r 0=0000000000000000] inst=[01067657] vsetvli a2, a2, e32, m1, tu, mu
Error: Instruction-by-Instruction check failed
C                   0:      11840 [1] pc=[0000000080000966] W[r 0=0000000000000000][0] R[r13=0000000080001a00] R[r 0=0000000000000000] inst=[0206e087] vle32.v v1, (a3)
C                   0:      11840 [1] pc=[000000008000096a] W[r 0=0000000000000000][0] R[r14=0000000080001b10] R[r 0=0000000000000000] inst=[020760a7] vse32.v v1, (a4)
C                   0:      11834 vrf[ 0]=[100f0e0d0c0b0a090807060504030201][ffff]{noformat}","29/Jul/22 12:05 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;[~accountid:600773dcee80bd006f750bba] another problem is vector store uop in the baler is issued before vector load uop, so vector store cannot get correct data",29/Jul/22 11:04 AM;600773dcee80bd006f750bba;[~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185]  let me check on the store uop being falsely issued,"29/Jul/22 4:38 PM;600773dcee80bd006f750bba;[~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] [~accountid:609d7e1f5998a6006800dcc5] 

So I made the fixes for the Baler and update the PR [https://github.com/sifive/federation/pull/24914/files|https://github.com/sifive/federation/pull/24914/files]

One fix is for store source tag index, I made the change initially but reverted it, cause it was incorrect. This allows the store uop to wait in the balerIssQ since earlier it was looking at the wrong PRA bit.

The 2nd fix is for the LTB broadcast tag, to fix the MSB bits so that the store tag match occurs 

Now I see the store waiting in the Baler IssQ for the load broadcast and issues out once it gets a tag match

However I still see a data mismatch failure. It seems like the RTL writes to R0(mask) but when I debug it it seems that RTL does the correct update to the renamed destination. Not sure why this is happening here. 

!image-20220729-233444.png|width=1767,height=222!","29/Jul/22 4:55 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;[~accountid:600773dcee80bd006f750bba] cosim says {{vle32}} writes into {{v0}} instead of {{v1}}.

Did you check instruction trace? The trace I had before showed that indeed {{v0}} is written instead of {{v1}}:

{noformat}C                   0:      11824 [1] pc=[0000000080000962] W[r12=0000000000000004][1] R[r12=0000000000000004] R[r 0=0000000000000000] inst=[01067657] vsetvli a2, a2, e32, m1, tu, mu
Error: Instruction-by-Instruction check failed
C                   0:      11840 [1] pc=[0000000080000966] W[r 0=0000000000000000][0] R[r13=0000000080001a00] R[r 0=0000000000000000] inst=[0206e087] vle32.v v1, (a3)
C                   0:      11840 [1] pc=[000000008000096a] W[r 0=0000000000000000][0] R[r14=0000000080001b10] R[r 0=0000000000000000] inst=[020760a7] vse32.v v1, (a4)
C                   0:      11834 vrf[ 0]=[100f0e0d0c0b0a090807060504030201][ffff]{noformat}","29/Jul/22 6:16 PM;600773dcee80bd006f750bba;[~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185]  So I made a fix for the write interface and now I see a write happen to Vex PRF.

So in the RTL it happens to the correct register that is for arIdx = v1 that is mapped to prf reg 56(decimal)

At the same time I checked if there is a write happening to mask unit PRF and there is none. So in the waves/rtl I don’t see a write happening to v0. 

!image-20220730-011041.png|width=1772,height=551!

My trace below shows something else. I feel like it is a cosim/env issue. Since some of the new changes might have affected how the signal taps are done to verify data values.

!image-20220730-011346.png|width=1772,height=182!

my rundir : warrenm@gamma13:/scratch/verif/warrenm/TGV/code/REF/REBASE/federation/builds/coreip_u8_minimal_vector/sim/sim/tgv_vle-vse.outline/vector/vle-vse","29/Jul/22 7:56 PM;5a938e9c0913194d2d262658;Is the value being updated to v0 be the same written to v1 in cosim?



Seems like the mapping is broken somewhere ","29/Jul/22 8:36 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;{quote}Is the value being updated to v0 be the same written to v1 in cosim?{quote}

Yes, the value is the same: 0x{{100f0e0d0c0b0a090807060504030201}}",01/Aug/22 8:33 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;[~accountid:5a938e9c0913194d2d262658] any update?,01/Aug/22 9:47 AM;5a938e9c0913194d2d262658;Looking into it now.,"01/Aug/22 10:20 AM;5a938e9c0913194d2d262658;Seems like the map update is not being done correctly. Looking at the map table update signals , i see 

signal {{CoreIPSubsystemVerifTestHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.mapTable.io_mapReq_REN_0_destValid_0}} going high and the corresponding map values for ARidx 0x1 is PRidx 0x198



But on the baler write back port i see the update happening to idx 0x38. Which was never mapped to anything. 



!Screen Shot 2022-08-01 at 10.15.57.png|width=1556,height=487!

Cosim monitor in verilog relies on this mapping update to inform cosim, which is being told reg 0 is updated. ","01/Aug/22 5:46 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;[~accountid:600773dcee80bd006f750bba] unnecessary MSB bits concatenated to PRidx?

The number of physical vector registers is 96, and 0x198 is too large.",01/Aug/22 5:50 PM;600773dcee80bd006f750bba;[~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] Yes it seems like the MSB bits are causing the issue on the DV environment. I think pushing the final PrIdx changes for [https://sifive.atlassian.net/browse/MAL-2010|https://sifive.atlassian.net/browse/MAL-2010|smart-link] should fix this problem ,01/Aug/22 5:58 PM;5fd15143b4a74900763834e0;Also keep in mind that [https://sifive.atlassian.net/browse/MAL-2272|https://sifive.atlassian.net/browse/MAL-2272|smart-link] is supposed to fix some prIdx issues,"01/Aug/22 8:55 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;I suggest to revert [https://github.com/sifive/federation/pull/24555|https://github.com/sifive/federation/pull/24555|smart-link]  and   [https://github.com/sifive/federation/pull/24831|https://github.com/sifive/federation/pull/24831|smart-link]  until [https://sifive.atlassian.net/browse/MAL-2010|https://sifive.atlassian.net/browse/MAL-2010|smart-link] is implemented, reviewed and tested properly.

I tested the revert locally and at least aligned vector loads and stores work.",,,,,,,,,,,,,,,,,Done
[TGV] LSU sending out wrong data for a vector write instruction,[TGV] LSU sending out wrong data,LSU (Load Store Unit),,,,MAL-2276,121345,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Showstopper,Done,Yohann Rabefarihy,61730c9cbcb57400683f15a6,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,7/27/2022 13:59,9/7/2022 17:43,9/28/2022 0:51,8/1/2022 16:10,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"So this is a weird error, 



On the regression i see a data of 0 being sent out on the LSU port to write to the address {{0x44402300}} this request is because of a vector store operation 

core   0: 0x000000008a40259c (0x02028327) vse8.v  v6, (t0)
core   0: 3 0x000000008a40259c (0x02028327) e8 m1 l16 mem 0x0000000044402300

But the v6 register is previously updated to value {{0x7fc000007fc000007fc000007fc00000}} because of a floating point operation. 

The test fails because of a data mismatch between RTL and spike, when we try to perform a vector load for the same address , few Instructions later. 

The weird part is, we are not able to reproduce this failure locally. When i try to rebuild the design and generate waves, i can confirm, the same test is generated, but the load and store work correctly, and there is no mismatch. 

The waves for the failing simulation is at {{sigma55:/scratch/srivatsa/jenkins/162/builds/coreip_u8_minimal_vector/sim/sim/sting_tgv.outline/sting_StingSiFiveTuple_T_0266/sting/sifive/vector/vector_tgv_dev.conf}} 



and the waves for the passing simulation is at 

{{gamma12:/scratch/srivatsa/federation/builds/6794d26295911d2280266c9664f0afb6aa1fbeec/coreip_u8_minimal_vector/sim/dbg/rerun.outline/sting_StingSiFiveTuple_T_0266/sting/sifive/vector/vector_tgv_dev.conf}}



I see other sting tests behaving the same way, where we are not able to reproduce the failure. 

I tried diffing the verilog dir between sigma and gamma machines and seems like the only difference was in the file lists, nothing in the generated verilog. ",David Kravitz,John Ingalls,Srivatsa Yogendra,Yohann Rabefarihy,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,5a938e9c0913194d2d262658,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2063,,VI-7854,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-31T07:28:23.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00azz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,46:24.3,27/Jul/22 2:00 PM;5a938e9c0913194d2d262658;[~accountid:5fd15143b4a74900763834e0] can someone from RTL Debug this with high priority? ,"27/Jul/22 8:46 PM;5fd15143b4a74900763834e0;If it’s really something different between the machines, it will be really hard to isolate. I will ask [~accountid:61730c9cbcb57400683f15a6] to do a quick check (really, just spend 10 min with the waves) to determine if the {{0}} data is being sourced into the STB, or if the right data is making it part of the way and getting dropped in flight.","28/Jul/22 6:38 AM;5fd15143b4a74900763834e0;I’ve looked at the waves (on sigma) for the failing case. The {{7fc0...}} data from {{v6}} is being loaded into the store buffer at 6698582500 (PC=8a40259c), and gets read from there into the SDRR at 67000542500. When the data is read back a few instructions later (PC=8a4025a8), the LSU sends {{0}} to the Baler.

I don’t know if the problem is in the LSU, or between there and memory, in store-to-load forwarding, or the mem model, or ??? But I’m at the limit of my knowledge, so it does need to be looked into further by [~accountid:61730c9cbcb57400683f15a6] or [~accountid:5bb6808b9ba2930990f81895].

It’s not the official LSU waves, but what I’ve identified so far is in ~davidk2/waves/MAL-2276.rc","28/Jul/22 9:39 AM;5a938e9c0913194d2d262658;OOh also the address is for a system port, which is not cacheable. So i can see the write request having the data 0. ","28/Jul/22 12:28 PM;5bb6808b9ba2930990f81895;The vector store instruction replays a few times inside the LSU before it is finally able to establish a StoreQ Entry at time 6711102500, and thus requests {{sdrr_vstbRdReq}} a few times, but by that time, the VSTB entry has gone invalid, so the VSTB read returns data zero.

We should add:

# A connection for {{sdc_robCompletePtr}} from the SDPipe to clear the STB Entry valid bit, instead of clearing them after {{sdrr_vstbRdReq}} at [https://github.com/sifive/federation/blob/15c68026e2850fce31ea42e571f3d01847adbfe4/block-tgv-sifive/src/main/scala/core/tgv/StoreBuffer.scala#L50-L51|https://github.com/sifive/federation/blob/15c68026e2850fce31ea42e571f3d01847adbfe4/block-tgv-sifive/src/main/scala/core/tgv/StoreBuffer.scala#L50-L51]
# An assertion in the STBPipe that a VSTB read {{sdrr_vstbRdReq}} must always match a valid STB Entry.",28/Jul/22 12:33 PM;5a938e9c0913194d2d262658;Also I don’t seem to understand how it’s not reproducible with the same verilog and same seed for simulation ,"29/Jul/22 2:50 AM;61730c9cbcb57400683f15a6;Hi [~accountid:5a938e9c0913194d2d262658] 

First of all its looks like your not on the same SHA1 :

jenkins was on : 6794d26295911d2280266c9664f0afb6aa1fbeec

the rerun is on : f57ba5c48541c005942f3f23a32dd5c9d326454b

the rerun does contains jenkins commit + some fix which explain why it is working on the rerun (not the same timing).

the bug is in the jenkins version, the vse8 (8a40259c) is replayed, but the vstb read request valid is not masked by the “srcReplayed” signal which clear the STB entry. Once the store pipes replay the vse8, the entry has been cleared, we have then no match and we read 0 on the data path from Baler to the SDPipe.

Do we have specific stress for replay mechanism ?

[~accountid:5a938e9c0913194d2d262658] can you cherry-pick the PR: [https://github.com/sifive/federation/pull/24922|https://github.com/sifive/federation/pull/24922|smart-link] 

and check that it is fixing the fail ?

thanks you\!","29/Jul/22 8:39 AM;5a938e9c0913194d2d262658;Hi [~accountid:61730c9cbcb57400683f15a6] , 



I generated the verilog with the same commit as the Jenkins one and I am still not able to recreate the failure. 



The path specified has the verilog generated from the same commit as the Jenkins run, I have changed the commit in the repo as I was trying something new. Seems like it’s confusing. I’ll avoid that","29/Jul/22 9:03 AM;5fd15143b4a74900763834e0;I don’t know if we can solve why the one work area doesn’t fail. Based on what John and Yohann reported, anything that avoids the store replay (so, could it be TB and not RTL?) would result in a passing test.

Anyhow, does Yohann’s PR fix the error in the failing work area?","29/Jul/22 9:49 AM;5a938e9c0913194d2d262658;Thts the problem, we cannot rerun in the failing work area as we don’t have permissions to regenerate verilog ","29/Jul/22 10:20 AM;5a938e9c0913194d2d262658;Example of the passing test case generated by the same commit as the jenkins regression

{{gamma12:/scratch/srivatsa/debug_regr/6794d26295911d2280266c9664f0afb6aa1fbeec/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0266/sting/sifive/vector/vector_tgv_dev.conf}}","29/Jul/22 10:47 AM;5fd15143b4a74900763834e0;It’ll be a bit of a rock fetch, but should someone with solid LSU understanding identify why the store data move has to replay (in the failing case) and see if those conditions are different in the non-failing case?

Is it worth the DV looking at possible differences in the TB compilation (vs. the RTL that you’ve already looked at)?","29/Jul/22 10:50 AM;5a938e9c0913194d2d262658;Yea, i have tried to take a look at any TB differences, i have not found any difference actually….. The generated verilog matches, the seeds used for run time is the same. The generated test is the same as well. ","29/Jul/22 2:15 PM;5a938e9c0913194d2d262658;Im finally able to reproduce the failure on my local area. Seems like the generated elf, is differentiating between the runs, which is causing the test not to generate the failure. ",29/Jul/22 3:10 PM;5a938e9c0913194d2d262658;[~accountid:61730c9cbcb57400683f15a6] i dont think ur changes fix the error. I see the failure still happening. ,"29/Jul/22 3:14 PM;5a938e9c0913194d2d262658;to recreate the failure:

# clone federation and checkout the commit 6794d26295911d2280266c9664f0afb6aa1fbeec
# cherry-pick the commit 72ddd8686ec078434fe38f5d291eb694845f1788
# build the design coreip_u8_minimal_vector and rerun the simulation using the outline 
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+pl2_randomBlockGlobalArbEnable=1"",
    """",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0266"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 252517328
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



the waves are at {{gamma12:/scratch/srivatsa/debug_regr/6794d26295911d2280266c9664f0afb6aa1fbeec/builds/72ddd8686ec078434fe38f5d291eb694845f1788/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0266/sting/sifive/vector/vector_tgv_dev.conf}}","30/Jul/22 2:05 PM;5bb6808b9ba2930990f81895;{quote}2. cherry-pick the commit 72ddd8686ec078434fe38f5d291eb694845f1788{quote}

I can’t find this commit to cherry-pick.",01/Aug/22 4:10 PM;5a938e9c0913194d2d262658;i see the tests passing with [~accountid:5bb6808b9ba2930990f81895] 's changes. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vfredosum hanging,[TGV] vfredosum,Execution Unit ,Vector,,,MAL-2275,121337,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/27/2022 11:43,9/7/2022 17:43,9/28/2022 0:51,7/27/2022 15:21,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"+*git hash:*+ {{46bd5572c7637c6b1331685747e17a189d36ccf9}} (federation master)

+*outline:*+

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/",Kira Tsao,Nicolas Brunie,,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,27/Jul/22 1:53 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220727-205328.png;https://sifive.atlassian.net/secure/attachment/75020/image-20220727-205328.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-27T20:49:15.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/50a6108be2efaeca0ff0d920a297d00fa65dba6e,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00ay7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,27/Jul/22 12:02 PM;6065017e90e3950069cf01c5;It looks like the {{vmv.x.s}} in entry0 of IssQ is not properly wake up. The problem may be that the {{TagID}} mismatch between the expected value in the IssQ {{1}} and the tag broadcasted by the {{VexPipe}} {{0}}.,"27/Jul/22 1:53 PM;6065017e90e3950069cf01c5;It looks like the wrong {{tagId}} is injected when {{vfredosum.vs}} broadcasts a result targetting {{v0}} (allocated to register {{0x82)}}.

(tagId 1 is expected, tag 0 is broadcasted)

!image-20220727-205328.png|width=1361,height=325!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Mask Specific Tail Policy Updates,,,,,,MAL-2274,121335,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,7/27/2022 10:59,8/19/2022 12:32,9/28/2022 0:51,8/12/2022 6:25,,,,,,,,,,,Panda DR,,TGV_RTL/VEX,,,,,,,,,0,,,,Document the unique tail behavior of mask producing instructions in the MAS,Andrew Hanselman,Zhiqiang Hao,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-08-19T11:55:13.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3f8e43d58e6cac792931826c07b66294e8104796,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,,,,,,,,,,,,,2|i00axr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Evaluate / Refactor usage of resultOutMasked method before/after outputs muxing,,,,,,MAL-2273,121329,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,7/27/2022 10:37,7/27/2022 10:37,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"{{resultOutMasked}} method is used for each execution pipe before the final EXN data/flag/exception output is selected in EXN. If timing allows, we should relocate all of these separate mask applications before the final {{outputs}} muxing, to after, where it is shared by the different execution units. If this is not possible for some units, we may still be able to do some combination of masking before and masking after for different units.",Andrew Hanselman,,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00awf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] PrIdx field not sized appropriately for vector load/store ops,[TGV] PrIdx field ,LSU (Load Store Unit),,,,MAL-2272,121311,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,7/27/2022 7:58,9/7/2022 17:43,9/28/2022 0:51,8/4/2022 7:06,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,TGV,,,"The last thing retired in this test is a {{vse8.v}}. It’s followed by a {{lui}} and then a {{vle8.v}} instruction, and that load never retires. The load data gets into the LTB but the Baler IssQ does not wake up the LTB → VRF operation, it never completes, and we get a ROB hang.

The cause of that was [https://sifive.atlassian.net/browse/MAL-2247|https://sifive.atlassian.net/browse/MAL-2247|smart-link] . The Baler was using an exe-type issue queue, but with {{fifo = true}} but not with {{nonspec = true}}. That appeared to be causing a problem where the {{vle8.v}} instruction is set ready by the appropriate tag broadcast, but is blocked from issuing by {{olderBlock}} even though it was the only entry in the IssQ.

While debugging that, I noticed that the prIdx field of the load ops did not match what I expected. The upper bits were being truncated. There are (at least) two problems here.
1. The prIdx field was sized for max(scalarPrIdxBits, gid) when loads and stores really need gid+3 to account for LMUL=8 operations.
2. The uop num being concatenated with the gid in the dispatch logic was 4b wide instead of 3. We should trim the extra bit, which is needed for certain complex ops, but not for loads and stores.

Until those two items are fixed, we could run into a problem where the gid effectively aliases at mod 8. Not sure what will happen in that situation (marking too many things ready/complete or not enough things ready/complete are possibilities).

The outline should be the same as [https://sifive.atlassian.net/browse/MAL-2247|https://sifive.atlassian.net/browse/MAL-2247|smart-link], but with the fix applied the next failure is an extra “tag marked ready” assert.",David Kravitz,John Ingalls,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2247,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,see MAL-2247,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-08-03T08:47:38.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/d81e94f2e0e1330803367cba99ae6163c4db7168,,,n/a,,,,,,,,,Inspection,Simulation-STiNG,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i00asv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Aug/22 7:06 AM;5fd15143b4a74900763834e0;Increased the `prIdx` size -- unfortunately, everywhere -- to fit both `gid` and `uopID`. This should make it possible to migrate to a pure `prfTag` implementation w/o poking at MSBs.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Fetch Queue Bypass Path to Instruction Queue/Pre Decode flops - Evaluation of proposals to improve path,,,,,,MAL-2271,121305,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Adam George,61b2a458657a0500706b9c39,Vishad Viplav,623e520c94742a00683f710a,Vishad Viplav,623e520c94742a00683f710a,7/27/2022 2:30,8/11/2022 21:47,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/Frontend,,,,,,,,0,,,,"Hi,



This category of paths is impacted by two major changes in design configuration → i) fetch width 24B to 48B and ii) 8 → 16 instructions taken per cycle from fetch group. The *total logic depth is 50+* in healdsburg configuration builds where ~13 gates are for determining instruction boundaries (sequential algorithm) and ~22 gates for labelling the parcels/instructions (sequential algorithm) (adapter logic). 

Use of marker bits stored in SRAM will get rid of instruction boundaries logic which will reduce the logic depth to around 40, which is still high for our frequency targets.

Some ideas were proposed in the Brainstorming meetings

i) Take only 12 instructions instead of 16 (can reduce logic depth by 6-7, make it just below 35) 

ii) Take 8 instructions from 2 different fetch groups (expected good reduction in logic depth, will need more micro arch information to predict the logic depth)

Both of these may have perf implications which needs to be evaluated.



Starting this thread to track the decision for this path



Thanks,



Hi Josh, 

could you please help assign the ticket to the correct POC",Adam George,Benoy Alexander,Josh Smith,Vaibhav Gupta,Vishad Viplav,,,,,,,,,,,61b2a458657a0500706b9c39,5e1370feefa19b0e976b5c24,5acffeafaa802f2a797a955c,623e4830b75ca80070580145,623e520c94742a00683f710a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,27/Jul/22 2:15 AM;ug:519a710a-c989-4f27-af37-bfaa49b5eb6c;IFU critical paths (mallard) - Instruction Queue (1).png;https://sifive.atlassian.net/secure/attachment/74999/IFU+critical+paths+%28mallard%29+-+Instruction+Queue+%281%29.png,05/Aug/22 7:16 AM;ug:519a710a-c989-4f27-af37-bfaa49b5eb6c;IFU critical paths (mallard) - change (1).png;https://sifive.atlassian.net/secure/attachment/75447/IFU+critical+paths+%28mallard%29+-+change+%281%29.png,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00arj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,47:36.8,"05/Aug/22 7:16 AM;623e520c94742a00683f710a;Hi  Josh and Adam,

Currently the priority encoders which are getting added in series are leading to a good amount of logic depth along with Instruction Boundary calculation. If we try to calculate which instruction port a parcel will be mapped to at the time of boundary calculation itself we may be able to optimize the adapter logic (formMicroOps). I tried something in scala which I have tried to show in the diagram (some small details missing)

findParcelLabel block shows how the pointers may be calculated

!IFU critical paths (mallard) - change (1).png|width=1581,height=586!

We can maintain a one hot select kind of pointer (would be referring to it as parcel label) for each parcel, and if a particular parcel is starting of an instruction we shift right the pointer from previous parcel. So in this way, we are tracking the number of parcels which are instruction boundaries which are present before the current parcel\[i]; which I believe is also happening in a way in the mask based Priority Encoder logic. Also we can break the full computation of this “parcel Labels” in two parts and take use of carry adder like structure

{noformat}private def findParcelLabel(boundary: Seq[Bool], init_label: UInt): Seq[UInt] = {
    (boundary.scanLeft(init_label) { case (label, b) => Mux(b, label<<1, label) }).tail
  }

  private def findParcelLabelSplit(valid: Seq[Bool], rvc: Seq[Bool]): Seq[UInt] = {
    val n       = valid.size
    val init_label = 1.U((n+1).W)

    val left    = findInstructionBoundaries(valid.take(n/2), rvc.take(n/2))
    val left_label = findParcelLabel(left,init_label).map(label => label(n,1))

    val right1  = findInstructionBoundaries(false.B +: valid.drop(n/2), false.B +: rvc.drop(n/2)).tail
    val right1_label = findParcelLabel(right1,init_label).map(label => label(n,1))
    val right0  = findInstructionBoundaries(true.B  +: valid.drop(n/2), false.B +: rvc.drop(n/2)).tail
    val right0_label = findParcelLabel(right0,init_label).map(label => label(n,1))

    val right_label = (right1_label zip right0_label).map { case (r1, r0) =>   Mux(!left.last || rvc(n/2-1), r1, r0) }
    
    left_label ++ right_label.map(label => label << OHToUInt(left_label.last((left_label.size)-1,0)))
  }

{noformat}

For the parcels in right half, we are shifting all the labels based on the last parcel in left half - and also doing post processing to remove the partial bit related label and add remainder from adapter instead. The parcel labels are already one hot due to the way they are being generated - so we can use them with minimal post processing

For the select generation in adapter inside loop (i-> 0 till nFetch)

{noformat}// Parcel labels calculated in the block above
val byp_parcel_label    = 1.U(byp_parcel_bits.size.W) +: io.byp_fetch.bits.parcelLabel.map(label => Mux(remainder_valid, label << 1, Cat(0.U(1.W),label)))
//
//
//
 val (byp_opcodes, byp_pc) = (for (i <- 0 until params.nFetch) yield {
    // instruction i may start at parcels i to (2*i+1)
    val lsb = i                                         // lowest-indexed parcel where this instruction can start
    val msb = (2*i + 1) min (byp_parcel_bits.size - 1)  // highest-indexed parcel where this instruction can start
    val sel = (0 until byp_parcel_bits.size).map(j => j >= lsb && j <= msb && byp_parcel_start(j) && byp_parcel_label(j)(i)).asUInt
  
    byp_parcel_select(i) := sel
    
   val pc_lsbs = Mux1H(sel(msb,lsb), byp_parcel_pc_lsbs.slice(lsb,msb+1))

    (Mux1H(sel(msb,lsb), byp_parcel_bits_pad.slice(lsb,msb+1)), pc_lsbs)
  }).unzip
{noformat}

This shows good improvement in synthesis (15-20 gates after syn generic); (10-15 gates after final synthesis)

The Label for the last parcel (24) is produced after a gap of 2-3 gates after final instruction boundary computation, and then after some AND-OR logic can go to the Mux for opcodes and PC;

Whereas in the existing scheme, when we have the boundary information available for last parcel- we need to calculate select signals for 12,13,14,15 - 4 priority encoders in series ( the critical path is different)



* Could this kind of calculation produce a logically equivalent result (maybe with some further refinement)?
* This may lead to some higher combinational area as we are now maintaining labels for all 24 parcels instead of 16 select signals, Could some other issues also be there?
* We will need to decompress labels before storing them in fetch queue, and do some quick processing to get them back, also handle the taken_mask - to control the increase in number of flops

Thanks,



[~accountid:5acffeafaa802f2a797a955c] [~accountid:61b2a458657a0500706b9c39] ","11/Aug/22 9:47 PM;5acffeafaa802f2a797a955c;[~accountid:61b2a458657a0500706b9c39] when you have some time, could you take a look at this and provide any comments you have?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Allow flexibility of accumulator RD/WB interface on pipes other than just VEX0,,,,,,MAL-2270,121273,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,7/26/2022 17:25,7/28/2022 23:59,9/28/2022 0:51,7/27/2022 13:27,,,,,,,,,,,Panda DR,,TGV_RTL/MU,TGV_RTL/VEX,,,,,,,,0,,,,Reading from and writing to the accumulator is statically wired to VEX0 currently. Make this implementation detail more flexible.,Andrew Hanselman,,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-27T12:06:49.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,037143fd6bacb2279b95b0ab7284b3f1da5eb369,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00akf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Remove f2iNack from FexPipe TagReplay,,,,,,MAL-2269,121272,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Steffen Kunze,62cbe3403d382dfc9c5f3078,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,7/26/2022 17:14,9/23/2022 9:23,9/28/2022 0:51,8/12/2022 16:22,,,,,,,,,,,,,Implementation,RTL/FEX,,,,,,,,0,,,,"During the Healdsburg PPA studies, we see a timing path starting from IEX divider → ExPipe {{io.f2iNack}} -> FexPipe {{instReplay_EX}} → {{io.thisPipeTag}} / {{io.thisPipeTagReplay}} → LSU source ready information.

This should functionally be a false path, because {{f2iNack}} is only used for float-to-int (f2i) operations which are trying to inject a writeback into an integer pipeline.  FP f2i operations should not be broadcasting valid tags on the FEX tag buses, so there should be no need to signal a tag replay on the FEX tag buses if the f2i operation gets nack’d.



{noformat}  val instReplay_EX     = instValid_EX && (transferNack_EX || instSrcReplayed_EX) || i2fReplayed_EX
...
  val tagReplay         = Seq(!instMultiCycInject_RR && instReplay_RR, !instMultiCycInject_EX && instReplay_EX) ++ (2 until mp.exWkStgs).map(i => false.B)
  {noformat}



We should be able to create a separate signal like {{instReplay_EX}} which does not include the {{transferNack_EX}} term, and then use that for the tag replay logic.

We should also write some assertion that an f2i operation in EX stage is not trying to broadcast a valid tag, just to check my assumption.",Josh Smith,Julian Bailey,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2280,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-12T12:17:54.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,84eaa5f5ad0c61078df37bbb5f90b2e57b1fedf5,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i00ak7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,12/Aug/22 4:22 PM;5acffeafaa802f2a797a955c;[~accountid:623e4830b75ca80070580145] this path should be gone in the RTL now,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] X2Y PRA Clock Enable,,,,,,MAL-2268,121267,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,7/26/2022 15:46,7/26/2022 15:46,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/RDU,TGV_RTL/X2Y,,,,,,,,0,,,,"Disable PRAs when there are no instructions in flight. Right now, the x2y clock enable is driven by information in DIS and later. We could include REN signals, and quickly enable the PRA if instructions are detected in REN. If the clock for other non-PRA X2Y modules should be delayed additional cycles, then additional logic for this could be added too.",Andrew Hanselman,,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00aj3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] document non-mask tail policy in MAS,,,,,,MAL-2267,121258,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/26/2022 14:24,7/26/2022 14:24,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,"Describe the implementation choices made for tail pattern, in particular for tail agnostic policy (a):

* for every operation not producing a mask output (in particular for {{vcompress.vm}} (b))
* for every operation producing a mask output





(a) RVV 1.0 allows some freedom with respect to tail agnostic behaviour

(b) tail for {{vcompress.vm}} is defined by the complement of the number of compressed element, not by the complement of {{vl}} directly",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00ahb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Reuse X2Y producer pipe for the completion request,,,,,,MAL-2266,121211,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,7/26/2022 8:49,7/26/2022 8:49,9/28/2022 0:51,,,,,,,,,,,,,,RTL/FEX,RTL/IEX,TGV_RTL/RDU,TGV_RTL/VEX,TGV_RTL/X2Y,,,,,0,,,,"[https://sifive.atlassian.net/browse/MAL-1853|https://sifive.atlassian.net/browse/MAL-1853|smart-link] adds a completion request to the producer of X2Y transactions (previously only the consumer generated a completion request). This first pass added more completion request ports to the ROB originating from the X2Y unit, but the producer pipe completion request can be used instead. This should also pay off some tech-debt in aligning the IEX/FEX on how some pipe tag info is used.",Andrew Hanselman,,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00a87:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[IEX] fix f2iNack to support 2-cycle IEX mul,,,,,,MAL-2265,121209,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Won't Do,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/26/2022 8:33,7/30/2022 8:42,9/28/2022 0:51,7/30/2022 8:42,,,,,,,,,,,,,RTL/IEX,,,,,,,,,0,,,,"from [~accountid:5acffeafaa802f2a797a955c] 

{quote}I just remembered this, but the 2 cycle integer multiplier could cause functional problems if the multiplier is on the same pipe that handles F2I operations.  It looks like both P550 and P650 do have them on the same pipe.The problem is detecting writeback conflicts.  A 3-cycle multiply in RR stage will assert f2iNack to force the f2i operation to replay.  If we make the multiplier 2 cycles, we have to assert f2iNack when the multiplier is in ISS stgae (a possible timing problem), or we need to change it around and force the integer pipe not to issue a 2-cycle operation when the f2i op is in RR stage of the FP pipe.Relevant part from {{ExPipe.scala}}:{quote}

{noformat}  // Assert NACK on f2i interface if Mul is in RR stage (for 3-cycle mul) or ISS stage (for 2-cycle mul), would have a writeback conflict
  // with the f2i injecting op in DIS.  Also if divider or multicycle SCIE is asserting divIssBlock.
  io.f2iNack := ep.es.i2f.B && (
                  (ep.es.mul.B && instValid_RR && instPayload_RR.cmn.ctrl.mulOrPopc && (mp.iexMulLat == 2).B) ||
                  io.divIssBlock
                ){noformat}",Erdinc Ozturk,Josh Smith,Nicolas Brunie,,,,,,,,,,,,,61ccb01d90cfd20071b96af2,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00a7r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,42:24.2,"30/Jul/22 8:42 AM;5acffeafaa802f2a797a955c;So I was actually looking at the RTL today and realized that for 2-cycle operations like multiply, we actually replay the multiply instead of nack’ing the i2f operation.

{noformat}  // If there is a 2-cycle operation (SCIE or 2-cycle MUL), we will actually replay the issuing op instead of NACK'ing an f2i transfer
  val mulOpReplay_ISS = ep.es.mul.B && io.issReq_ISS.bits.payload.cmn.ctrl.mulOrPopc && (mp.iexMulLat == 1).B &&
                        io.f2iTransfer.injectReq_DIS && !io.f2iNack
  if (ep.es.mul && ep.es.i2f && (mp.iexMulLat == 1)) {
    ccover(mulOpReplay_ISS, 1, ""IEX_PIPE_MUL_I2F_REPLAY_ISS"", ""Mul replayed due to F2I writeback hazard"")
  }{noformat}

Sorry about the false alarm.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] exploit second tag broadcast bus / write port for divider/permute/hor-reduction WB (when conflict occurs),,,,,,MAL-2264,121206,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/26/2022 8:20,7/26/2022 9:20,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"A second tag broadcast bus and VRF write port is available in each VexPipe (added to support widening instructions). When a tag-bcast/WB conflict is detected between a dynamic latency insn (divider/permute/horizontal reduction) and a single width instruction, the dynamic latency insn could be diverted to the second pair of (tag-bcast/WB port) to avoid stalling the dyn latency uops.

This would require extending the completion request interface.",Alexandre Solomatnikov,Nicolas Brunie,,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2244,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i00a73:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Establish the conditions to enable the TGV Clock (tgvClockEnable_q),,,,,,MAL-2263,121170,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,7/25/2022 21:38,8/5/2022 21:12,9/28/2022 0:51,8/5/2022 20:51,,,,,,,,,,,,,Power,TGV_RTL/BAL,,,,,,,,0,,,,"Last Power Artist runs shows some switching activity on TGV side. After analyzing the code, {{tgvClockEnable_q }}signal is always enabled, so when TGV should be idle, clock is enabled. 

{noformat}  tgvClockEnable_q := chickenBits.disableVPUClockGate || // Chicken bit is forcing clock enable
    !allQueuesEmpty ||       // IQs not empty
    !allPipesIdle ||         // Pipes not empty
    io.tgvDispClockWakeup || // Dispatch may send an instruction
    io.lsuVexClockWakeup     // LSU may write to PRF
{noformat}

It is required to set the conditions for each signal. For example,  {{allQueuesEmpty  }}and {{allPipesIdle   }}signals are always true.

{noformat}val allQueuesEmpty = WireDefault(true.B)
val allPipesIdle   = WireDefault(true.B){noformat}

On Core.scala {{tgv.io.lsuVexClockWakeup}} is hardwired to '1'

{{tgv.io.lsuVexClockWakeup     := true.B  // FIXME-TGV}}

On Core.scala is used the signal {{tgvIdle}} which is always false since is the logical negation of {{tgvClockEnable_q}}

{{io.tgvIdle := !tgvClockEnable_q}}",Cristóbal Ramirez Lazo,,,,,,,,,,,,,,,62632262d7f1b80069c030b8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-05T20:48:42.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i009z3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] test and debug masked ordered FP red sums (single-width + widening),,,,,,MAL-2262,121165,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,7/25/2022 19:26,9/23/2022 0:27,9/28/2022 0:51,7/31/2022 20:49,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"test and debug masked ordered FP red sums (single-width + widening)

Set {{enable_masking}} to 1 in {{vtg-tgv-tests.outline}} and test following instructions.

{noformat}vfredosum.vs
vfwredosum.vs{noformat}",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Kira Tsao,Nicolas Brunie,Shaka Kao,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1949,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,,,,,,,,,,,,,2|i009xz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[FPU] rv64uf-fadd/rv64ud-fadd test failing on modified p650 cfg when hasStandaloneMul/hasShareMultiplier are set to false,[FPU] rv64uf-fadd/rv64ud-fadd ,,,,,MAL-2261,121164,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Won't Do,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,7/25/2022 19:18,9/8/2022 7:52,9/28/2022 0:51,9/8/2022 7:52,,,,,,,,,,,,,RTL/FEX,,,,,,,,,0,,,,"Over a modified {{specs/design-definitions/tiles/tile_p650.json}} configuration in {{fexPipes}}:

{{""hasStandaloneMul"": false}}

{{""hasShareMultiplier"": false}}

{{""hasCascadingFMA"": false}}

When I run:

{{BUILD_DIR=builds ./generate-build coreip_p650}}

{{cd builds/coreip_p650 && source load-modules && make sim}}

{{cd sim && ./sitest rv64ud-fadd rv64uf-fadd rv64ud-fmadd rv64uf-fmadd --local}}

Error: simulation sim/rv64uf-fadd sim/rv64ud-fadd failed",Erdinc Ozturk,Josh Smith,Kira Tsao,Nicolas Brunie,,,,,,,,,,,,61ccb01d90cfd20071b96af2,5acffeafaa802f2a797a955c,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2148,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{branch={count=1, dataType=branch}, json={""cachedValue"":{""errors"":[],""summary"":{""branch"":{""overall"":{""count"":1,""lastUpdated"":null,""dataType"":""branch""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i009xr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"Over a modified specs/design-definitions/tiles/tile_p650.json configuration in fexPipes:

""hasStandaloneMul"": false

""hasShareMultiplier"": false

""hasCascadingFMA"": false

When I run:

BUILD_DIR=builds ./generate-build coreip_p650

cd builds/coreip_p650 && source load-modules && make sim

cd sim && ./sitest rv64ud-fadd rv64uf-fadd rv64ud-fmadd rv64uf-fmadd --local",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,48:40.2,"26/Jul/22 4:48 AM;61ccb01d90cfd20071b96af2;Tested on this branch: [https://github.com/sifive/federation/tree/MAL-2261-investigate|https://github.com/sifive/federation/tree/MAL-2261-investigate|smart-link]  and duplicated the error. I tried changing these three configurations on both pipes, and that setting passed the test. Simulation folder is /scratch/erdinco/federation/builds/coreip_p650/sim on gamma25.",26/Jul/22 7:18 AM;6065017e90e3950069cf01c5;What is the actual error ?,"26/Jul/22 7:21 AM;6065017e90e3950069cf01c5;I think the error is, that the fex pipes configuration is not uniform (standalone add and mul only in one of the pipes) and this is not supported. Dispatch may need to be modified for this to actually work.

So we need to add a require checking configuration uniformity or allow non-uniform configuration. Initial PoR was to have uniform configuration.","26/Jul/22 7:22 AM;61ccb01d90cfd20071b96af2;Error message:

Error: ""/scratch/erdinco/federation/builds/coreip_p650/verilog/design/assertions/SiFive_RDU_assert.sv"", 1153: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.SiFive_RDU_assert: at time 148982500 ps

Assertion failed (verification library):   @\[RDU.scala 2920:65]

Fatal: ""/scratch/erdinco/federation/builds/coreip_p650/verilog/design/assertions/SiFive_RDU_assert.sv"", 1155: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.SiFive_RDU_assert: at time 148982500 ps

$finish called from file ""/scratch/erdinco/federation/builds/coreip_p650/verilog/design/assertions/SiFive_RDU_assert.sv"", line 1155.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] ROB assertion firing on non-zero s2vAllocPtrRewindCnt while vector clock disabled,[TGV] ROB assertion firing ,,,,,MAL-2260,121147,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/25/2022 16:33,9/7/2022 17:43,9/28/2022 0:51,7/25/2022 22:27,,,,,,,,,,,Panda DR,,RTL/RDU,,,,,,,,,0,TGV,,,"+*federation git hash:*+ {{19d98941dfc}}

+*outline:*+

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+e",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25/Jul/22 4:33 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220725-233142.png;https://sifive.atlassian.net/secure/attachment/74916/image-20220725-233142.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-26T08:59:54.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,7429e621228c1de4fc14bb8420cd34f9f548b6e5,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i009vb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Add parameters to SrcTag/DestTag class to derive required width of tag prIdx field per IssQ / execution pipe,,,,,,MAL-2259,121132,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,7/25/2022 15:07,7/25/2022 15:07,9/28/2022 0:51,,,,,,,,,,,,,,RTL/FEX,RTL/IEX,RTL/LSU,RTL/RDU,TGV_RTL/BAL,TGV_RTL/ISS,TGV_RTL/RDU,TGV_RTL/VEX,,0,,,,"Currently, all the source tag and destination tag fields in mallard have been extended (when vector is enabled) to accommodate the requirement of the Baler+LSU to communicate data/wakeups via GID+uop#. We should be able to put together a solution which is aware of the source tag and destination tag width requirements, and generates a tag field with the minimum width to support those requirements.",Andrew Hanselman,John Ingalls,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i009sf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] study change required for partial mask forwarding,,,,,,MAL-2258,121130,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Andrew Hanselman,609d7e1f5998a6006800dcc5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/25/2022 14:43,7/25/2022 14:44,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/ISS,TGV_RTL/VEX,,,,,,,,0,,,,Mask producing operations should forward partial mask slice to mask reading uops to prevent the latter from waiting from the final completion notification of the former.,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i009rz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] refactor VectorPermuteEngine,,,,,,MAL-2257,121126,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/25/2022 14:24,9/27/2022 20:58,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,List and pay tech debt in the {{VectorPermuteEngine}},Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,MAL-2243,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-27T20:01:15.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,,,,,,,,,,,,,,,,2|i009r3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/26514/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] conditional mask unit and V2S instantiation   / mask write specialization to a parameter in VexPipe,,,,,,MAL-2256,121125,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/25/2022 14:15,8/18/2022 19:50,9/28/2022 0:51,8/12/2022 6:18,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"In larger configuration (e.g. {{p670}}), mask writing instructions will be supported in only one out of multiple pipes. No logic specific to mask writing should be instantiated in the other pipes.",Andrew Hanselman,Brad Wu,Nicolas Brunie,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-12T06:17:40.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i009qv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] reduce the number of completion request per reduction operations,,,,,,MAL-2255,121025,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/25/2022 11:52,8/26/2022 9:15,9/28/2022 0:51,8/26/2022 7:46,,,,,,,,,,,Panda DR,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,"Currently a single reduction operation may be sequenced into more than 8 uops. This could lead to more than 8 completion requests sent by the uops sequence to the ROB, which extend beyond what the ROB was designed for.

Several options:

* extend the ROB to support more completion request per ROB group
** This requirement could be limited by ensuring that a ROB group cannot contain more than one reduction operation 
* Suppress any but the last completion request for reduction sequence (only the uop writing the actual destination register is expected to send a completion request)",Brad Wu,Josh Smith,Kira Tsao,Nicolas Brunie,,,,,,,,,,,,62103777eb2978006893b778,5acffeafaa802f2a797a955c,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-26T07:45:24.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,010542c8b221d6d7e096f84dd378d30aeaa89ba0,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i0096v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,55:37.8,26/Jul/22 11:55 AM;5acffeafaa802f2a797a955c;I would kind of prefer that these sequenced operations just send one completion back when the entire operation is done.,26/Jul/22 12:33 PM;6065017e90e3950069cf01c5;It seems like the best way to do it.,21/Aug/22 8:04 PM;62103777eb2978006893b778;[~accountid:6065017e90e3950069cf01c5] Could you explain what would be the problem if we send more than 8 completion to ROB because I’m not encounter any problem with the current design. Thanks.,"21/Aug/22 11:53 PM;6065017e90e3950069cf01c5;[~accountid:62103777eb2978006893b778] , there is no known issue.

With some operations, in particular reduction we expect a very high number of completion request to be expected, which could (if we keep allowing multiple reductions per ROB group, which looks like we are not going to), this could force a larger completion counter in the ROB (or a counter overflow if the counter was not sized appropriately).","21/Aug/22 11:54 PM;6065017e90e3950069cf01c5;[~accountid:609d7e1f5998a6006800dcc5] is looking into this ticket, and we can consider this a first necessary step in the optimization of the resources used by reduction operation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] check retiming for simple integer reduction unit,,,,,,MAL-2254,121018,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/25/2022 10:53,9/3/2022 7:40,9/28/2022 0:51,7/25/2022 22:10,,,,,,,,,,,,,Implementation,TGV_RTL/VEX,Timing,,,,,,,0,,,,"July 22nd 2022 synthesis runs expose a critical path with -46ps in the simple integer reduction unit.

This path should have been retimed properly over 2 cycles.

+*Critical Path(s):*+ In the first stage ({{EX}}) of {{VexPipe}}, between instruction payload and {{EX -> EX2}} pipeline register through the simple reduction unit {{sintredmod}}

+*Suggested fix:*+ make sure {{sintredmod}} is properly retimed over 2 cycles such that it can fully use part of {{EX2}} (before the bypass network) to lay down some of its logic depth.

+*Performance impact:*+ None, the second cycle was already provisioned for {{sintredmod}}

+*Power impact:*+ the number of flops may raise a bit (flopping at a larger stage of the datapath, but overall toggling activity should decrease as part of the logic will be deported to the second stage and gated by a valid signal).

{noformat}#-------------------------------------------------------------------------------------------------------------------------------------------------------------------
#                              Timing Point                               Flags    Arc   Edge            Cell              Fanout Load Trans Delay Arrival Instance 
#                                                                                                                                 (fF)  (ps)  (ps)   (ps)  Location 
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------
  tile/core/tgv/vex/exPipes_1/instPayload_EX_vector_ovldImm_reg[3]/CP     -       -      R     (arrival)                      726    -     0     0       0    (-,-) 
  tile/core/tgv/vex/exPipes_1/instPayload_EX_vector_ovldImm_reg[3]/Q      -       CP->Q  R     DFQD4BWP240H8P57PDULVT           2  2.1     6    23      23    (-,-) 
  tile/core/tgv/vex/exPipes_1/fopt39139/ZN                                -       I->ZN  F     INVSKRD3BWP240H8P57PDULVT        3  2.8     8     7      31    (-,-) 
  tile/core/tgv/vex/exPipes_1/g37102/ZN                                   -       A1->ZN R     ND2D3BWP240H8P57PDULVT           2  1.8     6     6      36    (-,-) 
  tile/core/tgv/vex/exPipes_1/g58547/ZN                                   -       A2->ZN F     NR2SKRD3BWP240H8P57PDULVT        2  2.2     8     7      44    (-,-) 
  tile/core/tgv/vex/exPipes_1/g58546/ZN                                   -       A1->ZN R     ND2SKFD4BWP240H8P57PDULVT        2  2.8     8     7      51    (-,-) 
  tile/core/tgv/vex/exPipes_1/g680/ZN                                     -       A2->ZN F     NR2SKRD6BWP240H8P57PDULVT        1  5.1     8     8      58    (-,-) 
  tile/core/tgv/vex/exPipes_1/g10104/ZN                                   -       I->ZN  R     INVD16BWP240H8P57PDULVT          8 14.4     7     7      65    (-,-) 
  tile/core/tgv/vex/exPipes_1/g13975/Z                                    -       I->Z   R     BUFFSKFD14BWP240H8P57PDULVT     13 13.1     9    14      79    (-,-) 
  tile/core/tgv/vex/exPipes_1/g40908/ZN                                   -       A1->ZN F     ND2D2BWP240H8P57PDULVT           1  1.1     7     7      86    (-,-) 
  tile/core/tgv/vex/exPipes_1/g55613/ZN                                   -       I->ZN  R     INVD2BWP240H8P57PDULVT           1  1.4     6     6      92    (-,-) 
  tile/core/tgv/vex/exPipes_1/g55611/ZN                                   -       A3->ZN F     ND3SKFD3BWP240H8P57PDULVT        1  1.5     9     9     100    (-,-) 
  tile/core/tgv/vex/exPipes_1/g58/ZN                                      -       A1->ZN R     NR3D4BWP240H8P57PDULVT           2  2.3    12    10     110    (-,-) 
  tile/core/tgv/vex/exPipes_1/g58970/ZN                                   -       A2->ZN F     NR3SKRD6BWP240H8P57PDULVT        2  3.6     8     8     118    (-,-) 
  tile/core/tgv/vex/exPipes_1/g56704/ZN                                   -       I->ZN  R     INVSKFD8BWP240H8P57PDULVT        4  5.4     7     7     124    (-,-) 
  tile/core/tgv/vex/exPipes_1/g59447/ZN                                   -       A1->ZN F     NR3OPTPAD4BWP240H8P57PDULVT      1  2.1     8     5     130    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/fopt47599/ZN                     -       I->ZN  R     INVSKFD6BWP240H8P57PDULVT        3  4.1     6     6     136    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/fopt47601/ZN                     -       I->ZN  F     INVSKRD4BWP240H8P57PDULVT        6  4.8     9     8     144    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/g47436/ZN                        -       A1->ZN F     IOA21D2BWP240H8P57PDULVT         3  3.2    14    17     162    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/g11144/ZN    -       I->ZN  R     INVD3BWP240H8P57PDULVT           2  2.1     7     7     168    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/g11143/ZN    -       B1->ZN F     OAI22D3BWP240H8P57PDULVT         2  2.4    13    10     179    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/g12114/ZN    -       B1->ZN F     MOAI22D4BWP240H8P57PDULVT        2  2.6    10    15     194    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/fopt11771/ZN -       I->ZN  R     INVSKFD6BWP240H8P57PDULVT        1  2.9     6     6     200    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/g11770/ZN    -       A->ZN  F     MAOI222D4BWP240H8P57PDULVT       4  3.9    14    11     211    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/g10392/ZN    -       A1->ZN F     IOA22D4BWP240H8P57PDULVT         2  2.8    11    15     226    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/g10947/ZN    -       A1->ZN R     XNR2D3BWP240H8P57PDULVT          1  1.3     6    16     242    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/g10390/ZN    -       A1->ZN F     ND2D3BWP240H8P57PDULVT           1  2.3     8     7     250    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/g11615/ZN    -       A1->ZN R     ND2SKFD8BWP240H8P57PDULVT        5  4.8     8     7     257    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/g10499/ZN    -       I->ZN  F     INVD1BWP240H8P57PDULVT           1  1.1     7     7     264    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/g11530/ZN    -       B->ZN  R     IAOI21D2BWP240H8P57PDULVT        1  1.5    10     8     272    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/g10497/ZN    -       B->ZN  F     AOI21SKRD4BWP240H8P57PDULVT      3  2.5    12     8     280    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/fopt10508/ZN -       I->ZN  R     INVSKRD3BWP240H8P57PDULVT        1  1.0     5     5     284    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/g751/PP      -       A->PP  F     BMLD4BWP240H8P57PDULVT           2  2.6     8    27     311    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/g12013/ZN    -       A1->ZN R     NR2OPTPAD4BWP240H8P57PDULVT      2  2.2     8     6     318    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/g12012/ZN    -       A2->ZN F     OAI21D4BWP240H8P57PDULVT         2  1.9     8     8     326    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/g27/ZN       -       A1->ZN R     ND3OPTPAD4BWP240H8P57PDULVT      3  3.3     9     7     332    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/g9685/ZN     -       A1->ZN F     AOI21SKRD2BWP240H8P57PDULVT      1  1.3    16    13     345    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/g9684/ZN     -       A1->ZN R     NR2SKRD3BWP240H8P57PDULVT        2  1.5     9     8     353    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/g11998/ZN    -       A1->ZN F     ND3OPTPAD1BWP240H8P57PDULVT      1  1.1    14    11     364    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/addReduced_redMod_1/g11997/ZN    -       A3->ZN R     ND3D2BWP240H8P57PDULVT           1  0.7     8     7     371    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/g47236/ZN                        -       A1->ZN R     IOA21D1BWP240H8P57PDULVT         1  0.8     7    12     383    (-,-) 
  tile/core/tgv/vex/exPipes_1/sintredmod/io_out_b_reg[10]/D               -       -      R     DFQD1BWP240H8P57PDULVT           1    -     -     0     383    (-,-) 
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------
{noformat}",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-25T22:10:32.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/6794d26295911d2280266c9664f0afb6aa1fbeec,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i0095b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] test and add to weekly CI test fp16 validation of TGV,,,,,,MAL-2253,121014,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Shaka Kao,5f94696c29bd8a006f94f0e1,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/25/2022 10:30,8/30/2022 18:27,9/28/2022 0:51,8/10/2022 1:01,,,,,,,,,,,,,TGV_RTL/Top,,,,,,,,,0,,,,make sure the existing spanning configuration including half precision support ([https://github.com/sifive/federation/blob/master/specs/design/coreip/spanning/u8_minimal_vector_vfp16.json|https://github.com/sifive/federation/blob/master/specs/design/coreip/spanning/u8_minimal_vector_vfp16.json] ) is regularly tested (in particular half precision vector FP operations).,Eric Cheng,Kira Tsao,Nicolas Brunie,Shaka Kao,,,,,,,,,,,,5d4a0f85af16f20ceaf5442e,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,06/Aug/22 4:48 PM;ug:113b86d8-ecfc-456b-a6a8-529c0abb7d7d;# of Test vs. TstCnt Range.png;https://sifive.atlassian.net/secure/attachment/75472/%23+of+Test+vs.+TstCnt+Range.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-09T13:45:54.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i0094n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,51:57.6,"29/Jul/22 4:51 AM;5f94696c29bd8a006f94f0e1;{{2022-07-29}} 

make file: {{coreip_u8_minimal_vector_vfp16.mk}}

designJSON:  {{spanning/u8_minimal_vector_vfp16.json}}

test: {{vtg-tgv-tests.outline}}

{noformat}Summary:
      |   Total Verilog Compiles |   Total Verilog Sims |   Incomplete/Skipped |   Build Fails |   Sim Failures |   Total Failed
------+--------------------------+----------------------+----------------------+---------------+----------------+----------------
 Jobs |                        1 |                 1228 |                    0 |             0 |              3 |              3
{noformat}



{noformat}|                                                                               name   |                         config   | simulator   |   cputime |   bucket | UUID         |
|--------------------------------------------------------------------------------------|----------------------------------|-------------|-----------|----------|--------------|
| regr/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector_vfp16   | vcs         |     72.95 |        1 | fa5afe886e   |
| regr/vtg-tgv-tests.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector_vfp16   | vcs         |     68.98 |        1 | c567f1f933   |
| regr/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector_vfp16   | vcs         |     71.21 |        1 | 217d1caf53   |


  Bucket  Failure                                                            Count
--------  ---------------------------------------------------------------  -------
       1  FAILED: Test Result Registered Name TestDriver.testHarness.i_TF        3
{noformat}","29/Jul/22 4:56 AM;5f94696c29bd8a006f94f0e1;TODO:

* Add {{spanning/u8_minimal_vector_vfp16.json}} to weekly CI ({{specs/test-plans/test-weekly.yml}})","29/Jul/22 7:49 AM;6065017e90e3950069cf01c5;If the {{vcompress.vm}} is the tail issue related to [https://sifive.atlassian.net/browse/VI-7731?atlOrigin=eyJpIjoiZWQwMDEyNTgxZTFjNDY4ZGExMTVhZjQ0MmYyMTQ0Y2YiLCJwIjoiamlyYS1zbGFjay1pbnQifQ|https://sifive.atlassian.net/browse/VI-7731?atlOrigin=eyJpIjoiZWQwMDEyNTgxZTFjNDY4ZGExMTVhZjQ0MmYyMTQ0Y2YiLCJwIjoiamlyYS1zbGFjay1pbnQifQ|smart-link]  they we are fine.

[~accountid:5f94696c29bd8a006f94f0e1] can you check that there are indeed half precision test cases generated in the floating-point / conversion tests ?","01/Aug/22 1:46 AM;5f94696c29bd8a006f94f0e1;Hi [~accountid:6065017e90e3950069cf01c5],  

{quote}check that there are indeed half precision test cases generated in the floating-point / conversion tests?{quote}

* There is a {{Zvfh}} ISA extension string in the object model file, and VTG will generate half-precision (SEW=16) operations if Zvfh is ON.
* But we cannot guarantee the “coverage” (test counts) for the half-precision test. 🙂 
* It seems some instruction tests do not cover fp16 (nor fp32/fp64)… so sad.
** for widening operation, no double-precision operation match our expectation.

Below show the 16/32/64 precision test counts for LMUL=1:

Outline parameters setting: {{enable_exceptions = 0}}; {{flmul = 0}}; {{num_of_tests_gen = 200}}

* it’s interesting that for ({{vfsgnj.vv}} and {{vfredsum.vs}}), VTG did not generate any corresponding tests for them. I think it might be the randomized/seed problem.



{noformat}Inst                  Total   Half Single Double
vfadd.vv                 13      7      3      3
vfadd.vf                 50     19     20     11
vfsub.vv                 10      2      3      5
vfsub.vf                 27     11     11      5
vfrsub.vf                18      8      8      2
vfwadd.vv                33     17     16    -X-
vfwadd.vf                33     16     17    -X-
vfwsub.vv                12      5      7    -X-
vfwsub.vf                10      6      4    -X-
vfwadd.wv                10      5      5    -X-
vfwadd.wf                20      7     13    -X-
vfwsub.wv                50     25     25    -X-
vfwsub.wf                50     27     23    -X-
vfmul.vv                 19      5     10      4
vfmul.vf                 50     20     18     12
vfdiv.vv                 20      6      5      9
vfdiv.vf                 50     16     17     17
vfrdiv.vf                50     22     17     11
vfwmul.vv                35     18     17    -X-
vfwmul.vf                33     17     16    -X-
vfmacc.vv                50     19     20     11
vfmacc.vf                50     23     15     12
vfnmacc.vv               12      6      4      2
vfnmacc.vf               50     19     14     17
vfmsac.vv                18      3      9      6
vfmsac.vf                50     15     21     14
vfnmsac.vv               20      7      5      8
vfnmsac.vf               50     16     19     15
vfmadd.vv                50     19     18     13
vfmadd.vf                50     17     19     14
vfnmadd.vv               50     17     20     13
vfnmadd.vf               23     10      6      7
vfmsub.vv                50     21     17     12
vfmsub.vf                50     17     22     11
vfnmsub.vv               17      9      4      4
vfnmsub.vf               50     20     18     12
vfwmacc.vv               32     16     16    -X-
vfwmacc.vf               16      7      9    -X-
vfwnmacc.vv              37     20     17    -X-
vfwnmacc.vf              14      7      7    -X-
vfwmsac.vv                7      5      2    -X-
vfwmsac.vf               35     17     18    -X-
vfwnmsac.vv               8      6      2    -X-
vfwnmsac.vf              37     18     19    -X-
vfsqrt.v                 23     11      6      6
vfrsqrt7.v               16      4      7      5
vfrec7.v                 50     22     19      9
vfmin.vv                 50     22     17     11
vfmin.vf                 22      7      8      7
vfmax.vv                 50     17     19     14
vfmax.vf                 24      9     10      5
vfsgnj.vv                 0    -X-    -X-    -X-
vfsgnj.vf                 1    -X-    -X-      1
vfsgnjn.vv               27     12      8      7
vfsgnjn.vf                5      3      2    -X-
vfsgnjx.vv                1      1    -X-    -X-
vfsgnjx.vf                2      1      1    -X-
vfclass.v                21      8      7      6
vfmerge.vfm              10      3      5      2
vfmv.v.f                  5      3      1      1
vfcvt.xu.f.v             50     23     19      8
vfcvt.x.f.v              50     18     19     13
vfcvt.rtz.xu.f.v         23      7      8      8
vfcvt.rtz.x.f.v          50     21     17     12
vfcvt.f.xu.v             16      5      6      5
vfcvt.f.x.v              50     21     21      8
vfwcvt.xu.f.v            37     19     18    -X-
vfwcvt.x.f.v             19      9     10    -X-
vfwcvt.rtz.xu.f.v        16     10      6    -X-
vfwcvt.rtz.x.f.v         36     17     19    -X-
vfwcvt.f.xu.v            50     16     18    -X-
vfwcvt.f.x.v             50     16     17    -X-
vfwcvt.f.f.v             34     18     16    -X-
vfncvt.xu.f.w            50     15     12    -X-
vfncvt.x.f.w             50     16     22    -X-
vfncvt.rtz.xu.f.w        50     19     12    -X-
vfncvt.rtz.x.f.w         50     17     15    -X-
vfncvt.f.xu.w            19      8     11    -X-
vfncvt.f.x.w             50     27     23    -X-
vfncvt.f.f.w             50     27     23    -X-
vfncvt.rod.f.f.w         50     24     26    -X-
vfredosum.vs             50     20     15     15
vfredsum.vs               0    -X-    -X-    -X-
vfredmax.vs              50     17     23     10
vfredmin.vs              50     20     13     17
vfwredosum.vs            10      4      6    -X-{noformat}","01/Aug/22 2:02 AM;6065017e90e3950069cf01c5;Very detailled reports, thanks [~accountid:5f94696c29bd8a006f94f0e1] , could you create one VI ticket per VTG issue so we notify DV team and track possible solutions ?","02/Aug/22 12:34 AM;5f94696c29bd8a006f94f0e1;Update: (+ [~accountid:5d4a0f85af16f20ceaf5442e] )

The up-to-date VTG is not yet bumping to the federation (waiting for regression), and I manually update {{riscv-vector-tests}} to get this [PR|https://github.com/sifive/riscv-vector-tests/pull/170] in. Now the data/coverage seems improved, and [~accountid:5d4a0f85af16f20ceaf5442e] mentioned that the further PR will enhance the test count problem.



{noformat}Inst                  Total   Half Single Double
vfadd.vv                 13      7      3      3
vfadd.vf                102     38     36     28
vfsub.vv                 10      2      3      5
vfsub.vf                 27     11     11      5
vfrsub.vf                18      8      8      2
vfwadd.vv                33     17     16    -X-
vfwadd.vf                33     16     17    -X-
vfwsub.vv                12      5      7    -X-
vfwsub.vf                10      6      4    -X-
vfwadd.wv                10      5      5    -X-
vfwadd.wf                20      7     13    -X-
vfwsub.wv                67     34     33    -X-
vfwsub.wf                78     39     39    -X-
vfmul.vv                 19      5     10      4
vfmul.vf                 99     36     35     28
vfdiv.vv                 20      6      5      9
vfdiv.vf                101     34     38     29
vfrdiv.vf                96     36     32     28
vfwmul.vv                35     18     17    -X-
vfwmul.vf                33     17     16    -X-
vfmacc.vv               191     70     66     55
vfmacc.vf                98     37     35     26
vfnmacc.vv               12      6      4      2
vfnmacc.vf              102     36     36     30
vfmsac.vv                18      3      9      6
vfmsac.vf                98     34     35     29
vfnmsac.vv               20      7      5      8
vfnmsac.vf              101     35     38     28
vfmadd.vv               198     70     73     55
vfmadd.vf               102     38     38     26
vfnmadd.vv              199     72     71     56
vfnmadd.vf               23     10      6      7
vfmsub.vv               192     70     68     54
vfmsub.vf               102     37     35     30
vfnmsub.vv               17      9      4      4
vfnmsub.vf              101     37     36     28
vfwmacc.vv               32     16     16    -X-
vfwmacc.vf               16      7      9    -X-
vfwnmacc.vv              37     20     17    -X-
vfwnmacc.vf              14      7      7    -X-
vfwmsac.vv                7      5      2    -X-
vfwmsac.vf               35     17     18    -X-
vfwnmsac.vv               8      6      2    -X-
vfwnmsac.vf              37     18     19    -X-
vfsqrt.v                 23     11      6      6
vfrsqrt7.v               16      4      7      5
vfrec7.v                 98     35     36     27
vfmin.vv                189     66     70     53
vfmin.vf                 22      7      8      7
vfmax.vv                200     74     72     54
vfmax.vf                 24      9     10      5
vfsgnj.vv                 0    -X-    -X-    -X-
vfsgnj.vf                 1    -X-    -X-      1
vfsgnjn.vv               27     12      8      7
vfsgnjn.vf                5      3      2    -X-
vfsgnjx.vv                1      1    -X-    -X-
vfsgnjx.vf                2      1      1    -X-
vfclass.v                21      8      7      6
vfmerge.vfm              10      3      5      2
vfmv.v.f                  5      3      1      1
vfcvt.xu.f.v             81     31     31     19
vfcvt.x.f.v              80     29     28     23
vfcvt.rtz.xu.f.v         23      7      8      8
vfcvt.rtz.x.f.v          82     31     29     22
vfcvt.f.xu.v             16      5      6      5
vfcvt.f.x.v              76     29     29     18
vfwcvt.xu.f.v            37     19     18    -X-
vfwcvt.x.f.v             19      9     10    -X-
vfwcvt.rtz.xu.f.v        16     10      6    -X-
vfwcvt.rtz.x.f.v         36     17     19    -X-
vfwcvt.f.xu.v            54     18     18    -X-
vfwcvt.f.x.v             56     19     19    -X-
vfwcvt.f.f.v             34     18     16    -X-
vfncvt.xu.f.w           106     37     32    -X-
vfncvt.x.f.w            106     37     35    -X-
vfncvt.rtz.xu.f.w       108     40     32    -X-
vfncvt.rtz.x.f.w        108     38     37    -X-
vfncvt.f.xu.w            19      8     11    -X-
vfncvt.f.x.w             67     34     33    -X-
vfncvt.f.f.w             72     38     34    -X-
vfncvt.rod.f.f.w         72     35     37    -X-
vfredosum.vs            197     73     70     54
vfredsum.vs               0    -X-    -X-    -X-
vfredmax.vs             190     68     71     51
vfredmin.vs             193     69     72     52
vfwredosum.vs            10      4      6    -X-{noformat}","02/Aug/22 12:36 AM;5f94696c29bd8a006f94f0e1;VTG tests/coverage enhancement:

[https://sifive.atlassian.net/browse/VI-7617|https://sifive.atlassian.net/browse/VI-7617|smart-link] 

[~accountid:5d4a0f85af16f20ceaf5442e]/ DV will reopen the above ticket and continue to enhance VTG test coverage problem.","02/Aug/22 12:39 AM;5d4a0f85af16f20ceaf5442e;Yes, with the upcoming update, VTG will generate “exactly“ n cases as user wish. 

[https://github.com/sifive/riscv-vector-tests/pull/172|https://github.com/sifive/riscv-vector-tests/pull/172|smart-link] ","06/Aug/22 12:10 AM;5f94696c29bd8a006f94f0e1;{{2022-08-06}} 

designJSON: *coreip_u8_minimal_vector_vfp16*

outline config:

* enable_masking = 0
* enable_exceptions = 1
* flmul = 1
* mask = 7
* num_of_tests_gen = 100



{noformat}|                                                                                   name   |                         config   | simulator   |   cputime |   bucket | UUID         |
|------------------------------------------------------------------------------------------|----------------------------------|-------------|-----------|----------|--------------|
| regr0806/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector_vfp16   | vcs         |     65.9  |        1 | 104f4c302c   |
| regr0806/vtg-tgv-tests.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector_vfp16   | vcs         |     78.06 |        1 | 1d72cda2d2   |
| regr0806/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector_vfp16   | vcs         |     70.03 |        1 | 0d6bc19dbd   |


  Bucket  Failure                                      Count
--------  -----------------------------------------  -------
       1  COSIM-ERROR# COSIM VS RTL WRDATA MISMATCH        3

Summary:
      |   Total Verilog Compiles |   Total Verilog Sims |   Incomplete/Skipped |   Build Fails |   Sim Failures |   Total Failed
------+--------------------------+----------------------+----------------------+---------------+----------------+----------------
 Jobs |                        1 |                 1228 |                    1 |             0 |              3 |              3{noformat}



Floating point instructions test count/coverage:

Since we turn on “enable_exceptions = 1”, lots of “exceptional cases” are generated. Will rerun regression with {{enable_exceptions = 0}}

{noformat}Inst                  Total   Half Single Double
vfadd.vv                100     17      4      2
vfadd.vf                100     12     11    -X-
vfsub.vv                100     13     12      1
vfsub.vf                100     21     10      2
vfrsub.vf               100     10      6      1
vfwadd.vv               100      4      5    -X-
vfwadd.vf               100      8      5    -X-
vfwsub.vv               100     13      9    -X-
vfwsub.vf               100     18      5    -X-
vfwadd.wv               100     14      5    -X-
vfwadd.wf               100     22      5    -X-
vfwsub.wv               100      9      2    -X-
vfwsub.wf               100     10     12    -X-
vfmul.vv                100     16      5    -X-
vfmul.vf                100     20      8      2
vfdiv.vv                100     11      7      3
vfdiv.vf                100     14      7      2
vfrdiv.vf               100     18      5      3
vfwmul.vv               100      4      1    -X-
vfwmul.vf               100      4      4    -X-
vfmacc.vv               100     14     14      3
vfmacc.vf               100     18     10      2
vfnmacc.vv              100     13      6      1
vfnmacc.vf              100     11      9      6
vfmsac.vv               100     16      8      3
vfmsac.vf               100     21      9      1
vfnmsac.vv              100     20      5      1
vfnmsac.vf              100     16     11      3
vfmadd.vv               100     13      8      3
vfmadd.vf               100     14      9      3
vfnmadd.vv              100     14      5      2
vfnmadd.vf              100     20      9      2
vfmsub.vv               100     17      7    -X-
vfmsub.vf               100     17     10    -X-
vfnmsub.vv              100     12      9      1
vfnmsub.vf              100     11      7      3
vfwmacc.vv              100      1      1    -X-
vfwmacc.vf              100     11     10    -X-
vfwnmacc.vv             100      3    -X-    -X-
vfwnmacc.vf             100     12      6    -X-
vfwmsac.vv              100     11      8    -X-
vfwmsac.vf              100      8      5    -X-
vfwnmsac.vv             100     15     10    -X-
vfwnmsac.vf             100      5      1    -X-
vfsqrt.v                100     27     11      3
vfrsqrt7.v              100     20     12      2
vfrec7.v                100     19      4      1
vfmin.vv                100     16      9      1
vfmin.vf                100     15      7      2
vfmax.vv                100     18     10      3
vfmax.vf                100     10     10    -X-
vfsgnj.vv                10      1    -X-    -X-
vfsgnj.vf                26      4    -X-      1
vfsgnjn.vv              100     12      8      5
vfsgnjn.vf               25      5      3    -X-
vfsgnjx.vv               11      2      1    -X-
vfsgnjx.vf               21      1      1    -X-
vfclass.v               100     15      6      3
vfmerge.vfm             100      4      1      2
vfmv.v.f                 45      5      2      1
vfcvt.xu.f.v            100     20     11      4
vfcvt.x.f.v             100     23     13      4
vfcvt.rtz.xu.f.v        100     21     16      5
vfcvt.rtz.x.f.v         100     27     10      4
vfcvt.f.xu.v            100     18     13      6
vfcvt.f.x.v             100     27      8      2
vfwcvt.xu.f.v           100      8      3    -X-
vfwcvt.x.f.v            100     14      6    -X-
vfwcvt.rtz.xu.f.v       100     15     13    -X-
vfwcvt.rtz.x.f.v        100      7      4    -X-
vfwcvt.f.xu.v           100     10      3    -X-
vfwcvt.f.x.v            100      7      3    -X-
vfwcvt.f.f.v            100      9      2    -X-
vfncvt.xu.f.w           100     15      2    -X-
vfncvt.x.f.w            100     16      5    -X-
vfncvt.rtz.xu.f.w       100     13      5    -X-
vfncvt.rtz.x.f.w        100     17      6    -X-
vfncvt.f.xu.w           100     27     11    -X-
vfncvt.f.x.w            100     16      8    -X-
vfncvt.f.f.w            100     15      8    -X-
vfncvt.rod.f.f.w        100     11     11    -X-
vfredosum.vs            100     10     10    -X-
vfredsum.vs               0    -X-    -X-    -X-
vfredmax.vs             100     12      5      2
vfredmin.vs             100     16     10      1
vfwredosum.vs           100     20      8    -X-{noformat}","06/Aug/22 4:48 PM;5f94696c29bd8a006f94f0e1;(rerun with {{enable_exceptions = 0}})

{{2022-08-06}} 

designJSON: *coreip_u8_minimal_vector_vfp16*

outline config:

* enable_masking = {color:#ff5630}*1*{color}
* enable_exceptions = {color:#ff5630}*0*{color}
* flmul = 0
* mask = 7
* num_of_tests_gen = 100



Floating point instructions test count/coverage:

* Total FP instructions: 86
* Even we set {{num_of_tests_gen = 100}}, there are still 39 cases (9 + 19 + 11) that VTG generates less than 60 tests for these 39 FP instructions per each.

!# of Test vs. TstCnt Range.png|width=75%!



{noformat}Inst                  Total   Half Single Double
vfadd.vv                 26      7     10      9
vfadd.vf                100     36     33     31
vfsub.vv                 22      6     10      6
vfsub.vf                 46     15     17     14
vfrsub.vf                63     20     26     17
vfwadd.vv                62     34     28    -X-
vfwadd.vf                68     35     33    -X-
vfwsub.vv                22     10     12    -X-
vfwsub.vf                28      9     19    -X-
vfwadd.wv                15      8      7    -X-
vfwadd.wf                28     17     11    -X-
vfwsub.wv               100     48     52    -X-
vfwsub.wf               100     47     53    -X-
vfmul.vv                 30     11     11      8
vfmul.vf                100     37     37     26
vfdiv.vv                 25      9     14      2
vfdiv.vf                100     32     35     33
vfrdiv.vf               100     35     39     26
vfwmul.vv                68     35     33    -X-
vfwmul.vf                67     35     32    -X-
vfmacc.vv               100     46     32     22
vfmacc.vf               100     35     37     28
vfnmacc.vv               27     10     11      6
vfnmacc.vf              100     38     35     27
vfmsac.vv                28      7     14      7
vfmsac.vf               100     34     37     29
vfnmsac.vv               27      8     14      5
vfnmsac.vf              100     35     35     30
vfmadd.vv               100     30     43     27
vfmadd.vf               100     34     39     27
vfnmadd.vv              100     42     36     22
vfnmadd.vf               54     20     22     12
vfmsub.vv               100     39     34     27
vfmsub.vf               100     41     35     24
vfnmsub.vv               24      6      8     10
vfnmsub.vf              100     38     37     25
vfwmacc.vv               65     33     32    -X-
vfwmacc.vf               27     14     13    -X-
vfwnmacc.vv              64     31     33    -X-
vfwnmacc.vf              26     14     12    -X-
vfwmsac.vv               20      7     13    -X-
vfwmsac.vf               68     34     34    -X-
vfwnmsac.vv              15      7      8    -X-
vfwnmsac.vf              69     33     36    -X-
vfsqrt.v                 43     15     16     12
vfrsqrt7.v               46     16     16     14
vfrec7.v                100     34     36     30
vfmin.vv                100     35     40     25
vfmin.vf                 43     16     17     10
vfmax.vv                100     31     39     30
vfmax.vf                 45     14     22      9
vfsgnj.vv                 1    -X-      1    -X-
vfsgnj.vf                 7      4      2      1
vfsgnjn.vv               51     18     22     11
vfsgnjn.vf                6      1      4      1
vfsgnjx.vv                3      1      2    -X-
vfsgnjx.vf                6      3      1      2
vfclass.v                44     13     20     11
vfmerge.vfm              10      3      5      2
vfmv.v.f                  5      3      1      1
vfcvt.xu.f.v            100     33     36     31
vfcvt.x.f.v             100     35     43     22
vfcvt.rtz.xu.f.v         33     13      9     11
vfcvt.rtz.x.f.v         100     37     32     31
vfcvt.f.xu.v             30     11     12      7
vfcvt.f.x.v             100     39     38     23
vfwcvt.xu.f.v            65     31     34    -X-
vfwcvt.x.f.v             28     15     13    -X-
vfwcvt.rtz.xu.f.v        30     11     19    -X-
vfwcvt.rtz.x.f.v         61     31     30    -X-
vfwcvt.f.xu.v           100     36     32    -X-
vfwcvt.f.x.v             95     33     31    -X-
vfwcvt.f.f.v             64     35     29    -X-
vfncvt.xu.f.w           100     28     33    -X-
vfncvt.x.f.w            100     37     31    -X-
vfncvt.rtz.xu.f.w       100     33     33    -X-
vfncvt.rtz.x.f.w        100     34     33    -X-
vfncvt.f.xu.w            33     18     15    -X-
vfncvt.f.x.w            100     44     56    -X-
vfncvt.f.f.w            100     51     49    -X-
vfncvt.rod.f.f.w        100     53     47    -X-
vfredosum.vs             57     21     20     16
vfredsum.vs               0    -X-    -X-    -X-
vfredmax.vs             100     38     35     27
vfredmin.vs             100     35     42     23
vfwredosum.vs            13      7      6    -X-{noformat}



Simulation/regression summary:

{noformat}|                                                                                     name   |                         config   | simulator   |   cputime |   bucket | UUID         |
|--------------------------------------------------------------------------------------------|----------------------------------|-------------|-----------|----------|--------------|
| regr_0806/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfredosum.vs    | coreip_u8_minimal_vector_vfp16   | vcs         |    185.76 |        1 | af43772518   |
| regr_0806/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfwredosum.vs   | coreip_u8_minimal_vector_vfp16   | vcs         |    160.42 |        1 | 55d6456f9e   |
| regr_0806/vtg-tgv-tests.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vfredosum.vs    | coreip_u8_minimal_vector_vfp16   | vcs         |    146.96 |        1 | cb863feec9   |
| regr_0806/vtg-tgv-tests.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vfwredosum.vs   | coreip_u8_minimal_vector_vfp16   | vcs         |    148.55 |        1 | 183e9858a5   |
| regr_0806/vtg-tgv-tests.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vcompress.vm    | coreip_u8_minimal_vector_vfp16   | vcs         |     65.99 |        2 | ffc45a156e   |
| regr_0806/vtg-tgv-tests.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vfredosum.vs    | coreip_u8_minimal_vector_vfp16   | vcs         |    149.72 |        1 | 6435d6cded   |
| regr_0806/vtg-tgv-tests.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vfwredosum.vs   | coreip_u8_minimal_vector_vfp16   | vcs         |    166.27 |        1 | d9d8a82340   |
| regr_0806/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfredosum.vs    | coreip_u8_minimal_vector_vfp16   | vcs         |    133.63 |        1 | a2d24878af   |
| regr_0806/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm    | coreip_u8_minimal_vector_vfp16   | vcs         |     85.18 |        2 | 5cf5004b67   |


  Bucket  Failure                                      Count
--------  -----------------------------------------  -------
       1  Assertion Failure: SiFive_ROB_assert             7
       2  COSIM-ERROR# COSIM VS RTL WRDATA MISMATCH        2

Summary:
      |   Total Verilog Compiles |   Total Verilog Sims |   Incomplete/Skipped |   Build Fails |   Sim Failures |   Total Failed
------+--------------------------+----------------------+----------------------+---------------+----------------+----------------
 Jobs |                        1 |                 1228 |                    0 |             0 |              9 |              9{noformat}","06/Aug/22 8:42 PM;6065017e90e3950069cf01c5;[~accountid:5f94696c29bd8a006f94f0e1] can you add this stats on the task [~accountid:5e1a4f5ec578120daca5ff8e] opened for the number of tests generated request[https://sifive.atlassian.net/browse/VI-7617|https://sifive.atlassian.net/browse/VI-7617|smart-link] 



Also it seems some ordered reduction tests are failing, are the failures related to fp16 ?","08/Aug/22 12:34 AM;5f94696c29bd8a006f94f0e1;{{2022-08-08}} 

* designJSON: *coreip_u8_minimal_vector_vfp16*

* Outline: vtg-tgv-tests.outline
** enable_masking = 0
** *enable_exceptions = 0*
** flmul = 0
** *num_of_tests_gen = 100*
** no_self_check = 1



*Regression summary:*

{noformat}|                                                                                    name   |                         config   | simulator   |   cputime |   bucket | UUID         |
|-------------------------------------------------------------------------------------------|----------------------------------|-------------|-----------|----------|--------------|
| regr_0808/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector_vfp16   | vcs         |     75.8  |        1 | 6a1be42172   |
| regr_0808/vtg-tgv-tests.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector_vfp16   | vcs         |     73.66 |        2 | d12bd08597   |
| regr_0808/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector_vfp16   | vcs         |     88.76 |        2 | a5a8617998   |
| regr_0808/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfredosum.vs   | coreip_u8_minimal_vector_vfp16   | vcs         |    171.79 |        3 | ea497027f6   |
| regr_0808/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector_vfp16   | vcs         |     75.8  |        2 | 6a1be42172   |
| regr_0808/vtg-tgv-tests.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector_vfp16   | vcs         |     73.66 |        2 | d12bd08597   |
| regr_0808/vtg-tgv-tests.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vfredosum.vs   | coreip_u8_minimal_vector_vfp16   | vcs         |    172.36 |        3 | fad0b943c8   |
| regr_0808/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfredosum.vs   | coreip_u8_minimal_vector_vfp16   | vcs         |    152.55 |        3 | bebcfd3635   |
| regr_0808/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector_vfp16   | vcs         |     88.76 |        2 | a5a8617998   |


  Bucket  Failure                                                            Count
--------  ---------------------------------------------------------------  -------
       1  FAILED: Test Result Registered Name TestDriver.testHarness.i_TF        1
       2  COSIM-ERROR# COSIM VS RTL WRDATA MISMATCH                              5
       3  Assertion Failure: SiFive_ROB_assert                                   3

Summary:
      |   Total Verilog Compiles |   Total Verilog Sims |   Incomplete/Skipped |   Build Fails |   Sim Failures |   Total Failed
------+--------------------------+----------------------+----------------------+---------------+----------------+----------------
 Jobs |                        2 |                 2552 |                    0 |             0 |              9 |              9{noformat}



*The number of Test cases for each FP precision:*

{noformat}Inst                  Total   Half Single Double
vfadd.vv                100     29     43     28
vfadd.vf                100     38     30     32
vfsub.vv                100     34     36     30
vfsub.vf                100     37     32     31
vfrsub.vf                28     13      8      7
vfwadd.vv                 9      5      4    -X-
vfwadd.vf                33     16     17    -X-
vfwsub.vv                28     14     14    -X-
vfwsub.vf                14      6      8    -X-
vfwadd.wv                58     28     30    -X-
vfwadd.wf                65     36     29    -X-
vfwsub.wv                64     31     33    -X-
vfwsub.wf                10      5      5    -X-
vfmul.vv                 14      4      5      5
vfmul.vf                 27     12      7      8
vfdiv.vv                 14      4      5      5
vfdiv.vf                 23      8      7      8
vfrdiv.vf               100     29     36     35
vfwmul.vv                 7      3      4    -X-
vfwmul.vf                14      8      6    -X-
vfmacc.vv                21      5      6     10
vfmacc.vf                26     10      9      7
vfnmacc.vv              100     32     31     37
vfnmacc.vf               25      7     10      8
vfmsac.vv                10      3      4      3
vfmsac.vf               100     29     33     38
vfnmsac.vv              100     33     40     27
vfnmsac.vf              100     35     38     27
vfmadd.vv                16      7      3      6
vfmadd.vf                31     13     10      8
vfnmadd.vv               10      5      1      4
vfnmadd.vf               23      9      8      6
vfmsub.vv               100     35     41     24
vfmsub.vf               100     37     34     29
vfnmsub.vv               16      8      4      4
vfnmsub.vf              100     34     34     32
vfwmacc.vv                8      4      4    -X-
vfwmacc.vf               36     17     19    -X-
vfwnmacc.vv               8      3      5    -X-
vfwnmacc.vf              35     15     20    -X-
vfwmsac.vv               29     14     15    -X-
vfwmsac.vf               11      4      7    -X-
vfwnmsac.vv              32     16     16    -X-
vfwnmsac.vf              36     19     17    -X-
vfsqrt.v                 90     31     31     28
vfrsqrt7.v               81     24     29     28
vfrec7.v                100     31     35     34
vfmin.vv                100     35     27     38
vfmin.vf                 20      5      6      9
vfmax.vv                100     33     34     33
vfmax.vf                 25      8      9      8
vfsgnj.vv                32     11      9     12
vfsgnj.vf                 3    -X-    -X-      3
vfsgnjn.vv                0    -X-    -X-    -X-
vfsgnjn.vf               13      5      4      4
vfsgnjx.vv                1    -X-      1    -X-
vfsgnjx.vf                4      1      1      2
vfclass.v               100     33     33     34
vfmerge.vfm               3      1      1      1
vfmv.v.f                  7      2      4      1
vfcvt.xu.f.v             84     29     29     26
vfcvt.x.f.v              23      6      9      8
vfcvt.rtz.xu.f.v         85     28     29     28
vfcvt.rtz.x.f.v          86     27     29     30
vfcvt.f.xu.v             22      9      6      7
vfcvt.f.x.v              22      7      8      7
vfwcvt.xu.f.v            14      7      7    -X-
vfwcvt.x.f.v             37     18     19    -X-
vfwcvt.rtz.xu.f.v        34     15     19    -X-
vfwcvt.rtz.x.f.v         11      8      3    -X-
vfwcvt.f.xu.v            25      8      8    -X-
vfwcvt.f.x.v             17      5      5    -X-
vfwcvt.f.f.v             11      6      5    -X-
vfncvt.xu.f.w            97     32     31    -X-
vfncvt.x.f.w             94     32     35    -X-
vfncvt.rtz.xu.f.w       100     32     33    -X-
vfncvt.rtz.x.f.w         25     11      6    -X-
vfncvt.f.xu.w            67     35     32    -X-
vfncvt.f.x.w             64     34     30    -X-
vfncvt.f.f.w             64     31     33    -X-
vfncvt.rod.f.f.w         73     39     34    -X-
vfredosum.vs             20      3      8      9
vfredsum.vs               0    -X-    -X-    -X-
vfredmax.vs              17      7      6      4
vfredmin.vs              13      4      6      3
vfwredosum.vs             7      3      4    -X-{noformat}","08/Aug/22 4:20 PM;5f94696c29bd8a006f94f0e1;{{2022-08-09}} 

* designJSON: *coreip_u8_minimal_vector_vfp16*

* Outline: vtg-tgv-tests.outline
** *enable_masking = 1*
** *enable_exceptions = 0*
** flmul = 0
** *num_of_tests_gen = 200*
** no_self_check = 1



*Regression summary:*

{noformat}|                                                                                    name   |                         config   | simulator   |   cputime |   bucket | UUID         |
|-------------------------------------------------------------------------------------------|----------------------------------|-------------|-----------|----------|--------------|
| regr_0809/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector_vfp16   | vcs         |     68.43 |        1 | 2fff55a2ef   |
| regr_0809/vtg-tgv-tests.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector_vfp16   | vcs         |     68.63 |        1 | 2f254cd57c   |
| regr_0809/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector_vfp16   | vcs         |     78.32 |        1 | b5b465c966   |


  Bucket  Failure                                      Count
--------  -----------------------------------------  -------
       1  COSIM-ERROR# COSIM VS RTL WRDATA MISMATCH        3

Summary:
      |   Total Verilog Compiles |   Total Verilog Sims |   Incomplete/Skipped |   Build Fails |   Sim Failures |   Total Failed
------+--------------------------+----------------------+----------------------+---------------+----------------+----------------
 Jobs |                        1 |                 1276 |                    0 |             0 |              3 |              3{noformat}



*The number of Test cases for each FP precision (LMUL=1):*

{noformat}Inst                  Total   Half Single Double
vfadd.vv                 26      7     10      9
vfadd.vf                194     71     70     53
vfsub.vv                 22      6     10      6
vfsub.vf                 46     15     17     14
vfrsub.vf                63     20     26     17
vfwadd.vv                62     34     28    -X-
vfwadd.vf                68     35     33    -X-
vfwsub.vv                22     10     12    -X-
vfwsub.vf                28      9     19    -X-
vfwadd.wv                15      8      7    -X-
vfwadd.wf                28     17     11    -X-
vfwsub.wv               126     61     65    -X-
vfwsub.wf               136     66     70    -X-
vfmul.vv                 30     11     11      8
vfmul.vf                191     68     72     51
vfdiv.vv                 25      9     14      2
vfdiv.vf                197     72     70     55
vfrdiv.vf               198     71     71     56
vfwmul.vv                68     35     33    -X-
vfwmul.vf                67     35     32    -X-
vfmacc.vv               200     78     70     52
vfmacc.vf               190     67     70     53
vfnmacc.vv               27     10     11      6
vfnmacc.vf              196     71     72     53
vfmsac.vv                28      7     14      7
vfmsac.vf               195     68     74     53
vfnmsac.vv               27      8     14      5
vfnmsac.vf              200     75     72     53
vfmadd.vv               200     72     70     58
vfmadd.vf               198     72     71     55
vfnmadd.vv              200     80     64     56
vfnmadd.vf               54     20     22     12
vfmsub.vv               200     67     72     61
vfmsub.vf               195     69     71     55
vfnmsub.vv               24      6      8     10
vfnmsub.vf              196     74     71     51
vfwmacc.vv               65     33     32    -X-
vfwmacc.vf               27     14     13    -X-
vfwnmacc.vv              64     31     33    -X-
vfwnmacc.vf              26     14     12    -X-
vfwmsac.vv               20      7     13    -X-
vfwmsac.vf               68     34     34    -X-
vfwnmsac.vv              15      7      8    -X-
vfwnmsac.vf              69     33     36    -X-
vfsqrt.v                 43     15     16     12
vfrsqrt7.v               46     16     16     14
vfrec7.v                196     68     72     56
vfmin.vv                200     75     74     51
vfmin.vf                 43     16     17     10
vfmax.vv                200     71     74     55
vfmax.vf                 45     14     22      9
vfsgnj.vv                 1    -X-      1    -X-
vfsgnj.vf                 7      4      2      1
vfsgnjn.vv               51     18     22     11
vfsgnjn.vf                6      1      4      1
vfsgnjx.vv                3      1      2    -X-
vfsgnjx.vf                6      3      1      2
vfclass.v                45     15     14     16
vfmerge.vfm              10      5      4      1
vfmv.v.f                  5      2      3    -X-
vfcvt.xu.f.v            148     52     57     39
vfcvt.x.f.v             154     56     55     43
vfcvt.rtz.xu.f.v         38     15     11     12
vfcvt.rtz.x.f.v         159     57     56     46
vfcvt.f.xu.v             32     11      8     13
vfcvt.f.x.v             158     55     60     43
vfwcvt.xu.f.v            68     33     35    -X-
vfwcvt.x.f.v             39     16     23    -X-
vfwcvt.rtz.xu.f.v        28     20      8    -X-
vfwcvt.rtz.x.f.v         71     34     37    -X-
vfwcvt.f.xu.v            98     36     31    -X-
vfwcvt.f.x.v             97     34     33    -X-
vfwcvt.f.f.v             66     33     33    -X-
vfncvt.xu.f.w           194     69     60    -X-
vfncvt.x.f.w            200     63     68    -X-
vfncvt.rtz.xu.f.w       200     66     70    -X-
vfncvt.rtz.x.f.w        200     70     63    -X-
vfncvt.f.xu.w            34     17     17    -X-
vfncvt.f.x.w            138     64     74    -X-
vfncvt.f.f.w            130     63     67    -X-
vfncvt.rod.f.f.w        140     67     73    -X-
vfredosum.vs            200     72     77     51
vfredsum.vs               0    -X-    -X-    -X-
vfredmax.vs             200     68     77     55
vfredmin.vs             200     73     72     55
vfwredosum.vs            20      9     11    -X-{noformat}","09/Aug/22 1:18 AM;5f94696c29bd8a006f94f0e1;I manually trigger weekly CI to run {{vtg-tgv-tests.outline}} for TGV config, {{coreip_u8_minimal_vector_vfp16}}

Since currently the failed tests (vcompress) are a known issue, I think the weekly CI for {{coreip_u8_minimal_vector_vfp16}} is OK.

Command:

{noformat}./scripts/run-suite --simscope --test-plan=/scratch/jenkins/archived-builds/fed/param-man-trig-tgv-test-weekly/56/specs/test-plans/test-weekly.yml --config-set tgv --suite=test-weekly --seed=1660019265{noformat}



Build {{coreip_u8_minimal_vector_vfp16}} config 

{noformat}Running BUILD_DIR=/scratch/jenkins/archived-builds/fed/param-man-trig-tgv-test-weekly/56/builds /scratch/jenkins/archived-builds/fed/param-man-trig-tgv-test-weekly/56/scripts/run-silent-unless-errors --append /scratch/jenkins/archived-builds/fed/param-man-trig-tgv-test-weekly/56/builds/generate_build.log /scratch/jenkins/archived-builds/fed/param-man-trig-tgv-test-weekly/56/generate-build coreip_u8_minimal_vector_vfp16{noformat}



Run {{vtg-tgv-tests.outline}}

{noformat}run-suite[sigma85]: Running SEED=1660019265 /scratch/jenkins/archived-builds/fed/param-man-trig-tgv-test-weekly/56/scripts/run-silent-unless-errors /scratch/jenkins/archived-builds/fed/param-man-trig-tgv-test-weekly/56/builds/coreip_u8_minimal_vector_vfp16/run.log make -C /scratch/jenkins/archived-builds/fed/param-man-trig-tgv-test-weekly/56/builds/coreip_u8_minimal_vector_vfp16 run TEST_OUTLINES=/scratch/jenkins/archived-builds/fed/param-man-trig-tgv-test-weekly/56/test-outlines/vtg-tgv-tests.outline{noformat}



Simulation log:

{noformat}[2022-08-09T06:54:44.265Z] Error running make -C /scratch/jenkins/archived-builds/fed/param-man-trig-tgv-test-weekly/56/builds/coreip_u8_minimal_vector_vfp16 run TEST_OUTLINES=/scratch/jenkins/archived-builds/fed/param-man-trig-tgv-test-weekly/56/test-outlines/vtg-tgv-tests.outline on sigma85. Printing most recent lines from console output:

[2022-08-09T06:54:44.265Z] 

[2022-08-09T06:54:44.265Z] 

[2022-08-09T06:54:44.265Z] *** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 75381 simulation cycles (in TestDriver.report_phase_actions)

[2022-08-09T06:54:44.265Z] *Verdi* WARNING: fsdbDumpflush - The FSDB file has not been created.

[2022-08-09T06:54:44.265Z] 

[2022-08-09T06:54:44.265Z] 

[2022-08-09T06:54:44.265Z] *** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 75381 simulation cycles (in TestDriver.report_phase_actions)

[2022-08-09T06:54:44.265Z] 

[2022-08-09T06:54:44.265Z] 

[2022-08-09T06:54:44.265Z] 2022-08-08T23:53:33-0700: Error: simulation sim/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm failed

[2022-08-09T06:54:44.265Z] 2022-08-08T23:53:35-0700: Simulation sim/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vsetvli complete, passed

[2022-08-09T06:54:44.265Z] 2022-08-08T23:53:35-0700: Simulation sim/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmv1r.v complete, passed

[2022-08-09T06:54:44.265Z] 2022-08-08T23:53:46-0700: Simulation sim/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmv4r.v complete, passed

[2022-08-09T06:54:44.265Z] 2022-08-08T23:53:48-0700: Simulation sim/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vrgather.vi complete, passed

[2022-08-09T06:54:44.265Z] 2022-08-08T23:53:57-0700: Simulation sim/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vslide1down.vx complete, passed

[2022-08-09T06:54:44.265Z] 2022-08-08T23:54:16-0700: Simulation sim/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vrgather.vx complete, passed

[2022-08-09T06:54:44.265Z] 2022-08-08T23:54:29-0700: Simulation sim/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmv2r.v complete, passed

[2022-08-09T06:54:44.265Z] Error: some simulations failed

[2022-08-09T06:54:44.265Z] make: *** [/scratch/jenkins/archived-builds/fed/param-man-trig-tgv-test-weekly/56/mk/common//run.mk:84: run] Error 1

[2022-08-09T06:54:44.265Z] make: Leaving directory '/scratch/jenkins/archived-builds/fed/param-man-trig-tgv-test-weekly/56/builds/coreip_u8_minimal_vector_vfp16'

[2022-08-09T06:54:44.265Z] Full output available in sigma85:/scratch/jenkins/archived-builds/fed/param-man-trig-tgv-test-weekly/56/builds/coreip_u8_minimal_vector_vfp16/run.log{noformat}","09/Aug/22 6:34 PM;5f94696c29bd8a006f94f0e1;Thanks for [~accountid:5a938e9c0913194d2d262658]'s help: “add {{coreip_u8_minimal_vector_vfp16}} to the nightly testplan, but configure the run to run once a week.”

PR ([https://github.com/sifive/federation/pull/25175|https://github.com/sifive/federation/pull/25175|smart-link] ) merged.

If [~accountid:6065017e90e3950069cf01c5] and [~accountid:5e1a4f5ec578120daca5ff8e] both agree that no additional work for this task, we can close (resolve) this ticket then.



Attach the link to the Slack discussion between Srivatsa and David.

[https://sifive.slack.com/archives/C02TXF8GRAA/p1660066358695159|https://sifive.slack.com/archives/C02TXF8GRAA/p1660066358695159|smart-card]

 ",09/Aug/22 6:37 PM;5e1a4f5ec578120daca5ff8e;I’m ok to close this ticket 🙂 ,"10/Aug/22 12:17 AM;6065017e90e3950069cf01c5;[~accountid:5f94696c29bd8a006f94f0e1] , on you comment from [https://sifive.atlassian.net/browse/MAL-2253?focusedCommentId=380193|https://sifive.atlassian.net/browse/MAL-2253?focusedCommentId=380193|smart-link] 

there were some operations without tests:

{{vfredsum.vs 0 -X- -X- -X-}}

{{vfsgnj.vv 1 -X- 1 -X-}}

{{vfsgnjx.vv 3 1 2 -X-}}

{{vfmv.v.f 5 2 3 -X-}}

Do we know why ?","10/Aug/22 12:53 AM;5f94696c29bd8a006f94f0e1;[~accountid:6065017e90e3950069cf01c5], 

# Current VTG indeed generates low test cases for {{vfsgn}} series and {{vfmv}} instructions. Rely on this [PR|https://github.com/sifive/riscv-vector-tests/pull/172] to fix this issue.
# For {{vfredsum}}, wow, because the test folder name is “vfredsum” and I use this name to count the test cases by {{zgrep vfredsum cosim.log.gz}}
## In {{rvv_isa_inst_tgv.rb}}, the unordered FP sum reduction is “vfredsum”, and the actual instruction generated by VTG is vfred{color:#ff5630}*u*{color}sum, and that’s why the grep result is zero. I will fix this bug in my script.
## \[*Question*] Should we use vfred{color:#bf2600}*u*{color}sum instead of vfredsum in the rv_isa_inst_tgv.rb? 
## [https://github.com/sifive/federation/blob/e14c04169074a6b85b9522f2858f995f7198aeee/test-outlines/rvv_isa_inst_tgv.rb#L278-L279|https://github.com/sifive/federation/blob/e14c04169074a6b85b9522f2858f995f7198aeee/test-outlines/rvv_isa_inst_tgv.rb#L278-L279]","10/Aug/22 12:56 AM;6065017e90e3950069cf01c5;{quote} \[*Question*] Should we use vfred{color:#bf2600}*u*{color}sum instead of vfredsum in the rv_isa_inst_tgv.rb?{quote}

Yes, {{vfredsum}} (the old name) was temporary because of it used to not be supported by  VTG [https://sifive.atlassian.net/browse/VI-7539|https://sifive.atlassian.net/browse/VI-7539|smart-link] 

since it is now supported we should switch back to the correct name ",10/Aug/22 12:57 AM;6065017e90e3950069cf01c5;I am fine with closing this task too. Nice job [~accountid:5f94696c29bd8a006f94f0e1] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] test and debug integer compare instructions,,,,,,MAL-2252,121011,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/25/2022 10:19,8/8/2022 9:01,9/28/2022 0:51,8/3/2022 1:35,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"{noformat}vmseq.vv
vmseq.vx
vmseq.vi
vmsne.vv
vmsne.vx
vmsne.vi
vmsltu.vv
vmsltu.vx
vmslt.vv
vmslt.vx
vmsleu.vv
vmsleu.vx
vmsleu.vi
vmsle.vv
vmsle.vx
vmsle.vi
vmsgtu.vx
vmsgtu.vi
vmsgt.vx
vmsgt.vi{noformat}",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Kira Tsao,Nicolas Brunie,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2121,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-31T20:47:37.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i0093z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,35:05.6,03/Aug/22 1:35 AM;5e1a4f5ec578120daca5ff8e;We believe this task can be resolved since [~accountid:609d7e1f5998a6006800dcc5] 's [PR|https://github.com/sifive/federation/pull/24804] merged. But these instructions are still in the specific list to force testing with ta. Verification side will need some addition work on mask series to fully support these instructions. Logged in [MAL-2121|https://sifive.atlassian.net/browse/MAL-2121],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Split Main/Mask Map Table,,,,,,MAL-2251,121007,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,7/25/2022 10:09,7/26/2022 11:42,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,,,,The PRF TagID information for v0 and v1-31 is known at design time. We should be able to split the vector map tables into two different modules that don’t store TagIDs.,Andrew Hanselman,Josh Smith,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0093b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,42:20.7,"26/Jul/22 11:42 AM;5acffeafaa802f2a797a955c;If map table entry 0 has a known literal value for a tag, and 1-31 have a separate known literal value, I have to imagine there’s a way to handle this without instantiating two map tables.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[ALU] enable 2-cycle iex mul for P550 and P650,,,,,,MAL-2250,120990,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,7/25/2022 7:33,9/12/2022 11:50,9/28/2022 0:51,9/7/2022 12:50,,,,,,,,,,,,,RTL/FEX,,,,,,,,,0,,,,"* [https://sifive.atlassian.net/wiki/spaces/CIP/pages/2313453576/PD+study+15+P650+2-cycle+integer+MUL|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2313453576/PD+study+15+P650+2-cycle+integer+MUL|smart-link]  shows some power improvements when running benchmark *<?>* with 2-cycle IEX Mul rather than 3-cycle Mul.

* Timing / Area evaluation is on-going",Brian Grayson,Erdinc Ozturk,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,Nicolas Brunie,,,,,,,,,5e1371705361330daaeaf389,61ccb01d90cfd20071b96af2,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Mid Core,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-07T12:48:19.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2470ebcbbb60cc3891e68bc6d26fd475b3a87dad,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i008zr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] investigate and fix V2F tag usage for format interpretation,,,,,,MAL-2249,120995,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/25/2022 8:10,9/23/2022 0:27,9/28/2022 0:51,8/8/2022 8:24,,,,,,,,,,,,,TGV_RTL/X2Y,,,,,,,,,0,,,,"we move IEEE values from TGV vector side to Mallard scalar side. There are converted to recoded format on the scalar side.
We infer the format from the NaN boxing scheme. There is a corner case where a NaN in a larger format could appear as a value in a smaller format and be recoded as such (it would still be stored as a boxed NaN in recoded format but the payload would be modified I think). This won't affect the canonical NaN but if a non-canonical NaN is loaded from memory

*(Copied from* [https://sifive.atlassian.net/browse/MAL-1794?focusedCommentId=344581|https://sifive.atlassian.net/browse/MAL-1794?focusedCommentId=344581|smart-link] *)*

I wonder what happens if we do:

* Load V a non-canonical large NaN appearing as a boxing value in the vector side
* move V from vector to scalar
* store back the value in memory from scalar storage (RF)

Is the store value the same as the loaded one ?

e.g.g V=0xffffffffcafebebe

* appears as {{0xffffffffcafebebe}} in VRF
* {{vmv.f.s}} with {{SEW=64}}, detected as 32-bit boxed value by {{V2S}}
** {{0xcafebebe}}(IEEE-754) gets converted to {{0x18b7ebebe}}(RecF32)
** {{0x18b7ebebe}}(RecF32) gets boxed into get stored as {{0x1f-1fffff8b7ebebe}} (boxed RecF64)
* {{fsd}}
** gets converted to {{0xffffffff8b7ebebe}} (because store uses opcode to determine fp format)

NaN payload is different \!

 

 

{noformat}$ python3 ~/floatConverter/script_hardfloat_ieee.py --input-size 32 ieeetorecfn 0xcafe_bebe
0x18b7ebebe
$ python3 ~/floatConverter/script_hardfloat_ieee.py --input-size 64 recfntoieee 0x1f001ffff8b7ebebe
0xfff1ffff8b7ebebe
$ python3 ~/floatConverter/script_hardfloat_ieee.py --input-size 64 recfntoieee 0x1f01fffff8b7ebebe
0xffffffff8b7ebebe
$ python3 ~/floatConverter/script_hardfloat_ieee.py --input-size 64 recfntoieee 0x1f01fffff8b7ebebe
0xffffffff8b7ebebe
$ python3 ~/floatConverter/script_hardfloat_ieee.py --input-size 64 recfntoieee 0x1ffffffff8b7ebebe
0xffffffff8b7ebebe
$ python3 ~/floatConverter/script_hardfloat_ieee.py --input-size 64 recfntoieee 0x1f01fffff8b7ebebe
0xffffffff8b7ebebe
$ python3 ~/floatConverter/script_hardfloat_ieee.py --input-size 64 ieeetorecfn 0xffff_ffff_cafe_bebe
0x1e00fffffcafebebe
$ python3 ~/floatConverter/script_hardfloat_ieee.py --input-size 64 recfntoieee 0x1e00fffffcafebebe
0xffffffffcafebebe{noformat}",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Kira Tsao,Max Lin,Nicolas Brunie,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1a4f5ec578120daca5ff8e,5e0651c861d95d0d9aa546ac,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,04/Aug/22 7:46 PM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220805-024314.png;https://sifive.atlassian.net/secure/attachment/75429/image-20220805-024314.png,04/Aug/22 11:09 PM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220805-060833.png;https://sifive.atlassian.net/secure/attachment/75434/image-20220805-060833.png,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-08T08:23:50.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i0090n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,46:58.2,"04/Aug/22 7:46 PM;5e1a4f5ec578120daca5ff8e;Thanks [~accountid:5e0651c861d95d0d9aa546ac] for creating the test. Confirm that the ieee {{0xffffffffcafebebe}} become recode {{0x1f01fffff8b7ebebe}} in and get store in Mallard {{frf}}

{noformat}6026 C                   0:      13932 [1] pc=[00000000800009ba] W[r 5=0000000000000002][1] R[r 5=0000000000000002] R[r 0=0000000000000000] inst=[0592f2d7] vsetvli t0, t0, e64, m2, ta, mu
6027 C                   0:      13929 vrf[27]=[ffffffffcafebfbfffffffffcafebebe][ffff]
6028 C                   0:      13930 vrf[ 0]=[ffffffffcafebfbfffffffffcafebebe][ffff]
6029 C                   0:      13939 [1] pc=[00000000800009be] W[f10=ffffffffcafebebe][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[43b01557] vfmv.f.s fa0, v27
6030 C                   0:      13939 [1] pc=[00000000800009c2] W[r 5=00000000800029c2][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00002297] auipc   t0, 0x2
6031 C                   0:      13939 [1] pc=[00000000800009c6] W[r 5=0000000080002618][1] R[r 5=00000000800029c2] R[r 0=0000000000000000] inst=[c5628293] addi    t0, t0, -938
6032 C                   0:      13939 [1] pc=[00000000800009ca] W[r 0=0000000000000000][0] R[r 5=0000000080002618] R[f10=ffffffffcafebebe] inst=[00a2b027] fsd     fa0, 0(t0)                                     
6033 C                   0:      13939 [1] pc=[00000000800009ce] W[r 7=0000000000000059][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[c21023f3] csrr    t2, vtype{noformat}

!image-20220805-024314.png|width=1332,height=227!

workspace {{gamma29}} in {{/scratch/verif/maxl/fed8/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/tttt/vector/vector_tests_gen/rvv_64/vmv}}","04/Aug/22 11:09 PM;5e1a4f5ec578120daca5ff8e;After fixed, the recode data become {{0x1e00fffffcafebebe}} which match we expected. Thanks [~accountid:5e0651c861d95d0d9aa546ac] for the help.

!image-20220805-060833.png|width=1356,height=229!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion Failure: SiFive_IssQEntry_assert,[TGV] Assertion Failure : SiFive_IssQEntry_assert,Execution Unit ,Issue Queue,,,MAL-2248,120987,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,David Kravitz,5fd15143b4a74900763834e0,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,7/25/2022 6:49,9/7/2022 17:43,9/28/2022 0:51,7/25/2022 11:55,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"We see below assertion failure  from IssQEntry block 

*Error Message*

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_160_fails/federation/builds2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_IssQEntry_44_assert.sv"", 128: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.issueQueues_0.entries_3.SiFive_IssQEntry_44_assert: at time 8190362500 ps
Assertion failed (verification library): make sure we don't match tag on a source that's marked ready  @[MallardUtil.scala 605:20]
Fatal: ""/scratch/ishitashah/tgv_regression/sign_160_fails/federation/builds2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_IssQEntry_44_assert.sv"", 130: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.issueQueues_0.entries_3.SiFive_IssQEntry_44_assert: at time 8190362500 ps{noformat}

*SHA:* 00c7448

*config:* coreip_u8_minimal_vector

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0025"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2198473311
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath*

{{gamma25:/scratch/ishitashah/tgv_regression/sign_160_fails/federation/builds2/coreip_u8_minimal_vector/sim/rerundir1/rerun.outline/sting_StingSiFiveTuple_T_0025/sting/sifive/vector/vector_tgv_dev.conf}}",David Kravitz,Ishita Shah,,,,,,,,,,,,,,5fd15143b4a74900763834e0,607e26355431a500701f5aed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i008zb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,55:53.2,"25/Jul/22 11:55 AM;5fd15143b4a74900763834e0;In this case, it looks like a `vfclass.v` instruction has prIdx 2 as a source operand. While it sits in the VEX IssQ, a VEX instruction (could be `vmfle.vv`, don't have a disassembly) sets prIdx 2 as ready. Before the `vfclass.v` instruction can be issued, a Baler op *also* sets prIdx 2 as ready.

This is essentially the same problem as https://sifive.atlassian.net/browse/MAL-2222, but appearing in the IssQ instead of the PRA. [~accountid:609d7e1f5998a6006800dcc5] will continue to look at that one. Closing this one as a duplicate.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Baler IssQ should not use fifo = true,[TGV] Baler IssQ,LSU (Load Store Unit),Baler,,,MAL-2247,120979,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,7/25/2022 6:06,9/7/2022 17:43,9/28/2022 0:51,7/29/2022 6:49,Panda DR,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,TGV,,,"Test is failing with Following Error::
Error: ""/scratch/naveenr/TGV/july-25/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", 617: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert: at time 7638102500 ps
Assertion failed (verification library): ROB Retire Hang around entry 16   @\[ROB.scala 756:9]
Fatal: ""/scratch/naveenr/TGV/july-25/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", 619: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert: at time 7638102500 ps
$finish called from file ""/scratch/naveenr/TGV/july-25/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", line 619

*Config:* coreip_u8_minimal_vector
*SHA::*  0028e416559f4b7e1d3588d5695a6e09e309234e

*Instruction trace::*
41809372:	02038127          	vse8.v	v2,(t2)
41809376:	204023b7          	lui	t2,0x20402
4180937a:	02038127          	vse8.v	v2,(t2)   //Last retired PC
4180937e:	204023b7          	lui	t2,0x20402   
41809382:	02038107          	vle8.v	v2,(t2)

*rerun.outline::*

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""sting"",
""raw_plusargs"": \[
""+cosim_scoreboard_trap_epc_count=128"",
""+cosim_scoreboard_stall_time=1000000"",
""+axi_mem_latency_cycles=40"",
""+axi_mem_dither_cycles=20"",
""+amba_vip_select=2"",
""+gdi_amba_test_enable=1"",
""+gdi_tlc_test_enable=1"",
"""",
""+verbose""
],
""subdir"": ""sting_StingSiFiveTuple_T_0010"",
""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 3952418251
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""reset_vector_scheme"": ""first_mem_periph_sys""
},
""uvm"": {
""set_config_string"": \[
""uvm_test_top,torture_read_inbound,10101010:80808080"",
""uvm_test_top,torture_inbound,10101010:80808080""
],
""testname"": ""torture_test""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))


*Dump-Path:*:
gamma26::/scratch/naveenr/TGV/july-25/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0010/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb",David Kravitz,Naveen Rathore,Nicolas Brunie,,,,,,,,,,,,,5fd15143b4a74900763834e0,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2272,,,,,,,,,,,,,,,,,,,,,,,0028e416559f4b7e1d3588d5695a6e09e309234e,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-28T15:42:10.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/3bb89011f8c6e33f88110a417785c025bfea0d92,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i008xj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,01:06.4,25/Jul/22 10:01 AM;5fd15143b4a74900763834e0;It’s probably the {{vle8.v}} instruction causing the hang. It would be in the same ROB group as the {{lui}} and hard to imagine how the {{lui}} would be problematic. Will take a look and try to isolate the problem.,"27/Jul/22 7:57 AM;5fd15143b4a74900763834e0;The last thing retired in this test is a {{vse8.v}}. It’s followed by a {{lui}} and then a {{vle8.v}} instruction, and that load never retires. The load data gets into the LTB but the Baler IssQ does not wake up the LTB → VRF operation, it never completes, and we get a ROB hang.

The Baler was using an exe-type issue queue, but with {{fifo = true}} but not with {{nonspec = true}}. That appeared to be causing a problem where the {{vle8.v}} instruction is set ready by the appropriate tag broadcast, but is blocked from issuing by {{olderBlock}} even though it was the only entry in the IssQ.

Proposed fix is removing the {{fifo = true}} parameter. Longer term fix may involve investigating whether LSIssQ is preferable to an Exe IssQ in the Baler.","29/Jul/22 6:49 AM;5fd15143b4a74900763834e0;Changed Baler issue queue to no longer use `fifo = true` parameter setting. Not the last change we'll make in the Baler for issue queues, but good enough for now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[FPU] Add Pipe Registers in FADD module and remove retiming as an option,,,,,,MAL-2246,120977,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Won't Do,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,7/25/2022 5:27,9/21/2022 10:42,9/28/2022 0:51,9/21/2022 10:42,,,,,,,,,,,,,RTL/FEX,Timing,,,,,,,,0,,,,,Erdinc Ozturk,Vaibhav Gupta,,,,,,,,,,,,,,61ccb01d90cfd20071b96af2,623e4830b75ca80070580145,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i008x3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Incorrect oldData been used in VectorCompareUnit,[TGV] Incorrect oldData,Execution Unit ,Vector Compare,,,MAL-2245,120959,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,Done,Shaka Kao,5f94696c29bd8a006f94f0e1,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,7/24/2022 23:40,9/7/2022 17:43,9/28/2022 0:51,7/26/2022 16:53,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,Correct {{oldData}} portion need be selected by {{csid}} before sending to {{VectorCompareUnit}},John Ingalls,Kira Tsao,Nicolas Brunie,Shaka Kao,,,,,,,,,,,,5bb6808b9ba2930990f81895,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,VI-7637,,,,MAL-1760,MAL-1722,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-26T16:50:13.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i008t3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,05:09.6,"25/Jul/22 10:05 AM;5bb6808b9ba2930990f81895;How was this bug found?  For bugs, can we please fill in the “Bug Info → How it was found” field?  That helps us analyze how well different tools and techniques are finding bugs.","26/Jul/22 4:53 PM;5f94696c29bd8a006f94f0e1;PR ([https://github.com/sifive/federation/pull/24791|https://github.com/sifive/federation/pull/24791|smart-link] ) has merged into master.

Change the task status to resolved.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][backlog] exploit second VRF write port in VexPipe to limit static latency insn WB conflict,,,,,,MAL-2244,120943,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/24/2022 17:19,7/26/2022 15:02,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Each {{VexPipe}} instantiates a second write back port to the VRF. This second ports was initially added to ensure basic widening operations could be executed with the same throughput as single width.

This second port could be used to issue a second operation with shorter latency which may conflict (tag broadcast and WB) with an operation with larger latency already executing, assuming both of them use only one of the write port, the second operation could exploit the second write port to broadcast its tag and writeback simultaneously to the oldest operation without any conflict.",Alexandre Solomatnikov,Nicolas Brunie,,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2264,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i008pj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,16:24.9,"25/Jul/22 3:16 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;I think instead you can add pipeline stages for shorter latency units and additional bypass paths. Functionally it would be equivalent, the tradeoff is between the number of VPRF write ports and complexity of bypass.","25/Jul/22 3:20 PM;6065017e90e3950069cf01c5;This would mean adding a few extra stages (3 I think) and as many inputs to the bypass networks.

One possibility would be to re-use the 2nd destination path of the old-destination data forwarding pipeline for forwarding the shorter latency uops results.","25/Jul/22 3:35 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;{quote}One possibility would be to re-use the 2nd destination path of the old-destination data forwarding pipeline for forwarding the shorter latency uops results.{quote}

Good idea but what is the latency for integer widening instructions?",25/Jul/22 3:47 PM;6065017e90e3950069cf01c5;Integer widening instructions (e.g. {{vwmacc.vv}}) expose the same latency as any other LLP (6 full cycles).,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] refactor VectorPermuteEngine by modularizing vcompress post-process,,,,,,MAL-2243,120939,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/23/2022 19:44,8/5/2022 1:34,9/28/2022 0:51,8/3/2022 0:39,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,MAL-2257,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-03T00:39:33.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/13c5109c201549a2568c0ed9991f059cd0ce23d2,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,100,,,,,,,,,,,,,,,2|i008on:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion Failure: SiFive_LTBEntry_assert - LTB data enable without data from LDPipe,[TGV] Assertion Failure: SiFive_LTBEntry_assert - LTB,LSU (Load Store Unit),,,,MAL-2242,120883,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Yohann Rabefarihy,61730c9cbcb57400683f15a6,Zhiqiang Hao,5d02d411febd110bc78aabc3,Zhiqiang Hao,5d02d411febd110bc78aabc3,7/22/2022 10:44,9/9/2022 6:29,9/28/2022 0:51,9/8/2022 9:19,,,,,,,,,,,Panda DR,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"Config: {{coreip_p670}}

Commit: {{baa3c3594f0719326df836608d28da90095d197f}}

Msg:

{{at LoadBuffer.scala:129 assert(io.data_LDWB(i).valid, ""LTB data enable without data from LDPipe"")}}



This assertion will get fired when doing a vector store to {{0x0000000101200000}}

{noformat}core   0: 0x00000010022120c2 (0x02038d27) vse8.v  v26, (t2)
core   0: 3 0x00000010022120c2 (0x02038d27) e8 m1 l16 mem 0x0000000101200000-0x0000000101200000 0x6c mem 0x0000000101200001-0x0000000101200001 0xfa mem 0x0000000101200002-0x0000000101200002 0xb3 mem 0x0000000101200003-0x0000000101200003 0x60 mem 0x0000000101200004-0x0000000101200004 0x36 mem 0x0000000101200005-0x0000000101200005 0xfd mem 0x0000000101200006-0x0000000101200006 0x59 mem 0x0000000101200007-0x0000000101200007 0xb0 mem 0x0000000101200008-0x0000000101200008 0x9b mem 0x0000000101200009-0x0000000101200009 0xfe mem 0x000000010120000a-0x000000010120000a 0x2c mem 0x000000010120000b-0x000000010120000b 0x58 mem 0x000000010120000c-0x000000010120000c 0x4d mem 0x000000010120000d-0x000000010120000d 0x7f mem 0x000000010120000e-0x000000010120000e 0x16 mem 0x000000010120000f-0x000000010120000f 0xac{noformat}



Rerun:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0117"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1979097176
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Alexandre Solomatnikov,David Kravitz,John Ingalls,Nicolas Brunie,Srivatsa Yogendra,Yohann Rabefarihy,Zhiqiang Hao,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,61730c9cbcb57400683f15a6,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-07T01:53:48.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,c31edd4c037ddc8f62ffb43f2ffebeb8cce553c9,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i008cf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,53:52.0,"27/Jul/22 4:53 PM;5a938e9c0913194d2d262658;Hey guys, this has been open for a while, any update on this?",01/Aug/22 10:02 AM;5a938e9c0913194d2d262658;cc [~accountid:5fd15143b4a74900763834e0] [~accountid:61730c9cbcb57400683f15a6] …..,"01/Aug/22 10:44 AM;5fd15143b4a74900763834e0;Yohann is on PTO this week. Not sure I’ll have time to check it out, but will update if that happens.",04/Aug/22 7:03 AM;5fd15143b4a74900763834e0;I disabled the assertion for now with [https://github.com/sifive/federation/commit/a4170e92202363de68bd17e9da8e67fae7177466|https://github.com/sifive/federation/commit/a4170e92202363de68bd17e9da8e67fae7177466|smart-link] . Leaving it for [~accountid:61730c9cbcb57400683f15a6] to put something in its place. It’ll be tricky to get the right combination of checks when there is more than one LDPipe.,04/Aug/22 10:19 AM;5a938e9c0913194d2d262658;Thanks for the workaround [~accountid:5fd15143b4a74900763834e0] ,"30/Aug/22 2:24 AM;61730c9cbcb57400683f15a6;Hello [~accountid:5a938e9c0913194d2d262658] ,

I’m unable to reproduce this issue on the given commit whit the following error:

{noformat}~~~~~ libaux.so does not exist, generate !! ~~~~

ERROR: STING create libaux.so FAILED with return code 1
Details capture in log: /scratch/yohannr/federation/builds_p670/coreip_p670/verif/libraries/design_info/sting/create_libaux.log{noformat}

But I think the fix is quite simple so I pushed it here: 

[https://github.com/sifive/federation/pull/new/MAL-2242_fix_LTB_assert|https://github.com/sifive/federation/pull/new/MAL-2242_fix_LTB_assert]

Can you let me know if that fix is ok ?

Thanks","30/Aug/22 7:55 AM;5fd15143b4a74900763834e0;[~accountid:61730c9cbcb57400683f15a6], does the {{vector_tgv_ldst_dev.outline}} pass with your change, say on a master + cherry-pick? If so, that should be good enough to commit.","30/Aug/22 10:59 AM;5a938e9c0913194d2d262658;[~accountid:61730c9cbcb57400683f15a6] to fix the above error, try doing {{make verif-clean}} followed by {{make verif}} in the builds/coreip_p670 dir. Then try rerunning the test. If u still face issues, can u link the machine name as well. ","06/Sep/22 7:27 AM;61730c9cbcb57400683f15a6;Fix was wrong I did push a new one.
[~accountid:5fd15143b4a74900763834e0] yes {{vector_tgv_ldst_dev.outline}} works.

[~accountid:5a938e9c0913194d2d262658] yes it works as well thanks \! But the test seems to hit another assert then:

{{Assertion failed: Physical register  1 set as ready twice (only first conflicting id shown)}}

I’ll open the PR then ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] consider duplicating and dedicating input registers to specific vector unit,,,,,,MAL-2241,120871,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/22/2022 9:54,7/25/2022 15:01,9/28/2022 0:51,,,,,,,,,,,,,,Power,TGV_RTL/VEX,,,,,,,,0,,,,Every vector unit reads its operands from the same set of RR → EX registers. This will make the first stage of most units toggle for most operations. We should consider duplicating those registers if RR timing allows it and consider the impact on power (and maybe timing),Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0089b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
"Suggestions and studies around RTL improvements for TGV, not scheduled for Panda",,,,,,MAL-2240,120869,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/22/2022 9:40,9/26/2022 13:05,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/Top,,,,,,,,,0,,,,Twin task to [https://sifive.atlassian.net/browse/MAL-1822|https://sifive.atlassian.net/browse/MAL-1822|smart-link]  to gather optimizations/improvements we don’t intend to execute for Panda (initial TGV release).,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2251,MAL-2258,MAL-2264,MAL-2266,MAL-2268,MAL-2273,MAL-2281,MAL-2367,MAL-2491,MAL-2521,MAL-2547,MAL-2571,MAL-2585,MAL-2618,MAL-2635,MAL-2715,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-4,,[TGV/backlog] improvements/optimizations post-Panda,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,dark_blue,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0088n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] VectorReductionSequencer does not emit the correct uops for vfwredsum ,[TGV] VectorReductionSequencer,Execution Unit ,Vector,,,MAL-2239,120819,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,7/22/2022 6:24,9/7/2022 17:43,9/28/2022 0:51,7/25/2022 15:44,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,TGV,,,"* Instruction in question: {{vfwredsum, VL=10, e32m4}}



* The possible cause

When VectorReductionSequencer emit the first 2 uops @26557 cycle (536267ns), they should be

# {{vfwadd}} (wide vertical reduction)
# {{vfwcvt}} (wide fcvt)

Instead, the first uop is vfwcvt, too. After emitted 2 vfwcvt (both are VL=2), it follows the regular vertical sum reduction sequence. It cause the total reduced elements to be only 4.



* Branch: master (8c68cfdb53ea977cc1c9fdb9c053f091acbb7e11)
* Config: {{coreip_u8_minimal_vector}}
* Outline

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0000_lmul4"",
  ""subtest"": ""vfwredsum.vs"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vfwredsum.vs_Masking-1_Exception-0_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_NoSelfCheck-0_FLMUL-0_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-4_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 3764062721
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}",Brad Wu,Nicolas Brunie,,,,,,,,,,,,,,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-23T13:43:40.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/00c744836b43f80b6536e6797765be9f7f2b8b50,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i007wv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Coverage of instructions on all-0 mask,,,,,,MAL-2237,120801,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Shaka Kao,5f94696c29bd8a006f94f0e1,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,7/22/2022 1:41,9/23/2022 0:27,9/28/2022 0:51,8/29/2022 0:35,,,,,,,,,,,,,Coverage,,,,,,,,,0,,,,,Brad Wu,Eric Cheng,Kira Tsao,Nicolas Brunie,Shaka Kao,,,,,,,,,,,62103777eb2978006893b778,5d4a0f85af16f20ceaf5442e,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-7884,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2346,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-08T06:09:34.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,0,,,,100,,,,,,,,,,,,,,,2|i007sv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,55:46.4,"24/Jul/22 6:55 PM;5f94696c29bd8a006f94f0e1;Note:

# VL > 0 and all masked elements are inactive.
# Consult with VTG folks to provide an extra TGV parameter to “enabling mask, and set mask value to zero”. ","31/Jul/22 8:52 PM;5f94696c29bd8a006f94f0e1;Hi [~accountid:5d4a0f85af16f20ceaf5442e], as we discussed in the slack, I post the request here for reference.

A VTG question: is it possible to provide an argument or a “patched version” to generate “Zero Mask”?

* Request: mask value is ZERO => to let ALL elements {{inactive}} (result is the “undisturbed” data)
* if there is an argument like {{zero_mask = rng.rand(0..1)}}
* 0: as a normal case (current VTG behavior)
* 1: mask value is ZERO for tested instruction (then, we can manually modify the argument to {{zero_mask = 1}} for dedicated testing.

 ","04/Aug/22 10:25 PM;5f94696c29bd8a006f94f0e1;{{2022-08-05}} 

designJSON: coreip_u8_minimal_vector

outline config:

* enable_masking = 1
* enable_exceptions = 0
* flmul = 0
* mask = 2 (set v0 mask value to ZERO)



* {{v0}} for masking testing ({{vm=1}}/opcode\[25]). Example: {{vadd.vv}}, per cosim log, no destination register update (v0 value is zero)

{noformat}core   0: 0x0000000080000d9c (0x003981d7) vadd.vv v3, v3, v19, v0.t                                                                                                                                             
core   0: 3 0x0000000080000d9c (0x003981d7) e16 m1 l8{noformat}



* Failed cases are mask-generate instructions.

{noformat}Summary:
      |   Total Verilog Compiles |   Total Verilog Sims |   Incomplete/Skipped |   Build Fails |   Sim Failures |   Total Failed
------+--------------------------+----------------------+----------------------+---------------+----------------+----------------
 Jobs |                        1 |                 1228 |                    1 |             0 |             69 |             69{noformat}

Failed tests:

To reproduce the fail, copy the {{rerun.outline}} via the corresponding test folder under:

{noformat}gamma11
/scratch/shakak/mal-2237-ZeroMask-regr/federation/Build/coreip_u8_minimal_vector/sim/regr_zero_mask_ta1/tgv-zero-masking.outline{noformat}



{noformat}|                                                                                                 name   |                   config   | simulator   |   cputime |   bucket | UUID         |
|--------------------------------------------------------------------------------------------------------|----------------------------|-------------|-----------|----------|--------------|
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfredosum.vs    | coreip_u8_minimal_vector   | vcs         |    153.32 |        1 | 86e9d932c5   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmadc.vim       | coreip_u8_minimal_vector   | vcs         |     63.42 |        2 | d289cbd9a0   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmsbc.vx        | coreip_u8_minimal_vector   | vcs         |     73.24 |        2 | a073714294   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmseq.vi        | coreip_u8_minimal_vector   | vcs         |     76.11 |        2 | b590647249   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmsltu.vv       | coreip_u8_minimal_vector   | vcs         |     69.17 |        2 | 98f45b58b0   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmslt.vx        | coreip_u8_minimal_vector   | vcs         |     65.82 |        2 | df796a1992   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmsleu.vi       | coreip_u8_minimal_vector   | vcs         |     59.7  |        2 | ee944a088e   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmsle.vx        | coreip_u8_minimal_vector   | vcs         |     68.11 |        2 | b90da59668   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmsgtu.vx       | coreip_u8_minimal_vector   | vcs         |     84.35 |        2 | bbbd302246   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmsgt.vx        | coreip_u8_minimal_vector   | vcs         |     82.37 |        2 | 37d5ba150a   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vfredosum.vs    | coreip_u8_minimal_vector   | vcs         |    127.73 |        1 | 7765d55650   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vfwredosum.vs   | coreip_u8_minimal_vector   | vcs         |    135.35 |        1 | bc873274f2   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vcompress.vm    | coreip_u8_minimal_vector   | vcs         |     60.83 |        2 | c5966d990f   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmadc.vv        | coreip_u8_minimal_vector   | vcs         |     69.22 |        2 | 6390a46487   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmadc.vxm       | coreip_u8_minimal_vector   | vcs         |     62.44 |        2 | 12584f4cf1   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmadc.vi        | coreip_u8_minimal_vector   | vcs         |     68.14 |        2 | 1727a599fb   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsbc.vxm       | coreip_u8_minimal_vector   | vcs         |     66.43 |        2 | 43bc802f64   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmseq.vi        | coreip_u8_minimal_vector   | vcs         |     81.85 |        2 | 64f07b5337   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsltu.vv       | coreip_u8_minimal_vector   | vcs         |     76.43 |        2 | f275962b25   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsltu.vx       | coreip_u8_minimal_vector   | vcs         |     68.48 |        2 | 8c1f020e01   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmslt.vv        | coreip_u8_minimal_vector   | vcs         |     70.8  |        2 | b32c26d035   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmslt.vx        | coreip_u8_minimal_vector   | vcs         |     75.71 |        2 | 50e2172b26   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsleu.vi       | coreip_u8_minimal_vector   | vcs         |     85.79 |        2 | 85786b87ad   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsle.vv        | coreip_u8_minimal_vector   | vcs         |     73.94 |        2 | 57bda02bec   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsle.vx        | coreip_u8_minimal_vector   | vcs         |     74.21 |        2 | 88d67a7522   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsle.vi        | coreip_u8_minimal_vector   | vcs         |     85.92 |        2 | ca699a572e   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsgtu.vx       | coreip_u8_minimal_vector   | vcs         |     67.76 |        2 | 62bdfcf0f7   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsgtu.vi       | coreip_u8_minimal_vector   | vcs         |     78.64 |        2 | deab11c8c2   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsgt.vx        | coreip_u8_minimal_vector   | vcs         |     80.07 |        2 | 1733c93e6c   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsgt.vi        | coreip_u8_minimal_vector   | vcs         |     68.97 |        2 | e68dce9465   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vfredosum.vs    | coreip_u8_minimal_vector   | vcs         |    148.24 |        1 | 665996bc06   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vfwredosum.vs   | coreip_u8_minimal_vector   | vcs         |    151.59 |        1 | c639a4f49a   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmadc.vx        | coreip_u8_minimal_vector   | vcs         |     81.74 |        2 | 739cabd68b   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmadc.vxm       | coreip_u8_minimal_vector   | vcs         |     58.15 |        2 | cfbeceb1b6   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmadc.vi        | coreip_u8_minimal_vector   | vcs         |     74.39 |        2 | 965caba92e   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmadc.vim       | coreip_u8_minimal_vector   | vcs         |     68.93 |        2 | 1491520b50   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsbc.vx        | coreip_u8_minimal_vector   | vcs         |     82.37 |        2 | 378e881ccd   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsbc.vxm       | coreip_u8_minimal_vector   | vcs         |     89.84 |        2 | 28a5a6e549   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmseq.vv        | coreip_u8_minimal_vector   | vcs         |     77    |        2 | d1ce3936df   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmseq.vi        | coreip_u8_minimal_vector   | vcs         |     75.01 |        2 | 3e23cfee8e   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsne.vv        | coreip_u8_minimal_vector   | vcs         |     88.94 |        2 | 832b06420c   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsne.vx        | coreip_u8_minimal_vector   | vcs         |     92.68 |        2 | 82d302f385   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsne.vi        | coreip_u8_minimal_vector   | vcs         |     72.82 |        2 | 59b64223ed   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsltu.vx       | coreip_u8_minimal_vector   | vcs         |     57.21 |        2 | c4e856167c   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmslt.vv        | coreip_u8_minimal_vector   | vcs         |     84.3  |        2 | 05e2604bed   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmslt.vx        | coreip_u8_minimal_vector   | vcs         |     74.26 |        2 | 3c37efcf91   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsleu.vx       | coreip_u8_minimal_vector   | vcs         |     87.32 |        2 | dc0371ab62   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsleu.vi       | coreip_u8_minimal_vector   | vcs         |     91.7  |        2 | 03b1761078   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsle.vx        | coreip_u8_minimal_vector   | vcs         |     86.67 |        2 | e1a9b81c68   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsle.vi        | coreip_u8_minimal_vector   | vcs         |     68.97 |        2 | 41acc552c4   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsgtu.vi       | coreip_u8_minimal_vector   | vcs         |     80.35 |        2 | f1933d911b   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsgt.vi        | coreip_u8_minimal_vector   | vcs         |     78    |        2 | faddf19a58   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm    | coreip_u8_minimal_vector   | vcs         |     80.83 |        2 | 8804bb2fa7   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmadc.vx        | coreip_u8_minimal_vector   | vcs         |     82.51 |        2 | 5c6fae9fea   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmadc.vi        | coreip_u8_minimal_vector   | vcs         |     90.92 |        2 | d750a94ae1   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsbc.vx        | coreip_u8_minimal_vector   | vcs         |     77.87 |        2 | 49979b18ed   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmseq.vx        | coreip_u8_minimal_vector   | vcs         |     88.75 |        2 | 62fafbfb19   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmseq.vi        | coreip_u8_minimal_vector   | vcs         |     85.02 |        2 | cb4fe847de   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsne.vx        | coreip_u8_minimal_vector   | vcs         |     99.5  |        2 | 675d48a569   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsne.vi        | coreip_u8_minimal_vector   | vcs         |     92.8  |        2 | 9b4b75c577   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsltu.vv       | coreip_u8_minimal_vector   | vcs         |     80.32 |        2 | 8020a426d7   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsltu.vx       | coreip_u8_minimal_vector   | vcs         |     73.18 |        2 | 1bd67eacd2   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmslt.vx        | coreip_u8_minimal_vector   | vcs         |    105.67 |        2 | 8b6b5be5ef   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsleu.vv       | coreip_u8_minimal_vector   | vcs         |     73.22 |        2 | 4bd552fdf9   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsleu.vi       | coreip_u8_minimal_vector   | vcs         |     94.82 |        2 | f78f13c7e9   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsle.vi        | coreip_u8_minimal_vector   | vcs         |     85.23 |        2 | 2f614ded5c   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsgtu.vx       | coreip_u8_minimal_vector   | vcs         |     93.51 |        2 | c0c61ef8f4   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsgtu.vi       | coreip_u8_minimal_vector   | vcs         |     87.24 |        2 | 2a12b10e05   |
| regr_zero_mask_ta1/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsgt.vx        | coreip_u8_minimal_vector   | vcs         |    118.7  |        2 | 43bae4026b   |


  Bucket  Failure                                      Count
--------  -----------------------------------------  -------
       1  Assertion Failure: SiFive_ROB_assert             5
       2  COSIM-ERROR# COSIM VS RTL WRDATA MISMATCH       64{noformat}","05/Aug/22 5:21 PM;5f94696c29bd8a006f94f0e1;{{2022-08-06}} 

designJSON: coreip_u8_minimal_vector

outline config:

* enable_masking = 1
* enable_exceptions = 0
* flmul = 0
* mask = 2 (set v0 mask value to ZERO)

RTL fixed:

{noformat}-  val formattedAccum_EXN = accumInMaskFormatAll_EXN(augVectorCmd_EX.vsew)
+  val formattedAccum_EXN = accumInMaskFormatAll_EXN(stagedCmd(tp.comparePipelineDepth+1).vsew){noformat}



{color:#bf2600}*Summary: Failed/Total = 7/1228*{color}

Failed tests:

{noformat}|                                                                                             name   |                   config   | simulator   |   cputime |   bucket | UUID         |
|----------------------------------------------------------------------------------------------------|----------------------------|-------------|-----------|----------|--------------|
| regr_zero_mask/tgv-zero-masking.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfredosum.vs    | coreip_u8_minimal_vector   | vcs         |    129.13 |        1 | 3b6e04a6b0   |
| regr_zero_mask/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vfredosum.vs    | coreip_u8_minimal_vector   | vcs         |    147.03 |        1 | 639cc12048   |
| regr_zero_mask/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vcompress.vm    | coreip_u8_minimal_vector   | vcs         |     66.67 |        2 | 964515295f   |
| regr_zero_mask/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vfredosum.vs    | coreip_u8_minimal_vector   | vcs         |    164.42 |        1 | 3e9a9f3d0a   |
| regr_zero_mask/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vfwredosum.vs   | coreip_u8_minimal_vector   | vcs         |    124.24 |        1 | 65e625baa7   |
| regr_zero_mask/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfredosum.vs    | coreip_u8_minimal_vector   | vcs         |    131.42 |        1 | 18e51984e4   |
| regr_zero_mask/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm    | coreip_u8_minimal_vector   | vcs         |     82.56 |        2 | 69566d21d2   |{noformat}","05/Aug/22 8:49 PM;5f94696c29bd8a006f94f0e1;{{2022-08-06}} 

designJSON: *coreip_p670*

outline config:

* enable_masking = 1
* enable_exceptions = 0
* flmul = 0
* mask = 2 (set v0 mask value to ZERO)



with RTL local fixed

{color:#bf2600}*Summary: Failed/Total = 12/1228*{color}

Failed tests:

{noformat}|                                                                                             name   |      config   | simulator   |   cputime |   bucket | UUID         |
|----------------------------------------------------------------------------------------------------|---------------|-------------|-----------|----------|--------------|
| regr_zero_mask/tgv-zero-masking.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfredosum.vs    | coreip_p670   | vcs         |    286.7  |        1 | 1e39c3cd00   |
| regr_zero_mask/tgv-zero-masking.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfredmax.vs     | coreip_p670   | vcs         |    377.89 |        1 | 88d28a5a0c   |
| regr_zero_mask/tgv-zero-masking.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfredmin.vs     | coreip_p670   | vcs         |    363.06 |        1 | e9391d8c9b   |
| regr_zero_mask/tgv-zero-masking.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfwredosum.vs   | coreip_p670   | vcs         |    324.05 |        1 | c8622db43f   |
| regr_zero_mask/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vfredosum.vs    | coreip_p670   | vcs         |    302.69 |        1 | 4b066cb458   |
| regr_zero_mask/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vfredmax.vs     | coreip_p670   | vcs         |    248.55 |        2 | 6f3d0fa00f   |
| regr_zero_mask/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vcompress.vm    | coreip_p670   | vcs         |    102.39 |        3 | 203264d188   |
| regr_zero_mask/tgv-zero-masking.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vfredosum.vs    | coreip_p670   | vcs         |    305.83 |        1 | f274a1954d   |
| regr_zero_mask/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vxor.vv         | coreip_p670   | vcs         |    920.61 |        3 | 18400d3a80   |
| regr_zero_mask/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfredosum.vs    | coreip_p670   | vcs         |    320.13 |        1 | d77207481f   |
| regr_zero_mask/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfredmax.vs     | coreip_p670   | vcs         |    322.46 |        1 | 5ee5d5a742   |
| regr_zero_mask/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm    | coreip_p670   | vcs         |    133.48 |        3 | cd48baf317   |


  Bucket  Failure                                       Count
--------  ------------------------------------------  -------
       1  Assertion Failure: SiFive_ROB_assert              8
       2  Assertion Failure: SiFive_MSHREntry_assert        1
       3  COSIM-ERROR# COSIM VS RTL WRDATA MISMATCH         3{noformat}","08/Aug/22 6:55 PM;5f94696c29bd8a006f94f0e1;{{2022-08-09}} 

designJSON: *coreip_u8_minimal_vector*

outline config:

* enable_masking = *1*
* enable_exceptions = 0
* flmul = 0
* num_of_tests_gen = *150*
* mask = 2 (set v0 mask value to ZERO)



*Regression status:*

{noformat}|                                                                                       name   |                   config   | simulator   |   cputime |   bucket | UUID         |
|----------------------------------------------------------------------------------------------|----------------------------|-------------|-----------|----------|--------------|
| regr_0809/tgv-zero-masking.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector   | vcs         |     70.88 |        1 | 271bbec82d   |
| regr_0809/tgv-zero-masking.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector   | vcs         |     70.94 |        1 | 7e19014f1d   |
| regr_0809/tgv-zero-masking.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector   | vcs         |     80.63 |        1 | 7953c8caf8   |


  Bucket  Failure                                      Count
--------  -----------------------------------------  -------
       1  COSIM-ERROR# COSIM VS RTL WRDATA MISMATCH        3

Summary:
      |   Total Verilog Compiles |   Total Verilog Sims |   Incomplete/Skipped |   Build Fails |   Sim Failures |   Total Failed
------+--------------------------+----------------------+----------------------+---------------+----------------+----------------
 Jobs |                        1 |                 1276 |                    0 |             0 |              3 |              3{noformat}","09/Aug/22 8:19 PM;5f94696c29bd8a006f94f0e1;Per {{2022-08-09}} regression results, below is the NumOfTestCase VTG generated for a RVV ALU instructions.



NOTE:

* Column {{Masked}}: when we enable masking in VTG outline, VTG would randomly generate non-mask and masked instructions. Masked instruction format like: {{inst dst, src2, src1, v0.t}} for example, {{vadd.vv v13, v13, v13, v0.t}}
** Since this task tests the zero-mask, we should calculate the “masked” instruction cases.
* Column {{Masked VL=0}}: For those masked instruction cases, how many cases are for VL=0 (Nop).
* Column {{Masked VL!=0}}: The number in this column is really what we care about. True “number of test cases” for an instruction.
* For some mask instructions, they always write full body elements and ignore the mask value.



{noformat}Inst                 Total| Masked|  Masked VL=0| Masked VL!=0|
vaaddu.vv              150      72            18            54
vaaddu.vx               52      23             4            19
vaadd.vv               150      83            26            57
vaadd.vx                47      23             6            17
vadc.vim                 5       0             0             0
vadc.vvm                 6       0             0             0
vadc.vxm                 9       0             0             0
vadd.vi                 13       5             2             3
vadd.vv                 98      49            14            35
vadd.vx                 10       1             0             1
vand.vi                 55      26             7            19
vand.vv                 11       5             1             4
vand.vx                 55      27             8            19
vasubu.vv              150      78            22            56
vasubu.vx              150      76            25            51
vasub.vv                32       9             1             8
vasub.vx               150      75            18            57
vcompress.vm             2       0             0             0
vcpop.m                 25      12             3             9
vdivu.vv               106      49            12            37
vdivu.vx                11       6             2             4
vdiv.vv                 98      47            14            33
vdiv.vx                 50      25             6            19
vfadd.vf               123      61            17            44
vfadd.vv                19      10             1             9
vfclass.v               30      17             4            13
vfcvt.f.xu.v            21       9             2             7
vfcvt.f.x.v            103      48            14            34
vfcvt.rtz.x.f.v        102      49            15            34
vfcvt.rtz.xu.f.v        23       9             5             4
vfcvt.x.f.v             98      51            16            35
vfcvt.xu.f.v            96      46            13            33
vfdiv.vf               125      59            18            41
vfdiv.vv                16       6             2             4
vfirst.m                27      14             4            10
vfmacc.vf              123      64            19            45
vfmacc.vv              150      72            20            52
vfmadd.vf              126      62            19            43
vfmadd.vv              150      73            18            55
vfmax.vf                31      15             3            12
vfmax.vv               150      74            19            55
vfmerge.vfm              5       0             0             0
vfmin.vf                27      10             4             6
vfmin.vv               150      69            20            49
vfmsac.vf              127      63            18            45
vfmsac.vv               21       9             2             7
vfmsub.vf              126      63            17            46
vfmsub.vv              150      68            23            45
vfmul.vf               123      59            19            40
vfmul.vv                19       9             3             6
vfmv.f.s                 5       0             0             0
vfmv.s.f                 2       0             0             0
vfmv.v.f                 3       0             0             0
vfncvt.f.f.w            67      32             8            24
vfncvt.f.xu.w           17      11             3             8
vfncvt.f.x.w            74      37             9            28
vfncvt.rod.f.f.w        73      36             8            28
vfncvt.rtz.x.f.w       138      63            17            46
vfncvt.rtz.xu.f.w      137      69            17            52
vfncvt.x.f.w           134      63            17            46
vfncvt.xu.f.w          129      64            19            45
vfnmacc.vf             125      59            18            41
vfnmacc.vv              17       4             1             3
vfnmadd.vf              34      18             4            14
vfnmadd.vv             150      70            18            52
vfnmsac.vf             128      63            19            44
vfnmsac.vv              19       9             2             7
vfnmsub.vf             122      59            18            41
vfnmsub.vv              18       7             3             4
vfrdiv.vf              127      65            19            46
vfrec7.v               128      64            18            46
vfredmax.vs            150      92            27            65
vfredmin.vs            150      98            31            67
vfredosum.vs           150      99            37            62
vfredsum.vs              0       0             0             0
vfrsqrt7.v              30      11             2             9
vfrsub.vf               43      20             5            15
vfsgnjn.vf               5       3             2             1
vfsgnjn.vv              33      18             7            11
vfsgnj.vf                3       2             1             1
vfsgnj.vv                1       1             0             1
vfsgnjx.vf               3       0             0             0
vfsgnjx.vv               2       1             0             1
vfslide1down.vf          4       1             0             1
vfslide1up.vf            8       5             1             4
vfsqrt.v                28      14             4            10
vfsub.vf                31      13             4             9
vfsub.vv                16       7             2             5
vfwadd.vf               33      16             5            11
vfwadd.vv               28      13             3            10
vfwadd.wf               11       6             3             3
vfwadd.wv                7       2             0             2
vfwcvt.f.f.v            33      15             4            11
vfwcvt.f.xu.v           67      33             8            25
vfwcvt.f.x.v            67      33             9            24
vfwcvt.rtz.x.f.v        37      19             4            15
vfwcvt.rtz.xu.f.v        8       4             2             2
vfwcvt.x.f.v            23      10             4             6
vfwcvt.xu.f.v           35      18             5            13
vfwmacc.vf              13       5             0             5
vfwmacc.vv              32      16             3            13
vfwmsac.vf              34      16             4            12
vfwmsac.vv              13       4             0             4
vfwmul.vf               32      17             4            13
vfwmul.vv               33      17             5            12
vfwnmacc.vf             12       8             1             7
vfwnmacc.vv             33      16             5            11
vfwnmsac.vf             36      19             5            14
vfwnmsac.vv              8       2             1             1
vfwredosum.vs           11       5             1             4
vfwredsum.vs             0       0             0             0
vfwsub.vf               19      11             3             8
vfwsub.vv               12       5             0             5
vfwsub.wf               70      34             8            26
vfwsub.wv               65      31             8            23
vid.v                   25      11             3             8
viota.m                 26      13             2            11
vmacc.vv                12       6             0             6
vmacc.vx                10       7             2             5
vmadc.vi                 7       0             0             0
vmadc.vim                6       0             0             0
vmadc.vv                 3       0             0             0
vmadc.vvm                4       0             0             0
vmadc.vx                10       0             0             0
vmadc.vxm                7       0             0             0
vmadd.vv               103      53            15            38
vmadd.vx                52      27             7            20
vmand.mm                54       0             0             0
vmandn.mm               52       0             0             0
vmaxu.vv               110      53            14            39
vmaxu.vx                16       6             1             5
vmax.vv                  8       5             3             2
vmax.vx                 16       8             1             7
vmerge.vim               4       0             0             0
vmerge.vvm              48       0             0             0
vmerge.vxm              24       0             0             0
vmfeq.vf                32      17             4            13
vmfeq.vv                18       5             0             5
vmfge.vf                34      16             4            12
vmfge.vv                 0       0             0             0
vmfgt.vf                22      11             3             8
vmfgt.vv                 0       0             0             0
vmfle.vf                28      12             4             8
vmfle.vv                20      10             2             8
vmflt.vf                34      17             5            12
vmflt.vv                28      15             4            11
vmfne.vf                33      17             6            11
vmfne.vv                14       6             1             5
vminu.vv                 7       3             2             1
vminu.vx                16       7             1             6
vmin.vv                  8       4             1             3
vmin.vx                 52      23             8            15
vmnand.mm               53       0             0             0
vmnor.mm                 2       0             0             0
vmor.mm                 52       0             0             0
vmorn.mm                 4       0             0             0
vmsbc.vv                 7       0             0             0
vmsbc.vvm                2       0             0             0
vmsbc.vx                 9       0             0             0
vmsbc.vxm                7       0             0             0
vmsbf.m                 12       5             0             5
vmseq.vi                 9       3             1             2
vmseq.vv                10       5             0             5
vmseq.vx                13       7             3             4
vmsgtu.vi               15       7             2             5
vmsgtu.vx               13       7             3             4
vmsgt.vi                13       9             4             5
vmsgt.vx                14       5             1             4
vmsif.m                 27      13             4             9
vmsleu.vi               18       8             2             6
vmsleu.vv                8       5             3             2
vmsleu.vx               13       6             2             4
vmsle.vi                14       6             2             4
vmsle.vv                 8       5             1             4
vmsle.vx                15       6             3             3
vmsltu.vv                6       3             0             3
vmsltu.vx               14       9             3             6
vmslt.vv                13       6             1             5
vmslt.vx                15       8             4             4
vmsne.vi                10       6             2             4
vmsne.vv                10       4             1             3
vmsne.vx                11       4             2             2
vmsof.m                 28      13             3            10
vmulhsu.vv             101      49            13            36
vmulhsu.vx              53      26             6            20
vmulhu.vv              100      48            16            32
vmulhu.vx               14       7             1             6
vmulh.vv                 3       1             0             1
vmulh.vx                52      26             8            18
vmul.vv                  6       1             0             1
vmul.vx                 53      27             8            19
vmv1r.v                 26       0             0             0
vmv2r.v                  5       0             0             0
vmv4r.v                  5       0             0             0
vmv8r.v                 25       0             0             0
vmv.s.x                 14       0             0             0
vmv.v.i                 17       0             0             0
vmv.v.v                336       0             0             0
vmv.v.x                 11       0             0             0
vmv.x.s                 14       0             0             0
vmxnor.mm               48       0             0             0
vmxor.mm                 8       0             0             0
vnclipu.wi             150      73            19            54
vnclipu.wv             150      75            18            57
vnclipu.wx              36      16             3            13
vnclip.wi               36      16             5            11
vnclip.wv              150      67            14            53
vnclip.wx              150      75            23            52
vnmsac.vv                7       2             1             1
vnmsac.vx               10       5             1             4
vnmsub.vv                8       4             2             2
vnmsub.vx                9       6             1             5
vnsra.wi                40      20             6            14
vnsra.wv                81      35             9            26
vnsra.wx                38      19             6            13
vnsrl.wi                35      15             6             9
vnsrl.wv                 6       1             0             1
vnsrl.wx                12       5             2             3
vor.vi                  10       7             1             6
vor.vv                  96      45            11            34
vor.vx                  12       7             2             5
vredand.vs             150      99            26            73
vredmaxu.vs            150      98            27            71
vredmax.vs               9       3             1             2
vredminu.vs            150      99            29            70
vredmin.vs               8       2             0             2
vredor.vs              150     102            29            73
vredsum.vs               6       2             1             1
vredxor.vs              10       4             1             3
vremu.vv                 7       4             2             2
vremu.vx                51      27             6            21
vrem.vv                102      48            15            33
vrem.vx                  9       5             0             5
vrgatherei16.vv         24      12             2            10
vrgather.vi             26      15             4            11
vrgather.vv             25      12             2            10
vrgather.vx             11       6             1             5
vrsub.vi                14       8             2             6
vrsub.vx                15       8             2             6
vsaddu.vi               49      25             7            18
vsaddu.vv              110      55            16            39
vsaddu.vx               55      28             8            20
vsadd.vi                56      28             7            21
vsadd.vv               102      49            15            34
vsadd.vx                53      25             8            17
vsbc.vvm                47       0             0             0
vsbc.vxm                24       0             0             0
vsetivli               150       0             0             0
vsetvl                 151       0             0             0
vsetvli                151       0             0             0
vsext.vf2               12       7             1             6
vsext.vf4               13       7             2             5
vsext.vf8                4       1             0             1
vslide1down.vx          14       8             2             6
vslide1up.vx           512      12             3             9
vslidedown.vi           13       7             2             5
vslidedown.vx           16       8             2             6
vslideup.vi             28      14             4            10
vslideup.vx             13       6             1             5
vsll.vi                 53      25             6            19
vsll.vv                 10       5             1             4
vsll.vx                 13       7             3             4
vsmul.vv               150      70            20            50
vsmul.vx                51      27             7            20
vsra.vi                 54      27             8            19
vsra.vv                104      50            14            36
vsra.vx                 49      22             7            15
vsrl.vi                 51      27             8            19
vsrl.vv                107      50            15            35
vsrl.vx                 53      27             8            19
vssra.vi               150      73            23            50
vssra.vv               150      68            22            46
vssra.vx               150      70            15            55
vssrl.vi               150      75            21            54
vssrl.vv               150      77            19            58
vssrl.vx               150      72            21            51
vssubu.vv                7       5             2             3
vssubu.vx               19      10             2             8
vssub.vv                97      48            15            33
vssub.vx                13       7             1             6
vsub.vv                  7       3             0             3
vsub.vx                 50      25             7            18
vwaddu.vv                5       2             1             1
vwaddu.vx                9       3             2             1
vwaddu.wv                4       2             1             1
vwaddu.wx               10       5             0             5
vwadd.vv                 5       2             2             0
vwadd.vx                20      10             2             8
vwadd.wv                 5       1             1             0
vwadd.wx                 6       3             0             3
vwmaccsu.vv             17       8             3             5
vwmaccsu.vx             20       9             3             6
vwmaccus.vx              8       4             1             3
vwmaccu.vv              14       7             1             6
vwmaccu.vx              12       4             0             4
vwmacc.vv               19       8             3             5
vwmacc.vx               22      10             2             8
vwmulsu.vv               3       2             2             0
vwmulsu.vx               9       6             1             5
vwmulu.vv               20       8             2             6
vwmulu.vx                9       4             0             4
vwmul.vv                20      10             2             8
vwmul.vx                10       5             0             5
vwredsumu.vs           121      77            21            56
vwredsum.vs              9       4             1             3
vwsubu.vv                6       3             1             2
vwsubu.vx               10       6             1             5
vwsubu.wv               38      17             5            12
vwsubu.wx                9       5             1             4
vwsub.vv                 4       2             1             1
vwsub.vx                13       5             0             5
vwsub.wv                 5       3             1             2
vwsub.wx                44      24             6            18
vxor.vi                 13       7             1             6
vxor.vv                  8       3             1             2
vxor.vx                 52      27             7            20
vzext.vf2               19       9             3             6
vzext.vf4               11       5             1             4
vzext.vf8                5       2             1             1{noformat}","12/Aug/22 12:10 AM;5f94696c29bd8a006f94f0e1;{{2022-08-12}} 

designJSON: *coreip_u8_minimal_vector*

outline config:

* enable_masking = *1*
* enable_exceptions = 0
* flmul = 0
* num_of_tests_gen = *100*
* mask = 2 (set v0 mask value to ZERO)



Regression summary: Fail/Total 89/1276 (was 3/1276)

* {noformat}Bucket  Failure                                               Count
--------  --------------------------------------------------  -------
       1  Assertion Failure: SiFive_VectorAccumulator_assert       80
       3  COSIM-ERROR# COSIM VS RTL WRDATA MISMATCH                 4
       4  Assertion Failure: SiFive_PRA_5_assert                    5{noformat}





*Failed Tests*

{noformat}|                                                                                       name   |                   config   | simulator   |   cputime |   bucket | UUID         |
|----------------------------------------------------------------------------------------------|----------------------------|-------------|-----------|----------|--------------|
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmadc.vx           | coreip_u8_minimal_vector   | vcs         |     74.96 |        1 | 59642d68d3   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmadc.vxm          | coreip_u8_minimal_vector   | vcs         |    233.28 |        1 | 5d94759ba5   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmadc.vim          | coreip_u8_minimal_vector   | vcs         |    222.92 |        1 | 96a6d87443   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmseq.vv           | coreip_u8_minimal_vector   | vcs         |    259.33 |        1 | 165ea92c2c   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmsne.vv           | coreip_u8_minimal_vector   | vcs         |    194.52 |        1 | b5865ba44e   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmslt.vv           | coreip_u8_minimal_vector   | vcs         |    171.66 |        1 | 4e9494daa5   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmslt.vx           | coreip_u8_minimal_vector   | vcs         |    118.83 |        1 | 5cc10c95af   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmsgtu.vi          | coreip_u8_minimal_vector   | vcs         |    174.93 |        1 | c55948fdf6   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmsgt.vx           | coreip_u8_minimal_vector   | vcs         |    147.04 |        1 | 3bdcc91429   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfeq.vv           | coreip_u8_minimal_vector   | vcs         |     75.05 |        1 | 13111c64a3   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfeq.vf           | coreip_u8_minimal_vector   | vcs         |     69.9  |        1 | 5e8a8ec0a0   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfne.vv           | coreip_u8_minimal_vector   | vcs         |     74.5  |        1 | 157c84872c   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfne.vf           | coreip_u8_minimal_vector   | vcs         |     68.14 |        1 | 3c52ec2a30   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmflt.vv           | coreip_u8_minimal_vector   | vcs         |     78.09 |        1 | 84e32100d8   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmflt.vf           | coreip_u8_minimal_vector   | vcs         |     80.99 |        1 | 8fc578ae5b   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfle.vv           | coreip_u8_minimal_vector   | vcs         |     75.47 |        1 | 19b8813b1b   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfle.vf           | coreip_u8_minimal_vector   | vcs         |     73.11 |        1 | 0f0bb118a6   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfgt.vv           | coreip_u8_minimal_vector   | vcs         |     74.61 |        1 | 5f864e70c9   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfgt.vf           | coreip_u8_minimal_vector   | vcs         |     80.8  |        1 | 76833f929f   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfge.vv           | coreip_u8_minimal_vector   | vcs         |     73.48 |        1 | 62fb40ab86   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfge.vf           | coreip_u8_minimal_vector   | vcs         |     79.79 |        1 | 9dd43d0c87   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vcompress.vm       | coreip_u8_minimal_vector   | vcs         |     76.31 |        3 | 9a3542c908   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmadc.vx           | coreip_u8_minimal_vector   | vcs         |    180.15 |        1 | 76e80130ea   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmadc.vi           | coreip_u8_minimal_vector   | vcs         |    164.28 |        1 | f09a5100ec   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsbc.vx           | coreip_u8_minimal_vector   | vcs         |    187.29 |        1 | 108fce578a   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmseq.vx           | coreip_u8_minimal_vector   | vcs         |    172.29 |        1 | 424a9daa2c   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsne.vx           | coreip_u8_minimal_vector   | vcs         |    188.17 |        1 | 842ac5c826   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsltu.vv          | coreip_u8_minimal_vector   | vcs         |    109.1  |        1 | 428f4a0cbe   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmslt.vx           | coreip_u8_minimal_vector   | vcs         |    108.56 |        1 | 06e88acd6a   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsleu.vi          | coreip_u8_minimal_vector   | vcs         |    179    |        1 | 80d1d61e52   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsle.vv           | coreip_u8_minimal_vector   | vcs         |    119.19 |        1 | 420eddf0ab   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsle.vi           | coreip_u8_minimal_vector   | vcs         |    160.1  |        1 | 14e82839ad   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsgt.vx           | coreip_u8_minimal_vector   | vcs         |    239.82 |        1 | a95af75646   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsgt.vi           | coreip_u8_minimal_vector   | vcs         |     92.84 |        1 | 1736864b58   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmfeq.vv           | coreip_u8_minimal_vector   | vcs         |     90.53 |        1 | 5500fa77c7   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmfeq.vf           | coreip_u8_minimal_vector   | vcs         |     82.31 |        1 | a27f403d3f   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmfne.vv           | coreip_u8_minimal_vector   | vcs         |     85.45 |        1 | 202032584c   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmfne.vf           | coreip_u8_minimal_vector   | vcs         |     79.33 |        1 | e9c9f2bd04   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmflt.vv           | coreip_u8_minimal_vector   | vcs         |     87.69 |        1 | 77e9f4fbd9   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmflt.vf           | coreip_u8_minimal_vector   | vcs         |     78.15 |        1 | db469bc43f   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmfle.vv           | coreip_u8_minimal_vector   | vcs         |     89.85 |        1 | fa582b562c   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmfle.vf           | coreip_u8_minimal_vector   | vcs         |     79.17 |        1 | 652adad2b6   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmfgt.vv           | coreip_u8_minimal_vector   | vcs         |     85.96 |        1 | 3678352882   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmfgt.vf           | coreip_u8_minimal_vector   | vcs         |     81.55 |        1 | 3245dd74f7   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmfge.vv           | coreip_u8_minimal_vector   | vcs         |     86.3  |        1 | 87316bdbe7   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmfge.vf           | coreip_u8_minimal_vector   | vcs         |     81.06 |        1 | e62da595b0   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vcompress.vm       | coreip_u8_minimal_vector   | vcs         |     70.52 |        3 | 583ba4edf2   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmadc.vv           | coreip_u8_minimal_vector   | vcs         |    365.51 |        1 | bd4681defb   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsbc.vx           | coreip_u8_minimal_vector   | vcs         |    281.18 |        1 | c9ae6eb2c4   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsne.vx           | coreip_u8_minimal_vector   | vcs         |    353.47 |        1 | 5de172dfef   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmslt.vx           | coreip_u8_minimal_vector   | vcs         |    338.29 |        1 | 067b31465d   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsle.vi           | coreip_u8_minimal_vector   | vcs         |    314.92 |        1 | 8210088cd8   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsgtu.vx          | coreip_u8_minimal_vector   | vcs         |    245.1  |        1 | 255b9135d4   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsgtu.vi          | coreip_u8_minimal_vector   | vcs         |    297.02 |        1 | 5bce23b344   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsgt.vx           | coreip_u8_minimal_vector   | vcs         |    271.48 |        1 | 18bf8fdd3f   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmfeq.vv           | coreip_u8_minimal_vector   | vcs         |     97.82 |        1 | 69defebf33   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmfeq.vf           | coreip_u8_minimal_vector   | vcs         |     89.22 |        1 | 8c973035de   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmfne.vv           | coreip_u8_minimal_vector   | vcs         |     97.43 |        1 | fb367f31d8   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmfne.vf           | coreip_u8_minimal_vector   | vcs         |     73.53 |        1 | 3355fa2305   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmflt.vv           | coreip_u8_minimal_vector   | vcs         |     79.49 |        1 | bbb6c5ea04   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmflt.vf           | coreip_u8_minimal_vector   | vcs         |     83.97 |        1 | 96b7f0fc9b   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmfle.vv           | coreip_u8_minimal_vector   | vcs         |    100.47 |        1 | fb2e7b2c12   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmfle.vf           | coreip_u8_minimal_vector   | vcs         |     80.83 |        1 | 03abd9ac76   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmfgt.vv           | coreip_u8_minimal_vector   | vcs         |     95    |        1 | 91cd173bd4   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmfgt.vf           | coreip_u8_minimal_vector   | vcs         |     82.7  |        1 | 24f995e42b   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmfge.vv           | coreip_u8_minimal_vector   | vcs         |    108.6  |        1 | 1dcbbf63bd   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmfge.vf           | coreip_u8_minimal_vector   | vcs         |     96.19 |        1 | fbc5a06b29   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmv1r.v            | coreip_u8_minimal_vector   | vcs         |     74.38 |        3 | ffdbe1dc3a   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmseq.vx           | coreip_u8_minimal_vector   | vcs         |    354.53 |        1 | 44cab5b38a   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmseq.vi           | coreip_u8_minimal_vector   | vcs         |    268.92 |        4 | 385736eee2   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsltu.vx          | coreip_u8_minimal_vector   | vcs         |    299.47 |        4 | ab9c845479   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsleu.vx          | coreip_u8_minimal_vector   | vcs         |    437.73 |        1 | ce3f3a773a   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsle.vx           | coreip_u8_minimal_vector   | vcs         |    395.06 |        1 | 32e6e3a7b5   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsle.vi           | coreip_u8_minimal_vector   | vcs         |    158.77 |        1 | 9d7584dfaf   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsgtu.vx          | coreip_u8_minimal_vector   | vcs         |    430.73 |        1 | ad84642a13   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsgt.vx           | coreip_u8_minimal_vector   | vcs         |    415.63 |        1 | 459a9c4655   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmfeq.vv           | coreip_u8_minimal_vector   | vcs         |    120.87 |        1 | 098a634593   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmfeq.vf           | coreip_u8_minimal_vector   | vcs         |    122    |        1 | 865b6242fc   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmfne.vv           | coreip_u8_minimal_vector   | vcs         |    126.29 |        1 | c54c8086f5   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmfne.vf           | coreip_u8_minimal_vector   | vcs         |    100.25 |        1 | 1053ca5458   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmflt.vv           | coreip_u8_minimal_vector   | vcs         |    126.05 |        4 | 03b46e59bf   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmflt.vf           | coreip_u8_minimal_vector   | vcs         |     97.96 |        1 | 2c89010eed   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmfle.vv           | coreip_u8_minimal_vector   | vcs         |    124.42 |        1 | 04e081b460   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmfle.vf           | coreip_u8_minimal_vector   | vcs         |     96.82 |        4 | 8f024ceb81   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmfgt.vv           | coreip_u8_minimal_vector   | vcs         |    116.81 |        1 | 831de2f3f7   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmfgt.vf           | coreip_u8_minimal_vector   | vcs         |    105.54 |        1 | 6d16f47a64   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmfge.vv           | coreip_u8_minimal_vector   | vcs         |    127.54 |        1 | 22a1495eb2   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmfge.vf           | coreip_u8_minimal_vector   | vcs         |     94.38 |        4 | 3524433e14   |
| regr/tgv-regr-zeroMask.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm       | coreip_u8_minimal_vector   | vcs         |    100.96 |        3 | dc2e98903a   |{noformat}","12/Aug/22 12:11 AM;5f94696c29bd8a006f94f0e1;{{2022-08-12}} 

The number of test cases for each instruction:

{noformat}Inst                 Total| Masked|  Masked VL=0| Masked VL!=0|
vaaddu.vv              100      51            14            37
vaaddu.vx              100      46            11            35
vaadd.vv               100      59            20            39
vaadd.vx               100      45            16            29
vadc.vim               100       0             0             0
vadc.vvm                77       0             0             0
vadc.vxm               100       0             0             0
vadd.vi                100      49            15            34
vadd.vv                100      53            12            41
vadd.vx                100      46             8            38
vand.vi                100      46            12            34
vand.vv                100      49            14            35
vand.vx                100      49            15            34
vasubu.vv              100      54            18            36
vasubu.vx              100      48            18            30
vasub.vv               100      41            10            31
vasub.vx               100      44            10            34
vcompress.vm             5       0             0             0
vcpop.m                100      48            14            34
vdivu.vv               100      48            12            36
vdivu.vx               100      47            18            29
vdiv.vv                100      48            12            36
vdiv.vx                100      50            13            37
vfadd.vf               100      51            15            36
vfadd.vv               100      47            18            29
vfclass.v              100      50            17            33
vfcvt.f.xu.v           100      53            18            35
vfcvt.f.x.v            100      48            14            34
vfcvt.rtz.x.f.v        100      48            14            34
vfcvt.rtz.xu.f.v       100      45            20            25
vfcvt.x.f.v            100      49            17            32
vfcvt.xu.f.v           100      55            17            38
vfdiv.vf               100      44            14            30
vfdiv.vv               100      52            17            35
vfirst.m               100      49            15            34
vfmacc.vf              100      53            17            36
vfmacc.vv              100      51            17            34
vfmadd.vf              100      48            14            34
vfmadd.vv              100      52            12            40
vfmax.vf               100      51            15            36
vfmax.vv               100      52            17            35
vfmerge.vfm            100       0             0             0
vfmin.vf               100      46            16            30
vfmin.vv               100      45            13            32
vfmsac.vf              100      50            13            37
vfmsac.vv              100      39             9            30
vfmsub.vf              100      50            10            40
vfmsub.vv              100      41            15            26
vfmul.vf               100      45            14            31
vfmul.vv               100      51            12            39
vfmv.f.s               100       0             0             0
vfmv.s.f               100       0             0             0
vfmv.v.f               100       0             0             0
vfncvt.f.f.w           100      48            12            36
vfncvt.f.xu.w          100      50            12            38
vfncvt.f.x.w           100      48            10            38
vfncvt.rod.f.f.w       100      45             9            36
vfncvt.rtz.x.f.w       100      47            11            36
vfncvt.rtz.xu.f.w      100      50            12            38
vfncvt.x.f.w           100      46            15            31
vfncvt.xu.f.w          100      47            16            31
vfnmacc.vf             100      47            15            32
vfnmacc.vv             100      41            11            30
vfnmadd.vf             100      50            13            37
vfnmadd.vv             100      49             8            41
vfnmsac.vf             100      51            16            35
vfnmsac.vv             100      42            13            29
vfnmsub.vf             100      48            15            33
vfnmsub.vv             100      58            21            37
vfrdiv.vf              100      50            14            36
vfrec7.v               100      53            16            37
vfredmax.vs            100      59            16            43
vfredmin.vs            100      64            20            44
vfredosum.vs           100      70            27            43
vfredusum.vs           100      52            18            34
vfrsqrt7.v             100      47             9            38
vfrsub.vf              100      52            13            39
vfsgnjn.vf             100      48            17            31
vfsgnjn.vv             100      49            17            32
vfsgnj.vf                9       5             1             4
vfsgnj.vv                1       1             0             1
vfsgnjx.vf              66      27             8            19
vfsgnjx.vv              11       6             2             4
vfslide1down.vf        100      41            12            29
vfslide1up.vf          100      50            13            37
vfsqrt.v               100      46            15            31
vfsub.vf               100      51            11            40
vfsub.vv               100      44            12            32
vfwadd.vf              100      48             9            39
vfwadd.vv              100      48            12            36
vfwadd.wf              100      42            11            31
vfwadd.wv              100      44            10            34
vfwcvt.f.f.v           100      47            11            36
vfwcvt.f.xu.v          100      47            12            35
vfwcvt.f.x.v           100      50            15            35
vfwcvt.rtz.x.f.v       100      47            14            33
vfwcvt.rtz.xu.f.v      100      45            13            32
vfwcvt.x.f.v           100      51            12            39
vfwcvt.xu.f.v          100      52            14            38
vfwmacc.vf             100      52            12            40
vfwmacc.vv             100      47            13            34
vfwmsac.vf             100      49            12            37
vfwmsac.vv             100      56            16            40
vfwmul.vf              100      51            12            39
vfwmul.vv              100      49            12            37
vfwnmacc.vf            100      45             8            37
vfwnmacc.vv            100      48            14            34
vfwnmsac.vf            100      46            12            34
vfwnmsac.vv            100      49            13            36
vfwredosum.vs          100      52            14            38
vfwredusum.vs          100      45            14            31
vfwsub.vf              100      49            14            35
vfwsub.vv              100      50            12            38
vfwsub.wf              100      52            15            37
vfwsub.wv              100      49            13            36
vid.v                  100      48            12            36
viota.m                100      49            12            37
vmacc.vv               100      45            11            34
vmacc.vx               100      53            10            43
vmadc.vi               100       0             0             0
vmadc.vim               97       0             0             0
vmadc.vv               100       0             0             0
vmadc.vvm              100       0             0             0
vmadc.vx                13       0             0             0
vmadc.vxm               96       0             0             0
vmadd.vv               100      51            15            36
vmadd.vx               100      50            12            38
vmand.mm               100       0             0             0
vmandn.mm              100       0             0             0
vmaxu.vv               100      49            13            36
vmaxu.vx               100      46             9            37
vmax.vv                100      47            15            32
vmax.vx                100      48            12            36
vmerge.vim             100       0             0             0
vmerge.vvm             100       0             0             0
vmerge.vxm             100       0             0             0
vmfeq.vf                 9       4             2             2
vmfeq.vv                 8       5             2             3
vmfge.vf                 8       4             2             2
vmfgt.vf                 9       5             0             5
vmfle.vf                11       3             1             2
vmfle.vv                 8       5             2             3
vmflt.vf                10       7             3             4
vmflt.vv                 8       5             1             4
vmfne.vf                 8       3             0             3
vmfne.vv                 8       4             1             3
vminu.vv               100      46            14            32
vminu.vx               100      50            12            38
vmin.vv                100      50            15            35
vmin.vx                100      52            15            37
vmnand.mm              100       0             0             0
vmnor.mm               100       0             0             0
vmor.mm                100       0             0             0
vmorn.mm               100       0             0             0
vmsbc.vv               100       0             0             0
vmsbc.vvm              100       0             0             0
vmsbc.vx               100       0             0             0
vmsbc.vxm              100       0             0             0
vmsbf.m                100      49            17            32
vmseq.vi               100      47            11            36
vmseq.vv                91      38            11            27
vmseq.vx               100      51            14            37
vmsgtu.vi               76      33             8            25
vmsgtu.vx              100      51            13            38
vmsgt.vi               100      43            13            30
vmsgt.vx                63      31             9            22
vmsif.m                100      50            13            37
vmsleu.vi              100      45            11            34
vmsleu.vv              100      47            14            33
vmsleu.vx              100      50            13            37
vmsle.vi               100      46            12            34
vmsle.vv               100      51            13            38
vmsle.vx               100      45            12            33
vmsltu.vv              100      51            15            36
vmsltu.vx              100      56            15            41
vmslt.vv                62      29             7            22
vmslt.vx                39      19             5            14
vmsne.vi               100      48            12            36
vmsne.vv                75      28             8            20
vmsne.vx               100      54            15            39
vmsof.m                100      47            13            34
vmulhsu.vv             100      49            13            36
vmulhsu.vx             100      51            11            40
vmulhu.vv              100      48            16            32
vmulhu.vx              100      44            14            30
vmulh.vv               100      44            13            31
vmulh.vx               100      51            15            36
vmul.vv                100      43            14            29
vmul.vx                100      51            14            37
vmv1r.v                100       0             0             0
vmv2r.v                100       0             0             0
vmv4r.v                100       0             0             0
vmv8r.v                100       0             0             0
vmv.s.x                100       0             0             0
vmv.v.i                104       0             0             0
vmv.v.v               1260       0             0             0
vmv.v.x                100       0             0             0
vmv.x.s                100       0             0             0
vmxnor.mm              100       0             0             0
vmxor.mm               100       0             0             0
vnclipu.wi             100      51            13            38
vnclipu.wv             100      50            13            37
vnclipu.wx             100      38            11            27
vnclip.wi              100      40             9            31
vnclip.wv              100      44            11            33
vnclip.wx              100      49            17            32
vnmsac.vv              100      44             6            38
vnmsac.vx              100      48            16            32
vnmsub.vv              100      46            14            32
vnmsub.vx              100      50            13            37
vnsra.wi               100      48            13            35
vnsra.wv               100      45            12            33
vnsra.wx               100      51            14            37
vnsrl.wi               100      43            14            29
vnsrl.wv               100      40             9            31
vnsrl.wx               100      39            10            29
vor.vi                 100      52            16            36
vor.vv                 100      44            12            32
vor.vx                 100      51            11            40
vredand.vs             100      66            16            50
vredmaxu.vs            100      69            20            49
vredmax.vs             100      42            12            30
vredminu.vs            100      50            14            36
vredmin.vs             100      49            12            37
vredor.vs              100      71            20            51
vredsum.vs             100      40            13            27
vredxor.vs             100      47            11            36
vremu.vv               100      57            14            43
vremu.vx               100      50            13            37
vrem.vv                100      47            14            33
vrem.vx                100      49            14            35
vrgatherei16.vv        100      49            13            36
vrgather.vi            100      49            12            37
vrgather.vv            100      47            11            36
vrgather.vx            100      47            10            37
vrsub.vi               100      46            19            27
vrsub.vx               100      48            15            33
vsaddu.vi              100      50            13            37
vsaddu.vv              100      51            16            35
vsaddu.vx              100      49            13            36
vsadd.vi               100      46            12            34
vsadd.vv               100      47            15            32
vsadd.vx               100      46            15            31
vsbc.vvm               100       0             0             0
vsbc.vxm               100       0             0             0
vsetivli               100       0             0             0
vsetvl                 101       0             0             0
vsetvli                101       0             0             0
vsext.vf2              100      48            14            34
vsext.vf4              100      52            14            38
vsext.vf8              100      38            14            24
vslide1down.vx         100      52            14            38
vslide1up.vx          2042      50            13            37
vslidedown.vi          100      53            18            35
vslidedown.vx          100      47            14            33
vslideup.vi            100      47            13            34
vslideup.vx            100      47            13            34
vsll.vi                100      53            14            39
vsll.vv                100      49            12            37
vsll.vx                100      48            11            37
vsmul.vv               100      52            14            38
vsmul.vx               100      51            12            39
vsra.vi                100      48            14            34
vsra.vv                100      50            14            36
vsra.vx                100      46            13            33
vsrl.vi                100      48            14            34
vsrl.vv                100      45            14            31
vsrl.vx                100      51            14            37
vssra.vi               100      49            14            35
vssra.vv               100      47            15            32
vssra.vx               100      47             9            38
vssrl.vi               100      48            13            35
vssrl.vv               100      50            11            39
vssrl.vx               100      48            14            34
vssubu.vv              100      46            12            34
vssubu.vx              100      56            15            41
vssub.vv               100      50            16            34
vssub.vx               100      49            14            35
vsub.vv                100      51            18            33
vsub.vx                100      49            13            36
vwaddu.vv              100      46            15            31
vwaddu.vx              100      51            18            33
vwaddu.wv              100      46            12            34
vwaddu.wx              100      48            11            37
vwadd.vv               100      46            15            31
vwadd.vx               100      46             9            37
vwadd.wv               100      45            11            34
vwadd.wx               100      48            15            33
vwmaccsu.vv            100      47            12            35
vwmaccsu.vx            100      47            14            33
vwmaccus.vx            100      46            10            36
vwmaccu.vv             100      48            13            35
vwmaccu.vx             100      44            10            34
vwmacc.vv              100      45            12            33
vwmacc.vx              100      47            12            35
vwmulsu.vv             100      47            13            34
vwmulsu.vx             100      47            14            33
vwmulu.vv              100      45            12            33
vwmulu.vx              100      44             8            36
vwmul.vv               100      46            13            33
vwmul.vx               100      45             6            39
vwredsumu.vs           100      67            17            50
vwredsum.vs            100      52            12            40
vwsubu.vv              100      47            15            32
vwsubu.vx              100      53            14            39
vwsubu.wv              100      47            14            33
vwsubu.wx              100      46            11            35
vwsub.vv               100      58            20            38
vwsub.vx               100      50            12            38
vwsub.wv               100      44            10            34
vwsub.wx               100      46            11            35
vxor.vi                100      52            15            37
vxor.vv                100      46            12            34
vxor.vx                100      49            13            36
vzext.vf2              100      47            15            32
vzext.vf4              100      52            14            38
vzext.vf8              100      50            18            32{noformat}","12/Aug/22 3:41 AM;5d4a0f85af16f20ceaf5442e;[~accountid:5f94696c29bd8a006f94f0e1], Thanks for the report. There’s two things I want to ask. 
1. Which outline did you run to get this result?

2. Are those failure RTL’s or VTG’s bug?","12/Aug/22 3:56 AM;6065017e90e3950069cf01c5;If those failure are RTL bugs, [~accountid:5f94696c29bd8a006f94f0e1] can you file at least one MAL bug ticket  for the vector accumulator assertion ?

And we need to look at the other ones to see if bug filing are required or not.","12/Aug/22 4:00 AM;5f94696c29bd8a006f94f0e1;[~accountid:5d4a0f85af16f20ceaf5442e], per your question:

# basically, I use {{vtg-tgv-tests.outline}} for the regression
## set {{mask = 7}} for both P670 and coreip_u8_minimal_vector_vfp16 tests
## set {{mask = 2}} for Zero-mask test (coreip_u8_minimal_vector)
# We are checking those failure cases; since we enable Spike cosim, I think the failure cases might not relate to VTG(?)
## Many failed cases are due to assertion failure; some are _write data mismatch_ between DUT and Cosim.



BTW, besides checking those failed cases, I can rerun the regression without manual update {{riscv-vector-tests}} submodule to make sure the problem is not related to VTG.","12/Aug/22 7:30 AM;5f94696c29bd8a006f94f0e1;Hi [~accountid:6065017e90e3950069cf01c5], [~accountid:5d4a0f85af16f20ceaf5442e], I rerun the regression without updating {{riscv-vector-tests}} submodule, and vector floating point “compare” instructions encounter {{Accumulator ready set twice}} assert error.

Has filed a Jira ([MAL-2381|https://sifive.atlassian.net/browse/MAL-2381]) to Andrew.

Regression result: Fail/Total = 45/1276 (was 89/1276). 

It’s weird that in the last regression run, the vector {{integer}} comparison instructions are passed; however, in the previous run (with updated VTG), vector integer compare instructions are failed.

One possible reason is that with an updated VTG environment and the `number of tests = 100` has more chance to hit RTL bugs.","17/Aug/22 6:52 PM;5f94696c29bd8a006f94f0e1;{{2022-08-18}} 

u8_minimal_vector ({{u8_minimal_vector.json}}) regression (SFC build)

*Note: we manually update VTG environment ({{riscv-vector-tests}} submodule)

*Summary*: Failed/Total = {{7 / 1276}}

git hash: accd538ff7dfc5999dfbb445b4a46d3fdef8f85c

OUTLINE: vtg-tgv-tests.outline

* enable_masking = 1
* flmul = 0
* num_of_tests_gen = 100
* mask = 2 (zero mask)



*Failed Tests*

{noformat}|                                                                                      name   |                   config   |   bucket |
|---------------------------------------------------------------------------------------------|----------------------------|----------|
| regr_rerun/rerun_failures.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector   |   1      |
| regr_rerun/rerun_failures.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmv1r.v        | coreip_u8_minimal_vector   |   1      |
| regr_rerun/rerun_failures.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmv4r.v        | coreip_u8_minimal_vector   |   2      |
| regr_rerun/rerun_failures.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmv8r.v        | coreip_u8_minimal_vector   |   3      |
| regr_rerun/rerun_failures.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector   |   1      |
| regr_rerun/rerun_failures.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmv1r.v        | coreip_u8_minimal_vector   |   1      |
| regr_rerun/rerun_failures.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_u8_minimal_vector   |   1      |


  Bucket  Failure                                          Count
--------  ---------------------------------------------  -------
       1  COSIM-ERROR# COSIM VS RTL WRDATA MISMATCH            5
       2  Error: Instruction queue oldest entry stalled        1
       3  COSIM-ERROR# COSIM VS RTL WRDST SIZE MISMATCH        1{noformat}

Note: some instructions ignore “mask value” or no mask form (<inst> rd, rs2, rs1, {{v0.t}})

*Test counts for each instruction*

{noformat}(1)                         (2)        (3)        (4)        (5)        (6)
Inst                     Total|    Masked|  (3) VL=0| (3) VL!=0|  (5)/(2) %
vaaddu.vv                   100         51         14         37         37
vaaddu.vx                   100         46         11         35         35
vaadd.vv                    100         59         20         39         39
vaadd.vx                    100         45         16         29         29
vadc.vim                    100          0          0          0          0
vadc.vvm                     77          0          0          0          0
vadc.vxm                    100          0          0          0          0
vadd.vi                     100         49         15         34         34
vadd.vv                     100         53         12         41         41
vadd.vx                     100         46          8         38         38
vand.vi                     100         46         12         34         34
vand.vv                     100         49         14         35         35
vand.vx                     100         49         15         34         34
vasubu.vv                   100         54         18         36         36
vasubu.vx                   100         48         18         30         30
vasub.vv                    100         41         10         31         31
vasub.vx                    100         44         10         34         34
vcompress.vm                  5          0          0          0          0
vcpop.m                     100         48         14         34         34
vdivu.vv                    100         48         12         36         36
vdivu.vx                    100         47         18         29         29
vdiv.vv                     100         48         12         36         36
vdiv.vx                     100         50         13         37         37
vfadd.vf                    100         51         15         36         36
vfadd.vv                    100         47         18         29         29
vfclass.v                   100         50         17         33         33
vfcvt.f.xu.v                100         53         18         35         35
vfcvt.f.x.v                 100         48         14         34         34
vfcvt.rtz.x.f.v             100         48         14         34         34
vfcvt.rtz.xu.f.v            100         45         20         25         25
vfcvt.x.f.v                 100         49         17         32         32
vfcvt.xu.f.v                100         55         17         38         38
vfdiv.vf                    100         44         14         30         30
vfdiv.vv                    100         52         17         35         35
vfirst.m                    100         49         15         34         34
vfmacc.vf                   100         53         17         36         36
vfmacc.vv                   100         51         17         34         34
vfmadd.vf                   100         48         14         34         34
vfmadd.vv                   100         52         12         40         40
vfmax.vf                    100         51         15         36         36
vfmax.vv                    100         52         17         35         35
vfmerge.vfm                 100          0          0          0          0
vfmin.vf                    100         46         16         30         30
vfmin.vv                    100         45         13         32         32
vfmsac.vf                   100         50         13         37         37
vfmsac.vv                   100         39          9         30         30
vfmsub.vf                   100         50         10         40         40
vfmsub.vv                   100         41         15         26         26
vfmul.vf                    100         45         14         31         31
vfmul.vv                    100         51         12         39         39
vfmv.f.s                    100          0          0          0          0
vfmv.s.f                    100          0          0          0          0
vfmv.v.f                    100          0          0          0          0
vfncvt.f.f.w                100         48         12         36         36
vfncvt.f.xu.w               100         50         12         38         38
vfncvt.f.x.w                100         48         10         38         38
vfncvt.rod.f.f.w            100         46          9         37         37
vfncvt.rtz.x.f.w            100         47         11         36         36
vfncvt.rtz.xu.f.w           100         50         12         38         38
vfncvt.x.f.w                100         46         15         31         31
vfncvt.xu.f.w               100         47         16         31         31
vfnmacc.vf                  100         47         15         32         32
vfnmacc.vv                  100         41         11         30         30
vfnmadd.vf                  100         50         13         37         37
vfnmadd.vv                  100         49          8         41         41
vfnmsac.vf                  100         51         16         35         35
vfnmsac.vv                  100         42         13         29         29
vfnmsub.vf                  100         48         15         33         33
vfnmsub.vv                  100         58         21         37         37
vfrdiv.vf                   100         50         14         36         36
vfrec7.v                    100         53         16         37         37
vfredmax.vs                 100         59         16         43         43
vfredmin.vs                 100         64         20         44         44
vfredosum.vs                100         70         27         43         43
vfredusum.vs                100         52         18         34         34
vfrsqrt7.v                  100         47          9         38         38
vfrsub.vf                   100         52         13         39         39
vfsgnjn.vf                  100         48         17         31         31
vfsgnjn.vv                  100         49         17         32         32
vfsgnj.vf                     9          5          1          4         44
vfsgnj.vv                     1          1          0          1        100
vfsgnjx.vf                   66         27          8         19         28
vfsgnjx.vv                   11          6          2          4         36
vfslide1down.vf             100         41         12         29         29
vfslide1up.vf               100         50         13         37         37
vfsqrt.v                    100         46         15         31         31
vfsub.vf                    100         51         11         40         40
vfsub.vv                    100         44         12         32         32
vfwadd.vf                   100         48          9         39         39
vfwadd.vv                   100         48         12         36         36
vfwadd.wf                   100         42         11         31         31
vfwadd.wv                   100         44         10         34         34
vfwcvt.f.f.v                100         47         11         36         36
vfwcvt.f.xu.v               100         47         12         35         35
vfwcvt.f.x.v                100         50         15         35         35
vfwcvt.rtz.x.f.v            100         47         14         33         33
vfwcvt.rtz.xu.f.v           100         45         13         32         32
vfwcvt.x.f.v                100         51         12         39         39
vfwcvt.xu.f.v               100         52         14         38         38
vfwmacc.vf                  100         52         12         40         40
vfwmacc.vv                  100         47         13         34         34
vfwmsac.vf                  100         49         12         37         37
vfwmsac.vv                  100         56         16         40         40
vfwmul.vf                   100         51         12         39         39
vfwmul.vv                   100         49         12         37         37
vfwnmacc.vf                 100         45          8         37         37
vfwnmacc.vv                 100         48         14         34         34
vfwnmsac.vf                 100         46         12         34         34
vfwnmsac.vv                 100         49         13         36         36
vfwredosum.vs               100         52         14         38         38
vfwredusum.vs               100         45         14         31         31
vfwsub.vf                   100         49         14         35         35
vfwsub.vv                   100         50         12         38         38
vfwsub.wf                   100         52         15         37         37
vfwsub.wv                   100         49         13         36         36
vid.v                       100         48         12         36         36
viota.m                     100         49         12         37         37
vmacc.vv                    100         45         11         34         34
vmacc.vx                    100         53         10         43         43
vmadc.vi                    100          0          0          0          0
vmadc.vim                   100          0          0          0          0
vmadc.vv                    100          0          0          0          0
vmadc.vvm                   100          0          0          0          0
vmadc.vx                    100          0          0          0          0
vmadc.vxm                   100          0          0          0          0
vmadd.vv                    100         51         15         36         36
vmadd.vx                    100         50         12         38         38
vmand.mm                    100          0          0          0          0
vmandn.mm                   100          0          0          0          0
vmaxu.vv                    100         49         13         36         36
vmaxu.vx                    100         46          9         37         37
vmax.vv                     100         47         15         32         32
vmax.vx                     100         48         12         36         36
vmerge.vim                  100          0          0          0          0
vmerge.vvm                  100          0          0          0          0
vmerge.vxm                  100          0          0          0          0
vmfeq.vf                    100         51         18         33         33
vmfeq.vv                    100         39         14         25         25
vmfge.vf                    100         44         14         30         30
vmfge.vv                      0          0          0          0          0
vmfgt.vf                    100         48         10         38         38
vmfgt.vv                      0          0          0          0          0
vmfle.vf                    100         39         16         23         23
vmfle.vv                    100         46         11         35         35
vmflt.vf                    100         46         15         31         31
vmflt.vv                    100         49         13         36         36
vmfne.vf                    100         42         15         27         27
vmfne.vv                    100         46         15         31         31
vminu.vv                    100         46         14         32         32
vminu.vx                    100         50         12         38         38
vmin.vv                     100         50         15         35         35
vmin.vx                     100         52         15         37         37
vmnand.mm                   100          0          0          0          0
vmnor.mm                    100          0          0          0          0
vmor.mm                     100          0          0          0          0
vmorn.mm                    100          0          0          0          0
vmsbc.vv                    100          0          0          0          0
vmsbc.vvm                   100          0          0          0          0
vmsbc.vx                    100          0          0          0          0
vmsbc.vxm                   100          0          0          0          0
vmsbf.m                     100         49         17         32         32
vmseq.vi                    100         47         11         36         36
vmseq.vv                    100         43         11         32         32
vmseq.vx                    100         51         14         37         37
vmsgtu.vi                   100         48         14         34         34
vmsgtu.vx                   100         51         13         38         38
vmsgt.vi                    100         43         13         30         30
vmsgt.vx                    100         50         14         36         36
vmsif.m                     100         50         13         37         37
vmsleu.vi                   100         45         11         34         34
vmsleu.vv                   100         47         14         33         33
vmsleu.vx                   100         50         13         37         37
vmsle.vi                    100         46         12         34         34
vmsle.vv                    100         51         13         38         38
vmsle.vx                    100         45         12         33         33
vmsltu.vv                   100         51         15         36         36
vmsltu.vx                   100         56         15         41         41
vmslt.vv                    100         43         13         30         30
vmslt.vx                    100         44         12         32         32
vmsne.vi                    100         48         12         36         36
vmsne.vv                    100         40         11         29         29
vmsne.vx                    100         54         15         39         39
vmsof.m                     100         47         13         34         34
vmulhsu.vv                  100         49         13         36         36
vmulhsu.vx                  100         51         11         40         40
vmulhu.vv                   100         48         16         32         32
vmulhu.vx                   100         44         14         30         30
vmulh.vv                    100         44         13         31         31
vmulh.vx                    100         51         15         36         36
vmul.vv                     100         43         14         29         29
vmul.vx                     100         51         14         37         37
vmv1r.v                      79          0          0          0          0
vmv2r.v                     100          0          0          0          0
vmv4r.v                       6          0          0          0          0
vmv8r.v                      46          0          0          0          0
vmv.s.x                     100          0          0          0          0
vmv.v.i                     104          0          0          0          0
vmv.v.v                    1260          0          0          0          0
vmv.v.x                     100          0          0          0          0
vmv.x.s                     100          0          0          0          0
vmxnor.mm                   100          0          0          0          0
vmxor.mm                    100          0          0          0          0
vnclipu.wi                  100         51         13         38         38
vnclipu.wv                  100         50         13         37         37
vnclipu.wx                  100         38         11         27         27
vnclip.wi                   100         40          9         31         31
vnclip.wv                   100         44         11         33         33
vnclip.wx                   100         49         17         32         32
vnmsac.vv                   100         44          6         38         38
vnmsac.vx                   100         48         16         32         32
vnmsub.vv                   100         46         14         32         32
vnmsub.vx                   100         50         13         37         37
vnsra.wi                    100         48         13         35         35
vnsra.wv                    100         45         12         33         33
vnsra.wx                    100         51         14         37         37
vnsrl.wi                    100         43         14         29         29
vnsrl.wv                    100         40          9         31         31
vnsrl.wx                    100         39         10         29         29
vor.vi                      100         52         16         36         36
vor.vv                      100         44         12         32         32
vor.vx                      100         51         11         40         40
vredand.vs                  100         66         16         50         50
vredmaxu.vs                 100         69         20         49         49
vredmax.vs                  100         42         12         30         30
vredminu.vs                 100         67         18         49         49
vredmin.vs                  100         49         12         37         37
vredor.vs                   100         71         20         51         51
vredsum.vs                  100         40         13         27         27
vredxor.vs                  100         47         11         36         36
vremu.vv                    100         57         14         43         43
vremu.vx                    100         50         13         37         37
vrem.vv                     100         47         14         33         33
vrem.vx                     100         49         14         35         35
vrgatherei16.vv             100         49         13         36         36
vrgather.vi                 100         49         12         37         37
vrgather.vv                 100         47         11         36         36
vrgather.vx                 100         47         10         37         37
vrsub.vi                    100         46         19         27         27
vrsub.vx                    100         48         15         33         33
vsaddu.vi                   100         50         13         37         37
vsaddu.vv                   100         51         16         35         35
vsaddu.vx                   100         49         13         36         36
vsadd.vi                    100         46         12         34         34
vsadd.vv                    100         47         15         32         32
vsadd.vx                    100         46         15         31         31
vsbc.vvm                    100          0          0          0          0
vsbc.vxm                    100          0          0          0          0
vsetivli                    100          0          0          0          0
vsetvl                      101          0          0          0          0
vsetvli                     101          0          0          0          0
vsext.vf2                   100         48         14         34         34
vsext.vf4                   100         52         14         38         38
vsext.vf8                   100         38         14         24         24
vslide1down.vx              100         52         14         38         38
vslide1up.vx               2042         50         13         37          1
vslidedown.vi               100         53         18         35         35
vslidedown.vx               100         47         14         33         33
vslideup.vi                 100         47         13         34         34
vslideup.vx                 100         47         13         34         34
vsll.vi                     100         53         14         39         39
vsll.vv                     100         49         12         37         37
vsll.vx                     100         48         11         37         37
vsmul.vv                    100         52         14         38         38
vsmul.vx                    100         51         12         39         39
vsra.vi                     100         48         14         34         34
vsra.vv                     100         50         14         36         36
vsra.vx                     100         46         13         33         33
vsrl.vi                     100         48         14         34         34
vsrl.vv                     100         45         14         31         31
vsrl.vx                     100         51         14         37         37
vssra.vi                    100         49         14         35         35
vssra.vv                    100         47         15         32         32
vssra.vx                    100         47          9         38         38
vssrl.vi                    100         48         13         35         35
vssrl.vv                    100         50         11         39         39
vssrl.vx                    100         48         14         34         34
vssubu.vv                   100         46         12         34         34
vssubu.vx                   100         56         15         41         41
vssub.vv                    100         50         16         34         34
vssub.vx                    100         49         14         35         35
vsub.vv                     100         51         18         33         33
vsub.vx                     100         49         13         36         36
vwaddu.vv                   100         46         15         31         31
vwaddu.vx                   100         51         18         33         33
vwaddu.wv                   100         46         12         34         34
vwaddu.wx                   100         48         11         37         37
vwadd.vv                    100         46         15         31         31
vwadd.vx                    100         46          9         37         37
vwadd.wv                    100         45         11         34         34
vwadd.wx                    100         48         15         33         33
vwmaccsu.vv                 100         47         12         35         35
vwmaccsu.vx                 100         47         14         33         33
vwmaccus.vx                 100         46         10         36         36
vwmaccu.vv                  100         48         13         35         35
vwmaccu.vx                  100         44         10         34         34
vwmacc.vv                   100         45         12         33         33
vwmacc.vx                   100         47         12         35         35
vwmulsu.vv                  100         47         13         34         34
vwmulsu.vx                  100         47         14         33         33
vwmulu.vv                   100         45         12         33         33
vwmulu.vx                   100         44          8         36         36
vwmul.vv                    100         46         13         33         33
vwmul.vx                    100         45          6         39         39
vwredsumu.vs                100         67         17         50         50
vwredsum.vs                 100         52         12         40         40
vwsubu.vv                   100         47         15         32         32
vwsubu.vx                   100         53         14         39         39
vwsubu.wv                   100         47         14         33         33
vwsubu.wx                   100         46         11         35         35
vwsub.vv                    100         58         20         38         38
vwsub.vx                    100         50         12         38         38
vwsub.wv                    100         44         10         34         34
vwsub.wx                    100         46         11         35         35
vxor.vi                     100         52         15         37         37
vxor.vv                     100         46         12         34         34
vxor.vx                     100         49         13         36         36
vzext.vf2                   100         47         15         32         32
vzext.vf4                   100         52         14         38         38
vzext.vf8                   100         50         18         32         32{noformat}","24/Aug/22 8:27 PM;5f94696c29bd8a006f94f0e1;{{2022-08-25}} 

u8_minimal_vector ({{u8_minimal_vector.json}}) regression (SFC build)

*Note: we manually update VTG environment ({{riscv-vector-tests}} submodule)

git branch: {{MAL2441_fix_vmvr_vl_override}} ([PR|https://github.com/sifive/federation/pull/25491]) with rebased to master

Summary: Failed/Total = 2 / 1276

Test Cast Count for each RVV instruction:

* Note: {{vmfge.vv}} and {{vmfgt.vv}} are pseudo instructions, so the “number of test cases” is zero for each of them.



*# of test case for each RVV instruction*

{noformat}(1)                         (2)        (3)        (4)        (5)        (6)
Inst                     Total|    Masked|  (3) VL=0| (3) VL!=0|  (5)/(2) %
vaaddu.vv                   100         40         12         28         28
vaaddu.vx                   100         50         13         37         37
vaadd.vv                    100         34         10         24         24
vaadd.vx                    100         40         11         29         29
vadc.vim                    100          0          0          0          0
vadc.vvm                    100          0          0          0          0
vadc.vxm                    100          0          0          0          0
vadd.vi                     100         44         13         31         31
vadd.vv                     100         46         14         32         32
vadd.vx                     100         50         13         37         37
vand.vi                     100         37         11         26         26
vand.vv                     100         38          9         29         29
vand.vx                     100         43         14         29         29
vasubu.vv                   100         34          5         29         29
vasubu.vx                   100         40          6         34         34
vasub.vv                    100         39         11         28         28
vasub.vx                    100         47         15         32         32
vcompress.vm                100          0          0          0          0
vcpop.m                     100         49         11         38         38
vdivu.vv                    100         31         10         21         21
vdivu.vx                    100         39         11         28         28
vdiv.vv                     100         46         10         36         36
vdiv.vx                     100         45         10         35         35
vfadd.vf                    100         45         15         30         30
vfadd.vv                    100         44         10         34         34
vfclass.v                   100         47         12         35         35
vfcvt.f.xu.v                100         42         10         32         32
vfcvt.f.x.v                 100         43          8         35         35
vfcvt.rtz.x.f.v             100         40          8         32         32
vfcvt.rtz.xu.f.v            100         45         15         30         30
vfcvt.x.f.v                 100         41         14         27         27
vfcvt.xu.f.v                100         44          8         36         36
vfdiv.vf                    100         50         13         37         37
vfdiv.vv                    100         35          9         26         26
vfirst.m                    100         48         14         34         34
vfmacc.vf                   100         55         12         43         43
vfmacc.vv                   100         29          8         21         21
vfmadd.vf                   100         48         13         35         35
vfmadd.vv                   100         35          9         26         26
vfmax.vf                    100         49         16         33         33
vfmax.vv                    100         41         10         31         31
vfmerge.vfm                 100          0          0          0          0
vfmin.vf                    100         49         11         38         38
vfmin.vv                    100         39          8         31         31
vfmsac.vf                   100         44         11         33         33
vfmsac.vv                   100         47          5         42         42
vfmsub.vf                   100         47         11         36         36
vfmsub.vv                   100         45         15         30         30
vfmul.vf                    100         37         10         27         27
vfmul.vv                    100         36         11         25         25
vfmv.f.s                    100          0          0          0          0
vfmv.s.f                    100          0          0          0          0
vfmv.v.f                    100          0          0          0          0
vfncvt.f.f.w                100         40         13         27         27
vfncvt.f.xu.w               100         39          9         30         30
vfncvt.f.x.w                100         38         13         25         25
vfncvt.rod.f.f.w            100         29          6         23         23
vfncvt.rtz.x.f.w            100         35          8         27         27
vfncvt.rtz.xu.f.w           100         38         12         26         26
vfncvt.x.f.w                100         44          9         35         35
vfncvt.xu.f.w               100         31          6         25         25
vfnmacc.vf                  100         46         12         34         34
vfnmacc.vv                  100         40          9         31         31
vfnmadd.vf                  100         48         12         36         36
vfnmadd.vv                  100         43          7         36         36
vfnmsac.vf                  100         42         10         32         32
vfnmsac.vv                  100         36          7         29         29
vfnmsub.vf                  100         47         13         34         34
vfnmsub.vv                  100         38         15         23         23
vfrdiv.vf                   100         48         14         34         34
vfrec7.v                    100         48         12         36         36
vfredmax.vs                 100         43         13         30         30
vfredmin.vs                 100         48         13         35         35
vfredosum.vs                100         62         17         45         45
vfredusum.vs                100         43         12         31         31
vfrsqrt7.v                  100         44         13         31         31
vfrsub.vf                   100         50         14         36         36
vfsgnjn.vf                  100         45         11         34         34
vfsgnjn.vv                  100         42         11         31         31
vfsgnj.vf                    14          4          1          3         21
vfsgnj.vv                    12          3          2          1          8
vfsgnjx.vf                   28         13          3         10         35
vfsgnjx.vv                    0          0          0          0          0
vfslide1down.vf             100         41         10         31         31
vfslide1up.vf               100         41         12         29         29
vfsqrt.v                    100         46          8         38         38
vfsub.vf                    100         45         13         32         32
vfsub.vv                    100         35          9         26         26
vfwadd.vf                   100         42          8         34         34
vfwadd.vv                    28          8          1          7         25
vfwadd.wf                   100         38         11         27         27
vfwadd.wv                    39         12          4          8         20
vfwcvt.f.f.v                100         31          8         23         23
vfwcvt.f.xu.v               100         42         10         32         32
vfwcvt.f.x.v                100         38         10         28         28
vfwcvt.rtz.x.f.v            100         37         10         27         27
vfwcvt.rtz.xu.f.v           100         39         16         23         23
vfwcvt.x.f.v                100         36          9         27         27
vfwcvt.xu.f.v               100         43         10         33         33
vfwmacc.vf                  100         39         10         29         29
vfwmacc.vv                   28         11          6          5         17
vfwmsac.vf                  100         31          8         23         23
vfwmsac.vv                   54         20          5         15         27
vfwmul.vf                   100         38         11         27         27
vfwmul.vv                   100         38          5         33         33
vfwnmacc.vf                 100         41          7         34         34
vfwnmacc.vv                 100         35          9         26         26
vfwnmsac.vf                 100         41         12         29         29
vfwnmsac.vv                 100         41         11         30         30
vfwredosum.vs               100         38          8         30         30
vfwredusum.vs               100         44         13         31         31
vfwsub.vf                   100         39         12         27         27
vfwsub.vv                     6          3          0          3         50
vfwsub.wf                   100         37         10         27         27
vfwsub.wv                    24         12          2         10         41
vid.v                       100         43         12         31         31
viota.m                     100         50         11         39         39
vmacc.vv                    100         37         10         27         27
vmacc.vx                    100         48         14         34         34
vmadc.vi                    100          0          0          0          0
vmadc.vim                   100          0          0          0          0
vmadc.vv                    100          0          0          0          0
vmadc.vvm                    23          0          0          0          0
vmadc.vx                    100          0          0          0          0
vmadc.vxm                   100          0          0          0          0
vmadd.vv                    100         45         10         35         35
vmadd.vx                    100         42          9         33         33
vmand.mm                     42          0          0          0          0
vmandn.mm                   100          0          0          0          0
vmaxu.vv                    100         33          9         24         24
vmaxu.vx                    100         44         11         33         33
vmax.vv                     100         39         12         27         27
vmax.vx                     100         52         15         37         37
vmerge.vim                  100          0          0          0          0
vmerge.vvm                   35          0          0          0          0
vmerge.vxm                  100          0          0          0          0
vmfeq.vf                    100         43          7         36         36
vmfeq.vv                    100         34          7         27         27
vmfge.vf                    100         41         10         31         31
vmfge.vv                      0          0          0          0          0
vmfgt.vf                    100         36          6         30         30
vmfgt.vv                      0          0          0          0          0
vmfle.vf                    100         38         10         28         28
vmfle.vv                    100         39          9         30         30
vmflt.vf                    100         43         12         31         31
vmflt.vv                    100         32         12         20         20
vmfne.vf                    100         45         11         34         34
vmfne.vv                    100         33          6         27         27
vminu.vv                    100         33          8         25         25
vminu.vx                    100         46         12         34         34
vmin.vv                     100         32          7         25         25
vmin.vx                     100         37         11         26         26
vmnand.mm                     9          0          0          0          0
vmnor.mm                    100          0          0          0          0
vmor.mm                     100          0          0          0          0
vmorn.mm                    100          0          0          0          0
vmsbc.vv                     39          0          0          0          0
vmsbc.vvm                     0          0          0          0          0
vmsbc.vx                    100          0          0          0          0
vmsbc.vxm                   100          0          0          0          0
vmsbf.m                     100         53         14         39         39
vmseq.vi                    100         40          9         31         31
vmseq.vv                    100         38          7         31         31
vmseq.vx                    100         43         13         30         30
vmsgtu.vi                   100         41         14         27         27
vmsgtu.vx                   100         37         14         23         23
vmsgt.vi                    100         43         10         33         33
vmsgt.vx                    100         41         10         31         31
vmsif.m                     100         51         13         38         38
vmsleu.vi                   100         43         11         32         32
vmsleu.vv                   100         35          9         26         26
vmsleu.vx                   100         44         14         30         30
vmsle.vi                    100         48         10         38         38
vmsle.vv                     82         33         11         22         26
vmsle.vx                    100         45         14         31         31
vmsltu.vv                   100         40         12         28         28
vmsltu.vx                   100         41         12         29         29
vmslt.vv                    100         48         16         32         32
vmslt.vx                    100         46         12         34         34
vmsne.vi                    100         42         15         27         27
vmsne.vv                    100         36          5         31         31
vmsne.vx                    100         41          8         33         33
vmsof.m                     100         46         15         31         31
vmulhsu.vv                  100         37         12         25         25
vmulhsu.vx                  100         43          9         34         34
vmulhu.vv                   100         38         10         28         28
vmulhu.vx                   100         43         11         32         32
vmulh.vv                    100         43          8         35         35
vmulh.vx                    100         42         11         31         31
vmul.vv                     100         38          6         32         32
vmul.vx                     100         39          9         30         30
vmv1r.v                     100          0          0          0          0
vmv2r.v                     100          0          0          0          0
vmv4r.v                     100          0          0          0          0
vmv8r.v                     100          0          0          0          0
vmv.s.x                     100          0          0          0          0
vmv.v.i                     104          0          0          0          0
vmv.v.v                    4308          0          0          0          0
vmv.v.x                     100          0          0          0          0
vmv.x.s                     100          0          0          0          0
vmxnor.mm                   100          0          0          0          0
vmxor.mm                    100          0          0          0          0
vnclipu.wi                  100         35          9         26         26
vnclipu.wv                  100         31          7         24         24
vnclipu.wx                  100         30         10         20         20
vnclip.wi                   100         28          6         22         22
vnclip.wv                   100         25          6         19         19
vnclip.wx                   100         39         10         29         29
vnmsac.vv                   100         49         15         34         34
vnmsac.vx                   100         39          5         34         34
vnmsub.vv                   100         37          7         30         30
vnmsub.vx                   100         43         13         30         30
vnsra.wi                    100         36          8         28         28
vnsra.wv                    100         34          7         27         27
vnsra.wx                    100         38         10         28         28
vnsrl.wi                    100         34         13         21         21
vnsrl.wv                    100         35         11         24         24
vnsrl.wx                    100         34         15         19         19
vor.vi                      100         49          9         40         40
vor.vv                       10          4          0          4         40
vor.vx                      100         44          8         36         36
vredand.vs                  100         34         11         23         23
vredmaxu.vs                 100         65         18         47         47
vredmax.vs                  100         45         14         31         31
vredminu.vs                 100         71         15         56         56
vredmin.vs                  100         45         10         35         35
vredor.vs                   100         61         17         44         44
vredsum.vs                  100         68         16         52         52
vredxor.vs                  100         61         15         46         46
vremu.vv                    100         35          7         28         28
vremu.vx                    100         42         10         32         32
vrem.vv                     100         44         12         32         32
vrem.vx                     100         41         12         29         29
vrgatherei16.vv             100         39         11         28         28
vrgather.vi                 100         44         11         33         33
vrgather.vv                 100         40          9         31         31
vrgather.vx                 100         39         11         28         28
vrsub.vi                    100         35         14         21         21
vrsub.vx                    100         48         12         36         36
vsaddu.vi                   100         46         13         33         33
vsaddu.vv                   100         46         14         32         32
vsaddu.vx                   100         40         10         30         30
vsadd.vi                    100         50         15         35         35
vsadd.vv                    100         25          7         18         18
vsadd.vx                    100         35         10         25         25
vsbc.vvm                    100          0          0          0          0
vsbc.vxm                    100          0          0          0          0
vsetivli                    100          0          0          0          0
vsetvl                      101          0          0          0          0
vsetvli                     101          0          0          0          0
vsext.vf2                   100         46         13         33         33
vsext.vf4                   100         49         13         36         36
vsext.vf8                   100         49         14         35         35
vslide1down.vx              100         45         12         33         33
vslide1up.vx               5904         44          7         37          0
vslidedown.vi               100         49         13         36         36
vslidedown.vx               100         46         12         34         34
vslideup.vi                 100         47         12         35         35
vslideup.vx                 100         47         14         33         33
vsll.vi                     100         40         14         26         26
vsll.vv                     100         37         10         27         27
vsll.vx                     100         43         13         30         30
vsmul.vv                    100         40         11         29         29
vsmul.vx                    100         41         10         31         31
vsra.vi                     100         48          9         39         39
vsra.vv                     100         37          7         30         30
vsra.vx                     100         46         13         33         33
vsrl.vi                     100         46         12         34         34
vsrl.vv                     100         48          9         39         39
vsrl.vx                     100         42         12         30         30
vssra.vi                    100         48         12         36         36
vssra.vv                    100         41         13         28         28
vssra.vx                    100         48         14         34         34
vssrl.vi                    100         52         17         35         35
vssrl.vv                    100         33          7         26         26
vssrl.vx                    100         45          8         37         37
vssubu.vv                   100         36         11         25         25
vssubu.vx                   100         46         11         35         35
vssub.vv                    100         55         15         40         40
vssub.vx                    100         46         10         36         36
vsub.vv                     100         30          9         21         21
vsub.vx                     100         45         11         34         34
vwaddu.vv                   100         37          8         29         29
vwaddu.vx                   100         39         10         29         29
vwaddu.wv                    25          4          1          3         12
vwaddu.wx                   100         37         12         25         25
vwadd.vv                      6          4          1          3         50
vwadd.vx                    100         42         12         30         30
vwadd.wv                      9          4          0          4         44
vwadd.wx                    100         40          8         32         32
vwmaccsu.vv                  32         15          7          8         25
vwmaccsu.vx                 100         33         10         23         23
vwmaccus.vx                 100         34          9         25         25
vwmaccu.vv                  100         35          8         27         27
vwmaccu.vx                  100         43         11         32         32
vwmacc.vv                     0          0          0          0          0
vwmacc.vx                   100         37         12         25         25
vwmulsu.vv                   32         11          4          7         21
vwmulsu.vx                  100         37          8         29         29
vwmulu.vv                    19          7          1          6         31
vwmulu.vx                   100         33         12         21         21
vwmul.vv                      1          0          0          0          0
vwmul.vx                    100         41         11         30         30
vwredsumu.vs                100         70         13         57         57
vwredsum.vs                 100         62         13         49         49
vwsubu.vv                   100         40         10         30         30
vwsubu.vx                   100         37          8         29         29
vwsubu.wv                   100         26         12         14         14
vwsubu.wx                   100         38         11         27         27
vwsub.vv                      9          5          0          5         55
vwsub.vx                    100         41         13         28         28
vwsub.wv                    100         40          8         32         32
vwsub.wx                    100         42         12         30         30
vxor.vi                     100         44          9         35         35
vxor.vv                     100         37          7         30         30
vxor.vx                     100         44         12         32         32
vzext.vf2                   100         47         14         33         33
vzext.vf4                   100         51         12         39         39
vzext.vf8                    16          5          1          4         25{noformat}","25/Aug/22 12:53 AM;5f94696c29bd8a006f94f0e1;Note:

* run regression after [PR|https://github.com/sifive/federation/pull/25491] merged.
* increase #ofTestCase.","28/Aug/22 4:39 PM;5f94696c29bd8a006f94f0e1;{{2022-08-29}} 

git hash (master): 12e26bd2ba26a89b633ec25f34c3dfe2575b4792

* config: u8_minimal_vector ({{u8_minimal_vector.json}}) (MFC build)
* Manually update VTG environment ({{riscv-vector-tests}} submodule)

Summary: Failed/Total = 0 / 1276

Test Cast Count for each RVV instruction:

**

{noformat}(1)                         (2)        (3)        (4)        (5)        (6)
Inst                     Total|    Masked|  (3) VL=0| (3) VL!=0|  (5)/(2) %
vaaddu.vv                   500        225         38        187         37
vaaddu.vx                   500        260         45        215         43
vaadd.vv                    500        229         45        184         36
vaadd.vx                    500        325         38        287         57
vadc.vim                    500          0          0          0          0
vadc.vvm                    500          0          0          0          0
vadc.vxm                    500          0          0          0          0
vadd.vi                     500        239         52        187         37
vadd.vv                     500        332         34        298         59
vadd.vx                     500        238         51        187         37
vand.vi                     500        322         31        291         58
vand.vv                     500        251         54        197         39
vand.vx                     500        332         41        291         58
vasubu.vv                   500        328         37        291         58
vasubu.vx                   500        231         44        187         37
vasub.vv                    500        330         25        305         61
vasub.vx                    500        247         40        207         41
vcompress.vm                500          0          0          0          0
vcpop.m                     500        255         58        197         39
vdivu.vv                    500        329         34        295         59
vdivu.vx                    500        244         48        196         39
vdiv.vv                     500        329         34        295         59
vdiv.vx                     500        327         30        297         59
vfadd.vf                    500        255          6        249         49
vfadd.vv                    500        335          8        327         65
vfclass.v                   500        331          5        326         65
vfcvt.f.xu.v                500        240         10        230         46
vfcvt.f.x.v                 500        259         11        248         49
vfcvt.rtz.x.f.v             500        335          5        330         66
vfcvt.rtz.xu.f.v            500        341          5        336         67
vfcvt.x.f.v                 500        232          8        224         44
vfcvt.xu.f.v                500        239         10        229         45
vfdiv.vf                    500        332          3        329         65
vfdiv.vv                    500        227          7        220         44
vfirst.m                    500        245         53        192         38
vfmacc.vf                   500        232          9        223         44
vfmacc.vv                   500        249         10        239         47
vfmadd.vf                   500        233          8        225         45
vfmadd.vv                   500        331          8        323         64
vfmax.vf                    500        332          4        328         65
vfmax.vv                    500        331          9        322         64
vfmerge.vfm                 500          0          0          0          0
vfmin.vf                    500        326          7        319         63
vfmin.vv                    500        239          8        231         46
vfmsac.vf                   500        245         10        235         47
vfmsac.vv                   500        251          7        244         48
vfmsub.vf                   500        335          7        328         65
vfmsub.vv                   500        246          8        238         47
vfmul.vf                    500        243         11        232         46
vfmul.vv                    500        341          5        336         67
vfmv.f.s                    500          0          0          0          0
vfmv.s.f                    500          0          0          0          0
vfmv.v.f                    500          0          0          0          0
vfncvt.f.f.w                500        330          4        326         65
vfncvt.f.xu.w               500        255          5        250         50
vfncvt.f.x.w                500        344          7        337         67
vfncvt.rod.f.f.w            500        245          7        238         47
vfncvt.rtz.x.f.w            500        236         12        224         44
vfncvt.rtz.xu.f.w           500        348         10        338         67
vfncvt.x.f.w                500        229         18        211         42
vfncvt.xu.f.w               500        322         13        309         61
vfnmacc.vf                  500        332          3        329         65
vfnmacc.vv                  500        226          6        220         44
vfnmadd.vf                  500        341          6        335         67
vfnmadd.vv                  500        328          2        326         65
vfnmsac.vf                  500        256          9        247         49
vfnmsac.vv                  500        238          7        231         46
vfnmsub.vf                  500        318          2        316         63
vfnmsub.vv                  500        241         10        231         46
vfrdiv.vf                   500        332          4        328         65
vfrec7.v                    500        334          7        327         65
vfredmax.vs                 500        221          4        217         43
vfredmin.vs                 500        246          6        240         48
vfredosum.vs                500        337          7        330         66
vfredusum.vs                500        243          6        237         47
vfrsqrt7.v                  500        322         12        310         62
vfrsub.vf                   500        226          6        220         44
vfsgnjn.vf                  500        327          3        324         64
vfsgnjn.vv                  500        230          6        224         44
vfsgnj.vf                   500        322          4        318         63
vfsgnj.vv                   500        235          9        226         45
vfsgnjx.vf                  500        329          8        321         64
vfsgnjx.vv                  500        256         11        245         49
vfslide1down.vf             500        342          6        336         67
vfslide1up.vf               500        335          2        333         66
vfsqrt.v                    500        326          9        317         63
vfsub.vf                    500        331          3        328         65
vfsub.vv                    500        319          7        312         62
vfwadd.vf                   500        338          1        337         67
vfwadd.vv                   500        325          0        325         65
vfwadd.wf                   500        248          7        241         48
vfwadd.wv                   500        231          4        227         45
vfwcvt.f.f.v                500        241          6        235         47
vfwcvt.f.xu.v               500        231         13        218         43
vfwcvt.f.x.v                500        341          7        334         66
vfwcvt.rtz.x.f.v            500        238          8        230         46
vfwcvt.rtz.xu.f.v           500        328          0        328         65
vfwcvt.x.f.v                500        311          3        308         61
vfwcvt.xu.f.v               500        347          1        346         69
vfwmacc.vf                  500        238          4        234         46
vfwmacc.vv                  500        330          2        328         65
vfwmsac.vf                  500        321          4        317         63
vfwmsac.vv                  500        341          0        341         68
vfwmul.vf                   500        345          0        345         69
vfwmul.vv                   500        236          5        231         46
vfwnmacc.vf                 500        314          2        312         62
vfwnmacc.vv                 500        233          4        229         45
vfwnmsac.vf                 500        315          1        314         62
vfwnmsac.vv                 500        344          2        342         68
vfwredosum.vs               500        225          4        221         44
vfwredusum.vs               500        239          7        232         46
vfwsub.vf                   500        333          0        333         66
vfwsub.vv                   500        251          7        244         48
vfwsub.wf                   500        241          4        237         47
vfwsub.wv                   500        327          0        327         65
vid.v                       500        255         53        202         40
viota.m                     500        241         49        192         38
vmacc.vv                    500        234         43        191         38
vmacc.vx                    500        323         31        292         58
vmadc.vi                    500          0          0          0          0
vmadc.vim                   500          0          0          0          0
vmadc.vv                    500          0          0          0          0
vmadc.vvm                   500          0          0          0          0
vmadc.vx                    500          0          0          0          0
vmadc.vxm                   500          0          0          0          0
vmadd.vv                    500        233         46        187         37
vmadd.vx                    500        323         30        293         58
vmand.mm                    500          0          0          0          0
vmandn.mm                   500          0          0          0          0
vmaxu.vv                    500        330         34        296         59
vmaxu.vx                    500        327         32        295         59
vmax.vv                     500        237         46        191         38
vmax.vx                     500        232         59        173         34
vmerge.vim                  500          0          0          0          0
vmerge.vvm                  500          0          0          0          0
vmerge.vxm                  500          0          0          0          0
vmfeq.vf                    500        259          8        251         50
vmfeq.vv                    500        325         11        314         62
vmfge.vf                    500        344         14        330         66
vmfge.vv                      0          0          0          0          0
vmfgt.vf                    500        235          8        227         45
vmfgt.vv                      0          0          0          0          0
vmfle.vf                    500        358         14        344         68
vmfle.vv                    500        351          5        346         69
vmflt.vf                    500        240         10        230         46
vmflt.vv                    500        345         10        335         67
vmfne.vf                    500        243          9        234         46
vmfne.vv                    500        322         11        311         62
vminu.vv                    500        246         46        200         40
vminu.vx                    500        247         45        202         40
vmin.vv                     500        244         48        196         39
vmin.vx                     500        250         43        207         41
vmnand.mm                   500          0          0          0          0
vmnor.mm                    500          0          0          0          0
vmor.mm                     500          0          0          0          0
vmorn.mm                    500          0          0          0          0
vmsbc.vv                    500          0          0          0          0
vmsbc.vvm                   500          0          0          0          0
vmsbc.vx                    500          0          0          0          0
vmsbc.vxm                   500          0          0          0          0
vmsbf.m                     500        240         34        206         41
vmseq.vi                    500        332         62        270         54
vmseq.vv                    500        230         51        179         35
vmseq.vx                    500        332         68        264         52
vmsgtu.vi                   500        244         46        198         39
vmsgtu.vx                   500        329         70        259         51
vmsgt.vi                    500        244         52        192         38
vmsgt.vx                    500        234         42        192         38
vmsif.m                     500        325         16        309         61
vmsleu.vi                   500        325         73        252         50
vmsleu.vv                   500        240         51        189         37
vmsleu.vx                   500        332         72        260         52
vmsle.vi                    500        249         39        210         42
vmsle.vv                    500        242         47        195         39
vmsle.vx                    500        332         73        259         51
vmsltu.vv                   500        327         65        262         52
vmsltu.vx                   500        255         48        207         41
vmslt.vv                    500        328         72        256         51
vmslt.vx                    500        338         77        261         52
vmsne.vi                    500        333         69        264         52
vmsne.vv                    500        229         44        185         37
vmsne.vx                    500        340         69        271         54
vmsof.m                     500        240         48        192         38
vmulhsu.vv                  500        218         46        172         34
vmulhsu.vx                  500        335         32        303         60
vmulhu.vv                   500        334         35        299         59
vmulhu.vx                   500        326         34        292         58
vmulh.vv                    500        328         35        293         58
vmulh.vx                    500        337         36        301         60
vmul.vv                     500        330         32        298         59
vmul.vx                     500        260         46        214         42
vmv1r.v                     500          0          0          0          0
vmv2r.v                     500          0          0          0          0
vmv4r.v                     500          0          0          0          0
vmv8r.v                     500          0          0          0          0
vmv.s.x                     500          0          0          0          0
vmv.v.i                     504          0          0          0          0
vmv.v.v                    7648          0          0          0          0
vmv.v.x                     500          0          0          0          0
vmv.x.s                     500          0          0          0          0
vmxnor.mm                   500          0          0          0          0
vmxor.mm                    500          0          0          0          0
vnclipu.wi                  500        252         48        204         40
vnclipu.wv                  500        234         40        194         38
vnclipu.wx                  500        329         20        309         61
vnclip.wi                   500        333         31        302         60
vnclip.wv                   500        336         31        305         61
vnclip.wx                   500        322         23        299         59
vnmsac.vv                   500        232         52        180         36
vnmsac.vx                   500        329         36        293         58
vnmsub.vv                   500        329         35        294         58
vnmsub.vx                   500        236         49        187         37
vnsra.wi                    500        330         24        306         61
vnsra.wv                    500        245         46        199         39
vnsra.wx                    500        243         41        202         40
vnsrl.wi                    500        230         44        186         37
vnsrl.wv                    500        342         19        323         64
vnsrl.wx                    500        248         40        208         41
vor.vi                      500        326         35        291         58
vor.vv                      500        337         29        308         61
vor.vx                      500        327         29        298         59
vredand.vs                  500        243         38        205         41
vredmaxu.vs                 500        330         69        261         52
vredmax.vs                  500        329         74        255         51
vredminu.vs                 500        242         43        199         39
vredmin.vs                  500        328         72        256         51
vredor.vs                   500        336         72        264         52
vredsum.vs                  500        232         37        195         39
vredxor.vs                  500        237         49        188         37
vremu.vv                    500        328         29        299         59
vremu.vx                    500        327         27        300         60
vrem.vv                     500        331         35        296         59
vrem.vx                     500        334         35        299         59
vrgatherei16.vv             500        328          5        323         64
vrgather.vi                 500        332         18        314         62
vrgather.vv                 500        249         44        205         41
vrgather.vx                 500        236         43        193         38
vrsub.vi                    500        235         53        182         36
vrsub.vx                    500        250         50        200         40
vsaddu.vi                   500        242         52        190         38
vsaddu.vv                   500        336         36        300         60
vsaddu.vx                   500        239         46        193         38
vsadd.vi                    500        243         43        200         40
vsadd.vv                    500        330         35        295         59
vsadd.vx                    500        239         44        195         39
vsbc.vvm                    500          0          0          0          0
vsbc.vxm                    500          0          0          0          0
vsetivli                    500          0          0          0          0
vsetvl                      501          0          0          0          0
vsetvli                     501          0          0          0          0
vsext.vf2                   500        238         49        189         37
vsext.vf4                   500        330         18        312         62
vsext.vf8                   500        231         72        159         31
vslide1down.vx              500        330         34        296         59
vslide1up.vx               3222        330         15        315          9
vslidedown.vi               500        326         34        292         58
vslidedown.vx               500        240         53        187         37
vslideup.vi                 500        330         18        312         62
vslideup.vx                 500        233         42        191         38
vsll.vi                     500        341         39        302         60
vsll.vv                     500        232         40        192         38
vsll.vx                     500        324         34        290         58
vsmul.vv                    500        331         35        296         59
vsmul.vx                    500        320         35        285         57
vsra.vi                     500        329         35        294         58
vsra.vv                     500        225         47        178         35
vsra.vx                     500        239         48        191         38
vsrl.vi                     500        240         43        197         39
vsrl.vv                     500        327         32        295         59
vsrl.vx                     500        339         37        302         60
vssra.vi                    500        325         37        288         57
vssra.vv                    500        335         34        301         60
vssra.vx                    500        224         46        178         35
vssrl.vi                    500        312         31        281         56
vssrl.vv                    500        316         31        285         57
vssrl.vx                    500        344         25        319         63
vssubu.vv                   500        238         45        193         38
vssubu.vx                   500        334         36        298         59
vssub.vv                    500        329         35        294         58
vssub.vx                    500        236         47        189         37
vsub.vv                     500        241         52        189         37
vsub.vx                     500        327         32        295         59
vwaddu.vv                   500        232         38        194         38
vwaddu.vx                   500        240         44        196         39
vwaddu.wv                   500        238         57        181         36
vwaddu.wx                   500        242         43        199         39
vwadd.vv                    500        229         47        182         36
vwadd.vx                    500        329         15        314         62
vwadd.wv                    500        235         28        207         41
vwadd.wx                    500        250         40        210         42
vwmaccsu.vv                 500        329          7        322         64
vwmaccsu.vx                 500        321         13        308         61
vwmaccus.vx                 500        329         14        315         63
vwmaccu.vv                  500        334          6        328         65
vwmaccu.vx                  500        322         16        306         61
vwmacc.vv                   500        246         44        202         40
vwmacc.vx                   500        334         12        322         64
vwmulsu.vv                  500        223         39        184         36
vwmulsu.vx                  500        333         12        321         64
vwmulu.vv                   500        324          5        319         63
vwmulu.vx                   500        244         48        196         39
vwmul.vv                    500        334          5        329         65
vwmul.vx                    500        344         17        327         65
vwredsumu.vs                500        239         49        190         38
vwredsum.vs                 500        329         65        264         52
vwsubu.vv                   500        236         41        195         39
vwsubu.vx                   500        250         41        209         41
vwsubu.wv                   500        331          9        322         64
vwsubu.wx                   500        240         49        191         38
vwsub.vv                    500        243         51        192         38
vwsub.vx                    500        225         46        179         35
vwsub.wv                    500        241         37        204         40
vwsub.wx                    500        334         25        309         61
vxor.vi                     500        235         47        188         37
vxor.vv                     500        330         34        296         59
vxor.vx                     500        334         30        304         60
vzext.vf2                   500        322         18        304         60
vzext.vf4                   500        329         16        313         62
vzext.vf8                   500        334         28        306         61{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Test and debug masked floating point order reduction,,,,,,MAL-2236,120799,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,7/22/2022 1:36,8/8/2022 9:01,9/28/2022 0:51,7/31/2022 20:48,,,,,,,,,,,,,Verification,,,,,,,,,0,,,,,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Kira Tsao,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1a4f5ec578120daca5ff8e,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-31T20:47:37.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i007sf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Tag broadcast could be anticipated for Divider in VexPipe,,,,,,MAL-2235,120798,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,7/22/2022 1:33,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Kira Tsao,,,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,MAL-2320,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i007s7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Make last FP un-order reduction using FPHrzRedUnit,,,,,,MAL-2234,120797,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,7/22/2022 1:29,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,,Kira Tsao,Nicolas Brunie,,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2278,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-14T00:01:30.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,,,,,,,,,,,,,,,,2|i007rz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Aug/22 6:14 PM;5e1a4f5ec578120daca5ff8e;PR created. On-hold due to task priority.

[https://github.com/sifive/federation/pull/25036|https://github.com/sifive/federation/pull/25036|smart-link] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] FPHrzRedUnit separate double-precision out from unified FPAdder to make H/S only use one cycle,,,,,,MAL-2233,120796,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,7/22/2022 1:24,7/25/2022 10:25,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Kira Tsao,Nicolas Brunie,,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i007rr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] MSHR Entry Valid Non-Reusable Hang,,,,,,MAL-2232,120795,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,7/22/2022 1:16,8/1/2022 11:54,9/28/2022 0:51,8/1/2022 11:54,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"With following STiNG rerun.outline, an assertion will be raised.

Failed message:

{noformat}=== sitest found errors in test sim/rerun.outline/sting_StingSiFiveTuple_T_0214/sting/sifive/vector/vector_tgv_dev.conf:
Reset m_pl2_mmc_inner_agents  c8
Error: ""/scratch/kirat/tokyo/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", 696: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.mshrEntries_0.SiFive_MSHREntry_assert: at time 18651322500 ps
Assertion failed (verification library): MSHR Entry Valid Non-Reusable Hang  @[MSHR_Mallard.scala 4216:14]

Fatal: ""/scratch/kirat/tokyo/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", 698: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.mshrEntries_0.SiFive_MSHREntry_assert: at time 18651322500 ps

$finish called from file ""/scratch/kirat/tokyo/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", line 698.{noformat}



Config: {{coreip_u8_minimal_vector}}

Commit: {{c54da3d175865d9629bd61139d34f3ba2d64c0ba}}

Rerun:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0177"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 32568717
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",David Kravitz,John Ingalls,Kira Tsao,Nicolas Brunie,Srivatsa Yogendra,Zhiqiang Hao,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2194,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,,,,,,,,,,,,,2|i007rj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,52:08.3,"22/Jul/22 1:17 AM;5e1a4f5ec578120daca5ff8e;Hi [~accountid:5bb6808b9ba2930990f81895] , is this a known issue or false alarm?","23/Jul/22 9:52 AM;5bb6808b9ba2930990f81895;I’m unable to reproduce this failure, for some reason.  I get “COSIM VS RTL WRDATA MISMATCH” instead.

Anyway, yes, there are two possible recent known and fixed issues that this could be:

# [https://github.com/sifive/federation/commit/cf41d40c931e126f2ea20935acbab8b28d514d2b|https://github.com/sifive/federation/commit/cf41d40c931e126f2ea20935acbab8b28d514d2b|smart-link] 
# [https://github.com/sifive/federation/pull/24693/commits/3b112a6f3a30af125e46aa66de547b73208d70d3|https://github.com/sifive/federation/pull/24693/commits/3b112a6f3a30af125e46aa66de547b73208d70d3|smart-link] 

Does either of those fix this for you?","25/Jul/22 1:47 AM;5e1a4f5ec578120daca5ff8e;I think we need the STiNG snippet that [~accountid:5d02d411febd110bc78aabc3] is constructing.

Hi [~accountid:5d02d411febd110bc78aabc3] , can you rebase your branch to current master and see if it still hit the assertion/”COSIM VS RTL WRDATA MISMATCH”? If so, I would like to reproduce it on my side.","25/Jul/22 11:25 AM;5d02d411febd110bc78aabc3;Hi [~accountid:5e1a4f5ec578120daca5ff8e] , still get a wrdata mismatch on vle32

Commit: {{0af92ea7e57d57349aac7f731a19d554f70c76d0}}

Config: {{coreip_p670}}

Rerun:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+MEM_ERROR_INJECT=.*\\.icDataArray.*ext,1,0,32:.*\\.icTagArray.*ext,1,0,20"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0298"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 104269826
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",25/Jul/22 1:55 PM;6065017e90e3950069cf01c5;{{vle32}} related issues should be dispatched to [~accountid:5fd15143b4a74900763834e0] first. ,"26/Jul/22 10:13 AM;5fd15143b4a74900763834e0;Just so I’m clear on this. Has the MSHR hang been fixed (per John’s PRs)? If so, should the {{vle32.v}} problem be filed as another ticket?","01/Aug/22 10:01 AM;5a938e9c0913194d2d262658;Hey folks, whats happening with this issue?","01/Aug/22 10:42 AM;5fd15143b4a74900763834e0;The MSHR hang seems to have been fixed. The RTL has moved on significantly over the last week+. I would prefer this issue be resolved/closed and another ticket be filed if the cosim mismatch returns.

Note that we already have a cosim mismatch being worked on as part of [https://sifive.atlassian.net/browse/MAL-2277|https://sifive.atlassian.net/browse/MAL-2277|smart-link], so please hold off until we can resolve that one.","01/Aug/22 10:46 AM;5a938e9c0913194d2d262658;Ok, sounds good [~accountid:5fd15143b4a74900763834e0] . We are seeing the same assertion on a bunch of sting tests in regression. I’ll ask the triage team to open a new issue. 

We can close this issue. ",01/Aug/22 11:53 AM;5fd15143b4a74900763834e0;Please wait on filing new cosim mismatches until we have merged a fix for MAL-2277,"01/Aug/22 11:54 AM;5fd15143b4a74900763834e0;The MSHR hang was fixed by one of [~accountid:5bb6808b9ba2930990f81895] merges; we don't know which.

Cosim mismatches will be filed separately.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV/opt] optimize for full throughput *.wv instructions when mask agnostic policy is enforced,,,,,,MAL-2231,120776,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/21/2022 21:54,7/22/2022 9:47,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,"Currently all {{*.wv}} operations are cracked into low and high part each writing a single destination register to avoid requiring 5 source reads.

If mask agnostic policy is enforced, only 4 sources are required to produce 2 destination registers per ops.

Thus sequencing / {{VexPipe}} could be extended to limit cracking to mask {{undisturbed}} policy.",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i007nb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Fix 7nm synthesis p670 specs for hammer,,,,,,MAL-2230,120770,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,7/21/2022 21:08,8/5/2022 1:45,9/28/2022 0:51,7/27/2022 9:23,,,,,,,,,,,,,Implementation,TGV_RTL/Top,,,,,,,,0,,,,"+*Command:*+ {{./scripts/runWake -v build specs/build-plans/pd/base.json specs/build-plans/pd/syn.json specs/build-plans/pd/7nm_H240.json specs/build-plans/pd/p670_tsmc_cln7ff_tsmc_H240_TGV.json specs/build-plans/pd/quickRTL.json}}

+*Error log:*+

{nofor",Brad Wu,Colin Schmidt,Nicolas Brunie,,,,,,,,,,,,,62103777eb2978006893b778,608c619933d525006945bdcc,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-27T09:20:36.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i007lz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] update cosim connection to ensure implementation-dependent values are patched in unordered vf[w]redusum.vs,,,,,,MAL-2229,120762,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/21/2022 17:39,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/Top,,,,,,,,,0,,,,"RVV 1.0 specifies that unordered FP reductions {{vf[w]redusum.vs}}may be performed in any element order, as long as it is deterministic ([https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#1432-vector-unordered-single-width-floating-point-sum-reduction|https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#1432-vector-unordered-single-width-floating-point-sum-reduction|smart-link] ).

{quote}The implementation must produce a result equivalent to a reduction tree composed of binary operator nodes, with the inputs being elements from the source vector register group ({{vs2}}) and the source scalar value ({{vs1[0]}}). Each operator in the tree accepts two inputs and produces one result. Each operator first computes an exact sum as a RISC-V scalar floating-point addition with infinite exponent range and precision, then converts this exact sum to a floating-point format with range and precision each at least as great as the element floating-point format indicated by SEW, rounding using the currently active floating-point dynamic rounding mode. A different floating-point range and precision may be chosen for the result of each operator. A node where one input is derived only from elements masked-off or beyond the active vector length may either treat that input as the additive identity of the appropriate EEW or simply copy the other input to its output. The rounded result from the root node in the tree is converted (rounded again, using the dynamic rounding mode) to the standard floating-point format indicated by SEW. An implementation is allowed to add an additional additive identity to the final result.

The additive identity is +0.0 when rounding down (towards -∞) or -0.0 for all other rounding modes.

The reduction tree structure must be deterministic for a given value in {{vtype}} and {{vl}}.{quote}

Due to the fact that FP arithmetic is not associative, this may/will lead to different results depending on the implementation choices. Cosim manages this by flagging *unordered* (only) results as requiring a patch from RTL to cosim (so RTL value is considered the new ground truth).

[https://sifive.slack.com/archives/C02TXF8GRAA/p1656024082016239|https://sifive.slack.com/archives/C02TXF8GRAA/p1656024082016239|smart-link] 

[https://github.com/sifive/federation/blob/3e197bb495a143f0324f0b5dee9a18448614d057/mallard/src/main/scala/tile/MallardTile.scala#L442|https://github.com/sifive/federation/blob/3e197bb495a143f0324f0b5dee9a18448614d057/mallard/src/main/scala/tile/MallardTile.scala#L442]



⚠️  we may need another way to test unordered reduction functionality properly.",Kira Tsao,Nicolas Brunie,Srivatsa Yogendra,Zhiqiang Hao,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i007k7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,07:30.4,"21/Jul/22 6:07 PM;5d02d411febd110bc78aabc3;For now I think we no longer need to tap that signal for TGV (due to full vreg update)
For vf(w)redusum, I’ve implement a checker in both Spike & Cosim.

[https://github.com/sifive/federation/blob/7b87725f555d1d063b1ec7fe0da9ad7d6f40ea22/spike-cosim/riscv/decode.h#L2522|https://github.com/sifive/federation/blob/7b87725f555d1d063b1ec7fe0da9ad7d6f40ea22/spike-cosim/riscv/decode.h#L2522]

Spike will calculate the error boundary based on this equation:

{quote}the maximum absolute error for summation should be (vl * eps * sum(abs(x_i)))--where x_i is each element being summed, including the scalar in vs1

eps is the machine epsilon, e.g., 2^-23 for single-precision{quote}



In Cosim, we will compare the spike & RTL results, and check if the error is still in boundary, then Cosim will override the vreg & fflags value from RTL into spike.

[https://github.com/sifive/federation/blob/0cdf44df82c60f94f4806aaa12cb33119bf9d51e/csrc/cosim/cosim_transaction_item.cc#L164|https://github.com/sifive/federation/blob/0cdf44df82c60f94f4806aaa12cb33119bf9d51e/csrc/cosim/cosim_transaction_item.cc#L164]","23/Aug/22 3:24 AM;6065017e90e3950069cf01c5;FP flags may not be identical (while still valid) between different implementations of the unordered sum: [https://github.com/sifive/federation/pull/25476#issuecomment-1223046486|https://github.com/sifive/federation/pull/25476#issuecomment-1223046486].

This may extended the numbers of cases where we need to reconciliate RTL and cosim",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] vrgatherei16 instruction not updating the dest reg correctly,[TGV] vrgatherei16 instruction,Execution Unit ,Vector,,,MAL-2228,120760,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Cannot Reproduce,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,7/21/2022 16:22,9/7/2022 17:43,9/28/2022 0:51,8/5/2022 10:16,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"I see for vrgatherei16 instruction, where the source reg is all 0, sew = 16, lmul = 2 and vl =10

{noformat}core   0: 0x0000000080000b78 (0x3b010c57) vrgatherei16.vv v24, v16, v2
core   0: 3 0x0000000080000b78 (0x3b010c57) e16 m2 l10 
v24 0x00020002000200020002000200020002 
v25 0x00000000001616161616161600020002

The source regs are
v16 0x00000002000000020000000200000002 
v2  0x00000000000000000000000000000000

The rtl is updating the v24 reg to 
vrf[24]=[02020202020202020202020202020202][ffff]
and v25 to 
vrf[25]=[00000000001616161616161600020002][ffff] which is correct
{noformat}

Seems like the sew is getting messed up for the first reg update.



To recreate this failure:

# clone federation and checkout the commit e98a1594badcef78851540e7cabb7825c0a1a45c
# build coreip_u8_minimal_vector and rerun the test using the outline
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.tag_array_.*ext,1,0,32:.*\\.data_arrays_0_.*ext,1,0,32:.*\\.syssram.*ext,1,0,32:.*\\.island.*\\.lim\\.syssram.*ext,1,0,32:.*\\.tagged_tables_0_.*ext,1,0,32:.*\\.base_table_0_.*ext,1,032"",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""rat_default_T_0969"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1035448486
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



The waves are generated at {{gamma12:/scratch/verif/srivatsa/revert_the_pr/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/rat_default_T_0969/rat/default}}",David Kravitz,Naveen Rathore,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,5fd15143b4a74900763834e0,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{repository={count=2, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":2,""lastUpdated"":""2022-07-21T17:20:05.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i007jr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,16:58.6,"21/Jul/22 5:16 PM;6065017e90e3950069cf01c5;I am not able to reproduce the failure on the indicated git hash and with the listed outline.

Are we missing commits ?","21/Jul/22 5:20 PM;5a938e9c0913194d2d262658;[https://github.com/sifive/federation/pull/24718/commits/e98a1594badcef78851540e7cabb7825c0a1a45c|https://github.com/sifive/federation/pull/24718/commits/e98a1594badcef78851540e7cabb7825c0a1a45c]



Should be this commit","21/Jul/22 5:27 PM;6065017e90e3950069cf01c5;That indeed the one I have:

{noformat}$ git log
commit e98a1594badcef78851540e7cabb7825c0a1a45c (HEAD -> MAL-2228_tgv-vrgatherei16-bugfix, origin/rat_for_tgv_2)
Author: srivatsa <srivatsa@sifive.com>
Date:   Thu Jul 21 15:09:01 2022 -0700

    add the tests to nightly{noformat}

what is strange is that I don’t have the same occurrence of {{vrgatherei16.vv}}

{noformat}$ grep vrgather rat.S
  vrgatherei16.vv v0, v30, v28 # s115 (vec_tgv){noformat}","21/Jul/22 5:29 PM;5a938e9c0913194d2d262658;Huh , Thts weird. ",22/Jul/22 10:27 AM;5a938e9c0913194d2d262658;trying to recreate it locally. ,22/Jul/22 2:01 PM;6065017e90e3950069cf01c5;Any update [~accountid:5a938e9c0913194d2d262658] ?,"22/Jul/22 2:18 PM;5a938e9c0913194d2d262658;yea, i am not able to as well. This is very weird. ","22/Jul/22 3:08 PM;5a938e9c0913194d2d262658;Ok, i see the issue now. Seems like the test was generated using an old rat binary. I cant seem to find the old commit on which the test was generated. 

So i think we wont be able to reproduce the failure. ","04/Aug/22 7:07 AM;5fd15143b4a74900763834e0;Should this be closed, or is there hope to reproduce it someday [~accountid:5a938e9c0913194d2d262658] ?",04/Aug/22 10:20 AM;5a938e9c0913194d2d262658;No i dont think we will be able to reproduce. [~accountid:6065017e90e3950069cf01c5] wanted this to be left open. We can close if hes not going to lookinto it. Im sure we will run into the bug again.,04/Aug/22 10:27 AM;5a938e9c0913194d2d262658;we can probably use the same elf file and regenerate the simulation. But it will be a step by step process. ,"05/Aug/22 12:21 AM;6235105a3eacc50071ff07ec;Hi [~accountid:6065017e90e3950069cf01c5] 
Seeing Another issue with vrgathere.i16.vv instruction
Where Tail policy is Undisturbed, But Design filling all tail elements with 0x00
Not sure whether route cause is same or not.

Here previous value:
v 6 0xe045a954ca1ad2be87554476bd6033ae
v 2 0xd0239cf48165168047e51b2f367dc220
v12 0x000000002f1853a2000004a000016b42


core   0: 0x0000000080003a30 (0xc0137057) vsetivli zero, 6, e8, m2, tu, mu   //Undisturbed
core   0: 0x0000000080003a34 (0x3a260357) vrgatherei16.vv v6, v2, v12     //VL=6
core   0: 3 0x0000000080003a34 (0x3a260357) e8 m2 l6 v 6 0x*e045a954ca1ad2be8755*800080008000

But Design filled all tail elements to 0x00
C 0:     188698 \[1] pc=\[0000000080003a34] W\[r 0=0000000000000000]\[0] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[3a260357] vrgatherei16.vv v6, v2, v12
C 0:     188696 vrf\[ 6]=\[*00000000000000000000*800080008000]\[ffff]

*Config::*  coreip_u8_minimal_vector
*SHA::*   0a5a53ca7a8a5864723c3ec91bdda1feed6a00e4
*Waves::* gamma26:: /scratch/naveenr/july-4/federation/builds/coreip_u8_minimal_vector/sim/sim/rat.outline/rat_default_T_0993/rat/default
*rerun.outline::*

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
{
""name"": ""rat"",
""raw_plusargs"": \[
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+enable_spike_cosim"",
""+verbose""
],
""subdir"": ""rat_default_T_0993"",
""subtest"": ""default"",
""enable_postsim_py_check"": false,
""seed"": {
""value"": 3626369528
},
""sim"": {
""vendor"": ""vcs""
},
""tilelink"": {
""timeout"": ""100000000000""
},
""waves"": {
""dumper"": ""fsdb""
},
""program"": {
""hartid"": 0,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vcompress instruction not executing correctly.,[TGV] vcompress instruction,Execution Unit ,Vector,,,MAL-2227,120757,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,7/21/2022 15:55,9/7/2022 17:43,9/28/2022 0:51,7/28/2022 9:56,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"I see the vcompress instruction not updating the registers correctly, for lmul= 4, vl =8, and only 2 elements are supposed to be updated, 

{noformat}core   0: 0x0000000080009b34 (0x5f84a857) vcompress.vm v16, v24, v9
core   0: 3 0x0000000080009b34 (0x5f84a857) e64 m4 l8 v16 0x68e4efaeed54090883b8200a8a04abae

The source regs are:
v24 0x83b8200a8a04abaeff147404fd58b94e
v25 0xa0ba7aeaed540908aa181d4264f0fc16 
v26 0x67e670ae6d54090868e4efaeed540908 
v27 0x330004fff60004fc3b00f10736000908

the mask reg is:
v 9 0xa0bd7aebee520a04aa1b1d4365eefd12{noformat}

As only v16 reg is supposed to be updated. 

The RTL is updating the v16 reg to 

{noformat}vrf[16]=[83b8200a8a04aba50000000000000000][ffff]{noformat}



to recreate the failure : 

# Clone federation and checkout the commit e98a1594badcef78851540e7cabb7825c0a1a45c
# build coreip_u8_minimal_vector and rerun the test using the outline 
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.tag_array_.*ext,1,0,32:.*\\.data_arrays_0_.*ext,1,0,32:.*\\.syssram.*ext,1,0,32:.*\\.island.*\\.lim\\.syssram.*ext,1,0,32:.*\\.tagged_tables_0_.*ext,1,0,32:.*\\.base_table_0_.*ext,1,032"",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""rat_default_T_0225"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 4234285256
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



The waves are at {{gamma12:/scratch/verif/srivatsa/revert_the_pr/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/rat_default_T_0225/rat/default}}",Andrew Hanselman,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-28T09:55:49.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/77531645d88ce941d2cedd932aa9de9182b8bb20,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i007jb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,20:03.2,"21/Jul/22 5:20 PM;609d7e1f5998a6006800dcc5;Active elements according to mask

{noformat}      1                0               
v24 0x83b8200a8a04abae_ff147404fd58b94e
      0                0
v25 0xa0ba7aeaed540908_aa181d4264f0fc16
      0                1
v26 0x67e670ae6d540908_68e4efaeed540908
      0                0
v27 0x330004fff60004fc_3b00f10736000908{noformat}

Looks like the result should be

{noformat}vrf[16]=[68e4efaeed540908_83b8200a8a04aba5]
vrf[17]=[tail]
vrf[18]=[tail]
vrf[19]=[tail]{noformat}","21/Jul/22 5:27 PM;5a938e9c0913194d2d262658;Yup. Rtl is not correctly writing the active elements, the tail are left undisturbed ","21/Jul/22 5:44 PM;6065017e90e3950069cf01c5;Looks like RTL is writing the \[0] result element in the \[1] position, and the \[1] element is discarded (or never written).

From afar, It looks like a {{VectorPermuteEngine}} bug.","26/Jul/22 2:08 PM;6065017e90e3950069cf01c5;[~accountid:5a938e9c0913194d2d262658] , [https://github.com/sifive/federation/pull/24825|https://github.com/sifive/federation/pull/24825|smart-link]  should fix this problem.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] investigate optimization for mask Mux Tree in VexPipe,,,,,,MAL-2226,120756,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/21/2022 15:34,9/7/2022 13:29,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,TGV_RTL/VEX,,,,,,,,0,,,,"The mask mux tree to produce mask slices for the VexPipe unit has been moved from {{EX}} stage to {{RR}} to free up slack for the execution units.

This change does not benefit single cycle operations, as their results have to go through the mux tree after forwarding  results (rather then after operands' flops). This is illustrated by the figure below which shows the critical paths are made of the same elements (in a different order).

We may want to investigate other possibilities (disabling mask forwarding for certain operation pairs, …) to allow for single cycle operations.



!Mask Mux Tree pipeline location-20220721-223233.jpeg|width=1941,height=971!

(diagram source: [https://lucid.app/lucidchart/0e070de9-b8ae-4463-a384-44d172abcbf5/edit?viewport_loc=-808%2C-525%2C4145%2C2085%2C0_0&invitationId=inv_97bfaea1-a7a1-49e2-b909-8360753180cb#|https://lucid.app/lucidchart/0e070de9-b8ae-4463-a384-44d172abcbf5/edit?viewport_loc=-808%2C-525%2C4145%2C2085%2C0_0&invitationId=inv_97bfaea1-a7a1-49e2-b909-8360753180cb#|smart-link] )",Andrew Hanselman,Brad Wu,Kira Tsao,Nicolas Brunie,Shaka Kao,,,,,,,,,,,609d7e1f5998a6006800dcc5,62103777eb2978006893b778,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2301,,,,,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2302,,,,,,,21/Jul/22 3:34 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;Mask Mux Tree pipeline location-20220721-223233.jpeg;https://sifive.atlassian.net/secure/attachment/74796/Mask+Mux+Tree+pipeline+location-20220721-223233.jpeg,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-09T07:06:28.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,,,,,,,,,,,,,2|i007j3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,53:56.5,"21/Jul/22 7:53 PM;62103777eb2978006893b778;[~accountid:609d7e1f5998a6006800dcc5]  Is is possible to limit the mask tree input to only come from accumulator/mask PRF?
-If we does not allow partial mask forwarding, then vectorALU or EX results should not bypass to RR as mask input, right? (For mask logical/vmsxf it is more complicated, since it produce the whole mask output)-
I forgot result from instruction that write non-mask result can write v0, too. But I guess this is not the general case if the result is going to used as mask.",21/Jul/22 10:12 PM;6065017e90e3950069cf01c5;We should see if we can re-direct non general cases into a slower path to optimize the most general case.,"21/Jul/22 10:38 PM;62103777eb2978006893b778;I come up with some general cases for v0 forwarded as mask in VexPipe EX->RR, if I missed something please let me know

* Exclude instructions that does not write mask-formatted result.
* Partial mask forwarding
** not going to implement for now (?)
** masked partial mask-producing instruction that write to v0 with LMUL>1, no forwarding is needed between uOPs of the same instruction
* Whole mask forwarding
** vmsxf from VectorMaskCountUnit (maybe timing-critical, too)
** mask logical from vectorALU (just bitwise logical operation)
* Vector Move (v# → v0)
** Not using 1-cycle unit",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Add PowerArtist build plan json for  P670,,,,,,MAL-2225,120754,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,7/21/2022 15:24,7/22/2022 9:40,9/28/2022 0:51,7/21/2022 18:22,,,,,,,,,,,,,Power,,,,,,,,,0,,,,Add build plan JSON so that we can run PowerArtist on P670 using the new wake-based flow.,Cristóbal Ramirez Lazo,,,,,,,,,,,,,,,62632262d7f1b80069c030b8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-22T08:23:03.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i007in:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] critical path in VectorPermuteEngine first stage,,,,,,MAL-2224,120746,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/21/2022 14:38,7/28/2022 8:50,9/28/2022 0:51,7/28/2022 7:52,,,,,,,,,,,,,Implementation,TGV_RTL/VEX,,,,,,,,0,,,,"There are some paths violated by around -100ps in the first stage of {{VectorPermuteEngine}}.

+*Critical path(s) location(s):*+ Those paths (see details below) corresponds to the in → vector slide (0-cycle) → {{VexPipe}} output forwarding

+*Suggestion of optimization:*+ disable the single cycle vector slide and make sure there is always one register between any input and any output of the permute engine.

+*Performance impacts:*+ increase latency of {{vslide1*}} from 1 to 2cycles

+*Alternatives*++:+ extract the fast slide from the permute engine, into their own simplified unit

{noformat}Path 1: VIOLATED (-98 ps) Setup Check with Pin tile/core/tgv/vex/exPipes_0/bpeMaskPre_EX_reg[2]/CP->D
           View: func_tt_0p750v_85c_typical_view
          Group: auto_tile_clock_domain_ungatedClockNode_in_clock
     Startpoint: (R) tile/core/tgv/vex/exPipes_1/instPayload_EX_cmn_ctrl_funct3_reg[0]/CP
          Clock: (R) auto_tile_clock_domain_ungatedClockNode_in_clock
       Endpoint: (R) tile/core/tgv/vex/exPipes_0/bpeMaskPre_EX_reg[2]/D
          Clock: (R) auto_tile_clock_domain_ungatedClockNode_in_clock

                     Capture       Launch     
        Clock Edge:+     390            0     
       Src Latency:+       0            0     
       Net Latency:+       0 (I)        0 (I) 
           Arrival:=     390            0     
                                              
             Setup:-       8                  
       Uncertainty:-      45                  
     Required Time:=     337                  
      Launch Clock:-       0                  
         Data Path:-     435                  
             Slack:=     -98                  

#---------------------------------------------------------------------------------------------------------------------------------------------------------------------
#                             Timing Point                               Flags    Arc   Edge              Cell               Fanout Load Trans Delay Arrival Instance 
#                                                                                                                                   (fF)  (ps)  (ps)   (ps)  Location 
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------
  tile/core/tgv/vex/exPipes_1/instPayload_EX_cmn_ctrl_funct3_reg[0]/CP   -       -      R     (arrival)                         866    -     0     0       0    (-,-) 
  tile/core/tgv/vex/exPipes_1/instPayload_EX_cmn_ctrl_funct3_reg[0]/Q    -       CP->Q  F     DFQD4BWP240H8P57PDULVT              6  9.0    13    29      29    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/fopt54987/Z               -       I->Z   F     BUFFD5BWP240H8P57PDULVT             4  4.1     6    12      42    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g54911/ZN                 -       A1->ZN F     IND3OPTPAD4BWP240H8P57PDULVT        2  2.3     9    16      57    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g54137/ZN                 -       A1->ZN R     ND2OPTPAD4BWP240H8P57PDULVT         3  2.6     8     6      63    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/fopt54136/ZN              -       I->ZN  F     CKND2BWP240H8P57PDULVT              1  1.7     6     6      69    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g55331/ZN                 -       A2->ZN R     CKND2D4BWP240H8P57PDULVT            1  2.1     6     5      75    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g55330/ZN                 -       A1->ZN F     ND2D6BWP240H8P57PDULVT              3  3.3     7     6      81    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g44617/ZN                 -       A1->ZN R     CKND2D4BWP240H8P57PDULVT            2  2.5     7     5      87    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g44616/ZN                 -       A1->ZN F     NR2OPTPAD6BWP240H8P57PDULVT         2  3.2     6     5      92    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g45407/ZN                 -       A1->ZN R     OAI21D8BWP240H8P57PDULVT            2  3.5     9     7      99    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/g20043/ZN            -       B1->ZN F     IND2OPTPAD8BWP240H8P57PDULVT        4  8.8    11    10     109    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/g20293/ZN            -       A1->ZN R     ND2OPTPAD16BWP240H8P57PDULVT        9 17.7     9     8     117    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/fopt185/ZN           -       I->ZN  F     DCCKND10BWP240H8P57PDULVT          10 14.4     9     9     126    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/g20558/ZN            -       B->ZN  R     AOI21D3BWP240H8P57PDULVT            1  1.3     9     8     134    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g165324/ZN    -       A1->ZN F     CKNR2D2BWP240H8P57PDULVT            1  1.5     8     7     141    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g165348/ZN    -       A1->ZN R     CKND2D4BWP240H8P57PDULVT            1  2.4     6     6     146    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g127/ZN       -       A2->ZN F     CKNR2TWAD4BWP240H8P57PDULVT         3  4.7     8     7     154    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g165349/ZN    -       A2->ZN R     ND2OPTPAD6BWP240H8P57PDULVT         4  5.0     8     7     161    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g3490/ZN      -       A1->ZN F     CKNR2D1BWP240H8P57PDULVT            1  1.3    10     8     169    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g164384/ZN    -       A1->ZN R     ND2D3BWP240H8P57PDULVT              1  2.2     7     6     175    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g164383/ZN    -       A2->ZN F     NR2OPTPAD4BWP240H8P57PDULVT         2  2.4     6     6     182    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g163621/ZN    -       A2->ZN F     IOA22D4BWP240H8P57PDULVT            2  3.1    11    14     196    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g163617/ZN    -       B1->ZN R     IND2OPTPAD6BWP240H8P57PDULVT        3  6.0    10     8     204    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g163617/ZN    -       B1->ZN R     IND2OPTPAD6BWP240H8P57PDULVT        3  6.0    10     8     204    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g7572/ZN      -       A1->ZN F     ND2D12BWP240H8P57PDULVT             8 15.4    13    11     215    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/fopt158488/ZN -       I->ZN  R     INVD4BWP240H8P57PDULVT              1  3.9     8     8     222    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g164808/ZN    -       A1->ZN F     ND2OPTPAD12BWP240H8P57PDULVT        6  6.7     7     7     229    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/fopt47/ZN     -       I->ZN  R     INVD4BWP240H8P57PDULVT              8  6.5    10     8     238    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/fopt46/ZN     -       I->ZN  F     CKND4BWP240H8P57PDULVT              2  3.0     6     6     244    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/fopt164810/ZN -       I->ZN  R     INVD2BWP240H8P57PDULVT              3  2.2     7     7     251    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/fopt164812/Z  -       I->Z   R     DCCKBD5BWP240H8P57PDULVT            2  3.2     6    10     261    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g161399/Z     -       B2->Z  R     AO22D1BWP240H8P57PDULVT             1  1.1     9    16     278    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g161396/ZN    -       A2->ZN F     CKNR2D1BWP240H8P57PDULVT            1  1.4    10     9     287    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g163805/ZN    -       A2->ZN R     ND2D3BWP240H8P57PDULVT              2  1.4     6     6     293    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g163804/ZN    -       A1->ZN F     ND2D2BWP240H8P57PDULVT              1  1.5     9     7     300    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g163802/ZN    -       B->ZN  R     OAI211OPTPAD4BWP240H8P57PDULVT      1  1.6    10     6     306    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/g21569/ZN            -       A1->ZN F     CKND2D4BWP240H8P57PDULVT            1  2.5     8     8     313    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/g21568/ZN            -       A1->ZN R     CKND2TWAD8BWP240H8P57PDULVT         5  7.6    12     8     321    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g48953/ZN                 -       A1->ZN F     AOI22D8BWP240H8P57PDULVT            2  4.5    12     9     330    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g52836/ZN                 -       B1->ZN R     OAI22D8BWP240H8P57PDULVT            3  4.8    13    10     340    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g48609/ZN                 -       B1->ZN F     AOI22OPTPAD8BWP240H8P57PDULVT       2  2.0    11     9     349    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g52229/ZN                 -       A1->ZN R     NR2D4BWP240H8P57PDULVT              1  1.5     7     7     356    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g52362/ZN                 -       A1->ZN F     NR2OPTPAD4BWP240H8P57PDULVT         2  2.1     7     5     361    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g56092/ZN                 -       A1->ZN R     IOAI21D4BWP240H8P57PDULVT           2  1.7     8     7     368    (-,-) 
  tile/core/tgv/vex/exPipes_1/g71679/ZN                                  -       A1->ZN R     IOA21D4BWP240H8P57PDULVT            2  2.4     8    13     381    (-,-) 
  tile/core/tgv/vex/exPipes_1/fopt66601/Z                                -       I->Z   R     DCCKBD5BWP240H8P57PDULVT            3  3.8     6    11     392    (-,-) 
  tile/core/tgv/vex/exPipes_0/g66568/ZN                                  -       B1->ZN F     IND2OPTPAD6BWP240H8P57PDULVT        1  1.5     5     5     397    (-,-) 
  tile/core/tgv/vex/exPipes_0/g67054/ZN                                  -       A1->ZN R     CKND2D4BWP240H8P57PDULVT            2  2.6     7     5     402    (-,-) 
  tile/core/tgv/vex/exPipes_0/g67053/ZN                                  -       I->ZN  F     INVD6BWP240H8P57PDULVT              2  3.0     4     5     407    (-,-) 
  tile/core/tgv/vex/exPipes_0/g34/ZN                                     -       A1->ZN R     AOI21D6BWP240H8P57PDULVT            1  1.6     9     6     413    (-,-) 
  tile/core/tgv/vex/exPipes_0/g66564/ZN                                  -       A2->ZN F     CKNR2D2BWP240H8P57PDULVT            1  1.4     7     7     420    (-,-) 
  tile/core/tgv/vex/exPipes_0/g66766/ZN                                  -       A1->ZN R     ND3OPTPAD4BWP240H8P57PDULVT         1  1.3     6     5     425    (-,-) 
  tile/core/tgv/vex/exPipes_0/g59128/ZN                                  -       A1->ZN F     CKNR2D2BWP240H8P57PDULVT            1  1.1     7     5     430    (-,-) 
  tile/core/tgv/vex/exPipes_0/g58407/ZN                                  -       A2->ZN R     ND2D2BWP240H8P57PDULVT              1  0.8     5     5     435    (-,-) 
  tile/core/tgv/vex/exPipes_0/bpeMaskPre_EX_reg[2]/D                     -       -      R     DFQD2BWP240H8P57PDULVT              1    -     -     0     435    (-,-) 
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------
{noformat}",Brian Grayson,Fu-Ching Yang,Ian Chuang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,61aaae1d9615eb006f5ff922,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-28T07:52:07.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/c81d98dd315813e81ce88d4245431e56f3075237,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i007gv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,28/Jul/22 7:54 AM;6065017e90e3950069cf01c5;[~accountid:5e1374fb7a22c90da0c60495] / [~accountid:5e137458efa19b0e976b5c7a] / [~accountid:61aaae1d9615eb006f5ff922]  this change slows down {{vslide1*}} from 1 to 2-cycle. We intend to try to recover this latency when splitting the simple {{vslide}} away from the other permutations ([https://sifive.atlassian.net/browse/MAL-1960|https://sifive.atlassian.net/browse/MAL-1960|smart-link] ) but for now RTL will expose a longer latency.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Masked vfredmin cosim mismatch - no active vector elements - NaN mismatch,[TGV] Masked vfredmin cosim mismatch,,,,,MAL-2223,120742,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,7/21/2022 14:08,9/7/2022 17:43,9/28/2022 0:51,7/27/2022 23:39,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"This appears to be occurring when  {{VL > 0}}, LMUL and mask are combined in a way where there are no active vector elements, and the only active element is the scalar element (vs1\[0]).

SHA: a8c7e65e65183c6fd7d0127f5939868f4cde4480

Simulation Out Log

{noformat}
                                                                                                                                                             e5c310cb0cdbe10f1453b14cbb67a148 OLD DATA
                                                                                                                                                           --------------------------xxxxxxxx MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [16086] InstInfo: VLD=1 | PC=0x0000000080000fc4 | INSN=0x14829057 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r0=0xe5c310cb0cdbe10f1453b14c7fc00000 mask=ffff | READY=1 | CSR_TIMER=16086 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080001f8c | MCAUSE=0x0000000000000002 | VSTART=0 | VL=2 | SEW=32 | LMUL=mf2 | VSEGELT=0
[COSIM-ERROR][0] m_cosim_inst_info: VLD=0                 | PC=0x0000000080000fc4 | INSN=0x14829057 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r0=0xe5c310cb0cdbe10f1453b14cff9bc0c0 mask=000f
Pending PC in the Instruction Queue: 1{noformat}



Instruction inputs

{noformat}C                   0:      15815 vrf[ 0]=[e5c310cb0cdbe10f1453b14cbb67a148][ffff]
C                   0:      15882 vrf[ 8]=[c4556c2330279bf96d20cc03bc22a5a4][ffff]
C                   0:      16050 vrf[ 5]=[9596ba7f136e967e5aea8fe9ff9bc0c0][ffff]{noformat}


Outline:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0000_lmul4"",
  ""subtest"": ""vfredmin.vs"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vfredmin.vs_Masking-1_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_NoSelfCheck-0_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-4_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 2100270365
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}


Waves Directory:

{noformat}gamma03:/scratch/verif/andrewh/federation/builds/a8c7e65e65183c6fd7d0127f5939868f4cde4480/coreip_u8_minimal_vector/sim/sim/rerun.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vfredmin.vs{noformat}



*Solution*:

Create a new reduction state {{actScalRed}} for the last scalar reduction stage of {{VL}}>1 masked {{vfred[min,max]}}. The uOp with this state restore to the original VL and read the mask register again, then check if there is any active element at EX stage. If no active element detected, then simply copy vs1 scalar to vd.",Andrew Hanselman,Brad Wu,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,609d7e1f5998a6006800dcc5,62103777eb2978006893b778,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2278,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-27T20:01:51.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i007fz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,14:00.7,21/Jul/22 2:14 PM;6065017e90e3950069cf01c5;The scalar elements is a signaling NaN {{ff9bc0c0}}. The spec is not very clear but I think it expects it to be forwarded un-canonicalized if there is no active element.,21/Jul/22 4:50 PM;6065017e90e3950069cf01c5;[~accountid:62103777eb2978006893b778]  could you take a look please ?,"22/Jul/22 2:14 AM;62103777eb2978006893b778;I think we need to handle this special case. 

{{fmin/fmax}} writes canonical {{NaN}} when both inputs are {{NaN}}. The behavior of {{vfred[min,max]}} need to align with scalar version.

Current implementation use {{QNaN}} to mark the reduced result as the masked element. When the final reduced vs2 scalar is {{QNaN}}, it cannot distinguish whether vs2 are all masked or all active vs2 elements are {{QNaN}}. And the spec says vs1 need to pass to vd when all elements are masked, this causes trouble when vs1 is also {{NaN}}.

We can solve this problem by checking if all the elements are masked in the final scalar reduction stage for vfred\[min,max] and overwrite vd as vs1 *in the old data datapath*.","22/Jul/22 8:07 AM;6065017e90e3950069cf01c5;{quote}We can solve this problem by checking if all the elements are masked in the final scalar reduction stage for vfred\[min,max] and overwrite vd as vs1 *in the old data datapath*.{quote}

this means we need to consider the full LMUL-wide mask (constrained by vl)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] move from reset based Kill to a proper sideband kill for TGV vector divider,,,,,,MAL-2221,120715,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Won't Do,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/21/2022 9:27,9/23/2022 0:27,9/28/2022 0:51,8/30/2022 19:59,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Currently TGV’s vector divider relies on a global reset signal to implement the FSM reset when a kill is received (e.g. in the case of a flush).

This is a bad solution since:

* it relies on synchronous resets (which is not SiFive’s reset policy)
* we may reset more registers to what is actually required to reset the divider’s FSM in a ready-to-start-again state

A new {{kill}} sideband signal should be added and propagated to all the integer and floating-point dividers.",Kira Tsao,Nicolas Brunie,,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=DECLINED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-30T19:56:38.000-0700"",""stateCount"":1,""state"":""DECLINED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,,,,,,,,,,,,,,,,2|i007bb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,59:57.2,30/Aug/22 7:59 PM;5e1a4f5ec578120daca5ff8e;Close this ticket according to the decision made.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] review and refactor flush timing in VexPipe,,,,,,MAL-2220,120712,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/21/2022 8:41,9/13/2022 15:05,9/28/2022 0:51,9/13/2022 15:05,,,,,,,,,,,,,Implementation,TGV_RTL/VEX,,,,,,,,0,,,,"* flushes may not be applied uniformly and with good timing in {{VexPipe}} . We may need to flop them and apply them in the next cycle to ensure timing.
* Kill inflight instructions in pipelines when flushed: [https://github.com/sifive/federation/pull/24825#discussion_r931595055|https://github.com/sifive/federation/pull/24825#discussion_r931595055]

See comment [https://github.com/sifive/federation/pull/24499/files#r925049657|https://github.com/sifive/federation/pull/24499/files#r925049657]



The flush usage in VexPipe: [https://docs.google.com/spreadsheets/d/1LtaSFWQSy-ZfbKlAdyiLtSR68seOTKTqLBUTltBCHcs/edit#gid=0|https://docs.google.com/spreadsheets/d/1LtaSFWQSy-ZfbKlAdyiLtSR68seOTKTqLBUTltBCHcs/edit#gid=0|smart-link] 

The signals in red mark have potentially heavy load and need to be fixed to reduce the {{io.flushReq}} load.

Other signals are buffered and used in next stage.",Andrew Hanselman,Brad Wu,Nicolas Brunie,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,MAL-2604,,MAL-2374,MAL-2388,MAL-2389,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,,,,,,,,,,,,,2|i007an:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Orca DR,,,,,,,,,,,,,,,,,,,,,,,,,,20:28.4,27/Jul/22 3:20 PM;609d7e1f5998a6006800dcc5;Kill inflight instructions in pipelines when flushed: [https://github.com/sifive/federation/pull/24825#discussion_r931595055|https://github.com/sifive/federation/pull/24825#discussion_r931595055],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion Failure: SiFive_RDU_assert,[TGV] Assertion Failure: SiFive_RDU_assert,,,,,MAL-2219,120698,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,7/21/2022 5:55,9/7/2022 17:43,9/28/2022 0:51,7/25/2022 10:03,,,,,,,,,,,Panda DR,,TGV_RTL/X2Y,,,,,,,,,0,TGV,,,"We see the below assertion getting fired. The SV2FreePtr_Ren pointer is not getting increased. when there the ROB_empty signal is high 
*Error Message*

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_156_failures/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_RDU_assert.sv"", 1151: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.SiFive_RDU_assert: at time 1357362500 ps
Assertion failed (verification library): S2V alloc pointer and free pointer should match when ROB is empty  @[RDU.scala 2255:15]
Fatal: ""/scratch/ishitashah/tgv_regression/sign_156_failures/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_RDU_assert.sv"", 1153: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.SiFive_RDU_assert: at time 1357362500 ps{noformat}

*SHA:* 42b84f1

*config:* coreip_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=10"",
    ""+axi_mem_dither_cycles=10"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0025"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 871450071
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath*
{{gamma25:/scratch/ishitashah/tgv_regression/sign_156_failures/federation/builds2/coreip_p670/sim/rerundir1/rerun.outline/sting_StingSiFiveTuple_T_0025/sting/sifive/vector/vector_tgv_dev.conf}}",Ishita Shah,,,,,,,,,,,,,,,607e26355431a500701f5aed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-07-25T10:02:17.000-0700"",""stateCount"":3,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,19d98941dfc54ad0a26516f13254d43b81bd63e2,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,3,0,,,,100,,,No,,,,,,,,,,,,2|i0077r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure : MSHR Entry Valid Non-Reusable Hang,Assertion Failure : MSHR Entry ,,,,,MAL-2217,120673,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,John Ingalls,5bb6808b9ba2930990f81895,Deepika S K,622a9d30c4d0fe0069575ac9,Deepika S K,622a9d30c4d0fe0069575ac9,7/20/2022 23:19,7/21/2022 20:13,9/28/2022 0:51,7/21/2022 11:06,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"The MSHR Valid Hang counter exceeds the hang threshold. {{mshrE_valid_q}} remains high after counter is reset, making the counter increment until the threshold is exceeded.

*Error Message :* 

{noformat}Error: ""/scratch/deepikas/mallard-RIT-359/federation/builds/coreip_p550/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", 730: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.mshrEntries_1.SiFive_MSHREntry_assert: at time 18176922500 ps
Assertion failed (verification library): MSHR Entry Valid Non-Reusable Hang  @[MSHR_Mallard.scala 4216:14]
Fatal: ""/scratch/deepikas/mallard-RIT-359/federation/builds/coreip_p550/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", 732: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.mshrEntries_1.SiFive_MSHREntry_assert: at time 18176922500 ps{noformat}


*Dump path :* 

{noformat}gamma25 : /scratch/deepikas/mallard-RIT-359/federation/builds/coreip_p550/sim/sim/more_div.outline/sting_StingTopMoreTuple_T_0357/sting/valtrix/more_div.conf{noformat}



*Simscope link :* [https://simscope.internal.sifive.com/sigs/743/cljj1f9u8fh8|https://simscope.internal.sifive.com/sigs/743/cljj1f9u8fh8]

*Steps to reproduce :* 

* Commit : 9236ede5b8c46cb6b76480c7b3874256245eed8b
* Config : coreip_p550


*rerun.outline :* 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingTopMoreTuple_T_0357"",
  ""subtest"": ""valtrix/more_div.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 231808604
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}


",Deepika S K,Rakesh Palakurthi,,,,,,,,,,,,,,622a9d30c4d0fe0069575ac9,62350e943eacc50071ff0753,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2197,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-70,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9236ede5b8c46cb6b76480c7b3874256245eed8b,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,cf41d40c931e126f2ea20935acbab8b28d514d2b,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i0072n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: LSTM stage pre-calculated age wrong versus LSTR stage 1,Assertion Failure: LSTM stage,LSU (Load Store Unit),LSTPipe,,Refer https://github.com/sifive/arch-specs/blob/master/core/mallard_lsu_mas.adoc#loadstore-tag-lst-pipe,MAL-2216,120668,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,7/20/2022 22:11,7/23/2022 9:31,9/28/2022 0:51,7/22/2022 8:46,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"*Error:*

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/336/builds/coreip_p650_tiny_drq_nrq/verilog/design/assertions/SiFive_LSTPipe_assert.sv"", 1346: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LSTPipes_0.SiFive_LSTPipe_assert: at time 17487862500 ps
Assertion failed (verification library): LSTM stage pre-calculated age wrong versus LSTR stage 1  @[LSTPipe.scala 5338:20]

Fatal: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/336/builds/coreip_p650_tiny_drq_nrq/verilog/design/assertions/SiFive_LSTPipe_assert.sv"", 1348: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LSTPipes_0.SiFive_LSTPipe_assert: at time 17487862500 ps{noformat}



Dump at {{gamma27:/scratch/saurabhs/mallard_master_336_xprop_121/federation/builds/coreip_p650_tiny_drq_nrq/sim/sim/LSTPipe_assert.outline/sting_StingTuple_T_0043/sting/valtrix/regress_base}}



To reproduce:

*Build*: coreip_p650_tiny_drq_nrq

*Commit*: dd932fa

*Regression*: master/nightly-mallard/336 

*Simscope*: [https://simscope.internal.sifive.com/sigs/708/clk5musjbnr5|https://simscope.internal.sifive.com/sigs/708/clk5musjbnr5]

*rerun.outline*: 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingTuple_T_0043"",
  ""subtest"": ""valtrix/regress_base"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1640038143
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",John Ingalls,Saurabh Singh,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-70,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-23T09:12:22.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24752,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i0071j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,44:57.7,"21/Jul/22 7:44 AM;5bb6808b9ba2930990f81895;[~accountid:607e26f781e7b900681be48c] can you please double-check this path?  I can’t find it, and I can’t reproduce this either.

{quote}Dump at {{gamma10:/scratch/saurabhs/mallard_master_336_xprop_121/federation/builds/coreip_p650_tiny_drq_nrq/sim/sim/LSTPipe_assert.outline/sting_StingTuple_T_0043/sting/valtrix/regress_base}}{quote}","21/Jul/22 12:07 PM;607e26f781e7b900681be48c;[~accountid:5bb6808b9ba2930990f81895] 
My bad. The machine is {{gamma27}}. Path is the same.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
CSR timing: move WorldGuard CSRs to unit shadow,,,,,,MAL-2215,120649,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,7/20/2022 17:51,9/6/2022 9:13,9/28/2022 0:51,,,,,,,,,,,,,,RTL/Frontend,RTL/LSU,RTL/Tile,Timing,,,,,,0,,,,"[https://sifive.atlassian.net/browse/MAL-1330|https://sifive.atlassian.net/browse/MAL-1330|smart-link] created the “Shadow CSRs” in each unit.

We should also move the WorldGuard CSRs into this list, and remove the {{process_wids}} inputs to IFU and LSU.

This timing path has not shown up yet because we have not yet added WorldGuard to the Mallard configs for synthesis.",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,MAL-1330,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i006xj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,2,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Accumulator MAS Updates,,,,,,MAL-2214,120644,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,7/20/2022 17:11,7/28/2022 23:59,9/28/2022 0:51,7/22/2022 9:44,,,,,,,,,,,Panda DR,,TGV_RTL/MU,TGV_RTL/VEX,,,,,,,,0,,,,Update MAS with information about new vector accumulator functionality used by mask producing instructions,Andrew Hanselman,,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-22T09:43:30.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,cb5d0ccad6c079a21f0e2db2184462f05113857b,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i006wf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] [RVV 7.4] Implement unit-stride vector mask store,,,,,,MAL-2213,120643,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,7/20/2022 17:03,9/19/2022 7:49,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,TGV_RTL/RDU,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,0,,,,"Implement the masked version of these instructions:
{{vse8.v}}
{{vse16.v}}
{{vse32.v}}
{{vse64.v}}

There will be (and already are, in fact) multiple subtasks under this one.",Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Srivatsa Yogendra,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2211,,,,,,,,,,,,VI-8059,,,,,,MAL-2209,MAL-2067,MAL-2453,MAL-2657,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,{},,,,,,,ghx-label-7,,[TGV] [RVV 7.4] unit-stride masked stores,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,purple,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i006w7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,21/Aug/22 2:21 PM;5fd15143b4a74900763834e0;This epic corresponds to [~accountid:60e8c16ad6ba9a0077ad4e51]'s milestone #17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] [RVV 7.4] Implement unit-stride vector mask load,,,,,,MAL-2212,120642,,Epic,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,7/20/2022 17:02,9/12/2022 11:45,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,TGV_RTL/RDU,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,0,,,,Implement the {{vlm.v}} instruction,Alexandre Solomatnikov,Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Srivatsa Yogendra,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2210,,,,,,,,,,,,VI-8056,,,,,,MAL-2209,MAL-2067,MAL-2453,MAL-2495,MAL-2496,MAL-2525,MAL-2583,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,{},,,,,,,ghx-label-2,,[TGV] [RVV 7.4] unit-stride masked loads,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,dark_yellow,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i006vz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,26:23.5,21/Aug/22 2:19 PM;5fd15143b4a74900763834e0;This epic corresponds to [~accountid:60e8c16ad6ba9a0077ad4e51]'s milestone #14,"08/Sep/22 1:26 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;This is done - unit-stride vector mask loads passed smoke tests for mask undisturbed, {{LMUL==1}} and {{LMUL>1}}.

Mask agnostic also works correctly in RTL but spike doesn’t simulate it correctly [https://sifive.atlassian.net/browse/VI-8283|https://sifive.atlassian.net/browse/VI-8283|smart-link].",08/Sep/22 4:13 PM;5fd15143b4a74900763834e0;I’ll mark it complete when we pass the Milestone 14 L1 tests. I’ve asked the DV team to get that ready as soon as they can.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] [RVV 7.4] Implement unit-stride vector store,,,,,,MAL-2211,120641,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,7/20/2022 16:59,8/22/2022 10:08,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,TGV_RTL/RDU,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,0,,,,Implement the {{vsm.v}} instruction,Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Srivatsa Yogendra,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2213,,MAL-2210,,,,,,,,,,,,VI-8050,,,,,,MAL-2209,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,{},,,,,,,ghx-label-3,,[TGV] [RVV 7.4] unit-stride stores,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,yellow,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i006vr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,21/Aug/22 2:17 PM;5fd15143b4a74900763834e0;This epic corresponds to [~accountid:60e8c16ad6ba9a0077ad4e51]'s milestone #8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] [RVV 7.4] Implement unit-stride vector loads,,,,,,MAL-2210,120640,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,7/20/2022 16:57,9/16/2022 12:16,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,TGV_RTL/RDU,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,0,,,,"Implement these instructions:
{{vle8.v}}
{{vle16.v}}
{{vle32.v}}
{{vle64.v}}

There will be (and already are, in fact) multiple subtasks under this one.",Alexandre Solomatnikov,Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Kavitha Raghavan,Srivatsa Yogendra,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,60e8c16ad6ba9a0077ad4e51,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,MAL-2211,MAL-2212,,,,,,,,,,,,,VI-8049,,,,,,MAL-2209,,,MAL-2524,MAL-2531,MAL-2534,MAL-2640,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,{},,,,,,,ghx-label-12,,[TGV] [RVV 7.4] unit-stride loads,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,grey,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i006vj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,15:40.7,21/Aug/22 2:15 PM;5fd15143b4a74900763834e0;This epic corresponds to [~accountid:60e8c16ad6ba9a0077ad4e51]'s milestone #7,22/Aug/22 10:15 AM;5a938e9c0913194d2d262658;[~accountid:5fd15143b4a74900763834e0] This and [https://sifive.atlassian.net/browse/MAL-2457|https://sifive.atlassian.net/browse/MAL-2457|smart-link] corresponds to the same milestone?,"22/Aug/22 11:20 AM;5fd15143b4a74900763834e0;There are some duplicates I need to clean up, but not the one you’re referring to. Fault-only-first loads are their own specific category in the RVV.",23/Aug/22 1:31 PM;60e8c16ad6ba9a0077ad4e51;[~accountid:5fd15143b4a74900763834e0] - I too see [https://sifive.atlassian.net/browse/MAL-2464|https://sifive.atlassian.net/browse/MAL-2464|smart-link] and this ticket correspond to the same Milestone #9 from RTL (I.E: Milestone 9: Whole Register Loads),30/Aug/22 12:05 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;Should be done after this merge [https://github.com/sifive/federation/commit/21c4f9bfdae6434b89cd2978f7c18f10b157d237|https://github.com/sifive/federation/commit/21c4f9bfdae6434b89cd2978f7c18f10b157d237|smart-link] ,"31/Aug/22 6:27 AM;5fd15143b4a74900763834e0;We needed [https://github.com/sifive/federation/commit/520e2f26fd342f723d6d37473f09f4604b4bf0ed|https://github.com/sifive/federation/commit/520e2f26fd342f723d6d37473f09f4604b4bf0ed|smart-link] to handle loads to {{v0}}.  We also have at least one outstanding bug (MAL-2524) to merge.

RTL milestone 4 is met, but leaving this Epic open until we can run/pass the L1 tests for milestone 7.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Support the full list of RVV 1.0 load/store instructions,,,,,,MAL-2209,120639,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,7/20/2022 16:52,9/14/2022 7:50,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,TGV_RTL/RDU,TGV_RTL/SEQ,,,,,,0,,,,Support the full list of RVV 1.0 load/store instructions in TGV,David Kravitz,John Ingalls,Nicolas Brunie,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2210,MAL-2211,MAL-2212,MAL-2213,MAL-2398,MAL-2442,MAL-2066,MAL-2452,MAL-2067,MAL-2453,MAL-2455,MAL-2457,MAL-2458,MAL-2459,MAL-2460,MAL-2461,MAL-2462,MAL-2463,MAL-2464,MAL-2465,MAL-2466,MAL-2467,MAL-2476,MAL-2520,MAL-2574,MAL-2403,MAL-2612,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-13,,Support the full list of RVV 1.0 load/store instructions in TGV,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,dark_green,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i006vb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] refactor vl/vtype/vstartZero assign between ID and REN in RDU,,,,,,MAL-2208,120632,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/20/2022 13:49,8/5/2022 1:34,9/28/2022 0:51,8/4/2022 12:33,,,,,,,,,,,,,RTL/RDU,,,,,,,,,0,,,,Hoisting loop body parts which are lane invariant + [https://github.com/sifive/federation/pull/24665#issuecomment-1190707533|https://github.com/sifive/federation/pull/24665#issuecomment-1190707533],Andrew Hanselman,Nicolas Brunie,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-27T16:02:04.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/e35c615f767b88ab2b25712d020a68a0cc1920c2,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i006tr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] switch from online decoding in unit applicable function to pre-decode micro-code,,,,,,MAL-2207,120617,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/20/2022 11:09,7/20/2022 11:35,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"In {{TGV}}'s {{VexPipe}} all the functional units expose an {{applicable}} methods which performs some payload decoding to determine if the unit should be in charge of the current uop. This decoding is often made in {{EX}} stage. It should be factorized as a specific one-hot micro-code, which could be decoded earlier (e.g. {{RR}}).",Andrew Hanselman,David Kravitz,Nicolas Brunie,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i006qf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,20:53.6,20/Jul/22 11:20 AM;5fd15143b4a74900763834e0;Should this be considered as related to [https://sifive.atlassian.net/browse/MAL-2169?searchSessionId=8f1ce411-e063-48e2-8f49-31bc152b8956&searchObjectId=120102&searchContainerId=11628&searchContentType=issue|https://sifive.atlassian.net/browse/MAL-2169?searchSessionId=8f1ce411-e063-48e2-8f49-31bc152b8956&searchObjectId=120102&searchContainerId=11628&searchContentType=issue|smart-link] ?,"20/Jul/22 11:22 AM;6065017e90e3950069cf01c5;Yes, this would be an extension of this to {{funct6/funct7}}",20/Jul/22 11:34 AM;6065017e90e3950069cf01c5;I forgot to hit save on the task description …,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] test & debug of replay in VexPipe,,,,,,MAL-2206,120616,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/20/2022 11:03,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Testing non-mask operations with replay conditions (mostly coming from Baler/LSU).

Mask operations are covered in [https://sifive.atlassian.net/browse/MAL-2135|https://sifive.atlassian.net/browse/MAL-2135|smart-link] ",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,MAL-2605,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i006q7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Assertion failed:SiFive_VexPipe_assert,[TGV] Assertion failed : SiFive_VexPipe_assert,Execution Unit ,Vex pipe,,,MAL-2205,120588,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,7/20/2022 7:31,9/7/2022 17:43,9/28/2022 0:51,7/21/2022 9:37,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"We see the below assertion getting fired from the VexPipe block where credit from Credit.scala is getting overflow.


*Error Message* 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_155_failures/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_VexPipe_assert.sv"", 305: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_0.SiFive_VexPipe_assert: at time 2341702500 ps
Assertion failed: credit overflow credit=1, debit=0, full=1
    at Credit.scala:22 assert(!(credit && full) || debit, ""credit overflow credit=%d, debit=%d, full=%d"", credit, debit, full)

Fatal: ""/scratch/ishitashah/tgv_regression/sign_155_failures/federation/builds2/coreip_p670/verilog/design/assertions/SiFive_VexPipe_assert.sv"", 307: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_0.SiFive_VexPipe_assert: at time 2341702500 ps{noformat}

*SHA:* [+c54da3d+|https://simscope.internal.sifive.com/models/undefined--master--c54da3d175865d9629bd61139d34f3ba2d64c0ba]

*config:* coreip_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0264"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 4118667150
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath*
{{@gamma25:/scratch/ishitashah/tgv_regression/sign_155_failures/federation/builds2/coreip_p670/sim/rerundir1/rerun.outline/sting_StingSiFiveTuple_T_0264/sting/sifive/vector/vector_tgv_dev.conf}}",Alexandre Solomatnikov,David Kravitz,Ishita Shah,Nicolas Brunie,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,607e26355431a500701f5aed,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-21T09:16:07.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/62fa0a073018f5eada14e0dbe6acbdc464a11ca7,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i006k7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,55:23.2,20/Jul/22 8:55 AM;5fd15143b4a74900763834e0;[~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] please take a look and let me know if this belongs to someone else,"20/Jul/22 2:10 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;[~accountid:6065017e90e3950069cf01c5] divider credit assertion.

Debuggable SFC waveform is in gamma11:/scratch/sols/MAL-2205/builds/c54da3d1758/coreip_p670/sim/sim/MAL-2205.outline/sting_StingSiFiveTuple_T_0264/sting/sifive/vector/vector_tgv_dev.conf

{{divKill}} reset credit counter but {{divmod_io_out_valid}} stays high the next cycle incrementing credit counter.","20/Jul/22 3:55 PM;6065017e90e3950069cf01c5;The bug seems linked to some control signals not reset to a default inactive value in the vector divider we imported from Bullet.

TGV resets the divider when the on-going div/rem uops is affected by a flush (kill), and not resetting the register forwarding those control signals could lead to spurious output valid flags.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU Assertion: MAL-986: branch flush must not be older than ROB flush,LSU Assertion : MAL-986,,,,,MAL-2204,120582,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,7/20/2022 5:16,7/21/2022 11:31,9/28/2022 0:51,7/20/2022 18:20,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"Description
We see the following Assertion
Error: ""/scratch/naveenr/master/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LSU_assert.sv"", 935: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.SiFive_LSU_assert: at time 2214402500 ps
Assertion failed (verification library): MAL-986: branch flush must not be older than ROB flush  @\[LSU.scala 430:14]
Fatal: ""/scratch/naveenr/master/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LSU_assert.sv"", 937: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.SiFive_LSU_assert: at time 2214402500 ps
$finish called from file ""/scratch/naveenr/master/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LSU_assert.sv"", line 937.



To recreate the failure:

# Clone federation and checkout the commit 
de5ca5a3b6bc6e12fde42c0169b131238041a426
# build coreip_u8_minimal_vector and rerun the test using the outline

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
\{
""name"": ""torture_debug"",
""raw_plusargs"": \[
""+clock_periph=3"",
""+clock_div0=3"",
""+clock_div1=3"",
""+clock_div2=3"",
""+clock_div3=3"",
""+clock_div4=3"",
""+use_sb"",
""+mem_stats"",
""+sb_max_num_errors=0"",
""+axi_mem_latency_cycles=40"",
""+axi_mem_dither_cycles=20"",
""+jtag_reset_enable=1"",
""+jtag_sequence=jtag_reset"",
"""",
""+cosim_scoreboard_stall_time=1000000""
],
""subdir"": ""torture_debug_mmio_jtag_reset_T_0033"",
""subtest"": ""mmio"",
""enable_postsim_py_check"": false,
""seed"": \{
""value"": 870595951
},
""sim"": \{
""vendor"": ""vcs""
},
""tilelink"": \{
""timeout"": ""2000000""
},
""program"": \{
""torture_inbound"": true,
""reset_vector_scheme"": ""first_mem_periph_sys""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))



Waves:: 
gamma26::: /scratch/naveenr/master/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline_lsu_assert/torture_debug_mmio_jtag_reset_T_0033/torture_debug/mmio",Josh Smith,Naveen Rathore,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,6235105a3eacc50071ff07ec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,de5ca5a3b6bc6e12fde42c0169b131238041a426,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{repository={count=4, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":4,""lastUpdated"":""2022-07-25T10:56:24.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":4,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24692,,,n/a,,,,,,,,,Simulation-Torture,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i006iv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,36:07.1,"20/Jul/22 4:36 PM;5acffeafaa802f2a797a955c;[~accountid:5bb6808b9ba2930990f81895] I think the assertion is missing the check of the {{before}} bit.  There are two similar assertions in LSU.scala, and only the first checks the {{before}} bit.

{noformat}  when (lsuFlushReq.valid) {
    val flushYoungerThanCommitPtr = io.robCommitPtr.compare(lsuFlushReq.bits.gid, true.B) ||
                                    ((io.robCommitPtr.decrement(1.U, mp.rob.nEnt) === lsuFlushReq.bits.gid) && lsuFlushReq.bits.before)
    lsuAssert(flushYoungerThanCommitPtr, ""MAL-974: flush must not be older than committed instruction"")
  }

  when (io.robFlushReq_E1.earlyValid && io.brFlushReq_BR1.valid) {
    lsuAssert(io.robFlushReq_E1.bits.gid.compare(io.brFlushReq_BR1.bits.gid, true.B),
      ""MAL-986: branch flush must not be older than ROB flush"")
  }{noformat}

The second assertion is the one that’s firing.  In this test the ROB is completely full, the ROB retire pointer is 0x18, and the absolute youngest instruction in the core is the branch with gid 0x37.  The ROB flush is “flush before”, so the flush gid is 0x37.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Slider byte slide amount inputs overflows,[TGV] Slider byte slide,,,,,MAL-2203,120556,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/19/2022 21:09,9/7/2022 17:43,9/28/2022 0:51,7/21/2022 7:51,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"Over master {{eff8f911902}}, when enabling new sting instructions.

A cosim issue was in fact an overflow of a very large slide amount 0x8000000000000000` for a {{vslideup.vx}} with {{SEW=32b}}. The slider only accomodated 64-bit byt slide amount, which is too little to fit the {{slide amout << 2}}",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-21T07:51:06.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/c64e2bd6e395963f12f869c56d1599cd8547747c,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i006d3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Data mismatch on a vslideup operation,[TGV] Data mismatch ,Execution Unit ,Vector,,,MAL-2202,120530,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,7/19/2022 15:38,9/7/2022 17:43,9/28/2022 0:51,7/21/2022 9:41,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"We see a write data mismatch for a vslideup operation. 

The instruction is 


{noformat}core   0: 0x0000000041e2019c (0x3b5cc3d7) vslideup.vx v7, v21, s9
core   0: 3 0x0000000041e2019c (0x3b5cc3d7) e32 m1 l4

s9  having the value 0x4000000000000000
v21 having the value 0xa9e0000053e00000a7e000006c000006
v7  having the value 0x00000027000000570000002600000063

After execution, the RTL updates the register v7 with 
0xa9e0002753e00057a7e000266c000067{noformat}

Which seems to be an or operation between the previous value of v7 and v21. But the update should have been an undisturbed one, as the OFFSET in s9 > VL





To recreate the failure:

# Clone federation and checkout the commit ce90b34287f37bc3a153f1bb5c716f6019e77fda
# build the design u8_minimal_vector and rerun the simulation using the outline
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+MEM_ERROR_INJECT=.*\\.icDataArray.*ext,1,0,20"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0014"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2668385642
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}


the waves are at {{gamma12:/scratch/verif/srivatsa/Andrews_failure/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0014/sting/sifive/vector/vector_tgv_dev.conf}}",Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/c64e2bd6e395963f12f869c56d1599cd8547747c,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i00693:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,14:41.4,20/Jul/22 10:03 AM;5a938e9c0913194d2d262658;[~accountid:6065017e90e3950069cf01c5] is this the same as [MAL-2203|https://sifive.atlassian.net/browse/MAL-2203],"20/Jul/22 10:14 AM;6065017e90e3950069cf01c5;[~accountid:5a938e9c0913194d2d262658] , it looks to be the same bug, {{0x4000000000000000 << SEW=2}}  will overflow from the 64-bit slide amount width expected.

The fix for MAL-2203: [https://github.com/sifive/federation/pull/24670|https://github.com/sifive/federation/pull/24670|smart-link]  should also fix this one.",20/Jul/22 11:21 AM;6065017e90e3950069cf01c5;We may also need the fixes from [https://github.com/sifive/federation/pull/24665|https://github.com/sifive/federation/pull/24665|smart-link] ,20/Jul/22 11:57 AM;6065017e90e3950069cf01c5;With both fixes the test is passing on my side.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] VRDU Assertion failing in sting tests,[TGV] VRDU Assertion failing ,,,,,MAL-2201,120511,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,7/19/2022 14:34,9/7/2022 17:43,9/28/2022 0:51,7/19/2022 21:43,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"We see the assertion 

{noformat}Error: ""/scratch/srivatsa/debug_regr/c54da3d175865d9629bd61139d34f3ba2d64c0ba/builds/sfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VRDU_assert.sv"", 223: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.SiFive_VRDU_assert_0: at time 2303202500 ps
Assertion failed (verification library): pipe N should only be valid if pipes 0:N-1 are also valid  @[VRDU.scala 353:9]
Fatal: ""/scratch/srivatsa/debug_regr/c54da3d175865d9629bd61139d34f3ba2d64c0ba/builds/sfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VRDU_assert.sv"", 232: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.SiFive_VRDU_assert_0: at time 2303202500 ps
$finish called from file ""/scratch/srivatsa/debug_regr/c54da3d175865d9629bd61139d34f3ba2d64c0ba/builds/sfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VRDU_assert.sv"", line 232.{noformat}

failing on sting tests. 



To recreate the failure:

# Clone federation and checkout the commit c54da3d175865d9629bd61139d34f3ba2d64c0ba
# build coreip_u8_minimal_vector and rerun the test using the outline
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0104"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2679694452
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}


The generated waves are at 

{{gamma12:/scratch/srivatsa/debug_regr/c54da3d175865d9629bd61139d34f3ba2d64c0ba/builds/sfc/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0104/sting/sifive/vector/vector_tgv_dev.conf}}",David Kravitz,Srivatsa Yogendra,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-19T21:16:51.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/56f50f3ad8e0c1bbccb8ceb746eada8d19931fe8,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i0064v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,00:48.8,19/Jul/22 3:00 PM;5fd15143b4a74900763834e0;[~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] please take a look at this,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[TGV] Permute unit must include ""simple"" ops w/ LMUL > 1 the same as ""complex"" ops in deadlock avoidance logic",,,,,,MAL-2200,120509,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,7/19/2022 14:29,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"[~accountid:5e137458efa19b0e976b5c7a] demonstrated a deadlock situation when the permute unit starts a complex operation while an older, simple operation with LMUL > 1 is only partly executed. One solution is to put simple slides -shifts- on a different VEX pipe than gather/compress/complex slides, but in case we build a single pipeline config, the issue queue needs to handle [the case described here|https://sifive.atlassian.net/browse/SPARTA-1826].



The key constraint here is that any dependency of a complex permute sequence must be issue before any uops of the complex permute sequence:

* if the dependency is another unit, it can be issued even after the complex sequence has started to issue without creating deadlocks
* if the dependency requires the single available permute engine then it must issue (and execute) before the complex sequence issues and blocks the permute engine.



For single-pipe option, the solution is to ensure a large permute sequence is only issued if it is the oldest of all permutations, this can be enforce several ways:

* ensure all permute are issued in-order
** but this is over-constrained as it is not require for simple permutes to issue after complex ones (only the reciprocal)
* ensure uops from complex permutes are issued only if they are the oldest of all permute uops
** More precisely:
***  uops from the same original complex permute insn (identical gid) can be issued out-of-order amongst them
*** uops from simple permutes (any LMUL <= 1, {{*.vi}}, and {{vslide1*}}) can issue in any order with the only constraint that they must issue before a complex permute if they are older ",Brad Wu,Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,62103777eb2978006893b778,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-11T01:48:52.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,,,,,,,,,,,,,2|i0064f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] LSU: fix tgv_vle-vse.outline,[TGV] LSU: fix tgv_vle-vse.outline,,,,,MAL-2199,120504,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Zhiqiang Hao,5d02d411febd110bc78aabc3,Zhiqiang Hao,5d02d411febd110bc78aabc3,7/19/2022 14:02,9/7/2022 17:43,9/28/2022 0:51,7/19/2022 15:40,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"Config: {{coreip_p670}}

Commit: {{c54da3d175865d9629bd61139d34f3ba2d64c0ba}}

Rerun:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vse64.v"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vse64.v_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-1_VSETIVLI-1_FENCEbeforeVSETVL-1_VSETVL-0_FLMUL-0_NonzeroVstart-0_Sample-10_AVL-16_INITFULLVREG-1_LMUL-1_TGV-1_IMM-1_SEW-64"",
  ""seed"": {
    ""value"": 4192739897
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



In a recent pr, [https://github.com/sifive/federation/pull/24596|https://github.com/sifive/federation/pull/24596|smart-link] , it involves an assertion

{noformat}lsuAssert(UIntToOH1(lstr_lgSize_q) === (lstr_sizeM1_q +& lstr_uopOffset_q), ""LSTR sizeM1 plus uopOffset should add up to lgSize""){noformat}



In the generated verilog, we will see

{noformat}wire [13:0] _GEN_25 = 14'h7F << lstr_lgSize_q;	// @[package.scala:350:71]
...
if (lstr_valid_q & ~reset & ~(_GEN_25[6:0]) != {2'h0, 5'({1'h0, lstr_sizeM1_q} + {1'h0, lstr_uopOffset_q})}) begin{noformat}

So in verilog, {{UIntToOH1}} was treated as {{14'h7F << lstr_lgSize_q}}



In the failure test, 

{{lstr_lgSize_q}}=2, {{lstr_sizeM1_q}}=3, {{lstr_uopOffset_q}}=0, and an assertion will get fired",Zhiqiang Hao,,,,,,,,,,,,,,,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-70,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-19T15:39:58.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24624,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i0063b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Investigate IEX multiplier power optimizations (for 3 to 2-cycle IEX MUL change),,,,,,MAL-2198,120494,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/19/2022 11:03,8/19/2022 2:56,9/28/2022 0:51,7/28/2022 9:00,,,,,,,,,,,,,Power,RTL/IEX,,,,,,,,0,,,,"As shown in:

[https://sifive.atlassian.net/wiki/spaces/CIP/pages/2313453576/PD+study+15+P550+and+P650+2-cycle+integer+MUL|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2313453576/PD+study+15+P550+and+P650+2-cycle+integer+MUL|smart-link] 

power numbers get better with 2-cycle multiplier



-When decreasing the IEX mul latency from 3 to 2 cycles, a power consumption increase of about 3% has been noticed on Dhrystone without any performance improvements.-

-The reason(s) behind this power increase should be investigated and solution suggested.-

-Need to evaluate:-

* -difference in flop numbers-
* -difference in ULVT ration-

*-Track 0:-* -The first stage of the multiplier datapath may have grown because of the latency reduction and is not data gated when other uops are using the same pipeline. We may consider duplicating input register (with separate clock gating) or data gating to prevent the extra activity.-

-As pointed out by- [~accountid:5acffeafaa802f2a797a955c] -, this is already implemented that way today:- [-https://github.com/sifive/federation/blob/master/mallard/src/main/scala/core/mallard/ExPipe.scala#L586-|https://github.com/sifive/federation/blob/master/mallard/src/main/scala/core/mallard/ExPipe.scala#L586]

{noformat}val mulSrcs_EX = RegEnable(instSrcs_RR, instValid_RR && instPayload_RR.cmn.ctrl.mulOrPopc){noformat}

+*-Track 1:-*+ -evaluate the addition of a clock gate on the IEX mul-

+*-Track 2:-*+ -consider data/reg gating based on actual multiplication size (reducing power for smaller sizes)-",Brian Grayson,Josh Smith,Mehul Thakkar,Nicolas Brunie,,,,,,,,,,,,5e1371705361330daaeaf389,5acffeafaa802f2a797a955c,622a8208db58c100687dd15a,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2339,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,,,,,,,,,,,,,2|i00613:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,31:49.3,"19/Jul/22 11:31 AM;5acffeafaa802f2a797a955c;{quote}*Hypothesis 0:* The first stage of the multiplier datapath may have grown because of the latency reduction and is not data gated when other uops are using the same pipeline. We may consider duplicating input register (with separate clock gating) or data gating to prevent the extra activity.{quote}

The integer multiplier _does_ have its own set of registers for the EX stage operands.  It should only be loaded for multiply or popcount instructions:

{noformat}val mulSrcs_EX = RegEnable(instSrcs_RR, instValid_RR && instPayload_RR.cmn.ctrl.mulOrPopc){noformat}","19/Jul/22 11:37 AM;6065017e90e3950069cf01c5;Thanks [~accountid:5acffeafaa802f2a797a955c] 

Ok so I really don’t understand why we are seeing 3% power increase at the tile level when going from 3 to 2-cycle latency.",19/Jul/22 3:07 PM;5acffeafaa802f2a797a955c;[~accountid:6065017e90e3950069cf01c5] is this from PowerArtist data?  Is there a link to the reports somewhere?,"19/Jul/22 4:23 PM;6065017e90e3950069cf01c5;This was initially an email between [~accountid:61ccb01d90cfd20071b96af2] and [~accountid:622a8208db58c100687dd15a] . I only got a copy on slack

{quote}Hi Erdinc,

As we discussed - I am seeing 2x dynamic and leakage power in exPipe_1 from Jan 2021 to April 2021. It comes to about 0.6% of total power.PowerArtist shows 3% increase in power. Let’s look at performance data to evaluate overall Trade-off.Its worth re-running PA by reverting the change and re-evaluate.

Thanks
Mehul{quote}",19/Jul/22 4:25 PM;6065017e90e3950069cf01c5;The run dates should read 2022,"19/Jul/22 5:59 PM;5acffeafaa802f2a797a955c;This is also kind of weird because I don’t think the latency was ever changed to 2 cycles for P550 or P650.  In this PR the default was kept at 3 cycles: [https://github.com/sifive/federation/pull/20828|https://github.com/sifive/federation/pull/20828|smart-link] 

Did Mehul specifically mention the multiplier?",19/Jul/22 6:07 PM;6065017e90e3950069cf01c5;You are right it was only changed for {{u8_maxed_out}} in fact.,19/Jul/22 6:08 PM;6065017e90e3950069cf01c5;I think the multiplier was discussed during an informal discussion about the root cause of that increase. ,"19/Jul/22 9:59 PM;5e1371705361330daaeaf389;Because I am a glutton for punishment 🙂 , I generated a P650 waveform of Dhrystone, and looked at the inputs of the multiplier unit. As Josh said, the inputs are data-gated/registered, and are held at 0x8 and 0xc8 during the thousands of cycles of loops, so there should be no dynamic power due to bit transitions in the multiplier, right?

If we are comparing power from January and April, there are way too many changes in that time window to nail it down to any one change without deeper bisecting.","19/Jul/22 10:05 PM;6065017e90e3950069cf01c5;You are both right, We need more detailed power reports. I was a bit too quick to draw conclusions. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: unroll in LSTPipe0 drops PTW in LSTPipe1 causing hang,LSU: unroll in LSTPipe0 drops PTW in LSTPipe1 ,EU (Front End Unit),PTW (Page Table Walk),,,MAL-2197,120461,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,7/19/2022 6:21,7/21/2022 11:06,9/28/2022 0:51,7/19/2022 14:00,,,,,,,,,,,,,RTL/PTW,,,,,,,,,0,,,,"*Error:*

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/335/builds/coreip_p550/verilog/design/assertions/SiFive_PTW_Mallard_assert.sv"", 228: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.ptw.SiFive_PTW_Mallard_assert: at time 29186142500 ps
Assertion failed: PTW Hang

    at PTW_Mallard.scala:839 assert(ptw_hangCounter < mp.ptw_hangThreshold, ""PTW Hang""){noformat}

Assertion is triggered as {{feu.ptw.SiFive_PTW_Mallard_assert.ptw_hangCounter[16:0]}} hits the threshold count. 

At {{T:22068522500ps}}, a request with {{feu.ptw.io_requestor_0_req_bits_bits_addr[37:0] = 0xa}} is seen, the response for which never arrives. dtb state {{core.lsu.dtlb.state[1:0]}}, is seen to be stuck at 2. Looks like the PTW FSM is stuck in one of the Wait phases as mentioned here [PTW State Machine (FSM)|https://github.com/sifive/arch-specs/blob/a402732098d706f96779c461b4e8c5b52afc23fb/core/rocket_mmu_mas.adoc#42-ptw-state-machine-fsm].

Wave Dump available at: {{gamma10:/scratch/saurabhs/mallard_master_335_xprop_120/federation/builds/coreip_p550/sim/sting_StingSiFiveHeavyTuple_T_0077/sting/sifive/memory/raw_waw_hazard_single_index.conf}}

To reproduce:

* Checkout *ce00a29*
* Build *coreip_p550*
* Run empty test to compile once. {{./sitest empty}}
* create a directory test,
{{mkdir -p sting_StingSiFiveHeavyTuple_T_0077/sting/sifive/memory/raw_waw_hazard_single_index.conf}}
cd path just created
* {noformat}scp -r <username>@sigma88:/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/335/builds/coreip_p550/sim/sim/moaoRIT-nightly.outline/sting_StingSiFiveHeavyTuple_T_0077/sting/sifive/memory/raw_waw_hazard_single_index.conf/* .{noformat}
* {noformat}Modify the vcs.sim.rerun.local to
  a. replace the simv to your local simv
  b. add this in any place +fsdbfile\=waves.fsdb +verbose
Modify cosim.cfg dtb to point to your local directory{noformat}
* run with {{source ./vcs.sim.rerun.local 2>&1 | tee simulation.err2}}",John Ingalls,Rakesh Palakurthi,Saurabh Singh,,,,,,,,,,,,,5bb6808b9ba2930990f81895,62350e943eacc50071ff0753,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2217,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-70,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{repository={count=5, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":5,""lastUpdated"":""2022-07-25T10:56:41.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":5,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24658,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i005u7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,57:27.2,"19/Jul/22 6:23 AM;607e26f781e7b900681be48c;[~accountid:5bb6808b9ba2930990f81895] ,
I tried to determine the Wait phase of the FSM it is stuck in but couldn’t proceed as I couldn’t determine a few signals mentioned here [https://github.com/sifive/arch-specs/blob/a402732098d706f96779c461b4e8c5b52afc23fb/core/rocket_mmu_mas.adoc#42-ptw-state-machine-fsm|https://github.com/sifive/arch-specs/blob/a402732098d706f96779c461b4e8c5b52afc23fb/core/rocket_mmu_mas.adoc#42-ptw-state-machine-fsm]

Let me know if I can help more on this.","19/Jul/22 10:57 AM;5bb6808b9ba2930990f81895;This was introduced recently (in the last few days) by [https://sifive.atlassian.net/browse/MAL-70|https://sifive.atlassian.net/browse/MAL-70|smart-link].

The bug is that I need to match up the PTW {{s1_kill}} and {{s1/s2/s3_nack}} signals now that the LSTR stage can hold.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] RTL fails on a trap after a vmv4r.v while cosim continues (sting),[TGV] RTL fails on a trap after a vmv4r.v,,,,,MAL-2196,120423,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/18/2022 16:53,9/7/2022 17:43,9/28/2022 0:51,7/21/2022 7:48,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"

master: {{eff8f911902}}

additional commits:  {{367ee2bfe01}} + {{b45181c658e}} (adding new instructions to sting outline)

{noformat}=== sitest found errors in test sim/MAL-2171.outline/sting_StingSiFiveTuple_T_0040/sting/sifive/vector/vector_tgv_dev.conf:
sifive_test_results_pkg::report_status.unnamed$$_0@(t=3232143000): Test Result Checking Registered Name [TestDriver.testHarness.cosim] Index ID [3] Done [0] Success [0] Exit Code [0]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=3232143000): FAILED: Test Result Registered Name [TestDriver.testHarness.i_TF] Index ID [4] Done [1] Success [0] Exit Code [1]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=3232143000): Test Result Checking Registered Name [TestDriver.testHarness.axi4MasterAgent.dpi] Index ID [5] Done [1] Success [1] Exit Code [21845]


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 646429 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 3,232,142,500 ps.

C                   0:     158721 [1] pc=[0000000080011362] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[10500073] DASM(10500073)
Error: Test Ended but Instructions still present in Cosim Scoreboard
{noformat}",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2174,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2171,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-21T07:47:58.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/ab4d60472742bc693b2583ee4563bb0f9466a866,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i005lr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,18/Jul/22 5:31 PM;6065017e90e3950069cf01c5;Many thanks to [~accountid:5b35a21d6b94db70b4d7753b] for helping circle down the issue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Analyze why there is switching activity on the Baler when running Dhrystone,,,,,,MAL-2195,120419,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,7/18/2022 14:34,8/18/2022 16:10,9/28/2022 0:51,8/18/2022 16:07,,,,,,,,,,,,,Power,TGV_RTL/BAL,,,,,,,,0,,,,,Alexandre Solomatnikov,Cristóbal Ramirez Lazo,John Ingalls,Josh Smith,Nicolas Brunie,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,62632262d7f1b80069c030b8,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,MAL-2111,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,,,,,,,,,,,,,2|i005kv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,46:31.9,"18/Jul/22 2:38 PM;62632262d7f1b80069c030b8;PowerArtist shows switching activity on the Baler when running Dhrystone on P670. Since Dhrystone does not include vector code, switching activity on TGV should be zero.

Specifically, this activity happens on the stb and ltb.



{adf:display=block}
{""type"":""table"",""attrs"":{""isNumberColumnEnabled"":false,""layout"":""default"",""localId"":""97585e43-18a8-4592-8f3e-b208b81fba49""},""content"":[{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv/bal/""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Power Unit: mW""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Category                         ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Internal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Switching""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Leakage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Total""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""logic                             ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.047""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.110""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.051""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.208""}]}]}]}]}
{adf}



{adf:display=block}
{""type"":""table"",""attrs"":{""isNumberColumnEnabled"":false,""layout"":""default"",""localId"":""aaa5be40-ce15-4c4c-8c9e-484e59fc8434""},""content"":[{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv/bal/stb""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Power Unit: mW""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Category                         ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Internal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Switching""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Leakage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Total""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""logic                             ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.022""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.010""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.009""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.041""}]}]}]}]}
{adf}



{adf:display=block}
{""type"":""table"",""attrs"":{""isNumberColumnEnabled"":false,""layout"":""default"",""localId"":""28903de8-8eb0-483a-9d6c-a4d4be5333e9""},""content"":[{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv/bal/ltb""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Power Unit: mW""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Category                         ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Internal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Switching""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Leakage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Total""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""logic                             ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.025""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.099""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.033""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.157""}]}]}]}]}
{adf}

Analyze why this is happening.",18/Jul/22 2:46 PM;5acffeafaa802f2a797a955c;I doubt we’re data-gating the load data result buses between the LSU and the Baler.  So any toggling on the LDF and LDWB buses will probably show up here.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vfrsqrt7.v should give canonical NaN when -inf as input,[TGV] vfrsqrt7.v ,,,,,MAL-2194,120417,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Zhiqiang Hao,5d02d411febd110bc78aabc3,Zhiqiang Hao,5d02d411febd110bc78aabc3,7/18/2022 14:29,9/7/2022 17:43,9/28/2022 0:51,7/22/2022 1:18,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"{noformat}core   0: 0x000000008b0218c2 (0x4ef217d7) vfrsqrt7.v v15, v15
Input: vrf[15]=0xfff00001 fff00000 ff800000 ff800000{noformat}

So it has an input of 0xff800000=-inf

For spike, it will give out a canonical NaN

{noformat}core   0: 0x000000008b0218c2 (0x4ef217d7) vfrsqrt7.v v15, v15
core   0: 3 0x000000008b0218c2 (0x4ef217d7) e32 m1 l4 v15 0x7fc000007fc000007fc000007fc00000{noformat}



For RTL,

{noformat}r15=0x7fc000007fc00000ffc00000ffc00000{noformat}



{{7fc00000}} in spike is canonical NaN, so spike gives out the correct result



Config: {{coreip_u8_minimal_vector}}

Commit: {{c54da3d175865d9629bd61139d34f3ba2d64c0ba}}

Rerun:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0177"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 32568717
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Kira Tsao,Nicolas Brunie,Zhiqiang Hao,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,MAL-2232,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-22T01:05:49.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i005kf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,52:56.2,"21/Jul/22 8:52 PM;5e1a4f5ec578120daca5ff8e;[PR|https://github.com/sifive/federation/pull/24733] created but I was hitting following assertion, is this expected?

{noformat}=== sitest found errors in test sim/rerun.outline/sting_StingSiFiveTuple_T_0214/sting/sifive/vector/vector_tgv_dev.conf:
Reset m_pl2_mmc_inner_agents  c8
Error: ""/scratch/kirat/tokyo/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", 696: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.mshrEntries_0.SiFive_MSHREntry_assert: at time 18651322500 ps
Assertion failed (verification library): MSHR Entry Valid Non-Reusable Hang  @[MSHR_Mallard.scala 4216:14]

Fatal: ""/scratch/kirat/tokyo/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", 698: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.mshrEntries_0.SiFive_MSHREntry_assert: at time 18651322500 ps

$finish called from file ""/scratch/kirat/tokyo/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", line 698.{noformat}",21/Jul/22 10:08 PM;6065017e90e3950069cf01c5;If it happens after the previous error on {{vfrsqrt7.v}} then it may be a different bug showing as a hang (so new ticket).,"22/Jul/22 1:08 AM;5e1a4f5ec578120daca5ff8e;OK, let me file a ticket. Who should I assign this ticket to?","22/Jul/22 8:16 AM;6065017e90e3950069cf01c5;You can assign it to [~accountid:5fd15143b4a74900763834e0] to start with. It would require a bit of debug to track the source of this stall.

You can check the traces and the program disassembly to check what is the last instruction retired and find which is the first one to stall.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Analyze why there is switching activity on the Issue Queues when running Dhrystone,,,,,,MAL-2193,120414,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,7/18/2022 14:03,8/18/2022 16:10,9/28/2022 0:51,8/18/2022 16:07,,,,,,,,,,,,,Power,TGV_RTL/ISS,TGV_RTL/VEX,,,,,,,0,,,,,Cristóbal Ramirez Lazo,Josh Smith,Nicolas Brunie,,,,,,,,,,,,,62632262d7f1b80069c030b8,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,{},,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,,,,,,,,,,,,,2|i005jr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,36:47.9,"18/Jul/22 2:30 PM;62632262d7f1b80069c030b8;PowerArtist shows switching activity on the Issue Queues when running Dhrystone on P670.  Since Dhrystone does not include vector code, switching activity on TGV should be zero.

Specifically, this activity happens on the queue entries.

{noformat}Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv/vex/issueQueues_0/entries_0

….

Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv/vex/issueQueues_0/entries_15{noformat}

and 

{noformat}Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv/vex/issueQueues_1/entries_0

….

Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv/vex/issueQueues_1/entries_15{noformat}



{adf:display=block}
{""type"":""table"",""attrs"":{""isNumberColumnEnabled"":false,""layout"":""default"",""localId"":""090644e4-6377-4996-9c66-f97dff860054""},""content"":[{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv/vex/issueQueues_1""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Power Unit: mW""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Category                         ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Internal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Switching""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Leakage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Total""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""logic                             ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.256""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.177""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.096""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.529""}]}]}]}]}
{adf}



{adf:display=block}
{""type"":""table"",""attrs"":{""isNumberColumnEnabled"":false,""layout"":""default"",""localId"":""281d374e-9868-47d6-826c-39a24903e76f""},""content"":[{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv/vex/issueQueues_1/entries_0 to 15""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Power Unit: mW""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Category                         ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Internal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Switching""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Leakage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Total""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""logic                             ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.015""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.01""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.005""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.03""}]}]}]}]}
{adf}

Similar numbers for issueQueues_0.

Analyze why this is happening.","18/Jul/22 2:36 PM;5acffeafaa802f2a797a955c;There are probably a bunch of buses that get broadcasted to all of the major units that are not gated off when the unit is idle.  For example, the ROB retire and commit pointers, ROB or branch flush information, etc…. I think we fixed the tag broadcast buses recently, but the pipeline replay signals or other buses related to the tag broadcasts may still be toggling.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Gathering power evaluation and optimization request for TGV,,,,,,MAL-2192,120413,,Epic,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/18/2022 13:57,9/12/2022 12:59,9/28/2022 0:51,,,,,,,,,,,,,,Power,TGV_RTL/Top,,,,,,,,0,,,,,Alexandre Solomatnikov,Cristóbal Ramirez Lazo,David Kravitz,Josh Smith,Nicolas Brunie,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,62632262d7f1b80069c030b8,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2384,,,,,,,,,,,,,,,MAL-2193,MAL-2195,MAL-2263,MAL-2360,MAL-2361,MAL-2370,MAL-2406,MAL-2407,MAL-2437,MAL-2530,MAL-2585,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2056,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{repository={count=5, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":5,""lastUpdated"":""2022-07-23T21:26:22.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":5,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,ghx-label-5,,[TGV] power evaluation and optimization,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,dark_teal,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i005jj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,46:29.5,"18/Jul/22 2:46 PM;62632262d7f1b80069c030b8;PowerArtist shows switching activity (dynamic energy) on TGV when running Dhrystone on P670. Since Dhrystone does not include vector code, switching activity on TGV should be close to zero.

{adf:display=block}
{""type"":""table"",""attrs"":{""isNumberColumnEnabled"":false,""layout"":""default"",""localId"":""b4c87496-0152-48ec-a6ba-7991f20b2af6""},""content"":[{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Power Unit: mW""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Category                         ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Internal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Switching""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Leakage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Total""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""register""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.905""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.007""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""1.558""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""2.470""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""logic                             ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.599""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.502""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""2.805""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""3.906""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""clock""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.192""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.837""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.051""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""1.080""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Subtotal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""1.696""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""1.346""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""4.414""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""7.456""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Percentage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""22.75%"",""marks"":[{""type"":""strong""}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""18.05%"",""marks"":[{""type"":""strong""}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""59.20%"",""marks"":[{""type"":""strong""}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""100.00%"",""marks"":[{""type"":""strong""}]}]}]}]}]}
{adf}

 ","18/Jul/22 4:21 PM;5fd15143b4a74900763834e0;For stuff like Dhrystone, we want to solve the power in 2 places:
1) make sure each module is gated by an appropriate clock
2) figure out the right conditions for a top-level TGV clock gater

On the other hand, if dynamic power is already less than leakage, how much effort should we spend on the part we can bring down when there’s that big chunk we can’t do anything (almost) about.

#1 shouldn’t be too hard, but we need to define a solution for #2. For example, maybe an up-down counter that snoops on the completion count increments and decrements of vector operations?","18/Jul/22 4:56 PM;5acffeafaa802f2a797a955c;There’s already a top-level TGV clock gate.  It basically just checks whether all the queues and execution pipelines are empty, and nothing is coming from dispatch. We do the same thing for IEX and FEX.","17/Aug/22 11:55 AM;62632262d7f1b80069c030b8;On 08/17/22 power results for Dhrystone are the following:

{adf:display=block}
{""type"":""table"",""attrs"":{""isNumberColumnEnabled"":false,""layout"":""default"",""localId"":""b4c87496-0152-48ec-a6ba-7991f20b2af6""},""content"":[{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Power Unit: mW""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Category                         ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Internal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Switching""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Leakage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Total""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""register""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.097""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.000""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""1.632""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""1.729""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""logic                             ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.628""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.525""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""2.722""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""3.875""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""clock""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.024""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.090""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.060""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.174""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Subtotal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.749""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.615""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""4.414""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""5.778""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Percentage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""12.96%"",""marks"":[{""type"":""strong""}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""10.64%"",""marks"":[{""type"":""strong""}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""76.39%"",""marks"":[{""type"":""strong""}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""100.00%"",""marks"":[{""type"":""strong""}]}]}]}]}]}
{adf}

Register category has benefit from  clock gating VRDU,VEX,BALER, and X2Y. 

Still is missing to reduce logic category. There is a previous analysis of a bunch of buses that get broadcasted manly to issue queues and baler. There is also a initial implementation of it which will be resumed in next steps.","01/Sep/22 7:19 PM;62632262d7f1b80069c030b8;On 09/01/2022 power results for Dhrystone are the following:

{adf:display=block}
{""type"":""table"",""attrs"":{""isNumberColumnEnabled"":false,""layout"":""default"",""localId"":""dbb6fef5-64b3-46e6-8dba-204aba7df38b""},""content"":[{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Power Unit: mW""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Category                         ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Internal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Switching""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Leakage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Total""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""register""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.104""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.000""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""1.592""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""1.696""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""logic                             ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.094""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.156""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""3.054""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""3.304""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""clock""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.026""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.099""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.060""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.185""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Subtotal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.224""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.255""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""4.706""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""5.185""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Percentage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""4.32%"",""marks"":[{""type"":""strong""}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""4.92%"",""marks"":[{""type"":""strong""}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""90.76%"",""marks"":[{""type"":""strong""}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""100.00%"",""marks"":[{""type"":""strong""}]}]}]}]}]}
{adf}","08/Sep/22 1:23 PM;62632262d7f1b80069c030b8;On 09/08/2022 power results for Dhrystone are the following:

{adf:display=block}
{""type"":""table"",""attrs"":{""isNumberColumnEnabled"":false,""layout"":""default"",""localId"":""8774ec39-33e1-4887-aa87-e93fd0bf28d2""},""content"":[{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Power Unit: mW""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Category                         ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Internal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Switching""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Leakage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Total""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""register""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.093""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.000""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""1.594""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""1.687""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""logic                             ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.093""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.157""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""3.057""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""3.307""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""clock""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.022""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.085""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.060""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.167""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Subtotal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.208""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.242""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""4.711""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""5.161""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Percentage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""4.03%"",""marks"":[{""type"":""strong""}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""4.69%%"",""marks"":[{""type"":""strong""}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""91.28%"",""marks"":[{""type"":""strong""}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""100.00%"",""marks"":[{""type"":""strong""}]}]}]}]}]}
{adf}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
P550 LSU Timing: io_xbarIn_*_bits_metaInfo_wayEnc to l1dcDataArrayBank*Gran*/CEB,,,,,,MAL-2191,120400,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Khondakar Mujtaba,622a930149c900007023d105,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,7/18/2022 10:33,9/19/2022 8:23,9/28/2022 0:51,9/2/2022 14:24,,,,,,,,,,,Panda DR,,Implementation,RTL/LSU,,,,,,,,0,,,,"Paths are back from L1DCWayPred to L1DCDataArray/CEB ports.  CEB pins are tighter than Address pins…

Is this required for new bank gating feature?

See: /project/tsmc/cln7ff/P5_ppa_runs/michaelw/P550/timing_reports/MAL-2191",Cody Croxton,Gaurav Shrivastav,John Ingalls,Khondakar Mujtaba,Mehul Thakkar,Michael White,Tom Mickelson,Vaibhav Gupta,,,,,,,,5e1371930242870e996efde2,61e9fdc938041c00687592db,5bb6808b9ba2930990f81895,622a930149c900007023d105,622a8208db58c100687dd15a,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,623e4830b75ca80070580145,,,,,,,,,,,,,,,MAL-1499,,,,MAL-1510,MAL-2545,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1977,,MAL-2469,VI-8124,MAL-2475,MAL-2548,MAL-2551,,,,,,,,,,,,28/Aug/22 11:14 AM;John.Ingalls;MAL-2191.2.txt;https://sifive.atlassian.net/secure/attachment/76670/MAL-2191.2.txt,18/Jul/22 10:43 AM;jsmith;MAL-2191.txt;https://sifive.atlassian.net/secure/attachment/74605/MAL-2191.txt,26/Aug/22 12:07 PM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220826-190109.png;https://sifive.atlassian.net/secure/attachment/76640/image-20220826-190109.png,,,,,,,,,,,,,,44f61347713cfd7e5ad7aeb24aaeddcb08870882,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=7}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":7,""lastUpdated"":""2022-09-02T19:19:35.000-0700"",""stateCount"":7,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":7,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/25829,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,7,0,,,,100,,,,,,,,,,,,,,,2|i005gn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,5,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,13:19.8,18/Jul/22 10:35 AM;60f1ea6c6491110069392f8f;+others,"18/Jul/22 3:13 PM;5bb6808b9ba2930990f81895;Yes, this is part of / caused by the new banking feature refactoring development in [https://sifive.atlassian.net/browse/MAL-1977|https://sifive.atlassian.net/browse/MAL-1977|smart-link].

We can change from {{wayEnc}} to {{wayDcd}} to remove the {{OHToUInt}} at [https://github.com/sifive/federation/blob/00510001bb9f039be4c90cce43f77707be79b3d1/mallard/src/main/scala/core/mallard/LSTPipe.scala#L2120|https://github.com/sifive/federation/blob/00510001bb9f039be4c90cce43f77707be79b3d1/mallard/src/main/scala/core/mallard/LSTPipe.scala#L2120].  This will save two nand-gates in the path, one in the LSTPipes module and one in the l1DCache module, for 10-20ps of savings.

There will likely be one or two more gates that we can remove by the time that we are done with [https://sifive.atlassian.net/browse/MAL-1510|https://sifive.atlassian.net/browse/MAL-1510|smart-link], which will close us on this path.","26/Aug/22 12:07 PM;60f1ea6c6491110069392f8f;Tom is seeing paths between lstr_vAddr and macro WEB pin getting worse in 0p750v corner.  Now -20ps ( though improved in 0p675v ).
Could this be related to this fix? 

!image-20220826-190109.png|width=1555,height=626!

See: /project/tsmc/cln7ff/P6_ppa_runs/michaelw/P650/timing_reports/MAL-2191","26/Aug/22 7:45 PM;5bb6808b9ba2930990f81895;Ah, yes, there were some unintended extra gates in there from an early PriorityEncoder.  We can move it later in [https://github.com/sifive/federation/pull/25649|https://github.com/sifive/federation/pull/25649|smart-link].","27/Aug/22 3:03 PM;60f1ea6c6491110069392f8f;Is this a new path:
See: /project/tsmc/cln7ff/P6_ppa_runs/michaelw/P650/timing_reports/MAL-2191.2","28/Aug/22 11:14 AM;5bb6808b9ba2930990f81895;{quote}Is this a new path:
See: /project/tsmc/cln7ff/P6_ppa_runs/michaelw/P650/timing_reports/MAL-2191.2{quote}

[^MAL-2191.2.txt]

This path is the same as we’ve been working on in this Jira ticket.  This is a redux of [https://sifive.atlassian.net/browse/MAL-1499|https://sifive.atlassian.net/browse/MAL-1499|smart-link]   😞 

Our next step is to see what the power cost is of enabling all the data ways is on a read.  😬 ",28/Aug/22 3:37 PM;5bb6808b9ba2930990f81895;Proposed relaxation in [https://github.com/sifive/federation/pull/25664|https://github.com/sifive/federation/pull/25664|smart-link].  Increases tile power in P650 running Dhrystone +4.5 mW from 168.1 mW to 172.6 mW.  More details in the PR.,"28/Aug/22 5:26 PM;622a8208db58c100687dd15a;I don’t fully understand power increase, we are not increasing number of reads with the change, correct ? is it because we are causing more toggles in rdout which is eventually thrown away ? ",02/Sep/22 9:35 AM;622a8208db58c100687dd15a;[~accountid:60f1ea6c6491110069392f8f]  [~accountid:5bb6808b9ba2930990f81895] we had very clear direction in Mallard meeting for few weeks now that all the high power fixes needs to have a gate keeper. We can’t solve this path with better routing and using ELVT cells in N5 ? ,"02/Sep/22 9:44 AM;60f1ea6c6491110069392f8f;This is not a power fix.  It is a timing bug.  The path is not supposed to exist, at least this was the past expectation.  Not all designs are in N5, nor can we assume all customers will use ELVT.  Even AMD was averse to using ELVT in the N5 P550 experiments.

P550 is in N7.","02/Sep/22 9:55 AM;622a8208db58c100687dd15a;Are you saying we can’t fix a path for 18ps with better PD and okay with 3.5% power ? This 3.5% is across all benchmarks. Are you considering Dolphin memories if that can help or useful clock skew ? We have 45ps uncertainty which is quite high ? Is it only failing on SS or TT ? We need a higher bar for fixes like this and sacrifice power as last resort only if approved by broader team. Just to add this negates power savings RTL and Power team spent a month to recover.  

I explained when we met in Austin, we will have caveats for the timing and power in PD and we can’t make assumptions that customers won't have faster cells either.   ","02/Sep/22 10:16 AM;60f1ea6c6491110069392f8f;My understanding is Dolphin memories are not available in N7.
Useful clock skew is already heavily utilized in PD flows.

I would expect this change to have been released on an RTL branch to determine timing impact and backend power savings.","02/Sep/22 10:21 AM;5bb6808b9ba2930990f81895;This was already PoR for Healdsburg, described in the “Healdsburg Dcache.pdf” attachment in [https://sifive.atlassian.net/browse/MAL-1510|https://sifive.atlassian.net/browse/MAL-1510|smart-link]

{quote}Ideally, we would have high-speed SRAMs organized as 128-rows by 64-columns with a late selected 4:1 column mux (likely one-hot).
Alternatively, one could use 128-row by 16-column reading 64-bits and use an external mux for way select.{quote}

We don’t have the decoded-enable memories for the “Ideal” design, so we implemented the “Alternative” design in this ticket: external mux for late way select.

{quote}Are you saying we can’t fix a path for 18ps with better PD{quote}

I have another idea that I can try.  Stay tuned today.  I merged the change to unblock forward progress behind this _top path_.

{quote}and okay with 3.5% power ?{quote}

I know, power *_is_* performance, and it’s good to repeat, so thank you for reopening this.

{quote}I explained when we met in Austin, we will have caveats for the timing and power in PD and we can’t make assumptions that customers won't have faster cells either.{quote}

Yes, of course, which is exactly why we put this behind a JSON parameter {{wayPredEnL1dcDataArray}}, as is the SiFive way, to support customers trade off this timing versus power here.","02/Sep/22 2:24 PM;5bb6808b9ba2930990f81895;{quote}I have another idea that I can try. Stay tuned today.{quote}

Good results in [https://github.com/sifive/federation/pull/25829|https://github.com/sifive/federation/pull/25829|smart-link] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
PRF congestion in healdsburg config,,,,,,MAL-2190,120397,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Julian Bailey,629ab2a89bc7150068d00cdf,Vaibhav Gupta,623e4830b75ca80070580145,Vaibhav Gupta,623e4830b75ca80070580145,7/18/2022 9:50,9/27/2022 11:55,9/28/2022 0:51,9/8/2022 7:31,,,,,,,,,,,,,Implementation,RTL/IEX,,,,,,,,0,,,,"Hi Josh,

PRF is looking quite bad in congestion. There are 20 ports in Healdsburg compared to 12 in P650. Also PRF entries have increased as well ([schematic|https://lucid.app/lucidchart/e1681338-3c89-443f-a8cc-dc301302fe62/edit?beaconFlowId=F4174B6FAE372CA6&invitationId=inv_4d2ec4d3-8587-4158-953b-0c30827a6db8&page=lrmuCV8WiwDN#])

Part of it could be that the synthesis tool is doing inefficient muxing and not honoring decoding per bank by reusing entIdx cross banks. 

Wondering if it is possible to create a hierarchy per RF bank for a synth/pnr trial ? I am not sure if it will fix the issue, but we can give it a try. 

Thanks

Vaibhav",Alexandre Solomatnikov,Hideto Ueno,John Ingalls,Josh Smith,Julian Bailey,Michael Ruff,Ravim Kumar,Sumit Jha,Vaibhav Gupta,Vishad Viplav,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,617c6593f485cd0068e692ce,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,623cfe9501f8660070b78884,62214edd49c90000702009c5,623e366950bb2b0070b7d28e,623e4830b75ca80070580145,623e520c94742a00683f710a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1921,MAL-2418,MAL-2427,,,,,02/Aug/22 9:54 AM;ug:015362ac-3118-4c7e-9dbc-3954250f02cc;IEX PRF Redesign.jpeg;https://sifive.atlassian.net/secure/attachment/75261/IEX+PRF+Redesign.jpeg,04/Aug/22 4:36 AM;ug:015362ac-3118-4c7e-9dbc-3954250f02cc;image-20220804-112511.png;https://sifive.atlassian.net/secure/attachment/75400/image-20220804-112511.png,04/Aug/22 4:36 AM;ug:015362ac-3118-4c7e-9dbc-3954250f02cc;image-20220804-113113.png;https://sifive.atlassian.net/secure/attachment/75399/image-20220804-113113.png,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-08T09:07:04.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4ba539f9aa71a4182ff5a1ec56e2c3aa235ef9fc,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,,,,,,,,,,,,,2|i005fz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,25:05.0,"21/Jul/22 6:25 AM;623e520c94742a00683f710a;Hi Josh,



We had an experiment at our end where we had modified the muxing code in Scala such that the synthesis tool does not interpret the logic as a big single mux and later go haywire.



The modification was as follows: (logic equivalence may need to be verified in LEC)

{noformat}      val bankIdx   = io.readReq(i).bits(bankIdxBits-1,0)
      val r_bankIdx = RegEnable(bankIdx, io.readReq(i).valid)

      val bankSize        = pp.nEnt / nBanks
      val bankEntIdxBits  = log2Ceil(bankSize)
      val bankReadData    = (0 until nBanks).map({ b =>
        // Duplicate index flops per-bank
        // For power, pre-decode bank index and only enable entIdx flops in that bank
        val bankEn = portBankPredecode(i).option(bankIdx === b.U).getOrElse(true.B)
        val bank_Sel = (bankIdx === b.U) //modified code
        val r_entIdx_dup = RegEnable(io.readReq(i).bits(pp.idxBits-1,bankIdxBits), io.readReq(i).valid && bankEn)
        val bank_Sel_dup = RegEnable(bank_Sel,io.readReq(i).valid) //modified code

        val bankEntryData = (0 until bankSize).map(i => prfRegs(i*nBanks + b))
        MuxTree(r_entIdx_dup, bankEntryData) & Fill(pp.xLen,bank_Sel_dup) //modified code
      })

      bankReadData.foldLeft(0.U(pp.xLen.W))(_ | _) //modified code{noformat}

We generated a bank enable signal (flopped) local to each bank which is being anded with the output of the first mux (only between PRF registers in a bank); the anded bus from all the banks are ored to get the final output.

The first mux is retained as is but the second mux has been modified



Synthesis and core placement was run with the modified code and on comparing with the original code, there is a very significant improvement in Hotspot/Congestion scores atleast at the end of core placement. On checking the path, we observed that muxing order between banks is being honored now.



This gives us some confidence that the congestion issue can be resolved with RTL changes. Hierarchy creation would also prevent genus from merging the muxes in my opinion. 

Thanks,",21/Jul/22 7:41 AM;5acffeafaa802f2a797a955c;[~accountid:629ab2a89bc7150068d00cdf] Could you take a look at this?  It seems like Vishad already experimented with a simple RTL change to PRF.scala that helped with congestion.,"21/Jul/22 7:43 AM;5acffeafaa802f2a797a955c;Speaking of trying LEC out, there is supposedly a script that Jack Koenig wrote to run LEC between chisel changes documented here: [https://sifive.atlassian.net/wiki/spaces/S5CKB/pages/504037552/How+To+Use+a+Simple+LEC+Script+to+validate+Generator+Changes|https://sifive.atlassian.net/wiki/spaces/S5CKB/pages/504037552/How+To+Use+a+Simple+LEC+Script+to+validate+Generator+Changes|smart-link] 

I’ve never actually tried that script out, but it would be good to see if it works.","22/Jul/22 3:40 AM;629ab2a89bc7150068d00cdf;Had a chat with Vishad today, he has passed me his changes and I will attempt to integrate them on a branch.

Branch name is: MAL-2190-PRF_Congestion_Healdsburg

Will update this ticket once I have something that works.","22/Jul/22 3:51 AM;629ab2a89bc7150068d00cdf;Should clarify, I had a meeting with Vaibhav this morning where we discussed this. He asked if I can merge these changes so the PRF blocks with the AND part of the muxing is in an extra level or hierarchy, this is so they can direct the tools not to merge logic across hierarchy boundaries, atm the AND and OR muxing logic gets merges and some of the other PRF structures are merged when they should be duplicated, this is making it impossible to complete backend flow due to congestion. 

Vaibhav had some sample code but it wasnt working…

","27/Jul/22 9:02 AM;629ab2a89bc7150068d00cdf;I have committed these changes in branch [MAL-2190-PRF_Congestion_Healdsburg|https://github.com/sifive/federation/compare/master...MAL-2190-PRF_Congestion_Healdsburg]

The brnahc has the changes below but re-worked so the read muxes are an extra level of hierarchy and some of the logic should be properly duplicated when the system is banked.

I have run the u84 outline and all passed except for a known bug in the HSTATUS register which I don’t believe is anything to do with these changes.

[~accountid:623e4830b75ca80070580145] and [~accountid:623e4830b75ca80070580145] let me know how you get on. If you need further changes please let me know. If it works from your end then we can merge these on to master.



Julian",27/Jul/22 9:13 AM;629ab2a89bc7150068d00cdf;I have added a draft pull request so I can get the CI to check everything is okay…will not be submitted unless the implementation team are happy.,"01/Aug/22 12:43 PM;5acffeafaa802f2a797a955c;An update from the Pull Request:

{quote}I have been speaking to the Phys. team, they have requested a slgiht adjustment to the fix to make the hierarchy easier to manage.

They also asked whether or not the register in the PRF could actually be banked, as in, in the RTL split the register definition up into banks. Looking at the Phys. results the tool is already doing this itself.

The Phys. team are also experimenting with increasing the number of banks as the layout is complex, currently they have changed the code for number of banks locally, if they want to make this permenent then we will need to route the banks parameter out to the top level so it can be part of the config...{quote}

Can we keep this ticket updated with any new requests/information?



Also, this ticket is kind of related to [https://sifive.atlassian.net/browse/MAL-1921|https://sifive.atlassian.net/browse/MAL-1921|smart-link] .  In 1921 we were tracking this CIRCT enhancement which is supposed to add pragmas to the RTL for big/wide muxes to help the tools infer better tech mapping.  

An example from some random verilog file I found was this:

{noformat}assign _GEN = _GEN_5[d_d_bits_source] /* cadence map_to_mux */; /* synopsys infer_mux_override */{noformat}

I think the way the muxes are written in {{PRF.scala}} (using the {{MuxTree}} library) might prevent CIRCT from seeing these big muxes.  However when I change this:

{noformat}MuxTree(r_entIdx_dup, bankEntryData){noformat}

To this:

{noformat}bankEntryData(r_entIdx_dup){noformat}

I see in the generated verilog that the array indexing operator ({{[]}}) is used instead of explicit 2:1 muxes with the ternary operator, but no mux hints are in the comments:

{noformat}assign readData_1_bankReadData_0 = _GEN[readData_1_bankReadData_r_entIdx_dup];	// @[Reg.scala:19:16, :20:{18,22}, package.scala:39:76]{noformat}

[~accountid:623cfe9501f8660070b78884] Do you know how we could debug why CIRCT is not generating the hints like we want?  Or who we should ask about that?","01/Aug/22 12:46 PM;623cfe9501f8660070b78884;There is a commend line switch to enable the meta comments. --add-pragmas-to-multibit-mux Now, how to add that in federation is an exercise left to the student, as this student has yet to venture into that area of learnings.

[~accountid:5acffeafaa802f2a797a955c] thanks for the CHISEL hint on the MuxTree vs. simple select. I’ll be needing that shortly as I transition my PPA efforts into CHISEL\!","01/Aug/22 12:49 PM;623cfe9501f8660070b78884;[~accountid:617c6593f485cd0068e692ce] is the author of the switch, so tagging him so he can see these efforts. And [~accountid:5f74f3dc3fe0760069553268] as he’e my partner in crime in these structural language features.","01/Aug/22 1:43 PM;617c6593f485cd0068e692ce;{quote}I see in the generated verilog that the array indexing operator ({{[]}}) is used instead of explicit 2:1 muxes with the ternary operator, but no mux hints are in the comments:

> assign readData_1_bankReadData_0 = _GEN\[readData_1_bankReadData_r_entIdx_dup];	// @\[Reg.scala:19:16, :20:{18,22}, package.scala:39:76]{quote}

This looks a bug. I will investigate.  ","02/Aug/22 7:07 AM;617c6593f485cd0068e692ce;{quote}I think the way the muxes are written in {{PRF.scala}} (using the {{MuxTree}} library) might prevent CIRCT from seeing these big muxes{quote}

Importantly, MFC doesn’t restructure mux trees to preserve design intent so we are not transforming mux trees into array indexing + pragmas. 


It seems the expression {{bankEntryData(r_entIdx_dup)}} creates mux chains explicitly on FIRRTL level (and Comb dialect creates array indexing, that’s why pragmas are missing). As workarounds, we can create a vector wire and indexing to the vector explicitly, e.g: 

{noformat}--- a/mallard/src/main/scala/core/mallard/PRF.scala
+++ b/mallard/src/main/scala/core/mallard/PRF.scala
@@ -205,8 +205,9 @@ class PPAOptimizedPRF(pp: PRFParams, nRead: Int, nWrite: Int, nBanks: Int = 4, b
         val bankEn = portBankPredecode(i).option(bankIdx === b.U).getOrElse(true.B)
         val r_entIdx_dup = RegEnable(io.readReq(i).bits(pp.idxBits-1,bankIdxBits), io.readReq(i).valid && bankEn)
 
-        val bankEntryData = (0 until bankSize).map(i => prfRegs(i*nBanks + b))
-        MuxTree(r_entIdx_dup, bankEntryData)
+        val bankEntryData = Wire(Vec(bankSize, UInt(pp.xLen.W)))
+        bankEntryData := (0 until bankSize).map(i => prfRegs(i*nBanks + b))
+        bankEntryData(r_entIdx_dup)
       })
 
       MuxTree(r_bankIdx, bankReadData){noformat}","02/Aug/22 7:20 AM;629ab2a89bc7150068d00cdf;[~accountid:617c6593f485cd0068e692ce] are you working from the branch or from master? This looks like the code from master? 

","02/Aug/22 7:27 AM;617c6593f485cd0068e692ce;Ah, I was working on master. Ok, {{MAL-2190-PRF_Congestion_Healdsburg}} is the branch you are working on?","02/Aug/22 8:00 AM;617c6593f485cd0068e692ce;For {{MAL-2190-PRF_Congestion_Healdsburg}} branch, I believe it is sufficient to replace {{MuxTree(entryIndex, io.bankData)}} with {{io.bankData(entryIndex)}} to annotate pragmas. I was locally able to confirm that pragmas are annotated in SiFive_prfRdBankMux modules.  ","02/Aug/22 8:44 AM;629ab2a89bc7150068d00cdf;[~accountid:617c6593f485cd0068e692ce] Thanks, I can make that change to the branch so that we get the correct annotation 🙂 

The main change on the branch is ensuring the AND/OR tree in the mux stay a little seperate and giving the layout guys a level of hierarchy they can preserve to the tools dont flatten everything. ","02/Aug/22 8:56 AM;5acffeafaa802f2a797a955c;My bad, I wasn’t doing my experiments on Julian’s branch.  But I didn’t know that his changes would have already fixed it.  Thanks for the help [~accountid:617c6593f485cd0068e692ce] ",02/Aug/22 9:53 AM;623cfe9501f8660070b78884;[~accountid:623e4830b75ca80070580145] may want ability to get MUXs vs AO on that branch as well to help the pin density more. ,"02/Aug/22 9:54 AM;629ab2a89bc7150068d00cdf;This is the current structure of a read path for a single port of the PRF on the branch. 

The register values fo each of the banks are fed into sub-class prfRdBankMux, the EntryIndex and RdBankMask are duplicated per bank. The values in each bank are Muxed and then masked via an AND-Operation and the BankRdMask. The values from the different Banks are then just simple or-ed together to produce the read data out for this read port.

!IEX PRF Redesign.jpeg|width=1938,height=1695!

I have discussed a few things with the implementation team.

# Overall it looks like there was an imprivement of what the tools were doing.
# An issue was made about the number of hierarchy elements, 20 read ports with 4 banks per port yields 80 instanitations of the class prfRdBankMux. We discussed whether or not all of the ports relating to a single bank could be put in a single module to keep the hierarchy simple. I said I would look at this but the structure of the module might make this more difficult.
# They asked if we could split the PRF array up into physical banks and then have each bank in its own module, then just instantiate the number of banks. I would need to discuss this with [~accountid:5acffeafaa802f2a797a955c] to make sure he is happy, debugging design in waves might need some “debugging” signals to make it easy to look at values.
# I discussed increasing the number of banks, the layout tools put the registers for each bank in the centre with the logic for reading that bank as a ring around the registers for timing. You then get 4 of these structures tessalated, routing might be an issue. If the number of banks is increased then the routing from the registers to the rign of mux-logic would be smaller and might improve things.

I am working on some more diagrams, just getting used to lucidchart.
","02/Aug/22 9:58 AM;5acffeafaa802f2a797a955c;Just a note, we are looking into reducing the number of PRF read ports in Healdsburg by having multiple execution units share ports.  But this is going to be very dependent on performance modeling to find out which units should be grouped together, and I don’t think that effort has really started yet.",02/Aug/22 10:04 AM;623cfe9501f8660070b78884;Do we know what the Verilog looks like for that 4:1 mux? The distributed AO muxing is the best we can do but AO -> MUX4 ??may?? be beneficial for route density feeding that distributed mux given the bit width x 80 multiplier.,"02/Aug/22 10:10 AM;629ab2a89bc7150068d00cdf;[~accountid:623cfe9501f8660070b78884] Do you mean the prfRdBankMux? thats actually 76 to 1 Mux for each bank, just the diagram only had a 4 way mux. Or were you talking about the AND-OR Mux between the 4 banks?

[~accountid:623e4830b75ca80070580145] was showing me some implementation results last week, not sure how far he got?","02/Aug/22 10:16 AM;623cfe9501f8660070b78884;Oh yes the MUX feeding the bank select AO muxing in the prfRdBankMux in the diagram that you provided. The MUX’s are a paper area loss but can help route and pin density which may improve effective utilization. It would be nice if the PD team had a hook to control the structure of that MUX as well. That is what I’ve been working to enable through MFC. None of these hooks are absolute, they are just another escape hatch when backed into a corner.","02/Aug/22 10:20 AM;623e4830b75ca80070580145;with 4 bank, the congestion is not solvable.

with 16 banks, its not consistently working to solve the issue. we had one run which showed reasonable congestion in place but another run with a small change is worse. 

But 16 bank is much better than 4-bank. The downside is we end up duplicating the entIdx flops 16 times.

We are trying to create bounds such that all the entries of a single bit are placed close together. Not sure if it will solve the issue.","02/Aug/22 10:26 AM;629ab2a89bc7150068d00cdf;[~accountid:623e4830b75ca80070580145] I am just testing out the change that [~accountid:617c6593f485cd0068e692ce]  suggested, to ensure the core is functional and I shall commit that to the branch. I don’t know if it will make things better for you?

We can try some of the other things, do you expect that if we were to have the register for each bank in a hierarchy level and then instantiate 4 copies of those that it would make things better for you?

","02/Aug/22 10:30 AM;623e4830b75ca80070580145;yes Julian, i think it will help and make regions easier. Also the tool will be smart enough to place with hierarchy. Its worth giving a shot.","02/Aug/22 10:43 AM;629ab2a89bc7150068d00cdf;Okay, let me give that a try, we can test it out on the branch…","04/Aug/22 4:36 AM;629ab2a89bc7150068d00cdf;Okay, so just to update what is going on.

The current PPAOptimized Register file looks like this for Healdsburg: 

!image-20220804-112511.png|width=83.33333333333334%!

* The physical registers are a single 304 entry vector of 64b registers
* The Read paths are organized as 4 banks (PrfRdBankMux), each with a 76:1 Mux, the output of which is AND-ed with the Read bank enable, the results are OR-reduced together to produce a single 64b value (Per port). 
* There are 20 x 4 PrfRdBankMux instances within the PPAOptimizedPRF.

The Implementation team requested that the PRF Registers be organized into banks, so for 4 banks we would have 76 registers and the registers and the mux hierarchy be organized into their own hierarchical modules. This isn’t straightforward, so what I have done is this:


!image-20220804-113113.png|width=83.33333333333334%!

* An extra implementation option has been added PPAOptimizedExplicitBankedPRF
* Inside this module each bank of registers is a copy of the original PPAOptimizedPRF
** Configured as a single Bank, no clock gating, for a 4 bank config, nEnt == 76, ImplZero == True, except for Bank 0 (which contains register 0).
* Clock Gate logic is done in the top-level (PPAOptimizedExplicitBankedPRF) as we can control the entire sub-module.
* Layout team can bound each PPAOptimizedPRF within the PPAOptimizedExplicitBankedPRF.
* This was the easiest way to split the registers up and allow us to switch between implementations.
* Can be configured in the JSON files with added option (similar to MemPRF option).

*Status:*

Currently debugging simulation failure, possibly messed up some of the glue logic…will let you know when it is good to go…","04/Aug/22 6:29 AM;5acffeafaa802f2a797a955c;[~accountid:629ab2a89bc7150068d00cdf] So there’s another thing that I forgot about until I was digging through the generated verilog for something else. I think MFC will currently insert logic to handle x-propagation issues when indexing into an array which is not a power-of-2 in depth.  For example in the P650 PRF:

{noformat}  assign io_readResp_0 = readData_0_r_bankIdx[1] ? (readData_0_r_bankIdx[0] ? (readData_0_bankReadData_r_entIdx_dup_3 > 6'h33 ? prfReg_3 : _GEN) : readData_0_bankReadData_r_entIdx_dup_2 > 6'h33 ? prfReg_2 : _GEN_0) : readData_0_r_bankIdx[0] ? (readData_0_bankReadData_r_entIdx_dup_1 > 6'h33 ? prfReg_1 : _GEN_1) : readData_0_bankReadData_r_entIdx_dup > 6'h33 ? 64'h0 : _GEN_2;{noformat}

You’ll notice there’s a mux which checks to see if the read entry index is greater than 6’h33, and passes through entry 0 of the array essentially.

I’m asking in the #circt channel if there’s a way to prevent this 2:1 mux from being inserted.  We should be able to write assertions that make sure the read index is in bounds (during cycles in which we care), instead of penalizing the actual design and possibly impacting critical timing paths.","04/Aug/22 9:57 AM;629ab2a89bc7150068d00cdf;[~accountid:5acffeafaa802f2a797a955c] I do see this in the {{prfRdBankMux}} module. Thought it was a bit odd…

To everyone else, I have managed to work out how to make the diagrams I have drawn available in lucidchart 🙂 
You should be able to see them here: [https://lucid.app/lucidchart/77656ccd-f227-4956-aba6-c240683a1826/edit?invitationId=inv_13a451b5-529c-467c-a339-99960c6a5ec7#|https://lucid.app/lucidchart/77656ccd-f227-4956-aba6-c240683a1826/edit?invitationId=inv_13a451b5-529c-467c-a339-99960c6a5ec7#|smart-link] 

There are two sheets, the first is the standard PPAOptimized structure and the second is the ExplicitBanked Structure. These have been updated as I spotted that something was being optimised out and had to move where it was in the hierarchy.

",05/Aug/22 2:47 AM;629ab2a89bc7150068d00cdf;I have a question….why dont we use *Mux1H()* in the register file read path? I can generate a read vector which is 1-hot and it would force the generated code to be the structure we want?,"05/Aug/22 4:32 AM;5acffeafaa802f2a797a955c;{quote}I have a question….why dont we use *Mux1H()* in the register file read path? I can generate a read vector which is 1-hot and it would force the generated code to be the structure we want?{quote}

Funny you should ask.  The very first PRF design I came up with for P550 did use {{Mux1H()}} (but no banking).  When we started doing PPA runs for P650, [~accountid:5e137757f65a6b0e9bf1636f]'s runs showed that the PRF placement and timing was problematic.  Tom originally suggested that we try to find some way to get the tool to use the MUX4 cells, but at the time the CIRCT improvements hadn’t been made.  So I changed the PRF to use {{MuxTree}} and the 4 banks which seemed to help at the time.

I think the belief is that getting the tool to use the MUX4 cells is still going to be better overall.  But that requires the use of encoded selects.","05/Aug/22 2:00 PM;623cfe9501f8660070b78884;Eventually we should get to the point where some of these MUX classes should imply the implantation structure. Right now they all devolve into AO goo… To me a MuxTree should end up being a tree of MUX cells. As I transition out of Verilog based PPA evaluations, I’ll be working through ways/methods to achieve similar structure though the CHISEL flows as what I used in Verilog. But that’s a bit down the calendar for me.",08/Aug/22 1:22 PM;629ab2a89bc7150068d00cdf;Current status: Debugging the fact the sanity.outline fails. Currently running it on a clean version of master and on the branch and comparing the waves…,"15/Aug/22 12:23 PM;629ab2a89bc7150068d00cdf;[~accountid:623e4830b75ca80070580145] I have pushed the latest update to the branch with explicit register banking working. You should now see 4 banks of 76 registers which you can bound properly.

Commit: 6181e9fbb5aeb81c07df31d6ce1964f1783e8810 has these updates and has been rebased from master.

If you want a version that hasn’t been rebased then: f91e57c90b241c5aa177e9ad7162f6a688419f0c would give you the previous version with thses updates.

Branch in question can be found here: [https://github.com/sifive/federation/tree/MAL-2190-PRF_Congestion_Healdsburg|https://github.com/sifive/federation/tree/MAL-2190-PRF_Congestion_Healdsburg|smart-link] ","23/Aug/22 3:24 AM;629ab2a89bc7150068d00cdf;Implementation team are happy with these changes, all sims I have run are okay too. The PR is live.

The plan is to get this merged into master and then cut a branch for [https://sifive.atlassian.net/browse/MAL-1921|https://sifive.atlassian.net/browse/MAL-1921|smart-link] and make the configuration change to the P650 (& 670) to have the PRF in those cores use the Explicit PRF banking. That way Michael White can run through the P650 and see if it fixes the long paths they are seeing.","23/Aug/22 3:59 AM;629ab2a89bc7150068d00cdf;It looks like the PRF changes have had a little knock on effect to the logic which connects the issue queue entries to the PRF. In some ways this is expected but the implementation team are investigating further and are sending me some information. 

The PR still needs to go ahead but there will likely be further changes required for this ticket.","24/Aug/22 1:49 AM;629ab2a89bc7150068d00cdf;Phys team have been making local changes to bank the PRF as 16 instead of 4, will add a config option so this can be controlled at the top level instead of them physically changing the code 🙂 ","24/Aug/22 1:04 PM;629ab2a89bc7150068d00cdf;[~accountid:623e4830b75ca80070580145] The changes were merged on to master in: cb167facff0d5b3da731e4096151d3d549e1ae79

You can specify the PRF Banks in the json configuration using *iexPrfBanks* and *fexPrfBanks* the number of banks must be an integer and a power of 2 

We will leave this ticket open until certain the team are happy.",08/Sep/22 12:56 AM;629ab2a89bc7150068d00cdf;[~accountid:623e4830b75ca80070580145] Are you okay with me marking this ticket as complete? Has the congestion issue been solved?,"08/Sep/22 1:18 AM;623e4830b75ca80070580145;Yes, we can mark it resolved. We are going with *iexPrfBanks* and *fexPrfBanks* as 16 since congestion is much better than 4 banks. Also the tool placement near to expectations. So, this change is must have for Healdsburg. Ideally should help P650 also.

Congestion is not completely resolved since PRF with 20 ports is still a source of high congestion. We need to figure out how to resolve rest of the congestion problems.","08/Sep/22 1:31 AM;629ab2a89bc7150068d00cdf;Okay, I can fix that in the Healdsburg config so we are using 16 way banks.

The 20 ports are something else that will be worked on as another ticket, I suspect it will be part of the healdsberg feasibility studies…","08/Sep/22 3:02 AM;629ab2a89bc7150068d00cdf;I have a pull request for the IEX PRF banks to 16 from 4. Cannot do the same for the Fex as 300 divides by 4 and not 16, so Fex Banks are 4.",08/Sep/22 3:13 AM;623e4830b75ca80070580145;Can we use 304 entries for FEX PRF ? ,08/Sep/22 3:21 AM;629ab2a89bc7150068d00cdf;[~accountid:5acffeafaa802f2a797a955c] Can we adjust the size of the FEX PRF so it is divisible by 16? Either 304 or 288?,08/Sep/22 4:33 AM;5acffeafaa802f2a797a955c;[~accountid:629ab2a89bc7150068d00cdf] Let’s go with 304 for now.,"08/Sep/22 7:31 AM;629ab2a89bc7150068d00cdf;Explicit PRF banks implemented and added ability for number of banks to be specified in JSON for mallard. Increased number of IEX PRF banks to 16, increased number of FEX PRF registers to 304, divisible by 16 and number of FEX PRF banks to 16.",08/Sep/22 7:31 AM;629ab2a89bc7150068d00cdf;Done in commit: 4ba539f9aa71a4182ff5a1ec56e2c3aa235ef9fc,,,Done
[TGV] implement support for masked permutation instructions (LMUL > 1),,,,,,MAL-2189,120396,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/18/2022 9:37,8/5/2022 1:34,9/28/2022 0:51,7/29/2022 18:33,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,MAL-2291,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-30T08:16:03.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/dd1b20d302d95b3ddc57b8c986b228eea9ed9c41,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i005fr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] implement support for masked permutation instructions (LMUL <= 1),,,,,,MAL-2188,120395,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/18/2022 9:36,7/29/2022 18:34,9/28/2022 0:51,7/29/2022 18:34,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,,,,,,,,,,,,,2|i005fj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"LSU timing: hoist addrBeatRowEven, byteMask onto register?",,,,,,MAL-2187,120356,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Won't Do,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,7/18/2022 3:08,9/6/2022 9:13,9/28/2022 0:51,8/8/2022 19:06,,,,,,,,,,,,,RTL/LSU,Timing,,,,,,,,0,,,,"[https://sifive.atlassian.net/browse/MAL-70|https://sifive.atlassian.net/browse/MAL-70|smart-link] added more complex calculations for {{addrBeatRowEven}} and {{byteMask}} in many places in the design, especially among the LSTPipes/LoadQ/StoreQ hazard comparisons.

Should either of these be hoisted onto registers instead of (re-)calculated live in all of these places?  Is it better enough for timing to be worth the additional area of the flop bits?",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-70,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0057z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,5,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Aug/22 7:06 PM;5bb6808b9ba2930990f81895;Closing for now because these paths have not shown up yet.  If they do, then we can reopen this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: SiFive_LSTPipe_assert due to xprop,Assertion Failure: SiFive_LSTPipe_assert,LSU (Load Store Unit),LSTPipe,,Refer https://github.com/sifive/arch-specs/blob/master/core/mallard_lsu_mas.adoc#loadstore-tag-lst-pipe,MAL-2186,120339,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,7/18/2022 0:24,7/21/2022 11:09,9/28/2022 0:51,7/18/2022 2:03,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"*Error:*

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-xprop-coreip_mallard-test-nightly-xprop/120/builds/coreip_p650/verilog/design/assertions/SiFive_LSTPipe_assert.sv"", 1615: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LSTPipes_0.SiFive_LSTPipe_assert: at time 132942500 ps
Assertion failed (verification library): LSTR unroll requires cross-line  @[LSTPipe.scala 5341:20]{noformat}



Assertion triggers at {{T:132922500ps}} as {{lsu.LSTPipes_0.SiFive_LSTPipe_assert.lstr_unroll_q}} transitions to xx.

Tracing back the source of the xx, it comes from uninitialized {{lsu.LDPipes.LDPipes_0.ldf_l1DataRowEncoded_q_1[77:0]}} & {{lsu.LDPipes.LDPipes_0.ldf_l1DataRowEncoded_q_0[77:0]}} registers. 



The following condition doesn’t become true for {{ldf_l1DataRowEncoded_q_1}} register to be written with a non-xx value.

{noformat} if (_ldr_l1OrLdwrDataEncoded_0_T_11 & |(ldr_metaInfo_q_byteEn[15:8])){noformat}



For {{ldf_l1DataRowEncoded_q_0}}, the xx is seen to be coming from {{lsu.l1DCache.}} A read request to {{addr=0x7}} to {{lsu.l1DCache.l1dcBanks_0_l1dcDataArrayBank0Gran0.l1dcDataArrayBank0Gran0_ext}} returns 0x0. Any write to this address is not observed.


Wave Dump at: {{gamma10:/scratch/saurabhs/mallard_master_335_xprop_120/federation/builds/coreip_p650/sim/sim/LSTPipe.outline/hart0/rv64ui-add}}


*Build:* coreip_p650

*Commit*: ce00a29

*Regression:* master/nightly-mallard-xprop/120

*Simscope:* [https://simscope.internal.sifive.com/sigs/708/clhgi03gr6se|https://simscope.internal.sifive.com/sigs/708/clhgi03gr6se]

*rerun.outline*:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rv64ui-add"",
  ""subdir"": ""hart0"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1994022043
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""v""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Rakesh Palakurthi,Saurabh Singh,,,,,,,,,,,,,,62350e943eacc50071ff0753,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FED-2155,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-70,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{repository={count=4, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":4,""lastUpdated"":""2022-07-25T10:57:36.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":4,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24600,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00547:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[Power] Add widget to disable read of upper BDP tagged tables,,,,,,MAL-2185,120279,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,7/15/2022 8:14,8/29/2022 13:31,9/28/2022 0:51,7/16/2022 11:09,,,,,,,,,,,,,Power,RTL/Frontend,,,,,,,,0,,,,"A large part of the power consumed in the frontend comes from reading the large SRAMs like the caches and the branch predictor tables.  The current BDP uses a TAGE-style predictor which has a base table and several tagged tables (0 to N-1, where N==4 in P550 and P650).  The tagged tables are generally only used to predict branches which have non-trivial patterns correlated to the branch history.  During code with simple loops or branching behavior, it’s likely that we are only using the base table and tagged table 0.

To help reduce the power from the predictor tables, we can add a widget which detects dynamically whether we are even predicting out of tagged tables 1 through N-1 after so many predictor lookups (say hundreds).  If not, we can avoid reading the upper tagged tables (and force the hit to be false) until we see a branch misprediction or a training event to one of the upper tables.",Anhdung Ngo,Benoy Alexander,Brian Grayson,Chia-I Chen,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,,,,,,,,5e13709185a8c90ecac9beb2,5e1370feefa19b0e976b5c24,5e1371705361330daaeaf389,61aaafab977c5b007241043c,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2080,,,,,,,,,,,,,,,,,,,,,,,,,,Branch Prediction,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-07-27T07:37:09.000-0700"",""stateCount"":3,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,fe9c7622f596639285e4fd6d9abb88b7ef1d5a52,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,3,0,,,,100,,,,,,,,,,,,,,,2|i004qv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,58:26.9,"15/Jul/22 4:21 PM;5acffeafaa802f2a797a955c;PowerArtist data of the BDP module from my change:

Before:

{noformat}Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/feu/ifu/predictor
Power Unit: mW
      Category       Internal    Switching      Leakage        Total
    ----------------------------------------------------------------
      register          0.401        0.045        0.024        0.470
         latch          0.000        0.000        0.000        0.000
         logic          0.392        0.303        0.028        0.723 (+ibp)
          bbox          0.000        0.000        0.000        0.000
        memory          4.635        0.005        1.203        5.843
           pad          0.000        0.000        0.000        0.000
         clock          0.067        0.160        0.001        0.228
    ----------------------------------------------------------------
      Subtotal          5.495        0.513        1.256        7.264
    Percentage         75.65%        7.06%       17.29%      100.00%
       (*) ibp          0.019        0.067        0.000        0.086 (Inferred Buffer Power){noformat}



After:

{noformat}Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/feu/ifu/predictor
Power Unit: mW
      Category       Internal    Switching      Leakage        Total
    ----------------------------------------------------------------
      register          0.286        0.019        0.024        0.329
         latch          0.000        0.000        0.000        0.000
         logic          0.270        0.234        0.027        0.531 (+ibp)
          bbox          0.000        0.000        0.000        0.000
        memory          2.355        0.005        1.203        3.563
           pad          0.000        0.000        0.000        0.000
         clock          0.048        0.120        0.001        0.169
    ----------------------------------------------------------------
      Subtotal          2.959        0.378        1.255        4.592
    Percentage         64.44%        8.23%       27.33%      100.00%
       (*) ibp          0.014        0.053        0.000        0.067 (Inferred Buffer Power){noformat}",16/Jul/22 11:10 AM;5acffeafaa802f2a797a955c;[~accountid:622a8208db58c100687dd15a] FYI.  This ended up being worth a bit more than I expected on Dhrystone,17/Jul/22 6:58 PM;5ca54304bb1ed00ac5e5e852;cc. [~accountid:61aaafab977c5b007241043c] just to be aware of the branch prediction changes.,"17/Jul/22 7:44 PM;5e1371705361330daaeaf389;To be clear, this is pretty much a Dhrystone power widget; even CoreMark is likely to use more than the base plus the first TAGE table. Some workloads with tight, high-iteration loops may also benefit, but I don’t expect the savings to be huge for generic workloads.

[~accountid:5acffeafaa802f2a797a955c] did you provide a chicken bit to disable this power-saving feature, just in case there are issues re-awakening the rest of the TAGE tables or anything like that? I didn’t notice a chicken bit in the PR but could have missed it.

Also, could you add a description about this in the MAS, so we don’t forget the details – what it takes to kick it in, what it takes to kick out of this mode, etc? Thanks\!","18/Jul/22 2:21 PM;5acffeafaa802f2a797a955c;[~accountid:5e1371705361330daaeaf389] Yes there’s a chicken bit to disable this, the existing {{disablePredSkip}} IFU chicken bit.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: fast L2 request for non-speculative MMIO from LSTO,,,,,,MAL-2184,120253,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,7/14/2022 22:38,8/27/2022 9:34,9/28/2022 0:51,7/15/2022 11:09,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"Some customers care about MMIO access latency.  We can make faster requests from the LSTO stage, similar to as is already done for speculate-able memory (cacheable or idempotent-non-cacheable) since [https://sifive.atlassian.net/browse/MAL-55|https://sifive.atlassian.net/browse/MAL-55|smart-link], if the load is already non-speculative.",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,MAL-55,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Load/Store,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-10T10:33:35.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24585,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i004l3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[TGV] Separate VectorIntNarrowUnit port for shift/clip, leave the flexibility to improve timing in future",,,,,,MAL-2183,120241,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,7/14/2022 18:45,8/1/2022 5:41,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Kira Tsao,,,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-21T00:57:40.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,,,,,,,,,,,,,2|i004if:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] Fix vmsxf masking bugs,,,,,,MAL-2182,120240,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,7/14/2022 18:26,7/15/2022 7:19,9/28/2022 0:51,7/15/2022 7:18,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Per [https://github.com/sifive/federation/pull/24548#issuecomment-1184500133|https://github.com/sifive/federation/pull/24548#issuecomment-1184500133]

Cherry-pick masking fix from [https://github.com/sifive/federation/pull/24144|https://github.com/sifive/federation/pull/24144|smart-link] (this PR is still waiting for DV team to update cosim behavoir to implement correct tail agnostic behavior)",Brad Wu,,,,,,,,,,,,,,,62103777eb2978006893b778,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-15T16:15:17.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i004i7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Redsum insts not following tail_agnostic policy of filling 1s,[TGV] Redsum,,,,,MAL-2181,120224,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,7/14/2022 11:32,9/7/2022 17:43,9/28/2022 0:51,7/21/2022 11:12,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"I see the recently added redsum instructions on u8_minimal_vector are not following the tail agnostic policies. The instructions failing are 

{noformat}vwredsum.vs	
vredor.vs		
vwredsumu.vs
vredsum.vs	
vredmaxu.vs	
vwredsumu.vs
vredand.vs	
vredxor.vs	
vredmin.vs	{noformat}



i looked at the vredsum.vx instruction

{noformat}When
v7 0x34131646f683ca7be64d6e51b8470b9e
v1 0xa3b74bd07eea3267b39343652645f23e
and the inst is 

core   0: 0x0000000080000bfe (0x0452f2d7) vsetvli t0, t0, e8, mf8, ta, mu
core   0: 3 0x0000000080000bfe (0x0452f2d7) x 5 0x0000000000000002
core   0: 0x0000000080000c02 (0x0270a957) vredsum.vs v18, v7, v1
core   0: 3 0x0000000080000c02 (0x0270a957) e8 mf8 l2 v18 0xffffffffffffffffffffffffffffffe7

The RTL value for v18 is 0xac22ea987b49297d33b2c1ebde8ca3e7{noformat}



To recreate this failure:

# Clone federation and checkout the commit a3cb11f85ce7c08121f07cfed0d71f57fe4158a8
# build coreip_u8_minimal_vector and rerun the test using the outline
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.RamBank.*ext,1,0,15:.*\\.TagRAM_ext,1,0,32:.*\\.cc_banks.*ext,1,0,20:.*\\.icDataArray.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,15:.*\\.icWayPredArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""t0000_lmul2"",
  ""subtest"": ""vredsum.vs"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vredsum.vs_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_SelfCheck-1_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-2_TGV-1_IMM-1_LdStAccFault-1_TAILAgnostic-1"",
  ""seed"": {
    ""value"": 1537273821
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



The Waves are at {{gamma12:/scratch/srivatsa/debug_regr/a3cb11f85ce7c08121f07cfed0d71f57fe4158a8/builds/mfc/coreip_u8_minimal_vector/sim/sim/rerun.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vredsum.vs}}",Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/274e1e68d73e9d8fbd88be3f7fa50f2055c4f74b,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,No,,,,,,,,,,,,2|i004en:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,12:12.6,"21/Jul/22 11:12 AM;6065017e90e3950069cf01c5;The bug seems to have been fixed by [https://github.com/sifive/federation/pull/24566|https://github.com/sifive/federation/pull/24566|smart-link]  which modified the way tail is handled for the simple integer reductions.

RTL now gives:

{noformat}C                   0:      16712 [1] pc=[0000000080000a36] W[r 5=0000000000000004][1] R[r 5=0000000000000004] R[r 0=0000000000000000] inst=[0592f2d7] vsetvli t0, t0, e64, m2, ta, mu
C                   0:      16715 [1] pc=[0000000080000a3a] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[03812e57] vredsum.vs v28, v24, v2
C                   0:      16715 [1] pc=[0000000080000a3e] W[r 7=0000000000000059][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[c21023f3] csrr    t2, vtype
C                   0:      16713 vrf[28]=[ffffffffffffffff0705ad9db656c89a][ffff]{noformat}

and:

{noformat}C                   0:      17465 [1] pc=[0000000080000b42] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[03862cd7] vredsum.vs v25, v24, v12
C                   0:      17465 [1] pc=[0000000080000b46] W[r 7=0000000000000050][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[c21023f3] csrr    t2, vtype
C                   0:      17463 vrf[25]=[ffffffffffffffffffffffff9383f2f0][ffff]{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Vector completion pointer tracking optimizations,,,,,,MAL-2180,120212,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,7/14/2022 9:14,7/28/2022 23:59,9/28/2022 0:51,7/25/2022 9:26,,,,,,,,,,,Panda DR,,TGV_RTL/RDU,TGV_RTL/X2Y,,,,,,,,0,,,,"# Jump completion pointer to newest entry when the first vector instruction is dispatched ([https://github.com/sifive/federation/pull/24535#issuecomment-1184575287|https://github.com/sifive/federation/pull/24535#issuecomment-1184575287])
# Simplify completion pointer advancement logic. There are some terms used in {{cmplRdyVec}} that are probably not required. We can reduce this logic.",Andrew Hanselman,François Donati,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,624f6b22f813eb00692ee29a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-22T17:36:05.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,99ea52dd504686d87d19cb53e3fd6bff686edc68,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,MAL-1822,,,100,,,,,,,,,,,,,,,2|i004bz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,32:00.6,"14/Jul/22 9:19 AM;609d7e1f5998a6006800dcc5;[~accountid:624f6b22f813eb00692ee29a] For the first bullet, related to the ROB power optimizations you recently made, does this improvement make sense to you?","18/Jul/22 1:32 AM;624f6b22f813eb00692ee29a;About first point, I am not completely sure why I didn’t implemented that way, but that was probably me being conservative while I was discovering that logic. So forcing completion pointer to ROB write pointer value on first vector instruction sounds good to me. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Add map vs. freelist consistency checks,,,,,,MAL-2179,120207,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,7/14/2022 8:10,9/26/2022 14:25,9/28/2022 0:51,9/26/2022 14:25,,,,,,,,,,,Panda DR,,TGV_RTL/RDU,Verification,,,,,,,,0,,,,"We should have checks for the VRF and Mask Unit RF like this one for FEX (in MallardTileView)
{{      assert(!rdu_taps.fexFreeVec(mapEnt), s""FEX Map Table entry ${idx} with PR %d is also in Freelist"", mapEnt)}}",David Kravitz,Nicolas Brunie,,,,,,,,,,,,,,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-21T06:53:41.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0141abab3a13c61ecaa85490253213be8f990985,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i004av:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/25983/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Move single width shift logic out from LLP to VectorIntNarrowUnit,,,,,,MAL-2178,120181,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,7/14/2022 0:58,8/1/2022 5:41,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Kira Tsao,Nicolas Brunie,,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0045b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,16:26.3,"21/Jul/22 10:16 AM;6065017e90e3950069cf01c5;For this optimization (and for others) we should list what are the expected benefits and potential drawbacks, and also make sure it is an actual performance requirement if the benefits do not clearly outweigh the drawbacks. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Assertion failed in VectorSequencer caused by singleUop reduction instruction,,,,,,MAL-2177,120179,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,,Nicolas Brunie,6065017e90e3950069cf01c5,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,7/14/2022 0:23,7/14/2022 9:24,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,,,,"[https://sifive.slack.com/archives/C02LGLVN2LD/p1657781581182939?thread_ts=1657742298.355589&cid=C02LGLVN2LD|https://sifive.slack.com/archives/C02LGLVN2LD/p1657781581182939?thread_ts=1657742298.355589&cid=C02LGLVN2LD|smart-link] 

Error:

Assertion check at {{VectorSequencer:1312}} failed.

{{assert(!entryValid(allocId(i)) || entryDone(allocId(i))) }}



The possible causes:

* Reduction uops that can be treated as {{singleUop}} still queued to sequencer entries, it makes entry0 to assert {{entryDone}} in 2+ cycles if the following instructions are {{singleUop}} reduction
* Assertion {{VectorSequencer:1312}} is too strict, since the test still passes after comment this assertion out.



The possible solutions:

* Do not enqueue singleUop reduction instruction
* Add condition for reduction to {{VectorSequencer:1312}}



* Steps to reproduce:
** Checkout master (after 0661c3c3f43f5c9c9628d07ad487475b382c2142)
** Configure coreip_p670
** Outline

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vredmax.vs"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vredmax.vs_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_SelfCheck-1_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-1_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-1"",
  ""seed"": {
    ""value"": 824445069
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}",Alexandre Solomatnikov,Brad Wu,Kira Tsao,Nicolas Brunie,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,62103777eb2978006893b778,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0044v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"Checkout master (after 0661c3c3f43f5c9c9628d07ad487475b382c2142)
Configure coreip_p670

Outline:
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vredmax.vs"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vredmax.vs_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_SelfCheck-1_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-1_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-1"",
  ""seed"": {
    ""value"": 824445069
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,17:00.4,14/Jul/22 8:17 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;Is this still a problem after [https://github.com/sifive/federation/pull/24534|https://github.com/sifive/federation/pull/24534|smart-link]  merge?,14/Jul/22 8:26 AM;6065017e90e3950069cf01c5;I am running the test to check,"14/Jul/22 8:47 AM;6065017e90e3950069cf01c5;I am now seeing a cosim mismatch

master [https://github.com/sifive/federation/commit/abef28b9384d19da5e521b7ae6624d5caa1d0fd5|https://github.com/sifive/federation/commit/abef28b9384d19da5e521b7ae6624d5caa1d0fd5|smart-link] 

{noformat}[COSIM-ERROR][0] COSIM VS RTL WRDATA MISMATCH
[COSIM-ERROR][0] COSIM VS RTL WRINFO MISMATCH

[COSIM-ERROR][0] m_dut_inst_item: [15304] InstInfo: VLD=1 | PC=0x00000000800011d0 | INSN=0x1ed82c57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r24=0xffffffffffffffffffffffffffffff71 mask=ffff | READY=1 | CSR_TIMER=15304 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080001558 | MCAUSE=0x0000000000000002 | VSTART=0 | VL=12 | SEW=8 | LMUL=m1 | VSEGELT=0

[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x00000000800011d0 | INSN=0x1ed82c57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r24=0xffffffffffffffffffffffffffffff7e mask=ffff

Pending PC in the Instruction Queue: 5

sifive_test_results_pkg::report_status.unnamed$$_0@(t=318983000): Test Result Checking Registered Name [TestDriver.testHarness.PL2Scb] Index ID [2] Done [0] Success [0] Exit Code [0]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=318983000): FAILED: Test Result Registered Name [TestDriver.testHarness.cosim] Index ID [3] Done [1] Success [0] Exit Code [13107]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=318983000): FAILED: Test Result Registered Name [TestDriver.testHarness.i_TF] Index ID [4] Done [1] Success [0] Exit Code [0]

sifive_test_results_pkg::report_status@(t=318983000): done:          3, registered:          3, success:          1


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 63797 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 318,982,500 ps.

C                   0:      15285 vrf[ 0]=[b296316975eac8cc6d3f47e7e4f5b8d3][ffff]
Error: Instruction-by-Instruction check failed
C                   0:      15304 [1] pc=[00000000800011d0] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[1ed82c57] DASM(1ed82c57)

C                   0:      15805 [1] pc=[0000000080000854] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[0000bffd] DASM(0000bffd)
Error: Instruction-by-Instruction check failed{noformat}",14/Jul/22 9:24 AM;5e1a4f5ec578120daca5ff8e;Is changing the singleUop not been enqueue going to affect the sequence while issuing the simple reduction? If so I may need some work on the FP order reduction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] VectorFPHRZRedUnit tag broadcast anticipation. Broadcast the tag at the time we fire the last calculation.,,,,,,MAL-2176,120177,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,7/13/2022 23:42,9/23/2022 0:27,9/28/2022 0:51,8/2/2022 19:47,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,Tag broadcast could be optimized for VectorFPHRZRedUnit in VexPipe.,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Kira Tsao,Nicolas Brunie,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-02T18:55:25.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i0044f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] VectorFPHRZRedUnit tag broadcast anticipate,,,,,,MAL-2175,120175,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,7/13/2022 23:40,7/13/2022 23:43,9/28/2022 0:51,7/13/2022 23:43,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,Tag broadcast could be anticipate for VectorFPHRZRedUnit. We can broadcast the tag at the time we fire the last calculation. ,Kira Tsao,,,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1949,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0043z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] RTL raises an illegal instruction exception,[TGV] RTL raises  an illegal instruction exception,Instrction decode and dispatch ,,,,MAL-2174,120143,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Zhiqiang Hao,5d02d411febd110bc78aabc3,Zhiqiang Hao,5d02d411febd110bc78aabc3,7/13/2022 17:23,9/7/2022 17:43,9/28/2022 0:51,7/21/2022 9:40,Panda DR,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"In sting test, some instructions will cause a exception with mcause=2 on RTL side, but not on spike

Those exception will always happen after the {{vmv2r.v}} insts, like



{noformat}core   0: 0x000000008b400858 (0x9f80b457) vmv2r.v v8, v24
core   0: 3 0x000000008b400858 (0x9f80b457) e32 m1 l4 v 8 0x27a9adb94f535b739ea6b6e63d4d6dcc v 9 0x627a9adbc4f535b789ea6b6e13d4d6dc
core   0: 0x000000008b40085c (0xbf119bd7) vfnmsac.vv v23, v17, v3
core   0: 3 0x000000008b40085c (0xbf119bd7) e32 m1 l4 v23 0x24627a9a48c4f5351189ea6b2313d4d6{noformat}



On RTL:

{noformat}C                   0:     354985 [1] pc=[000000008b400858] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[9f80b457] vmv2r.v v8, v24
C                   0:     353781 vrf[26]=[00000003000000020000000100000000][ffff]
C                   0:     353789 vrf[18]=[1f921269a8ecc34e80980b83abf8f27b][ffff]
C                   0:     353789 vrf[19]=[8ca6f4b3a30840b331ec901e956bf707][ffff]
C                   0:     353791 vrf[18]=[9adb9983b5b73307eb6e660ed6dccc1d][ffff]
C                   0:     353790 vrf[ 8]=[00000000000000000000000000000000][ffff]
C                   0:     353790 vrf[ 9]=[00000000000000000000000000000000][ffff]
C                   0:     353792 vrf[ 8]=[27a9adb94f535b739ea6b6e63d4d6dcc][ffff]
C                   0:     353793 vrf[ 9]=[627a9adbc4f535b789ea6b6e13d4d6dc][ffff]
C                   0:     355011 [1] pc=[0000000080000400] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[0800006f] j       pc + 0x80{noformat}



Run Area:

gamma12

{noformat}/scratch/verif/srivatsa/Andrews_failure/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0234/sting/sifive/vector/vector_tgv_dev.conf{noformat}",David Kravitz,Nicolas Brunie,Srivatsa Yogendra,Zhiqiang Hao,,,,,,,,,,,,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2196,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-21T07:51:06.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/ab4d60472742bc693b2583ee4563bb0f9466a866,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i003yn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,59:34.2,13/Jul/22 5:59 PM;5fd15143b4a74900763834e0;Bouncing to [~accountid:5e1a4f5ec578120daca5ff8e] for a first look. He implemented the {{vmvNr.v}} logic,"14/Jul/22 9:14 AM;6065017e90e3950069cf01c5;I think this is the same issue as the one I am working on in [https://sifive.atlassian.net/browse/MAL-2173|https://sifive.atlassian.net/browse/MAL-2173|smart-link] .

Let me handle this.",19/Jul/22 4:36 PM;6065017e90e3950069cf01c5;[~accountid:5d02d411febd110bc78aabc3] / [~accountid:5a938e9c0913194d2d262658] it looks like the run area no longer exists on {{gamma12}}. Is it possible to get federation git hash and a copy of the {{rerun.outline}} instead ?,19/Jul/22 4:38 PM;5a938e9c0913194d2d262658;I thought u had an area working with MAL-2196. I accidentally deleted the area today ,19/Jul/22 4:38 PM;5a938e9c0913194d2d262658;I have a bunch of similar failures ,19/Jul/22 4:40 PM;5d02d411febd110bc78aabc3;[~accountid:6065017e90e3950069cf01c5] - I’ll prepare another run for you,"19/Jul/22 4:53 PM;6065017e90e3950069cf01c5;[~accountid:5a938e9c0913194d2d262658] , I indeed was able to use MAL-2171/MAL-2196 to prepare a fix, but I wanted to test it on this one to make sure it was something similar (or to continue digging). ","19/Jul/22 4:57 PM;5d02d411febd110bc78aabc3;[~accountid:6065017e90e3950069cf01c5] - Could you try with this run? I’ll put the debug info here later

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0154"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3932818896
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}","19/Jul/22 5:03 PM;6065017e90e3950069cf01c5;Thanks [~accountid:5d02d411febd110bc78aabc3] , I am using a master + the 2 commits to enable the new instructions in sting.","19/Jul/22 8:58 PM;5a938e9c0913194d2d262658;Actually we had a lot of failures, when i ran a regression today morning. Do u have a commit/branch i can test it on?","19/Jul/22 9:29 PM;6065017e90e3950069cf01c5;[~accountid:5a938e9c0913194d2d262658]  [https://github.com/sifive/federation/tree/MAL-2203_slide-amount-width-overflow-fix|https://github.com/sifive/federation/tree/MAL-2203_slide-amount-width-overflow-fix|smart-link]  should contain both {{vmv<N>r}} and some other fixes. you can test with this one (it does not contain the Sting updates, {{MAL-2203_test-branch-sting-update_DO-NOT-MERGE}} does).",19/Jul/22 9:30 PM;5a938e9c0913194d2d262658;Cool. I’ll try it tom. Thank you ,20/Jul/22 11:45 AM;5a938e9c0913194d2d262658;I ran like 100 sting tests with {{MAL-2203_test-branch-sting-update_DO-NOT-MERGE}} and dont see the failure anymore. I think that is good enough to merge this in. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Cosim mismatch on a vector widening add operation,[TGV] Cosim mismatch,Execution Unit ,Vector,,,MAL-2173,120139,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,7/13/2022 16:33,9/7/2022 17:43,9/28/2022 0:51,7/21/2022 9:45,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"the instruction is 

{noformat}core   0: 0x00000000227400c2 (0xd3c36457) vwaddu.wx v8, v28, t1
core   0: 3 0x00000000227400c2 (0xd3c36457) e32 m1 l4 v 8 0x4e2bed773ea7daee38afb5dd13af6bb9 v 9 0x46e8ac3e295b10a206e8ac3f2938001e

Vector regs updated by RTL 
C                   0:     131162 vrf[ 8]=[4e2bed773ea7daee38afb5dd13af6bb9][ffff]
C                   0:     131163 vrf[ 9]=[46e8ac3e295b10a206e8ac3f2938001e][ffff]
C                   0:     131164 vrf[10]=[ce2bed77bea7daee38afb5dc93af6bb9][ffff]
C                   0:     131165 vrf[11]=[7fc00000a21000007fc00000a2100000][ffff]{noformat}


seems like the value for v10 and v11 are coming from V30 and v31 reg. 



To recreate this failure:

# clone federation and checkout the commit 642e7287069e57d251c5f9bd888b900007a01bb8
# build coreip_u8_minimal_vector and rerun the simulation using the outline
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0047"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3469088379
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}



the waves are generated at {{gamma12:/scratch/verif/srivatsa/Andrews_failure/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0047/sting/sifive/vector/vector_tgv_dev.conf}}",Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2171,,,,,,,,,,,14/Jul/22 8:43 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220714-154311.png;https://sifive.atlassian.net/secure/attachment/74490/image-20220714-154311.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-18T13:43:00.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/bf4e50215aaf3edbfc355f1f4dbbc1b97d5c3178,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i003xr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,43:14.0,"14/Jul/22 8:43 AM;6065017e90e3950069cf01c5;It seems the issue is that the {{vl}} seen by the sequencer is {{8}} (and valid) and LMUL=2 when it starts to sequence the {{vwaddu.wx}} so the sequencer assumes there is a 8 elts inputs (32b) giving a 8 64b (4 vectors) output.

!image-20220714-154311.png|width=1370,height=710!",14/Jul/22 8:44 AM;6065017e90e3950069cf01c5;The previous instruction was a {{vmv2r.v}} so it is possible it overwrote the LMUL / vl value.,18/Jul/22 1:43 PM;6065017e90e3950069cf01c5;[~accountid:5a938e9c0913194d2d262658]  [https://github.com/sifive/federation/commit/bf4e50215aaf3edbfc355f1f4dbbc1b97d5c3178|https://github.com/sifive/federation/commit/bf4e50215aaf3edbfc355f1f4dbbc1b97d5c3178|smart-link]  should fix this,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] IEX block in2out through io_vsrfReadReq* and io_vsrfReadResp*,,,,,,MAL-2172,120138,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,7/13/2022 16:12,9/21/2022 15:09,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/X2Y,Timing,,,,,,,,0,,,,,Cody Croxton,David Forbis,David Kravitz,Michael White,Nicolas Brunie,Tom Mickelson,,,,,,,,,,5e1371930242870e996efde2,626058bb60d67c0068d9259c,5fd15143b4a74900763834e0,60f1ea6c6491110069392f8f,6065017e90e3950069cf01c5,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11/Aug/22 8:59 AM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220811-144136.png;https://sifive.atlassian.net/secure/attachment/75709/image-20220811-144136.png,11/Aug/22 8:59 AM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220811-155836.png;https://sifive.atlassian.net/secure/attachment/75708/image-20220811-155836.png,,,,,,,,,,,,,,,a333c4e74d5867c6a0addc79846ed03f87892e87,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i003xj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,57:54.9,"13/Jul/22 4:13 PM;60f1ea6c6491110069392f8f;In p670 IEX block run we see many in2out paths between io_vsrfReadReq* and io_vsrfReadResp*.  Is this RDU through IEX to TGV/VRDU/VectorSequencer logic?  If so this might be a pretty long path.



From D Kravitz:

yeah, it might be long. One option is we could move the vset RF out of IEX and put it somewhere closer to the Sequencer.

Another option is we could add a pipe stage (maybe one each direction even), which could cause some stalls. We don’t need to read it every instruction; only when vl is changing. If it impacts performance, we could try to invent a scheme where instructions launch the read request as they pass the TGV dispatch stage in the RDU (or maybe even from REN).","13/Jul/22 4:57 PM;5fd15143b4a74900763834e0;Do you have the timing report for this? I know it doesn’t look good to start with, but we’d like to focus our energies on known paths before the theoretical ones. Also, knowing how much it’s failing by will be important for planning any fix.","13/Jul/22 5:13 PM;60f1ea6c6491110069392f8f;I can show the path through IEX but the I/O are just poor guesses for now.  Tom/D Forbis should have a P670 full Tile run someday and we can provide more details then.

I could provide timing reports for FEU/RDU and IEX.  D Forbis should have timing path for TGV block ( timing broken badly ).  Should we just wait?

Ex IEX:

/project/tsmc/cln7ff/P6_ppa_runs/michaelw/P670/blocks/timing_reports/MAL-2172","11/Aug/22 8:59 AM;60f1ea6c6491110069392f8f;Update: Tom has new TGV run, tomm_iter_220806, through prects stage with “decent” timing ( WNS ~ -100 ps ).  Cody is wondering why TGV appears pulled towards LSU and FEU.

Gate blob near LSU is the TGV/BAL module.

    I don’t see any timing critical paths from LSU/FEU.  This might be here because it can be.

Gate blob near FEU seems to be above path and even some single cycle paths from from FEU through TGV/VRDU back to FEU.

    tile/core/feu/rdu/extVConfig_DIS_3_vl_valid_reg/CP → tile/core/feu/rdu/tgvIssReady_DIS_2_reg/D

TGV placement in P670 floorplan:

!image-20220811-144136.png|width=788,height=657!

tgv/bal (purple) and startpoints into tgv/bal (light green):

!image-20220811-155836.png|width=594,height=709!

Timing path info:

/project/tsmc/cln7ff/P6_ppa_runs/michaelw/P670/blocks/timing_reports/MAL-2172.2","11/Aug/22 9:36 AM;5fd15143b4a74900763834e0;TGV/BAL is the vector interface to the LSU; no surprise it’s pulled in that direction.

There is also communication between the scalar RDU (in the FEU) and TGV. The flow-through path you list relates to bypassing instructions from the RDU’s dispatch to the vector sequencer. We could potentially add a pipe stage in one (or both) directions at some cost in latency when the vector sequencer is going from empty to not-empty, or full to not-full. Maybe [~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] can take a look.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] data mismatch on a floating point multiplication operation,[TGV] data mismatch,Execution Unit ,Floating point,,,MAL-2171,120136,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,7/13/2022 16:03,9/7/2022 17:43,9/28/2022 0:51,7/18/2022 16:50,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"On a floating point multiplication operation with infinity, seems like the RTL is modifying 2 regs instead of 1 for sew =32, vl =4 and lmul = 1



The instruction is 

{noformat}core   0: 0x0000000041ac083a (0x92a0d657) vfmul.vf v12, v10, ft1
core   0: 3 0x0000000041ac083a (0x92a0d657) e32 m1 l4 v12 0x7fc000007fc000007fc000007fc00000

where ft1 is 0x00000000ff800000

and RTL is updating 
C                   0:     133240 vrf[12]=[7fc000007fc000007fc000007fc00000][ffff]
C                   0:     133243 vrf[13]=[7fc000007fc000007fc000007fc00000][ffff]{noformat}



To recreate this failure:

# clone federation and checkout the commit 642e7287069e57d251c5f9bd888b900007a01bb8
# build coreip_u8_minimal_vector and rerun the simulation using the outline 
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0040"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1855267908
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}



The waves are generated at 

{{gamma12:/scratch/verif/srivatsa/Andrews_failure/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0040/sting/sifive/vector/vector_tgv_dev.conf}}",Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2173,MAL-2196,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-21T07:47:58.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/bf4e50215aaf3edbfc355f1f4dbbc1b97d5c3178,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i003x3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,46:28.9,18/Jul/22 1:46 PM;6065017e90e3950069cf01c5;I think [https://github.com/sifive/federation/commit/bf4e50215aaf3edbfc355f1f4dbbc1b97d5c3178|https://github.com/sifive/federation/commit/bf4e50215aaf3edbfc355f1f4dbbc1b97d5c3178|smart-link]  might fix this issue. I am testing this hypothesis locally.,"18/Jul/22 2:23 PM;6065017e90e3950069cf01c5;I obtain a different error at a timestamp further away: {{163081}} (was {{133240}}):

{noformat}C                   0:     163047 [1] pc=[0000000080011318] W[r 0=0000000000000000][0] R[r 2=0000000080c08ed8] R[r 8=0000000080c08f18] inst=[0000e422] c.sdsp  s0, 8(sp)
C                   0:     163047 [1] pc=[000000008001131a] W[r 8=0000000080c08ee8][1] R[r 2=0000000080c08ed8] R[r 0=0000000000000000] inst=[00000800] c.addi4spn s0, sp, 16
C                   0:     163054 [1] pc=[000000008001131c] W[r 5=8000000000000008][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[f12022f3] csrr    t0, marchid
C                   0:     163056 [1] pc=[0000000080011320] W[r 6=0000000000000005][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00004315] c.li    t1, 5
C                   0:     163056 [1] pc=[0000000080011322] W[r 0=0000000000000000][0] R[r 5=8000000000000008] R[r 6=0000000000000005] inst=[00629c63] bne     t0, t1, pc + 24
C                   0:     163070 [1] pc=[000000008001133a] W[r15=000000008002733a][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00016797] auipc   a5, 0x16
C                   0:     163070 [1] pc=[000000008001133e] W[r15=0000000080f2c268][1] R[r15=000000008002733a] R[r 0=0000000000000000] inst=[f0e7b783] ld      a5, -242(a5)
C                   0:     163073 [1] pc=[0000000080011342] W[r14=0000000000000000][1] R[r15=0000000080f2c268] R[r 0=0000000000000000] inst=[0cc7c703] lbu     a4, 204(a5)
C                   0:     163074 [1] pc=[0000000080011346] W[r15=0000000000000001][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00004785] c.li    a5, 1
C                   0:     163074 [1] pc=[0000000080011348] W[r 0=0000000000000000][0] R[r14=0000000000000000] R[r15=0000000000000001] inst=[02f70363] beq     a4, a5, pc + 38
C                   0:     163074 [1] pc=[000000008001134c] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[0ff0000f] fence   iorw,iorw
C                   0:     163075 [1] pc=[0000000080011350] W[r 5=0000000000004000][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00006291] c.lui   t0, 0x4
C                   0:     163075 [1] pc=[0000000080011352] W[r 6=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[0000630d] c.lui   t1, 0x3
C                   0:     163075 [1] pc=[0000000080011354] W[r 6=0000000000003333][1] R[r 6=0000000000000005] R[r 0=0000000000000000] inst=[3333031b] addiw   t1, t1, 819
C                   0:     163075 [1] pc=[0000000080011358] W[r10=0000000000000001][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00004505] c.li    a0, 1
C                   0:     163075 [1] pc=[000000008001135a] W[r10=0000000000010000][1] R[r10=0000000000000001] R[r 0=0000000000000000] inst=[00000542] c.slli  a0, 16
C                   0:     163075 [1] pc=[000000008001135c] W[r10=0000000000013333][1] R[r10=0000000000010000] R[r 6=0000000000003333] inst=[0000951a] c.add   a0, t1
C                   0:     163075 [1] pc=[000000008001135e] W[r 0=0000000000000000][0] R[r 5=0000000000004000] R[r10=0000000000013333] inst=[00a2a023] sw      a0, 0(t0)
C                   0:     163081 [1] pc=[0000000080011362] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[10500073] wfi
Error: Test Ended but Instructions still present in Cosim Scoreboard
{noformat}","18/Jul/22 2:25 PM;6065017e90e3950069cf01c5;And the previous duplicate write from {{vmul.vf v12, v10, ft1}} seems to have disappeared:

{noformat}C                   0:     133238 [1] pc=[0000000041ac081a] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[ab3283d7] vssrl.vv v7, v19, v5
C                   0:     133238 [1] pc=[0000000041ac081e] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[9ef787d7] vsmul.vv v15, v15, v15
C                   0:     133238 [1] pc=[0000000041ac0822] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[b60634d7] vnsra.wi v9, v0, 12
C                   0:     133238 [1] pc=[0000000041ac0826] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[9e8424d7] vmulh.vv v9, v8, v8
C                   0:     133238 [1] pc=[0000000041ac082a] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[a7163157] vsra.vi v2, v17, 12
C                   0:     133238 [1] pc=[0000000041ac082e] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[cfa8a957] vwsub.vv v18, v26, v17
C                   0:     133238 [1] pc=[0000000041ac0832] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[9ec0b557] vmv2r.v v10, v12
C                   0:     133230 vrf[ 7]=[00000000000000000004000000000000][ffff]
C                   0:     133231 vrf[15]=[00000000000000000000000000000000][ffff]
C                   0:     133228 vrf[ 9]=[a76453349d94ff2f44d533081354cc22][ffff]
C                   0:     133234 vrf[ 9]=[00000000279a60a3000000000ba7738e][ffff]
C                   0:     133235 vrf[ 2]=[fffa764b0004ec97fff9d92e0003b25d][ffff]
C                   0:     133236 vrf[18]=[000000005e2de891ffffffff6321aba6][ffff]
C                   0:     133236 vrf[19]=[0000000046db2778ffffffff8aa7a46d][ffff]
C                   0:     133232 vrf[10]=[b2b065cb6560cb8ecac1971895832e2a][ffff]
C                   0:     133233 vrf[11]=[0000000060e01bf00c831fcf00000000][ffff]
C                   0:     133241 [1] pc=[0000000041ac0836] W[r 0=0000000000000000][0] R[r13=6095d0354ac726f0] R[r 0=0000000000000000] inst=[1786cc57] vmin.vx v24, v24, a3
C                   0:     133241 [1] pc=[0000000041ac083a] W[r 0=0000000000000000][0] R[f 1=00000000ff800000] R[r 0=0000000000000000] inst=[92a0d657] vfmul.vf v12, v10, ft1
C                   0:     133237 vrf[24]=[000000012ff27aec000000014ac726f0][ffff]
C                   0:     133239 vrf[12]=[7fc000007fc000007fc000007fc00000][ffff]
C                   0:     133339 [1] pc=[0000000041ac083e] W[r 0=0000000000000000][0] R[r30=0000000010105000] R[r 0=0000000000000000] inst=[ba0f4857] vnclipu.wx v16, v0, t5
C                   0:     133339 [1] pc=[0000000041ac0842] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[4ad324d7] vzext.vf2 v9, v13
C                   0:     133339 [1] pc=[0000000041ac0846] W[r 0=0000000000000000][0] R[r24=000000000000000d] R[r 0=0000000000000000] inst=[8b4c4857] vssubu.vx v16, v20, s8
C                   0:     133339 [1] pc=[0000000041ac084a] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[9f83b457] vmv8r.v v8, v24
C                   0:     133339 [1] pc=[0000000041ac084e] W[r 0=0000000000000000][0] R[f30=00000000002f471d] R[r 0=0000000000000000] inst=[1adf5557] vfmax.vf v10, v13, ft10
C                   0:     133339 [1] pc=[0000000041ac0852] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[037b9b57] vfadd.vv v22, v23, v23
C                   0:     133339 [1] pc=[0000000041ac0856] W[r 0=0000000000000000][0] R[r10=000000001b4ca948] R[r 0=0000000000000000] inst=[da456457] vwsubu.wx v8, v4, a0
C                   0:     133318 vrf[16]=[ffffffffffffffffffffffffffffffff][ffff]{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[TGV] refactor VectorSequencer singleNop / singleUop, check exclusion overlap for complex permute case",,,,,,MAL-2170,120134,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/13/2022 15:36,7/14/2022 18:45,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i003wn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Improve funct3 timing paths by generating 8b one-hot decoding,,,,,,MAL-2169,120102,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,7/13/2022 11:26,9/7/2022 12:12,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,Timing,,,,,,,,0,,,,"[~accountid:6065017e90e3950069cf01c5] mentioned a timing path that started with 800+ fanout on (some of) the {{funct3}} bits. We should investigate whether TGV should add a one-hot predecode of {{funct3}} to the vector payload in order to improve timing. Even if the per-path impact is small (20-30 ps?), the sheer number of paths that could benefit might be worth it.",David Kravitz,Nicolas Brunie,,,,,,,,,,,,,,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i003pr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,33:40.7,"13/Jul/22 11:33 AM;6065017e90e3950069cf01c5;fanout of {{866}} to be accurate:

{noformat}#---------------------------------------------------------------------------------------------------------------------------------------------------------------------
#                             Timing Point                               Flags    Arc   Edge              Cell               Fanout Load Trans Delay Arrival Instance 
#                                                                                                                                   (fF)  (ps)  (ps)   (ps)  Location 
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------
  tile/core/tgv/vex/exPipes_1/instPayload_EX_cmn_ctrl_funct3_reg[0]/CP   -       -      R     (arrival)                         866    -     0     0       0    (-,-) 
  tile/core/tgv/vex/exPipes_1/instPayload_EX_cmn_ctrl_funct3_reg[0]/Q    -       CP->Q  F     DFQD4BWP240H8P57PDULVT              6  9.0    13    29      29    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/fopt54987/Z               -       I->Z   F     BUFFD5BWP240H8P57PDULVT             4  4.1     6    12      42    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g54911/ZN                 -       A1->ZN F     IND3OPTPAD4BWP240H8P57PDULVT        2  2.3     9    16      57    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g54137/ZN                 -       A1->ZN R     ND2OPTPAD4BWP240H8P57PDULVT         3  2.6     8     6      63    (-,-) {noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
LSU: unroll in multiple pipes,,,,,,MAL-2168,120038,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,7/12/2022 17:33,7/23/2022 9:31,9/28/2022 0:51,,,,,,,,,,,,,,Performance,RTL/LSU,,,,,,,,0,,,,"The initial implementation in [https://sifive.atlassian.net/browse/MAL-70|https://sifive.atlassian.net/browse/MAL-70|smart-link] is conservative and blocking: unrolling ops in a LSTPipe also hold newer ops in adjacent pipes stages and all following pipes stages.

We can speed this up by allowing LSTPipes to slip past each other, so that unrolling only blocks following stages in that single LSTPipe.  This will be good for TGV performance, because TGV wants to parallelize multiple uops.  This will also further help enable Healdsburg improvements, especially banking the LsIssQ.

There are a lot of assumptions made in the LSTPipes that lower-numbered pipes are older.  There is a lot more coverage to add here for this feature.",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-70,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-07-23T09:12:22.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,,,,,,,,,,,,,,,,2|i003bz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,20,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
HWPF: ignore L2MSHR feedback when WFI,,,,,,MAL-2167,120034,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,7/12/2022 17:24,7/18/2022 15:44,9/28/2022 0:51,7/13/2022 15:38,,,,,,,,,,,,,RTL/HWPF,,,,,,,,,0,,,,"On WFI, we want to ignore L2MSHR feedback because the responses from PL2 on the TL D channel may be delayed in case of MSHR is full, leading to PF requests not draining quickly. Even more so, L2MSHR feedback may be delayed indefinitely (i.e. may never come) in case of L2MSHRs being used for writes, leading to PF requests never draining.",Binayak Tiwari,John Ingalls,,,,,,,,,,,,,,60a963ed8cbda700681b40c1,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CIP-3711,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-13T15:37:23.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i003b3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,2,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] RDU assertion firing that the allocPTR and freePTR are not the same when ROB is empty,[TGV] RDU assertion PTR and freePTR are not the same when ROB ,,,,,MAL-2166,120021,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,7/12/2022 16:03,9/7/2022 17:43,9/28/2022 0:51,7/14/2022 12:02,,,,,,,,,,,Panda DR,,RTL/RDU,,,,,,,,,0,TGV,,,"I see the assertion being reported. 

{noformat}Error: ""/scratch/srivatsa/debug_regr/b87f8792e740c796abbcde6621ce7b8a036e6236/builds/sfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_RDU_assert.sv"", 1704: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.SiFive_RDU_assert_0: at time 631462500 ps
Assertion failed (verification library): S2V alloc pointer and free pointer should match when ROB is empty  @[RDU.scala 2209:15]
Fatal: ""/scratch/srivatsa/debug_regr/b87f8792e740c796abbcde6621ce7b8a036e6236/builds/sfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_RDU_assert.sv"", 1713: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.SiFive_RDU_assert_0: at time 631462500 ps
$finish called from file ""/scratch/srivatsa/debug_regr/b87f8792e740c796abbcde6621ce7b8a036e6236/builds/sfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_RDU_assert.sv"", line 1713.{noformat}



From looking through the waves, i see that the ROB gid {{a}} is being marked for completion by the exCmplReq_WB signals. But also there is a flush request coming on on the brFlushReq_BR1 for the same gid. 

Also looking at the PC and globalID being sent to IEX, i do see a mispredicted PC being sent to execute. 



Thats where i get lost, and am not able to debug further.



to recreate the failure:

# clone federation and check out the commit b87f8792e740c796abbcde6621ce7b8a036e6236
# build the design coreip_u8_minimal_vector and rerun the test using the outline 
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vdivu.vx"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vdivu.vx_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_SelfCheck-1_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-1_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 2600017708
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



The waves are at {{gamma12:/scratch/srivatsa/debug_regr/b87f8792e740c796abbcde6621ce7b8a036e6236/builds/sfc/coreip_u8_minimal_vector/sim/sim/rerun.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vdivu.vx}}",Andrew Hanselman,Srivatsa Yogendra,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13/Jul/22 10:51 PM;ug:03c2888a-5ac7-445d-b700-4a271a824946;Screen Shot 2022-07-13 at 11.20.57 PM-20220714-042252.png;https://sifive.atlassian.net/secure/attachment/74466/Screen+Shot+2022-07-13+at+11.20.57+PM-20220714-042252.png,13/Jul/22 10:51 PM;ug:03c2888a-5ac7-445d-b700-4a271a824946;Screen Shot 2022-07-14 at 12.10.11 AM-20220714-051025.png;https://sifive.atlassian.net/secure/attachment/74467/Screen+Shot+2022-07-14+at+12.10.11+AM-20220714-051025.png,13/Jul/22 4:16 PM;ug:03c2888a-5ac7-445d-b700-4a271a824946;image-20220713-225643.png;https://sifive.atlassian.net/secure/attachment/74455/image-20220713-225643.png,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-08-09T07:25:04.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,528e08874948c89fb3a52bb772edecf10d6b78e5,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|i00387:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,16:14.6,"13/Jul/22 4:16 PM;609d7e1f5998a6006800dcc5;I don’t think this is a functional issue. I just need to think about how to rewrite the assertion. Some flush occurs, which clears all the ROB entries which contain vector info. So the ROB clock gates the vector pointers. Then the ROB empties, but the free pointer didn’t have a chance to catch up.

!image-20220713-225643.png|width=1217,height=359!

I could add some logic to jump the vector free pointers to the allocate pointer if {{hasV}} is false during the final cycle when vector rob clock is still enabled, but I’m not set yet on that as a solution.","13/Jul/22 10:51 PM;609d7e1f5998a6006800dcc5;It appears I need to take that back. This wasn’t sitting right with me when I walked away for dinner. I found that the completion pointer was jumping to the wrong value when the ROB is full and the pointer is pointing to the oldest ROB entry. Incorrect in red box, corrected in second image.

!Screen Shot 2022-07-13 at 11.20.57 PM-20220714-042252.png|width=976,height=386!

!Screen Shot 2022-07-14 at 12.10.11 AM-20220714-051025.png|width=1013,height=341!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] refactor various tag pipelines in VexPipe and pay tech debt,,,,,,MAL-2165,120018,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/12/2022 15:27,7/14/2022 18:45,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Following bugfix in [https://sifive.atlassian.net/browse/MAL-2164|https://sifive.atlassian.net/browse/MAL-2164|smart-link] 

Several part of the tag pipelines in {{VexPipe}} could be cleaned

+*Issue (A)*+

{quote}[~accountid:609d7e1f5998a6006800dcc5] : I noticed this in the last week when I was tweaking logic to integrate the accumulators. It looks like the latency > 0 still stages a valid pipe tag when nothing is injected in the same cycle the instruction is issued. So {{muxedStageTag_ISS}} selects ISS, even for latency > 0. It seemed to not be a functional issue, but seemed odd{quote}

[https://sifive.slack.com/archives/C02LGLVN2LD/p1657658473495389?thread_ts=1657651533.540999&cid=C02LGLVN2LD|https://sifive.slack.com/archives/C02LGLVN2LD/p1657658473495389?thread_ts=1657651533.540999&cid=C02LGLVN2LD|smart-link] 

+*Issue (B )*+

stagedTag is not using or exposing its {{tags}}field (and this field is even completely gated when latency > 0 as {{broadcasts(i)}} is false)",Andrew Hanselman,Nicolas Brunie,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0037j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] wrong tag being staged and broadcast from VectorPermuteEngine,[TGV] wrong tag,Execution Unit ,Vexpipe Permute Engine,,,MAL-2164,120015,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/12/2022 15:02,9/7/2022 17:43,9/28/2022 0:51,7/18/2022 9:08,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"{quote}the power optimization done to avoid tag pipeline when tag broadcast is disabled conflicts with the way the {{VexPipe}} disables some tag broadcast (for valid tags) when the latency of the instruction is greater than the default 1 cycle. In particular I think this mess up with the way the permutation engine expects the tags.{quote}

error on {{t0000_lmul4/vector/vector_tests_gen/rvv_64/vslidedown.vx}} on {{coreip_u8_minimal_vector}}

+*outline:*+

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0000_lmul2"",
  ""subtest"": ""vslidedown.vx"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vslidedown.vx_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_SelfCheck-1_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-2_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 1093939970
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

+*errror:*+

{noformat}Error: ""/scratch/nicolasb/federation_bis/builds_mfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_PRA_5_assert.sv"", 79: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vrdu.vexPra.SiFive_PRA_5_assert: at time 373482500 ps
Assertion failed: Physical register  89 set as ready twice (only first conflicting id shown)

    at PRF.scala:75 assert(!(readyVec & setVec).orR, ""Physical register %d set as ready twice (only first conflicting id shown)"", firstRegSetTwice)
{noformat}",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-12T16:49:47.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/9cb99dbec2aaea538944ae74a9e1e17ad6995bef,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i0036v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[FPU] adding n5 configuration for p650 FEX,,,,,,MAL-2163,120012,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/12/2022 13:54,9/7/2022 11:53,9/28/2022 0:51,9/7/2022 11:53,,,,,,,,,,,,,RTL/FEX,,,,,,,,,0,,,,,Josh Smith,Nicolas Brunie,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,,,,,,,,,,,,,2|i00367:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,52:40.9,07/Sep/22 11:52 AM;5acffeafaa802f2a797a955c;I think this should be considered “done” since I added a json at {{specs/build-plans/pd/p650_tsmc_n5_tsmc_H210_FEX.json}}. So I’m going to close the ticket.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Propagate p650 fexPipe configuration changes to p670 (standalone FMUL),,,,,,MAL-2162,120011,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/12/2022 13:41,7/21/2022 19:05,9/28/2022 0:51,7/18/2022 13:15,,,,,,,,,,,,,RTL/FEX,,,,,,,,,0,,,,"Some recent changes around the standalone multiplier instances of {{p650}} are absent from {{p670}} configuration.

As the scalar part of {{p650}} and {{p670}} is supposed to be identical (apart from the {{v2s}} and {{s2v}} interfaces) these changes should be ported to {{p670}}.

+*Note:*+ these changes currently constitute some of {{p650}} critical paths ",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Knute Lingaard,Nicolas Brunie,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1374fb7a22c90da0c60495,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Floating Point,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-18T13:15:02.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/7d657af95f0e01c2a94e2f0968f4b8d9f726614d,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i0035z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,49:36.7,13/Jul/22 5:49 AM;5e1374fb7a22c90da0c60495;Wanted to confirm that the unit distribution in the PR matches what we have in Dabble.  Thanks for keeping us informed\!,"13/Jul/22 7:33 AM;6065017e90e3950069cf01c5;[~accountid:5e1374fb7a22c90da0c60495] , I am curious, do you automatically parse the JSON configuration to update the model or do you have a specific configuration for Dabble ? (and if so do you have a unique scalar configuration for {{p650}} and {{p670}} or is it copied “manually” \[as is done for the HW config which lead to this mishap]) ","13/Jul/22 8:33 AM;5e1374fb7a22c90da0c60495;No, we don’t automatically parse the JSON configuration – that’d be a nice intern project.  🙂  We have the equivalent configuration files in YAML.  Right now it’s visual inspection, but since they don’t change that much, we’re getting away with it.

In our configurations, the P670 YAML file includes the P650 YAML file as a starting point.  Then we change only those parameters that differ.  We do, however, have the same problem you do – if something were added/changed in P650 pipeline distributions, we’d miss that change in the P670 configuration if the P670 had a different setting.  Example:

{noformat}# P650.yaml
    fex_pipe_assignments: |
      [[""float"", ""fmac"", ""faddsub"", ""mul"", ""i2f""],
       [""float"", ""fmac"", ""faddsub"", ""mul"", ""div""]]

# P670.yaml -- the same as P650.yaml but with s2v (we hope it's the same!)
include: p650.yaml
extension:
  pipe_assignments:
    # Override!
   fex_pipe_assignments:
      [[""float"", ""fmac"", ""faddsub"", ""mul"", ""i2f"", ""s2v""],
       [""float"", ""fmac"", ""faddsub"", ""mul"", ""div"", ""s2v"", ""v2s""]]{noformat}",13/Jul/22 8:47 AM;6065017e90e3950069cf01c5;[~accountid:5e1374fb7a22c90da0c60495] you have yaml \! it means you can put comments in the configuration 😭 ,18/Jul/22 1:26 PM;5e1374fb7a22c90da0c60495;Verified that we match our configs.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][RVV 14.4] adding reduction insn list to check list with cosim enabled,,,,,,MAL-2161,119989,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/12/2022 9:54,7/21/2022 19:05,9/28/2022 0:51,7/12/2022 17:23,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,"reduction instructions were not enabled in TGV test list {{test-outlines/rvv_isa_inst_tgv.rb}}, because non-architectural register WB were conflicting with cosim.",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-12T17:23:08.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/e283427e025e59d88f27e950121c7a580526e8f4,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i0031r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] add support for masked complex reduction vf[w]redusum v[f]red(min/max)[u],,,,,,MAL-2160,119952,111460,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/11/2022 21:30,7/28/2022 19:15,9/28/2022 0:51,7/21/2022 8:44,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Brad Wu,Nicolas Brunie,,,,,,,,,,,,,,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2159,,,,,,,,,,,,MAL-1764,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-20T23:16:07.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/274e1e68d73e9d8fbd88be3f7fa50f2055c4f74b,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i002tr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,111460,[TGV][RVV 14.1] Vector Single-Width Integer Reduction,Done
[TGV] add support for masked simple reductions v[w]red(sum[u]|and|or|xor).vs,,,,,,MAL-2159,119951,111460,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/11/2022 21:29,7/28/2022 19:15,9/28/2022 0:51,7/21/2022 8:50,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Brad Wu,Nicolas Brunie,,,,,,,,,,,,,,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2160,,,,,,,,,,,MAL-1764,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,100,,,,,,,,,,,,,,,2|i002tj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,111460,[TGV][RVV 14.1] Vector Single-Width Integer Reduction,Done
[TGV][RVV 11.4] Add vmadc.*/vmsbc.* instructions to regression list,,,,,,MAL-2158,119943,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Shaka Kao,5f94696c29bd8a006f94f0e1,Shaka Kao,5f94696c29bd8a006f94f0e1,7/11/2022 19:12,7/28/2022 23:59,9/28/2022 0:51,7/27/2022 13:35,,,,,,,,,,,Panda DR,,TGV_RTL/MU,,,,,,,,,0,,,,"Follow-up to [https://sifive.atlassian.net/browse/MAL-1722|https://sifive.atlassian.net/browse/MAL-1722|smart-link] 

*RVV 11.4*

{quote}To support multi-word integer arithmetic, instructions that operate on a carry bit are provided. For each operation (add or subtract), two instructions are provided: one to provide the result (SEW width), and the second to generate the carry output (single bit encoded as a mask boolean).{quote}

We have added the first group (produce a result) to {{rvv_isa_inst_tgv.rb}}. Later, when the maskUnit(Accumulator) is verified, we will add the mask-out instructions to {{rvv_isa_inst_tgv.rb}}.

{noformat}vmadc.* (6 insns)
vmsbc.* (4 insns){noformat}",Nicolas Brunie,Shaka Kao,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1722,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-27T13:35:03.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,a5b087a7255c8b3f7c08eb5bccd6b7e417319605,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i002rr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jul/22 7:14 PM;5f94696c29bd8a006f94f0e1;RVV 11.4

{quote}To support multi-word integer arithmetic, instructions that operate on a carry bit are provided. For each operation (add or subtract), two instructions are provided: one to provide the result (SEW width), and the second to generate the carry output (single bit encoded as a mask boolean).{quote}

We have added the first group (produce a result) to {{rvv_isa_inst_tgv.rb}}. Later, when the maskUnit(Accumulator) is verified, we will add the mask-out instructions to {{rvv_isa_inst_tgv.rb}}.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: chicken bit issue in-order first op dispatched after flush,,,,,,MAL-2157,119938,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Swarnashri Chandrashekar,6287f376f0302e0068bff30c,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,7/11/2022 17:32,8/31/2022 1:22,9/28/2022 0:51,7/20/2022 13:21,,,,,,,,,,,,,RTL/LSU,RTL/RDU,,,,,,,,0,,,,"[https://sifive.atlassian.net/browse/SPARTA-1694?focusedCommentId=371181|https://sifive.atlassian.net/browse/SPARTA-1694?focusedCommentId=371181|smart-link] showed some performance downsides to [https://sifive.atlassian.net/browse/MAL-646|https://sifive.atlassian.net/browse/MAL-646|smart-link].

We should add a chicken bit qualification at [https://github.com/sifive/federation/blob/0c5e60a60641cb0bad296f5ed90f9e19d574680f/mallard/src/main/scala/core/mallard/RDU.scala#L2534|https://github.com/sifive/federation/blob/0c5e60a60641cb0bad296f5ed90f9e19d574680f/mallard/src/main/scala/core/mallard/RDU.scala#L2534]

{noformat}when (io.robFlushReq_E2.valid && io.lsuChicken.lsIssForceInOrderAfterFlush) {{noformat}",I-Cheng Cheng,John Ingalls,,,,,,,,,,,,,,5d7bfdaa003e040c3e175060,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-646,,,,,,,,,,,VI-7290,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-20T08:51:31.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24641,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i002qn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,22:41.8,"31/Aug/22 1:22 AM;5d7bfdaa003e040c3e175060;[~accountid:5bb6808b9ba2930990f81895]  I think this [PR |https://github.com/sifive/federation/pull/24641]will disable the “{{ForceInOrderAfterFlush”}} by default and this will affect the performance (not sure how many).

[~accountid:5e1372d362aed90daa48f7b1] do we aware of this change?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] X2Y source & dest tags not matching in P670,[TGV] X2Y source & dest tags not matching in P670,,,,,MAL-2156,119931,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,7/11/2022 16:19,9/7/2022 17:43,9/28/2022 0:51,7/12/2022 14:45,,,,,,,,,,,Panda DR,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"On P670 the weird thingy i see is that , the MSHR entry is hanging as it is accessing a non existant memory location. 

I see the request for a write from PC {{0x8000_084e}} which is in the failure code of the test. This PC is not supposed to be accessed by RTL as the simulation is to be killed, even before the core reaches to execute the PC. 



From the requests going into LSU , i see the requests from pc {{0x8000099c}}, which is the PC where the test is loading data to initialize the vector register, but then suddenly the request goes out to {{0x800007f0}} the test fail PC. 

As the previous instructions are not retired yet, this might be because of a speculative execution, and read requests going to the LSU. Which doesnot seem to be squashed and the assertion fires. 

To recreate this failure:

# clone federation and checkout the commit 39ff999f2885f02978788d6ea17b281a4d457e76
# build coreip_p670 and rerun the test using the outline
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""t0000_lmul8"",
  ""subtest"": ""vsadd.vi"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vsadd.vi_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_SelfCheck-1_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-8_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 979568980
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}


The waves are at {{gamma12:/scratch/verif/srivatsa/revert_the_pr/builds/coreip_p670/sim/sim/rerun.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vsadd.vi}}",Andrew Hanselman,David Kravitz,Srivatsa Yogendra,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,5fd15143b4a74900763834e0,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-12T14:41:29.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,349986267318832119613897e62e65e35ca9cc62,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i002pj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,05:13.7,"11/Jul/22 4:37 PM;5a938e9c0913194d2d262658;Took a closer look at the RDU, seems like the PC coming into the RDU changes from {{0x800009e0}} to {{0x800007d8}}. Trying to understand y that happens. ",11/Jul/22 5:05 PM;5fd15143b4a74900763834e0;Tagging [~accountid:600773dcee80bd006f750bba] to see if this correlates with what he’s seeing,12/Jul/22 5:20 AM;5fd15143b4a74900763834e0;[~accountid:5bb6808b9ba2930990f81895] is it possible that [this|https://sifive.atlassian.net/browse/MAL-2156?focusedCommentId=371252] is an artifact of the hashing change for better HWPF?,"12/Jul/22 6:52 AM;5fd15143b4a74900763834e0;Have tracked this down enough to see that the problem is related to I2V moves not waking up their consumers on the VEX side. The I2V moves are reaching X2Y with destination prIdx values like 400, 401, …, while the VEX side has sequenced these to be looking for wakeups of source prIdx values like 200, 201, ….

This feels like a side-effect of the change made in PR [https://github.com/sifive/federation/pull/24070|https://github.com/sifive/federation/pull/24070|smart-link] .

Not sure where/what fix is appropriate, but we should be looking at the scalar RDU dispatch logic to make sure that both uops for any X2Y are getting matching src/dst values.","12/Jul/22 7:25 AM;5fd15143b4a74900763834e0;The scalar RDU is putting {{400}}, etc into both the IEX and TGV dispatch buffers, so the fix looks like it should be in the VRDU","12/Jul/22 7:37 AM;5fd15143b4a74900763834e0;Want [~accountid:609d7e1f5998a6006800dcc5] to take a look at how the {{VectorPrIdx}} stuff, or the call to it here, should be adjusted to work for both u8_minimal_vector and P670

{noformat}    d.bits.srcTag(0).prIdx := Mux(inst_DIS(i).s2v && !vpayload_DIS(i).forceUseVS1, vecPrIdxType.x2y(instSrcTag_DIS(i).prIdx).asUInt,
                                                                                   mapTable.io.mapResp_DIS(i).srcPRIdx(0)){noformat}",12/Jul/22 8:51 AM;609d7e1f5998a6006800dcc5;I’ve been reviewing the source for a little bit and nothing really jumps out at me. Let me look at the waveform to see if I can put it together better there.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Update Healdsburg JSON to have branches flush from WB,,,,,,MAL-2155,119925,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,7/11/2022 14:04,7/25/2022 13:42,9/28/2022 0:51,7/11/2022 14:05,,,,,,,,,,,,,Implementation,Performance,RTL/IEX,,,,,,,0,,,,"Changing the {{brFlushFromWb}} field in the {{coreip_healdsburg}} json so that the branch units will flush the pipeline from WB stage instead of EX stage.  This adds a cycle to the branch flush penalty, but I’m almost completely certain that this will be needed to meet timing in Healdsburg",Benoy Alexander,Brian Grayson,David Mielke,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Josh Smith,Knute Lingaard,,,,,,,5e1370feefa19b0e976b5c24,5e1371705361330daaeaf389,5e137289b783d60db0a03c05,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,5e1374fb7a22c90da0c60495,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Mid Core,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-22T14:42:02.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,e9f4f5e35f14b09dad4691558ec887c195fb2357,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i002o7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,29:49.7,11/Jul/22 2:05 PM;5acffeafaa802f2a797a955c;Marking this as resolved because the json update has been merged into federation.,"25/Jul/22 11:29 AM;5e1374fb7a22c90da0c60495;[~accountid:5e137289b783d60db0a03c05] , this is related to your extra branch resolution cycle study, correct?","25/Jul/22 11:52 AM;5e137289b783d60db0a03c05;Here is the study [~accountid:5e1374fb7a22c90da0c60495] is talking about.

[https://sifive.atlassian.net/wiki/spaces/CIP/pages/2311913473/SPARTA-1986+Sweep+branch+misprediction+penalty|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2311913473/SPARTA-1986+Sweep+branch+misprediction+penalty|smart-link] 

This was actually run at [~accountid:5e1370feefa19b0e976b5c24] request.  He asked for it because something other than meeting multiple branch unit timing would have the side effect of increasing the branch mispredict penalty.  Maybe [~accountid:5e1370feefa19b0e976b5c24] can chime in here.

Since the decision has been made to add a cycle to the branch mispredict penalty to meet multiple branch unit timing, hopefully Benoy’s concern no longer matters.","25/Jul/22 1:42 PM;5e1370feefa19b0e976b5c24;The refresh study was requested to look into the performance cost of an extra cycle for the register file read stage.  As mentioned during the meeting, this extra cycle for RF read is due to both the shear increase in size as well shear increase in number of additional ports.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] optimize Perm Eng mask read timing,,,,,,MAL-2154,119889,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/11/2022 8:32,9/3/2022 7:40,9/28/2022 0:51,7/20/2022 13:57,,,,,,,,,,,,,Implementation,TGV_RTL/VEX,Timing,,,,,,,0,,,,"*Critical Path:* reading the mask register from the permutation engine register file {{maskRF}}, propagating the value to the permutation unit for the slide operations and forwarding the result

*Hint for optimization:* move mask read from permutation engine {{PEX}} to {{PSEQ}} stage, should save around 80ps. If that is not enough we might consider delaying the forwarding by one cycle (with impact on non-complex {{vslide}} to be considered)



{noformat}  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/nanoRRCmd_mask_PEX_reg[2]/CP -       -      R     (arrival)                           3    -     0     0       0    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/nanoRRCmd_mask_PEX_reg[2]/Q  -       CP->Q  R     DFQD4BWP240H8P57PDULVT              4  5.0     9    26      26    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/maskRF/fopt22/ZN             -       I->ZN  F     CKND4BWP240H8P57PDULVT              4  5.9     9     8      34    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/maskRF/fopt21/ZN             -       I->ZN  R     CKND4BWP240H8P57PDULVT              1  1.4     4     4      38    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/maskRF/g11905/ZN             -       A3->ZN F     NR3D3BWP240H8P57PDULVT              3  2.1     7     6      44    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/maskRF/g11931/ZN             -       A1->ZN F     IOA21D4BWP240H8P57PDULVT            1  2.1     7    12      56    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/maskRF/g11928/ZN             -       B->ZN  R     AOI211OPTPAD6BWP240H8P57PDULVT      1  2.1    11     8      64    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/maskRF/g11927/ZN             -       A1->ZN F     ND2D6BWP240H8P57PDULVT              2  2.6     7     7      71    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g78/ZN                       -       A2->ZN R     NR2D4BWP240H8P57PDULVT              1  2.3     8     7      79    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g72/ZN                       -       A1->ZN F     ND3OPTPAD6BWP240H8P57PDULVT         1  2.5     8     8      86    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/fopt50852/ZN                 -       I->ZN  R     DCCKND6BWP240H8P57PDULVT            2  5.6     6     6      92    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g55549/ZN                    -       A1->ZN F     NR2OPTPAD16BWP240H8P57PDULVT        7  5.6     5     5      97    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g44118/ZN                    -       A1->ZN R     OAI21OPTPAD2BWP240H8P57PDULVT       1  1.6    11     8     105    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g54451/ZN                    -       A1->ZN F     ND2OPTPAD4BWP240H8P57PDULVT         5  3.3     9     8     113    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/g113/ZN                 -       A1->ZN R     CKND2D2BWP240H8P57PDULVT            1  1.6     8     6     120    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/g22723/ZN               -       B->ZN  F     IOA21D4BWP240H8P57PDULVT            1  1.7     6     6     126    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/g110/ZN                 -       A2->ZN R     NR2D4BWP240H8P57PDULVT              2  1.9     7     7     132    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/g20619/ZN               -       A1->ZN F     NR2D4BWP240H8P57PDULVT              1  1.6     5     5     137    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g202548/ZN       -       A2->ZN R     CKNR2D2BWP240H8P57PDULVT            1  1.5     7     6     142    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g202547/ZN       -       A1->ZN F     ND3OPTPAD4BWP240H8P57PDULVT         1  2.1     9     7     150    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g202546/ZN       -       A1->ZN R     NR2OPTPAD6BWP240H8P57PDULVT         2  3.5     8     7     157    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g202545/ZN       -       I->ZN  F     INVD6BWP240H8P57PDULVT              1  4.2     6     6     162    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g200630/ZN       -       A2->ZN R     NR2D12BWP240H8P57PDULVT             3  5.3     7     7     170    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g71/ZN           -       I->ZN  F     INVD5BWP240H8P57PDULVT              2  3.2     5     5     175    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g200629/ZN       -       I->ZN  R     INVD5BWP240H8P57PDULVT              2  3.3     5     5     180    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g200633/ZN       -       A2->ZN F     ND3OPTPAD4BWP240H8P57PDULVT         3  3.8    13    10     190    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g4755/ZN         -       A1->ZN R     NR2D3BWP240H8P57PDULVT              2  2.5    11     9     199    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g201753/ZN       -       A1->ZN F     NR2OPTPAD4BWP240H8P57PDULVT         1  2.6     7     6     206    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g202107/ZN       -       A1->ZN R     ND2D8BWP240H8P57PDULVT              4  7.5     9     7     212    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/fopt199623/ZN    -       I->ZN  F     INVD6BWP240H8P57PDULVT              1  4.8     6     6     219    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g2543/ZN         -       A1->ZN R     NR2D16BWP240H8P57PDULVT             6 11.1     9     8     226    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g2542/ZN         -       A1->ZN F     ND2OPTPAD12BWP240H8P57PDULVT       18 13.8    11    10     236    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/fopt200281/ZN    -       I->ZN  R     INVD4BWP240H8P57PDULVT              2  2.3     6     6     242    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/fopt200274/ZN    -       I->ZN  F     CKND2BWP240H8P57PDULVT              3  1.6     6     6     248    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g197322/ZN       -       A1->ZN R     OAI22OPTPAD1BWP240H8P57PDLVT        1  0.8    16    10     258    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g201530/ZN       -       B->ZN  F     AOI21D1BWP240H8P57PDULVT            1  1.1    12     9     267    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g201528/ZN       -       A2->ZN R     ND2D2BWP240H8P57PDULVT              2  1.7     8     8     274    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/fopt197354/ZN    -       I->ZN  F     CKND2BWP240H8P57PDULVT              1  1.0     5     5     280    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g197353/ZN       -       B1->ZN F     MAOI22D4BWP240H8P57PDULVT           1  1.6     8    12     292    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g197352/ZN       -       A1->ZN R     IOAI21D4BWP240H8P57PDULVT           1  1.6     8     7     299    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/g22807/ZN               -       A1->ZN F     CKND2D4BWP240H8P57PDULVT            1  2.1     8     7     306    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/pmod/g21417/ZN               -       A1->ZN R     ND2OPTPAD6BWP240H8P57PDULVT         4  4.1     7     6     312    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g55858/ZN                    -       A1->ZN F     ND2D3BWP240H8P57PDULVT              1  1.5     8     6     318    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g55857/ZN                    -       A1->ZN R     CKND2D4BWP240H8P57PDULVT            3  3.2     6     6     324    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g54935/ZN                    -       A1->ZN F     AOI22D6BWP240H8P57PDULVT            2  2.8    12     7     331    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g54938/ZN                    -       A1->ZN R     NR2D4BWP240H8P57PDULVT              1  1.6     7     7     338    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g185/ZN                      -       A2->ZN F     CKNR2D2BWP240H8P57PDULVT            2  1.5     7     7     345    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g1718/ZN                     -       A1->ZN F     IAO21D4BWP240H8P57PDULVT            2  2.6     8    14     358    (-,-) 
  tile/core/tgv/vex/exPipes_1/vperm_permEngMod/g52567/ZN                    -       A1->ZN R     OAI21OPTPAD4BWP240H8P57PDULVT       2  2.3    10     8     366    (-,-) 
  tile/core/tgv/vex/exPipes_1/g79869/ZN                                     -       A1->ZN R     IOA21D4BWP240H8P57PDULVT            3  2.4     7    14     380    (-,-) 
  tile/core/tgv/vex/exPipes_1/g79868/ZN                                     -       B1->ZN F     IND2OPTPAD2BWP240H8P57PDULVT        2  1.1     6     6     385    (-,-) 
  tile/core/tgv/vex/exPipes_1/g380/ZN                                       -       A1->ZN R     ND2OPTPAD1BWP240H8P57PDULVT         1  1.0     8     6     392    (-,-) 
  tile/core/tgv/vex/exPipes_1/g83391/ZN                                     -       A1->ZN F     ND2D2BWP240H8P57PDULVT              1  1.4     8     7     399    (-,-) 
  tile/core/tgv/vex/exPipes_1/g83389/ZN                                     -       B1->ZN R     IND3OPTPAD4BWP240H8P57PDULVT        1  1.2     6     5     404    (-,-) 
  tile/core/tgv/vex/exPipes_1/g83388/ZN                                     -       A1->ZN F     NR3D3BWP240H8P57PDULVT              1  1.0     6     5     408    (-,-) 
  tile/core/tgv/vex/exPipes_1/g73299/ZN                                     -       A2->ZN R     ND2OPTPAD1BWP240H8P57PDULVT         1  1.1    10     8     416    (-,-) 
  tile/core/tgv/vex/exPipes_1/g73279/ZN                                     -       A2->ZN F     CKNR2D1BWP240H8P57PDULVT            1  1.0     9     8     425    (-,-) 
  tile/core/tgv/vex/exPipes_1/g72528/ZN                                     -       A1->ZN R     ND3OPTPAD2BWP240H8P57PDULVT         1  0.8     6     5     430    (-,-) 
  tile/core/tgv/vex/exPipes_1/bpeMaskPre_EX_reg[1]/D                        -       -      R     DFQD1BWP240H8P57PDULVT              1    -     -     0     430    (-,-) 
{noformat}",Josh Smith,Nicolas Brunie,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-17T08:26:22.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/e467c8d66b5e2e9e5d437930cf28413e5260eb04,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i002g7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,45:20.0,11/Jul/22 8:45 AM;5acffeafaa802f2a797a955c;[~accountid:6065017e90e3950069cf01c5] what’s the actual suggestion for how to optimize the timing?  I’d like to see in the ticket description some sort of detail about the path and how we plan to solve it.,"11/Jul/22 8:53 AM;6065017e90e3950069cf01c5;[~accountid:5acffeafaa802f2a797a955c] , I added *Critical path* and *Hint for optimization*, let me know if it matches the formalism you expect ?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Additional Accumulator Integration and Bug Fixes,,,,,,MAL-2153,119886,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,7/11/2022 7:33,7/21/2022 19:05,9/28/2022 0:51,7/20/2022 15:06,,,,,,,,,,,Panda DR,,TGV_RTL/MU,TGV_RTL/VEX,,,,,,,,0,,,,Follow up bug fixes for accumulator after initial implementation work. Discovered while integrating and testing with vamdc and compare instructions.,Andrew Hanselman,,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-20T13:00:57.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,b316d5eb4de525adaa94e73fd203cf4ae9e43cc1,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i002fj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: SiFive_LDPipe_assert due to xprop,Assertion Failure : SiFive_LDPipe_assert due to xprop,DCache,,,,MAL-2152,119872,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Khondakar Mujtaba,622a930149c900007023d105,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,7/11/2022 1:39,7/20/2022 13:37,9/28/2022 0:51,7/16/2022 17:41,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"*Error:*

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-xprop-coreip_mallard-test-nightly-xprop/116/builds/coreip_p550/verilog/design/assertions/SiFive_LDPipe_assert.sv"", 473: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LDPipes.LDPipes_0.SiFive_LDPipe_assert: at time 7126262500 ps
Assertion failed (verification library): L1DCData ECC Uncorrectable Error  @[LDPipe.scala 2093:22]{noformat}

Assertion triggers at {{T:7079802500ps}} as {{lsu.LDPipes.LDPipes_0.SiFive_LDPipe_assert.ldwb_l1DataErrorUncorrectableGrans_q[7:0]}} transitions to xx. 

Tracing back the source of the xx, it comes from uninitialized {{lsu.LDPipes.LDPipes_0.ldwr_l1dcDataWrData_q_1[63:0]}} register. The xx from this register is propagated via L1DCache. 

The driver for this register is not enabled as the following condition doesn’t meet:

{noformat}if (_io_ldwb_l1dcDataWrNext_valid_T_2 & |(ldwb_metaInfo_q_byteEn[15:8]))	
    ldwr_l1dcDataWrData_q_1 <= _ldwb_amoalu_1_io_out;{noformat}

Wave Dump at:
{{gamma10:/scratch/saurabhs/mallard_master_xprop_116/federation/builds/coreip_p550/sim/sim/LDPipe_assert.outline/sting_StingHypervisorTuple_T_0288/sting/valtrix/hypervisor/setup_leaflvl_async_pgflt_stg2.conf}}



*Build*:  coreip_p550

*Commit*: 	c0f7162

*Regression*: master/nightly-mallard-xprop/116

*Simscope*: [https://simscope.internal.sifive.com/sigs/1394/cl9ybldtawat|https://simscope.internal.sifive.com/sigs/1394/cl9ybldtawat]

*rerun.outline:* 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingHypervisorTuple_T_0288"",
  ""subtest"": ""valtrix/hypervisor/setup_leaflvl_async_pgflt_stg2.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 928644222
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",John Ingalls,Khondakar Mujtaba,Lun Li,Saurabh Singh,Suraj Vellengar,,,,,,,,,,,5bb6808b9ba2930990f81895,622a930149c900007023d105,5dbc8d4f3a09190c2ad5f41d,607e26f781e7b900681be48c,5e1377323e586d0dafebf4e3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CIP-3709,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2128,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24414,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i002cf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,03:33.3,"11/Jul/22 4:03 PM;622a930149c900007023d105;Unable to reproduce the failure in my local. Getting following error

=== sitest found errors in test sim/MAL-2152.outline/sting_StingHypervisorTuple_T_0288/sting/valtrix/hypervisor/setup_leaflvl_async_pgflt_stg2.conf:
Error: subprocess create_libaux_so. exited with status 1
2022-07-11T16:02:05-0700: Error: simulation sim/MAL-2152.outline/sting_StingHypervisorTuple_T_0288/sting/valtrix/hypervisor/setup_leaflvl_async_pgflt_stg2.conf failed",13/Jul/22 1:15 PM;5dbc8d4f3a09190c2ad5f41d;[~accountid:607e26f781e7b900681be48c] please update,13/Jul/22 11:04 PM;622a930149c900007023d105;DCache is responding with X because StQ has written x to DCache 25 cycles earlier. io_stqWG_ldArbReq_bits_wrDataEncoded_1_0=x.,"13/Jul/22 11:35 PM;607e26f781e7b900681be48c;[~accountid:622a930149c900007023d105] 
Didn’t encounter the error you mentioned in local run. If it’s not reproducable, please work with the dump available at 
{{gamma10:/scratch/saurabhs/mallard_master_xprop_116/federation/builds/coreip_p550/sim/sim/LDPipe_assert.outline/sting_StingHypervisorTuple_T_0288/sting/valtrix/hypervisor/setup_leaflvl_async_pgflt_stg2.conf}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[Power] Improve clock gating of dispatch buffers,,,,,,MAL-2151,119825,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Jeffrey Huang,627586097de1ec00695bca96,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,7/8/2022 16:53,8/12/2022 18:23,9/28/2022 0:51,8/9/2022 16:56,,,,,,,,,,,,,Power,RTL/RDU,,,,,,,,0,,,,"Currently each dispatch buffer has one clock gate for the entire buffer.  The enable is also pretty loose, it’s enabled whenever the dispatch buffer is not completely empty, or if there is an instruction of that type (IEX, FEX, LSU) in the DIS stage.

We can improve this in a couple of ways:

# There are many cases where the instructions in DIS completely bypass the dispatch buffer and nothing gets enqueued.  We should be able to determine this pretty quickly by checking the issue queue credits and the issue queue targets for all instructions in DIS stage.
# We can create multiple clock gates for a dispatch buffer.  For example in P650 the dispatch buffers have 8 or more entries.  We could have one clock gate for the lower 4 entries and one for the upper 4 entries.  We would only need to enable the upper 4 entries if its possible that something would get enqueued into one of those entries.",Ian Chuang,I-Cheng Cheng,Jeffrey Huang,John Ingalls,Josh Smith,,,,,,,,,,,61aaae1d9615eb006f5ff922,5d7bfdaa003e040c3e175060,627586097de1ec00695bca96,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,22/Jul/22 6:58 AM;ug:12b76939-5cd7-4f44-92e1-122c9b804a69;Screen Shot 2022-07-22 at 9.38.10 AM.png;https://sifive.atlassian.net/secure/attachment/74834/Screen+Shot+2022-07-22+at+9.38.10+AM.png,29/Jul/22 7:50 AM;ug:12b76939-5cd7-4f44-92e1-122c9b804a69;Screen Shot 2022-07-28 at 11.48.01 PM.png;https://sifive.atlassian.net/secure/attachment/75100/Screen+Shot+2022-07-28+at+11.48.01+PM.png,05/Aug/22 8:36 AM;ug:12b76939-5cd7-4f44-92e1-122c9b804a69;Screen Shot 2022-07-29 at 10.41.27 AM.png;https://sifive.atlassian.net/secure/attachment/75451/Screen+Shot+2022-07-29+at+10.41.27+AM.png,05/Aug/22 8:34 AM;ug:12b76939-5cd7-4f44-92e1-122c9b804a69;Screen Shot 2022-08-05 at 8.25.09 AM.png;https://sifive.atlassian.net/secure/attachment/75449/Screen+Shot+2022-08-05+at+8.25.09+AM.png,05/Aug/22 8:34 AM;ug:12b76939-5cd7-4f44-92e1-122c9b804a69;Screen Shot 2022-08-05 at 8.26.16 AM.png;https://sifive.atlassian.net/secure/attachment/75450/Screen+Shot+2022-08-05+at+8.26.16+AM.png,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-08-09T14:51:54.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,56c947009d377b1f3f9e04cdc3e2187b78da17d5,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,1,,,,100,,,,,,,,,,,,,,,2|i0021z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,58:17.6,"22/Jul/22 6:58 AM;627586097de1ec00695bca96;Hi, all. I changed the clock gating control logic in iEX dispatch buffer. After the change, the control logic of this clock is more precise. Only when there‘s an invalid issQ or the instruction Target conflicts, will the clock of the dispatch buffer be turned on. I passed over a hundred random tests and ran the power simulations. The result is below.

The comparison average power of iEX dispatch buffer are:

!Screen Shot 2022-07-22 at 9.38.10 AM.png|width=1806,height=584!



The top of the picture is the result before change, and the bottom of the picture is the result after the change. For example, the total dynamic power dropped from 3.45mW to 3.30mW.","29/Jul/22 7:50 AM;627586097de1ec00695bca96;This is the PowerArtist result of lsuDispBuf and fexDispBuf:

The comparison average power of LSU dispatch buffer are:

!Screen Shot 2022-07-29 at 10.41.27 AM.png|width=1793,height=780!

The top of the picture is the result before change, and the bottom of the picture is the result after the change. For example, the total dynamic power dropped from 1.12mW to 980.06uW.



The comparison average power of fEX dispatch buffer are:

!Screen Shot 2022-07-28 at 11.48.01 PM.png|width=1747,height=838!



The top of the picture is the result before change, and the bottom of the picture is the result after the change. The power consumption of the two results is similar, but the power consumption increases a little after the change. The reason may be that the fexDispBuf uses very little time, and the Clock Tree Dynamic power consumption is always 0, so the advantages of the clock gate is not reflected.","05/Aug/22 8:34 AM;627586097de1ec00695bca96;This is the PowerArtist result of iexDispBuf and fexDispBuf:

The comparison average power of IEX dispatch buffer are:

!Screen Shot 2022-08-05 at 8.25.09 AM.png|width=1822,height=883!

The top of the picture is the result before change(has changed the control logic of dispatch buffer), and the bottom of the picture is the result after the change(divide the clock into two parts in dispatch buffer). For example, the total clock tree dynamic power dropped from 119uW to 114uW.



The comparison average power of FEX dispatch buffer are:

!Screen Shot 2022-08-05 at 8.26.16 AM.png|width=1804,height=911!

The top of the picture is the result before change(has changed the control logic of dispatch buffer), and the bottom of the picture is the result after the change(divide the clock into two parts in dispatch buffer). The power consumption of the two results is similar, but the power consumption increases a little after the change. The reason may be that the fexDispBuf uses very little time, and the Clock Tree Dynamic power consumption is always 0, so the advantages of the clock gate is not reflected.","07/Aug/22 9:01 PM;61aaae1d9615eb006f5ff922;Interesting analysis\! But I am confused why you said the power of FEX dispatch buffer increases a little. Does it change from 154.99 uW → 154.23 uW? 

And I wouldn’t expect the FEX dispatch buffer uses very little time. Which pattern or program were you using? ","08/Aug/22 9:40 AM;5acffeafaa802f2a797a955c;{quote}And I wouldn’t expect the FEX dispatch buffer uses very little time. Which pattern or program were you using?{quote}

We do our power analysis using Dhrystone. There are no floating point instruction in the main Dhrystone loop.",09/Aug/22 5:28 PM;5acffeafaa802f2a797a955c;We decided not to further split the dispatch buffer clock gate into “top” and “bottom” clock gates (for the upper and lower half of the dispatch buffer).  The benefit was very small according to PowerArtist,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] proper clock gating for VectorIntRedUnit instance in VexPipe and issue intredOp to supported VexPipe,,,,,,MAL-2150,119824,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/8/2022 16:43,7/25/2022 11:28,9/28/2022 0:51,7/14/2022 4:59,,,,,,,,,,,,,Power,TGV_RTL/VEX,,,,,,,,0,,,,"currently there is no clock gate for the {{VectorIntRedUnit}}.

Previously it was instance within a single cycle but since [https://sifive.atlassian.net/browse/MAL-2092|https://sifive.atlassian.net/browse/MAL-2092|smart-link]  it has been pipelined over two cycles and should be clock gated properly.



{{val sintredmod = ep.es.intred.option(Module(new VectorIntRedUnit(bParams, tp, tp.simpleIntRedDepth)))}}

[https://github.com/sifive/federation/blob/master/block-tgv-sifive/src/main/scala/core/tgv/VexPipe.scala#L1473|https://github.com/sifive/federation/blob/master/block-tgv-sifive/src/main/scala/core/tgv/VexPipe.scala#L1473]



This PR also fix the problem where {{intredOp}} send to the {{VexPipe}} with {{intred}} parameter disabled.",Brad Wu,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,,62103777eb2978006893b778,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-13T18:23:42.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i0021r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vrgather.vx with LMUL=8 and vl=1 hanging,[TGV] vrgather.vx,Execution Unit ,Vector,,,MAL-2149,119822,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/8/2022 16:28,9/7/2022 17:43,9/28/2022 0:51,7/13/2022 15:48,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"+*SHA1*+ 50b063b4545 [https://github.com/sifive/federation/commit/50b063b4545ddbb87b1dda62441e3dcc01d09dea|https://github.com/sifive/federation/commit/50b063b4545ddbb87b1dda62441e3dcc01d09dea|smart-link] 

+*Outline:*+

{noformat}override_testbench_in_out",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11/Jul/22 10:33 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220711-173312.png;https://sifive.atlassian.net/secure/attachment/74311/image-20220711-173312.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-13T15:47:53.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/b368f8d2b0e78fe16d3ca84201bfa61bf3d74b54,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i0021b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jul/22 10:33 AM;6065017e90e3950069cf01c5;Hang is due to the fact that no all 8 uops are sequencer, only uops 0, 1, 2, 3, 4 and 6 are sequenced

5 and 7 are skipped. it seems to be related to the fact that while stalled the sequencer state changes and a uops for a different instruction is sequenced on lane 1 while the vrgather.vx sequenced is not finished yet

!image-20220711-173312.png|width=1365,height=597!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[FPU] uf-fmadd test failing on modified p650 cfg when ""hasShareMultiplier"" is set to false",[FPU] uf-fmadd,,,,,MAL-2148,119813,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,7/8/2022 14:03,8/5/2022 1:45,9/28/2022 0:51,7/11/2022 18:09,,,,,,,,,,,,,RTL/FEX,,,,,,,,,0,,,,"Over a modified {{p650}} configuration:

{{""hasShareMultiplier"": false}}

in tile_p650.json, I get the error:

When I run:

{{BUILD_DIR=builds ./generate-build coreip_p650}}

{{cd builds/coreip_p650 && source load-modules && make sim}}

{{cd sim && ./sitest rv64ud-fadd rv64uf-fadd rv64ud-fmadd rv64uf-fmadd --local}}

Error: simulation sim/rv64uf-fmadd failed",Erdinc Ozturk,Kira Tsao,Nicolas Brunie,,,,,,,,,,,,,61ccb01d90cfd20071b96af2,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2261,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CIP-3724,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-11T19:08:56.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7b538816bb2d898621a6e79eabf25e799027377c,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i001zb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,26:42.8,"11/Jul/22 6:26 AM;5e1a4f5ec578120daca5ff8e;Seems like the generated RTL code of CFMA is empty while disabling {{hasShareMultiplier}}

{noformat}module SiFive_CFMAPipe_1(	// @[/scratch/kirat/kyoto/federation/builds/coreip_p650/firrtl/SiFiveCoreDesignerAlterations.fir:2804244:10, :2891975:10]
  input        clock,
               reset,
  input [64:0] io_a,
               io_b);
{noformat}

I’ll dig more to see what’s the root cause.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vfrec7.v generates wrong data with `-inf` as input,[TGV] vfrec7.v ,,,,,MAL-2146,119817,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Zhiqiang Hao,5d02d411febd110bc78aabc3,Zhiqiang Hao,5d02d411febd110bc78aabc3,7/8/2022 14:49,9/7/2022 17:43,9/28/2022 0:51,7/13/2022 2:57,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"Commit: {{1bb252b628d04f3de15b42312ff7b8e8f2832286}}

Branch: {{coreip_u8_minimal_vector}}

Rerun:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """",
    ""+verbose""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0249"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3141205090
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



Error Message:

{noformat}[COSIM-ERROR][0] COSIM VS RTL WRINFO MISMATCH

[COSIM-ERROR][0] m_dut_inst_item: [172728] InstInfo: VLD=1 | PC=0x000000008844283e | INSN=0x4e4298d7 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r17=0x7fc00000000000007fc0000000000000 mask=ffff | READY=1 | CSR_TIMER=172728 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080000400 | MCAUSE=0x000000000000000b | VSTART=0 | VL=4 | SEW=32 | LMUL=m1 | VSEGELT=0

[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x000000008844283e | INSN=0x4e4298d7 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r17=0x7fc00000800000007fc0000080000000 mask=ffff{noformat}

RTL    {{v17=0x7fc00000000000007fc0000000000000}}

Spike {{v17=0x7fc00000800000007fc0000080000000}}



Error Instruction:

{noformat}core   0: 0x000000008844283e (0x4e4298d7) vfrec7.v v17, v4
core   0: 3 0x000000008844283e (0x4e4298d7) e32 m1 l4{noformat}



For v4,

v4\[0] = 0xff800000 which is {{-inf}}

So the result should be {{-0}} = 0x80000000



Spike is getting the correct result, but on RTL it gives out 0 as {{+0}}",Nicolas Brunie,Zhiqiang Hao,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-13T02:56:50.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i00207:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,51:35.5,"08/Jul/22 2:51 PM;6065017e90e3950069cf01c5;{quote}For v4,

v4\[0] = 0xff800000 which is -0

So the result should be -inf = 0x80000000{quote}

that is the opposite {{ff800000}} is -inf and {{80000000}} is -0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Illegal instruction exception reported at a valid inst,[TGV] Illegal instruction exception,,,,,MAL-2145,119814,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,7/8/2022 14:18,9/7/2022 17:43,9/28/2022 0:51,7/11/2022 18:06,,,,,,,,,,,,,RTL/RDU,,,,,,,,,0,TGV,,,"I see TGV reporting an Illegal instruction exception for the PC `0x8d781418` for the instruction 

{noformat}vsub.vx v27, v17, t5
core   0: 3 0x000000008d781418 (0x0b1f4dd7) e32 m1 l4 v27 0x92bac3a892bcd44292bcdc3e92b93201{noformat}

I see a similar vsub.vx instruction being executed with the same vl, sew and lmul, few pc’s above. 



While trying to debug, i’m able to trace the exception back to {{TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.xcptVector_REN_0}} signal in the RDU module. Which seems to go high because of vtype_vill signal going high. 

I get lost in the verilog loop and am not able to find the reason. 



to recreate the failure

# clone federation and checkout the commit 1bb252b628d04f3de15b42312ff7b8e8f2832286
# build the config coreip_u8_minimal_vector and rerun the simulation using the outline
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_trap_epc_count=128"",
    ""+cosim_scoreboard_stall_time=1000000"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0051"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 689249838
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}



the waves are at 
{{gamma12:/scratch/verif/srivatsa/cos_tgv_vreg_support/builds2/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0051/sting/sifive/vector/vector_tgv_dev.conf}}",David Kravitz,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-11T18:05:08.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/0da28ceb32448ee6911d98e280a0f29fde579fb2,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i001zj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,18:32.9,"11/Jul/22 1:18 PM;5fd15143b4a74900763834e0;It took me a while to track this down. The (mistakenly detected) illegal instruction is not the {{vsub.vx}} in the initial report, but the {{ld a1, -1600(a6)}} instruction just before it. The offset of the {{ld}} matches the {{vmvNr.v}} instruction {{funct6}}. The code checking for legal values of {{N}} does it’s thing and decided the {{rs1}} of the {{ld}} was not a legal value for the {{imm}} field of a {{vmvNr.v}}.
The fix is to add a term that makes sure it’s actually a vector instruction.",11/Jul/22 6:06 PM;5fd15143b4a74900763834e0;Fixed per the previous note,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][power] improve clock gate for vector divider,,,,,,MAL-2144,119796,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/8/2022 10:34,9/23/2022 0:27,9/28/2022 0:51,7/27/2022 19:55,,,,,,,,,,,,,Power,TGV_RTL/VEX,,,,,,,,0,,,,It seems the clock of the vector divider is always on. It should be clock gated properly when not used.,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,MAL-1729,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-27T19:54:08.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i001vr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[FPU] Add configuration parameter for utilizing the custom multiplier,,,,,,MAL-2143,119749,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,7/8/2022 5:40,7/29/2022 10:03,9/28/2022 0:51,7/28/2022 8:57,,,,,,,,,,,,,RTL/FEX,,,,,,,,,0,,,,,Erdinc Ozturk,Nicolas Brunie,,,,,,,,,,,,,,61ccb01d90cfd20071b96af2,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-26T05:06:06.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i001n3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"Investigate changes to the MSHR cleaningTick mechanism so it only counts when there are DIRTY MSHRs in use, not just any MSHR",,,,,,MAL-2142,119712,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Brian Grayson,5e1371705361330daaeaf389,Brian Grayson,5e1371705361330daaeaf389,7/7/2022 19:53,9/26/2022 11:50,9/28/2022 0:51,7/8/2022 11:44,,,,,,,,,,,,,Performance,RTL/LSU,,,,,,,,0,,,,"As part of the Renesas memcpy debug, we talked about the cleaningTimer mechanism a lot, and the way it currently works, the cleaningTimer increments whenever ANY MSHR is in use, even if it is for loads. This can lead to excess forced writebacks of dirty MSHRs for a workload that is heavy on load misses and light on store misses.

This is not expected to be a major performance uplift, but may help reduce or eliminate some of the glass jaws we have seen with the Renesas code.

In slack, some of the discussion was done on a private channel that John and myself have access to, at

[https://sifive.slack.com/archives/C03NSUE2TED/p1657247008333699|https://sifive.slack.com/archives/C03NSUE2TED/p1657247008333699|smart-card]

John there provided a possible code fix:

{noformat}mshr_cleaningTimer_in :=
  Mux(io.mshrVec_lstm.map(m => m.valid && (m.bits.hasBytesDirty || m.bits.inUseByStore)).orR,
      mshr_cleaningTimer_q + 1.U(lsp.mshrCleaningTimerWidth.W),
      0.U){noformat}

This will cause the cleaning timer to clear whenever there are no more dirty/store MSHRs, so if there are only load MSHRs in use at any point, the counter is fully reset.",Brian Grayson,Edward Brekelbaum,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,,5e1371705361330daaeaf389,5e1372d362aed90daa48f7b1,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,MAL-1202,MAL-1303,MAL-860,,MAL-2340,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Load/Store,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-07-16T11:21:41.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24352,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,,,,,,,,,,,,,2|i001ev:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,04:20.7,08/Jul/22 8:53 AM;5e1371705361330daaeaf389;[~accountid:5e1372d362aed90daa48f7b1] can you describe here the approach that Dabble uses for store-MSHR write-back timeout?,"08/Jul/22 11:04 AM;5e1372d362aed90daa48f7b1;I never got a chance to implement the timeout mechanism. MSHRs are available for reuse once all LDQ and STQ entries pointing to them have retired.

I need to add a check for the L2 release ack.",08/Jul/22 11:04 AM;5e1372d362aed90daa48f7b1;(and any data has been sent to L2 or filled into the cache as appropriate),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Retire log does not contain proper information for register writeback for some instructions,,,,,,MAL-2141,119704,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Won't Do,Josh Smith,5acffeafaa802f2a797a955c,Brian Grayson,5e1371705361330daaeaf389,Brian Grayson,5e1371705361330daaeaf389,7/7/2022 17:46,7/8/2022 14:03,9/28/2022 0:51,7/8/2022 14:03,,,,,,,,,,,,,Verification,,,,,,,,,0,,,,"It looks like the retirement/logging logic is not outputting the proper values for some instructions, probably the ones that are early-executed. Here are some examples from a Dhrystone run:

{noformat}module load sifive/spike
cat dhrystone.vcs.out | ~briang/bin/spd64+ | grep ""W.r..=0000000000000000..0""
....
C0: 254217 [1] pc=[0000000020003d78] W[r 8=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[ffffc417] auipc   s0, 0xffffc
C0: 254277 [1] pc=[0000000020000f60] W[r11=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00001597] auipc   a1, 0x1
C0: 254576 [1] pc=[0000000020003a0c] W[r15=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00006795] c.lui   a5, 0x5{noformat}

Note that the auipc and lui instructions should almost definitely not be writing all zeroes, and that the “write-is-valid” bit in the brackets is 0, instead of 1.

Is this intentional?

I think there’s also a possibly-related bug where an instruction that depends on one of these ghost-writers also ends up printing the wrong source value. Take a look at this, again from a run of Dhrystone:

{noformat}C                   0:     254576 [1] pc=[0000000020003a0c] W[r15=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00006795] c.lui   a5, 0x5
C                   0:     254576 [1] pc=[0000000020003a0e] W[r15=0000000000005555][1] R[r15=00000000800006f0] R[r 0=0000000000000000] inst=[55578793] addi    a5, a5, 1365{noformat}

The source value for the second instruction for r15 is clearly incorrect.",Brian Grayson,Josh Smith,,,,,,,,,,,,,,5e1371705361330daaeaf389,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i001d3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,02:27.0,"08/Jul/22 9:02 AM;5acffeafaa802f2a797a955c;[~accountid:5e1371705361330daaeaf389] those {{auipc}} and {{lui}} instructions are fused with following {{addi}} instructions.  We can’t recreate the exact instruction-by-instruction output in the event of fusion.  Or at least it would be a pain to do so just for the purposes of the retirement log.

It looks like in your last example, the r15 source being wrong is just reading the previous value of r15, not the one that would have been produced by the {{lui}} if no fusion occurred.","08/Jul/22 10:49 AM;5e1371705361330daaeaf389;That makes sense. Given that we have a few fusion possibilities, and are likely adding more, what is a good way to reflect that in the retirement log? Perhaps we could change that \[1] before the PC field to have a \[3] if the instruction is fused and thus may have garbage data values? I think right now it’s a valid bit, but since we only output valid instructions it’s currently an uninteresting field.
Or perhaps it is identifiable by the fact that the W field has a valid register number, but an invalid bit at the end? That handles the first part of the fusion, but doesn’t handle the second part, like the addi with garbage source values.","08/Jul/22 10:54 AM;5acffeafaa802f2a797a955c;No, the {{[0]}} after the {{W[r 5=..]}} field (example below) means that the instruction did not write to a destination register.  It doesn’t just meant that it was an invalid instruction.

{noformat}C                   0:       1312 [1] pc=[00000000200000b0] W[r 5=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00000297] auipc   t0, 0x0{noformat}

So if we see an {{auipc}} or {{lui}} instruction with {{[0]}} after the destination register field, that means it was fused.  Is that not sufficient?

And I don’t know how to handle the garbage source value, because that would require computing the result of the first instruction on the side.  I don’t have much interest in fixing that.","08/Jul/22 1:43 PM;5e1371705361330daaeaf389;I am a little confused by your statement – we don’t write out ANYTHING for invalid instructions (unlike older Bullet retire logs; I think they have fixed that by now also to only output when the instruction is valid). What I meant with “invalid bit” was the valid bit for the W field, not for the whole instruction, which was not clear – sorry.



I think the W field is currently as follows:

* \[1]: register number is valid, and register value is valid
* \[0] and register number is 0: instruction did not write a destination (because r0 is always an invalid destination for integer registers)
* \[0] and register number is non-zero: instruction architecturally writes to the specified destination, but was fused or morphed or whatever. Destination value is likely 0, and the subsequent instruction’s source fields may be incorrect.

Part of my point is going forward, it’s not just {{auipc}} or {{lui}} that might be fused, so this is going to come up more and more, where there are going to be missing destination values, and improper source values on instructions that are otherwise indistinguishable from the point of view of fused or not. Flagging those fused instructions in some way would make it easier to know what is going on.

BTW, my {{spd64+}} tool currently parses the “W bit is \[0] and reg number is 0” and modifies the output to look like this in the W field to make it obvious what is really going on:

{noformat}C                   0:        949 [1] pc=[000000008000121c] W[r14=00000000800089d0][1] R[r14=00000000800089c0] R[r 0=0000000000000000] inst=[00000741] c.addi  a4, 16
C                   0:        949 [1] pc=[000000008000121e] W[r 0=----------------][0] R[r14=00000000800089d0] R[r13=000000008000be80] inst=[fed76de3] bltu    a4, a3, pc - 6
C                   0:        950 [1] pc=[0000000080001218] W[r 0=----------------][0] R[r14=00000000800089d0] R[r11=6161616161616161] inst=[0000e30c] c.sd    a1, 0(a4) # STORE 0x800089d0
C                   0:        951 [1] pc=[000000008000121a] W[r 0=----------------][0] R[r14=00000000800089d0] R[r11=6161616161616161] inst=[0000e70c] c.sd    a1, 8(a4) # STORE 0x800089d8{noformat}

Maybe I can handle this by just looking for the third case above – W register is nonzero, but \[0] is present, meaning this instruction is fused or is otherwise funny, and mark both this (and the next) as FUSED.

Yep, just got that implemented in my script. If you don’t want to alter the {{[1] pc}} to be something like {{[3] pc}} to mark fused instructions, then feel free to close as ""won't do"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[HB] LSU: HWPF stride training Program Order Queue,,,,,,MAL-2140,119688,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Binayak Tiwari,60a963ed8cbda700681b40c1,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,7/7/2022 14:23,9/26/2022 21:09,9/28/2022 0:51,,,,,,,,,,,,,,RTL/HWPF,RTL/LSU,,,,,,,,0,,,,"[https://sifive.atlassian.net/browse/SPARTA-1773|https://sifive.atlassian.net/browse/SPARTA-1773|smart-link] and [https://sifive.atlassian.net/browse/SPARTA-1876|https://sifive.atlassian.net/browse/SPARTA-1876|smart-link] showed that the Stride Prefetcher is susceptible to performance outliers due to out-of-order-ness.

We should figure out a mechanism to train the Stride Prefetcher using a Program Order Queue (POQ).  Training the Bit-Pattern Prefetcher (BPM) can still be out-of-order and unchanged.

Initial modeling of this feature used a queue allocated in-order at Dispatch time, but we should micro-architect a queue that can have a variable number of entries per dispatched instruction to handle Vector loads that unroll from TGV (and scalar loads that unroll as cache-line-crossing misaligned).  Such a queue would likely look similar to the LoadQ, and could even be a new FSM in each LoadQ Entry.",Brian Grayson,Fu-Ching Yang,Hung-Lun Chen,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Josh Smith,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,60ce876f624d7000695b9589,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1621,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Load/Store,Prefetch,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,{},,,,,,,,CIP-3958,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0019r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,20,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] move vl related processing from EX to RR,,,,,,MAL-2139,119686,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/7/2022 14:03,9/15/2022 8:09,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Spawned off from [https://github.com/sifive/federation/pull/24125#discussion_r914354032|https://github.com/sifive/federation/pull/24125#discussion_r914354032]

a lot of {{vl}} processing is down in {{VexPipe}} EX stage and could be moved to {{RR}} stage and flopped:

* any reduction related {{vl}} manipulation
* expanding {{vl}} to {{vlB}} (from element length to byte length)
* …",Brad Wu,Nicolas Brunie,,,,,,,,,,,,,,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2093,MAL-2604,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i0019b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Have cross-issue picker choose from bottom IssQ entries instead of top entries,,,,,,MAL-2138,119672,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Steffen Kunze,62cbe3403d382dfc9c5f3078,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,7/7/2022 10:55,9/23/2022 3:54,9/28/2022 0:51,,,,,,,,,,,,,,Performance,RTL/FEX,RTL/IEX,,,,,,,0,,,,"Currently the IEX and FEX issue queues are freelisted and will always find the first empty entry starting from the bottom (entry 0), up to the top (entry N-1).  This means that the bottom entries are more likely to be occupied.

The cross-issue picker today will look at some subset of the issue queue entries (it could be the entire issue queue), but starting at the top.  So for example in P650, there are 12 issue queue entries but only 8 entries feed into the cross-issue picker, entries 4-11.  It might be better for performance if the cross-issue picker looked at entries starting from the bottom (entries 0-7), because these are more likely to be occupied.",Brian Grayson,Fu-Ching Yang,Ian Chuang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Josh Smith,Knute Lingaard,Steffen Kunze,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,61aaae1d9615eb006f5ff922,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,5e1374fb7a22c90da0c60495,62cbe3403d382dfc9c5f3078,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1621,MAL-2652,,,,,,,,,,,,,,,,,,,,,,,,,Mid Core,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-16T10:16:19.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,,,,,,,,,,,,,,,,2|i00167:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,16:31.6,"11/Jul/22 4:37 PM;5acffeafaa802f2a797a955c;[~accountid:5e1374fb7a22c90da0c60495] So this came up during some discussion about performance correlation.  What’s the model doing today, have we tried this out before?","11/Jul/22 5:16 PM;5e1374fb7a22c90da0c60495;Dabble was just recently updated (by [~accountid:61aaae1d9615eb006f5ff922]) to pick a cross issue candidate using the algorithm as described above (start at the “top” and search only 8/12 entries for P650).  

There is a mode in dabble where an instruction was a candidate for picking but only under the following conditions:

# The instruction is the youngest ready in the issue queue
# The instruction’s index in the issue queue is greater than the currently picked instruction this cycle

Those rules were put in place back in 2020, so I’ve having a tough time recalling why these constraints existed.  Either way, it’s probably dead code.  We can research looking at the bottom 8 entries, but are there rules we should consider?","11/Jul/22 5:38 PM;5acffeafaa802f2a797a955c;I don’t know/remember exactly why those rules would be in place.  Number 1 makes sense at least because finding the very oldest or very youngest is similarly easy.  I can’t think of why rule number 2 would be in place.

There is a slightly different cross issue scheme that I have in mind which would cut down on the total amount of logic in the issue queue (to save area and power), but might give worse performance.  Basically, right now we essentially have two pickers: the main oldest-ready picker which uses the age matrix, and then the second highest-index-has-priority picker for cross issue.  We could get rid of the second picker if we have the cross issue output actually come from an intermediate point in the main picker.

For example, say we have 16 issue queue entries.  The picker gets built as 4 levels of 2:1 muxes:

{noformat}0/1  2/3  4/5  6/7  8/9  10/11  12/13  14/15
 A    B    C    D    E     F      G      H
   I         J          K             L
        M                      N
                  O{noformat}

In the example above, A-H would be the output of the first level of 2:1 muxes, and O is the final output.  We could do something like take the node M, and say that is the cross issue output.  If node M has a ready instruction that is _not_ the oldest, then the cross issue output is valid.

This gets a little bit more wonky for non-power-of-2 issue queue sizes, but it should still work.  We’d just have to figure out which issue queue entries are actually covered by the cross issue.  In the example above it would be entries 0-7.  I’d be curious to see what the difference would be in performance vs. what we have today.","11/Jul/22 8:32 PM;61aaae1d9615eb006f5ff922;After the Dabble is updated (as Knute mentioned), we can just simply modify the cross-issue range parameter to see the difference between searching from top and bottom. 

I am curious how come we don’t consider the whole issue queue entries for cross-issue in the new scheme. We’ve already had information like M and N, and it might be fine to select one out of both in terms of timing because the path would be similar to the path of O. ","11/Jul/22 9:07 PM;5acffeafaa802f2a797a955c;{quote}I am curious how come we don’t consider the whole issue queue entries for cross-issue in the new scheme.{quote}

For better timing.  Remember that the cross issue output goes into one input of the other issue queue’s final picker mux.  The reason we don’t choose O is because O is guaranteed to be the oldest ready.  We need to pick something that is ready but _not_ the oldest.  The output _has_ to be something other than O. If we allow the cross issue output to be either M or N (meaning we consider both nodes), that adds another 2:1 mux on the path.  This is going to be an extremely critical timing path.  One more 2:1 mux could break timing.","11/Jul/22 11:17 PM;61aaae1d9615eb006f5ff922;{quote}Remember that the cross issue output goes into one input of the other issue queue’s final picker mux.{quote}

This recalls me that the cross-issue path is actually longer than the primary path. So if we consider both nodes, the cross-issue path is longer than the path to O because after the added 2:1 mux for M and N there is other logic till the final picker. ",28/Jul/22 5:43 AM;5acffeafaa802f2a797a955c;So did we ever actually figure out from Dabble whether it’s better to have the cross picker start from the “bottom” entries instead of the “top”?  If it’s better from the top I’ll just leave the RTL as-is and close this ticket.,28/Jul/22 6:14 AM;5e1374fb7a22c90da0c60495;Get it started today.  This fell through the cracks.  Thanks for the reminder.,28/Jul/22 11:23 AM;5e1374fb7a22c90da0c60495;The study is running for both P650 and Bode.,29/Jul/22 8:44 AM;5e1374fb7a22c90da0c60495;The study is done… writing up the results.,"29/Jul/22 11:37 AM;5e1374fb7a22c90da0c60495;Question on your example…

{noformat}0/1  2/3  4/5  6/7  8/9  10/11  12/13  14/15
 A    B    C    D    E     F      G      H
   I         J          K             L
        M                      N
                  O{noformat}

If the policy is to use the entry from 0 → 7 as a candidate for cross issue and {{M}} _is the oldest instruction in the issue queue_, then *nothing* will be picked for cross issue, correct?  You can’t go back and pick {{J}} for example if {{J}} was younger than {{I}} (obviously).","29/Jul/22 11:49 AM;5acffeafaa802f2a797a955c;Yes, that’s correct.  The idea is to pick some intermediate node of the existing primary picker mux as the cross-issue output (instead of adding a second picker mux).  If we choose node M as the cross-issue output, and that also happens to be the real oldest ready instruction, then we can do nothing.","29/Jul/22 3:07 PM;5e1374fb7a22c90da0c60495;Another question that popped from an assert I added to the model: what if {{M}} is ready, is oldest, but cannot issue due to a WB collision?  Can it cross issue?","29/Jul/22 3:31 PM;5acffeafaa802f2a797a955c;{quote}Another question that popped from an assert I added to the model: what if {{M}} is ready, is oldest, but cannot issue due to a WB collision? Can it cross issue?{quote}

That’s a good question.  I had to go check the RTL but yes I think an instruction should be able to cross issue even if it can’t issue down its own pipe due to a WB hazard.","29/Jul/22 8:33 PM;5acffeafaa802f2a797a955c;Just out of curiosity, I decided to run PowerArtist on P650 with all cross-issue capability removed.  That reduced dynamic power of the tile by almost exactly 1% (~1.6mW)","30/Jul/22 8:52 AM;5acffeafaa802f2a797a955c;[~accountid:5e1374fb7a22c90da0c60495] I want to confirm one more detail.  If we have the cross-issue picker look at the bottom half of the issue queue (entries 0 - 7 in P650), does the priority search start at entry 0 and entry 7 has the least priority?  Or is it still going top down where entry 7 has the highest priority and entry 0 has the least?  I would expect it to be that entry 7 has the highest priority.","31/Jul/22 1:47 PM;5e1374fb7a22c90da0c60495;Hmmm… it does neither.  The model looks at the ready candidates in the range (0 → 7) and picks the oldest, not-already-issued instruction.

Seems as we get deeper into this discussion, there are more differences we didn’t think about.   So, let me recap what I think the model _should be doing_:

* If there are 2 ready instruction in the range 0 → 7 and neither is picked for issue, then both are considered for cross issue
* If the policy states: if the priority starts a entry 0, then the instruction closest to 0 will be cross issued, regardless of age
* If the policy states: if the priority starts a entry 7, then the instruction closes t to 7 will be cross issued, regardless of age

Right now the model _ignores_ the above policies and choose the oldest of the two for cross.","31/Jul/22 3:10 PM;5acffeafaa802f2a797a955c;Right, so the cross-issue picker in RTL does not have any age-based priority.  As of now in P650 where entries 4-15 are candidates, the cross-issue picker will search for a ready instruction starting at entry 15 going toward entry 4.  Whichever is closest to entry 15 is selected.  The age information is not part of the equation.  I did it this way so that the cross-issue picker was faster.","01/Aug/22 2:14 PM;5e1374fb7a22c90da0c60495;Ok, I confirmed that the model originally does exactly what you wrote 😌.  The study also picks a cross issue candidate that’s closer to 7 (for bottom) or closer to 15 (if top).  However, in the study, there’s still the bug in the model where it will pick a cross issue candidate _and_ a normal issue candidate from the same region.  I will fix that, re-run the study and the results should be solid.","01/Aug/22 3:51 PM;5e1371705361330daaeaf389;[~accountid:5acffeafaa802f2a797a955c] when you ran with cross-issue disabled, what happened to perf i.e. cycles? If you are looking at something like Dhrystone, and we lost 1% performance, but are doing constant work, I’d expect around a 1% power savings.

Also, did you run with just the chicken-bit on a build that had cross-issue capability and thus all the gates in there, or did you disable all the logic at build time so that it could be optimized away in the design?","01/Aug/22 4:05 PM;5acffeafaa802f2a797a955c;{quote}when you ran with cross-issue disabled, what happened to perf i.e. cycles?{quote}

[~accountid:5e1371705361330daaeaf389] I said that I ran with cross issue capability removed, not disabled.  I changed the build-time parameters to remove all the logic.  I didn’t actually look at Dhrystone performance at the time.  I’ll have to rerun that and update this.","01/Aug/22 5:22 PM;5acffeafaa802f2a797a955c;So it looks like the main Dhrystone loop takes 71 cycles in P650 both with and without cross-issue.  I can see in the waveforms that cross-issue is happening, just infrequently.","05/Aug/22 11:33 AM;5e1374fb7a22c90da0c60495;Presentation today on the latest cross issue results.  The recommended actions are here: [https://sifive.atlassian.net/wiki/spaces/CIP/pages/2320531519/SPARTA-2021+Cross+Issue+Policies+for+P650+Bode+also#Recommended-Actions|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2320531519/SPARTA-2021+Cross+Issue+Policies+for+P650+Bode+also#Recommended-Actions|smart-link] 

Josh/ Steffen, shall I change the cross issue picking algorithm in dabble to the new picking scheme?",12/Aug/22 10:13 AM;62cbe3403d382dfc9c5f3078;Josh I see you’ve already put the required change on a branch. Do you want me to look at anything there?,"12/Aug/22 10:32 AM;5acffeafaa802f2a797a955c;[~accountid:62cbe3403d382dfc9c5f3078] I made that branch a while ago, before the most recent studies that Knute conducted.  On my branch, I still have a second picker for cross-issue that just starts looking from entry 0 instead of entry N-1.

During the discussions with Knute, I suggested that we could reduce logic by having the cross-issue output use the first few mux levels from the main picker.  This is the “p650_cross_issue_bottom_unrestricted” option in the study page: [https://sifive.atlassian.net/wiki/spaces/CIP/pages/2320531519/SPARTA-2021+Cross+Issue+Policies+for+P650+Bode+also|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2320531519/SPARTA-2021+Cross+Issue+Policies+for+P650+Bode+also|smart-link] 

So I think we should investigate changing the RTL to have the cross issue output reuse the first 2 levels of mux from the main picker.  This should reduce area and power, but may actually hurt timing a bit since the cross issue output could be slower.","12/Aug/22 10:34 AM;5acffeafaa802f2a797a955c;Currently the muxes are coded in a recursive manner to be parametrizable.  It may be a little messy to modify that to share the muxes.  So if we need to write a more hand-coded mux structure for a specific number of entries, that’s okay with me.","12/Aug/22 10:57 AM;62cbe3403d382dfc9c5f3078;OK I’ll have a look at that next week. I’m having problems seeing the google sheets in the study page you linked, is there another way to view it than confluence? ","16/Aug/22 12:01 PM;5e1374fb7a22c90da0c60495;Steffen, I gave you permissions to that google sheet.  I’ll keep watch on this Jira issue and updated the model as you make changes.","18/Aug/22 10:49 AM;62cbe3403d382dfc9c5f3078;A little update on this: I’ve got the version with power of 2 entries passing drystone.outline (using p650) but the non-power of 2 (using p550) still has some issue, probably to do with injects. Josh could you have a quick look over the code maybe if you can spot something obvious?

[https://github.com/sifive/federation/compare/master...MAL-2138-Cross-issue-entry-from-early-stages-of-age-based-issue-picker|https://github.com/sifive/federation/compare/master...MAL-2138-Cross-issue-entry-from-early-stages-of-age-based-issue-picker]","19/Aug/22 4:08 AM;5acffeafaa802f2a797a955c;[~accountid:62cbe3403d382dfc9c5f3078] Yeah, it looks like during the cycle that {{AgedIssSelect}} should select the {{io.inject}} payload, it is selecting the cross issue payload instead. I think the issue may be here:

{noformat}    io.select := select.extract(nEnt-1,0) // Drop inject bit
    io.payOut := Mux(!io.ready.orR, io.crossIn, payload){noformat}

I think line 2 should be:

{noformat}io.payOut := Mux(!(io.ready.orR || io.inject.valid), io.crossIn, payload){noformat}","31/Aug/22 10:37 AM;62cbe3403d382dfc9c5f3078;I ran synthesis on the IEX only to check timing for the cross-issue picker change and saw a 40ps increase in the worst path. That path doesn’t really touch the logic I changed though so not sure what has happened there. Once I get access to synthesis tools back I’ll investigate some more.

For the moment it’s probably best to not merge in my pull request.",,,,,,,,,,,,,,,,,,,,In Progress
"[TGV] vmerge.vxm updating the destination, as mask = 0, when mask is 1",[TGV] vmerge.vxm,Execution Unit ,Vector,,,MAL-2137,119577,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,7/6/2022 14:36,9/7/2022 17:43,9/28/2022 0:51,7/8/2022 6:11,,,,,,,,,,,,,TGV_RTL/MU,,,,,,,,,0,TGV,,,"We see on a vmerge.vxm instruction,

for element 35 , v0\[34] is 1, but RTL is copying and updating the location with the value from the source vector register, and not from the scalar register source 

{noformat}vmerge.vxm vd, vs2, rs1, v0  # vd[i] = v0.mask[i] ? x[rs1] : vs2[i]{noformat}


The mask reg V0 is {{0xdc0e772d99234890a55068d4532f6d2a}} , the source operand for element 35 is {{0xc59c04967d124b6bea7fc6e2df41dad2}} and the scalar source operand is {{0xd8c734d3796b64da}} . 

This is happening at PC {{0x80002166}} 

To recreate this failure: 

1. clone federation and checkout the commit c7454e08a6e80f3aef60b071c30af5b1dcea3b6b

2. build the design Coreip_u8_minimal_vector and rerun the test using the outline 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.cc_banks.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,5:.*\\.RamBank.*ext,1,0,15:.*\\.icDataArray.*ext,1,0,32:.*\\.l1dcTagArray.*ext,1,0,32:.*\\.TagRAM_ext,1,0,10:.*\\.cc_dir_ext,0,1,25"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""t0000_lmul4"",
  ""subtest"": ""vmerge.vxm"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vmerge.vxm_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_SelfCheck-1_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-4_TGV-1_IMM-1_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 4097154252
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}





the waves are at {{gamma12:/scratch/verif/srivatsa/cos_tgv_vreg_support/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmerge.vxm}}",Andrew Hanselman,Brad Wu,David Kravitz,Kira Tsao,Nicolas Brunie,Shaka Kao,Srivatsa Yogendra,,,,,,,,,609d7e1f5998a6006800dcc5,62103777eb2978006893b778,5fd15143b4a74900763834e0,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,06/Jul/22 3:28 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220706-222841.png;https://sifive.atlassian.net/secure/attachment/74162/image-20220706-222841.png,06/Jul/22 6:26 PM;ug:113b86d8-ecfc-456b-a6a8-529c0abb7d7d;image-20220707-012235.png;https://sifive.atlassian.net/secure/attachment/74164/image-20220707-012235.png,06/Jul/22 6:26 PM;ug:113b86d8-ecfc-456b-a6a8-529c0abb7d7d;image-20220707-012300.png;https://sifive.atlassian.net/secure/attachment/74163/image-20220707-012300.png,07/Jul/22 7:16 AM;ug:113b86d8-ecfc-456b-a6a8-529c0abb7d7d;image-20220707-134200.png;https://sifive.atlassian.net/secure/attachment/74184/image-20220707-134200.png,07/Jul/22 7:16 AM;ug:113b86d8-ecfc-456b-a6a8-529c0abb7d7d;image-20220707-134639.png;https://sifive.atlassian.net/secure/attachment/74185/image-20220707-134639.png,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-08T08:38:36.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,31188ceb5ae2429004f11e93418508091b74377a,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i000lz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,52:33.0,"06/Jul/22 2:36 PM;5a938e9c0913194d2d262658;[~accountid:5fd15143b4a74900763834e0] assigning to [~accountid:609d7e1f5998a6006800dcc5] , please re assign if it should be handled by a different person.","06/Jul/22 2:52 PM;5fd15143b4a74900763834e0;tbh, I can’t tell at this distance whether this is a mask problem or a datapath-not-using-mask-properly problem, which would be in VEX. [~accountid:6065017e90e3950069cf01c5], do you have a clue?",06/Jul/22 2:59 PM;6065017e90e3950069cf01c5;Adding [~accountid:5f94696c29bd8a006f94f0e1] as I think he participated in the implementation.,"06/Jul/22 3:02 PM;6065017e90e3950069cf01c5;A few more informations: {{VSEW=e8}}, {{LMUL=4}}, {{VL=35}}","06/Jul/22 3:28 PM;6065017e90e3950069cf01c5;As far as I can tell {{mask_EX}} is wrong for the last uop for this {{vmerge.vxm}}

!image-20220706-222841.png|width=1699,height=331!","06/Jul/22 6:26 PM;5f94696c29bd8a006f94f0e1;Hi [~accountid:6065017e90e3950069cf01c5] , we also encounter this kind of problem for LMUL=4 but AVL does not need the “last” v-regs.

For more detail:

*Scenario:*

# Instruction: {{vadc.vvm v24, v12, v16, v0}}
# vconfig: SEW=8, LMUL=4, AVL=44

*Problem:*

* CSID does not count up for the last uop

Fig1 is the “normal” CSID behavior for LMUL=4. Assume the instruction will be split into 4 uops, and CSID counts up from {{0}} to {{3}}.

!image-20220707-012235.png|width=58.333333333333336%!



Fig 2 is the failed case:

!image-20220707-012300.png|width=83.33333333333334%!


Now, for the failed test case, since the AVL is 44, although the LMUL is 4, the “last” v-regs, {{v15}} and {{v19}} are un-used. So,
uop1: CSID = {{0}}; Carry/MaskIn: {{v0[15: 0]}} // total vl = 16
uop2: CSID = {{1}}; Carry/MaskIn: {{v0[31:16]}} // total vl = 32
What I expected is:
uop3: CSID = {{2}}; Carry/MaskIn: {{v0[47:32]}} // total vl = 48, and since AVL=44, the “tail” 4 elements are set to TA (writes all1s)


But RTL is:
uop3: CSID = {{0}}; Carry/MaskIn: {{v0[15: 0]}} // total vl = 48, and since AVL=44, the “tail” 4 elements are set to TA (writes all1s)

Since we use “CSID” and “SEW” to select the proper bit-field of the mask register ({{v0}}) for CarryInput, the CSID is wrong for uop2, and cause the CarryInput selection is wrong.


Sequencer checks the AVL < VL, and turns the uop3 to ’last” uop, I think it’s OK. But why the CSID been reset to {{0}}? We are debugging this case.","07/Jul/22 6:36 AM;609d7e1f5998a6006800dcc5;I’ll take a look at the instruction sequencing to see if behavior diverged there, or if the wrong CSID is being muxed in somewhere else between the sequencer and ISS.","07/Jul/22 7:16 AM;5f94696c29bd8a006f94f0e1;Hi [~accountid:609d7e1f5998a6006800dcc5] , [~accountid:6065017e90e3950069cf01c5] , the possible root cause of this failed case (vmerge) is the wrong {{csid}} value, and thus the VexPipe selects the wrong mask bit-field of the mask register (aka {{v0}}).

AVL=35, so after consuming two v-regs (16 elements per each), the vector sequencer checks the 3rd uop is the final uop, and set it to singleUop.

However, for the “singleUop” definition, it will set the csid to {{0}}.

{noformat}        // Single uop mask source info
        io.deqReq(i).bits.payload.vector.csid     := 0.U
        io.deqReq(i).bits.payload.vector.cmplxOp  := false.B
        io.deqReq(i).bits.payload.vector.finalUop := true.B{noformat}

!image-20220707-134200.png|width=66.66666666666666%!

BTW, if we turn on the masking ({{enable_masking = 1}}) in VTG, the {{vadd.vv}} also encounters this problem. (masked operations need {{v0[i].t}} to determine whether the destination elements could be updated or not.



The workaround is to modify the {{singleUop}} in {{VectorSequencer.scala}}: Let those instructions that need the mask register NOT turns into “singleUop” for the “last” uop. ({{cmn.ctrl.read_v0}})

{noformat}  def singleUop(first: Bool): Bool = (cmn.ctrl.valuIfV || cmn.ctrl.vmemIfV && !cmn.ctrl.vmem_indexed) &&
                        ((vector.vconfig.vl =/= 0.U) || !(cmn.ctrl.vmsxf || cmn.ctrl.mask_logical)) &&
                        [...]
                        !cmn.ctrl.vcplxredop &&
                        //FIXME-TGV: for those uops need mask-in, we need csid to select proper mask bit field
                        !cmn.ctrl.read_v0{noformat}

!image-20220707-134639.png|width=66.66666666666666%!



Frankly speaking, we do not truly understand the “philosophy” of the sequencer design, so the suggestions below are based on our “observation”.

# Mask bit propagation:
## besides the unmask instructions (vm=1), masked instructions need v0 to check whether the destination elements could be updated or not (active/inactive in mask register).
## If the Sequencer splits a macro-op into 2/4/8/(?) uops, the “corresponding” mask bit-field could also be selected in the Sequencer. For example, SEW=32, LMUL=4
### Possible approach: 1st uop: v0\[3:0]; 2nd uop: v0\[7:4], 3rd uop: v0\[11:8]; 4th uop: v0\[15:12]
### (v0 should be read with other source operands at RR stage)
# Or, provides another uop id (hint) to let VexPipe select the correct mask bits per vsew and uopID.","07/Jul/22 8:53 AM;609d7e1f5998a6006800dcc5;I added the {{csid}} assignment logic to the “singleUop” block. My understanding at that time was that the singleUop flag indicated that a macro op only had to sequence a single uop (for the entire macro-op lifetime) not just for the current cycle. My understanding now is that the flag can indicate that the remaining sequencing of a multi-cycle uop can be completed with only one additional uop. So the last uop of a sequence could be completed by this logic.

I think this small fix should be sufficient: 

{noformat}-        io.deqReq(i).bits.payload.vector.csid     := 0.U
+        io.deqReq(i).bits.payload.vector.csid     := Mux(entryFirst(i), 0.U, (-grpOffset).asUInt +& i.U){noformat}","07/Jul/22 9:04 AM;6065017e90e3950069cf01c5;[~accountid:609d7e1f5998a6006800dcc5] that is correct, for most operations if the last sequencing cycle only consists in one uops it can be matched by {{singleUop}}.","07/Jul/22 8:23 PM;5f94696c29bd8a006f94f0e1;[~accountid:609d7e1f5998a6006800dcc5] , thanks for your quick fix. I run the regression for the below instructions, and all tests passed.

Total tests: 36

Instructions: (enable masking in VTG  / enable_masking = 1)

{noformat}    vadc.vvm
    vadc.vxm
    vadc.vim
    vsbc.vvm
    vsbc.vxm
    vmerge.vvm
    vmerge.vxm
    vmerge.vim
    vfmerge.vfm{noformat}



also, run {{vtg-tgv-tests.outline}} with {{enable_masking = 1}}

{noformat}  Bucket  Failure                                      Count
--------  -----------------------------------------  -------
       1  COSIM-ERROR# COSIM VS RTL WRDATA MISMATCH      177
       2  COSIM-ERROR# COSIM VS RTL PC MISMATCH            2
       3  Assertion Failure: SiFive_RDU_assert             1
       4  Assertion Failure: SiFive_StQEntry_assert        2

Summary:
      |   Total Verilog Compiles |   Total Verilog Sims |   Incomplete/Skipped |   Build Fails |   Sim Failures |   Total Failed
------+--------------------------+----------------------+----------------------+---------------+----------------+----------------
 Jobs |                        1 |                 1021 |                    0 |             0 |            182 |            182{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650 LSU Timing: feu/rdu/rob/robRetirePtrVec_reg[*] -> lsu/io_robRetirePtr[*] ->  lsu/StQ/stqEntries_/stqE_retireFsmState_q_reg[*],,,,,,MAL-2136,119552,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,7/6/2022 10:01,7/21/2022 7:57,9/28/2022 0:51,7/7/2022 9:52,,,,,,,,,,,,,RTL/RDU,,,,,,,,,0,,,,"/project/tsmc/cln7ff/P6_ppa_runs/tomm/tile/design/SiFive_TilePRCIDomain/tomm_iter_220701/dbs/prects.enc

PreCTS timing results:

Startpoint: tile/core/feu/rdu/rob/robRetirePtrVec_reg\[72]/CP
Endpoint: tile/core/lsu/StQ/stqEntries_17/stqE_retireFsmState_q_reg\[1]/D
Slack:                      -0.0934
Skew:                      -0.0061
NumStages:           23
BufInvs:                    8
Manhattan (X/Y): 196.593/65.04
Corner:                 func_0p675v_0c_cworst_CCworst

Lots of time in prior cycle to encode pointer value.



See: /project/tsmc/cln7ff/P6_ppa_runs/michaelw/P650/timing_reports/MAL-2136",Cody Croxton,John Ingalls,Michael White,Tom Mickelson,,,,,,,,,,,,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,06/Jul/22 10:04 AM;jsmith;MAL-2136.txt;https://sifive.atlassian.net/secure/attachment/74155/MAL-2136.txt,,,,,,,,,,,,,,,,8754bf5405a6283bda634ccb05ca93cc0c112b18,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-07T09:52:04.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8e03813f82b7cff0bc38eb5e68aae6783dbe40d0,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i000h3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,01:32.6,"06/Jul/22 12:01 PM;5bb6808b9ba2930990f81895;Wow I’m kind of amazed we’ve made it this far without a staging register\!  Yeah that’s probably necessary, on both {{robRetirePtr}} and {{robCommitPtr}}.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] [Mask Unit] Accumulator Replay Logic,,,,,,MAL-2135,119548,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,7/6/2022 8:58,7/12/2022 9:54,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/MU,TGV_RTL/VEX,,,,,,,,0,,,,"Accumulator uops have two distinct replay conditions:

# source info replay
## replay needs to be asserted for both partial result and full result
## no results are written back
## completion request does not occur
# other partial result replay (same accumulator, different uop)
## Replay needs to be asserted for full result if the uop is the last-to-issue uop
### Only the last-to-issue accumulator uop will write the total accumulator to the PRF.
## the partial result for this uop should still be written back
## the completion request should remain valid",Andrew Hanselman,,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i000gf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
HWPF area: reducing flop bits by removing redundancy,,,,,,MAL-2134,119544,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,7/6/2022 8:34,9/27/2022 12:02,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/HWPF,,,,,,,,0,,,,VA in the BPM engine is used in different pipeline stages and across different subzones. Since each BPM engine serves an 8K memory region upper address bits can be shared to reduce the flop bits. ,Binayak Tiwari,I-Cheng Cheng,John Ingalls,Josh Smith,,,,,,,,,,,,60a963ed8cbda700681b40c1,5d7bfdaa003e040c3e175060,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,MAL-1858,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,01/Sep/22 2:04 PM;ug:1e29c7e3-9c50-4cc0-81cf-3d99eb2e04ab;floorplan.png;https://sifive.atlassian.net/secure/attachment/76930/floorplan.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{repository={count=2, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-22T17:10:17.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,CIP-3958,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,,,,,,,,,,,,,2|i000fj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,8,,,,,,,,Panda DR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/25828/files],,,,,,,,,,,,,29:27.5,"13/Sep/22 5:29 AM;5acffeafaa802f2a797a955c;[~accountid:60a963ed8cbda700681b40c1] reports that his PR ([https://github.com/sifive/federation/pull/25828|https://github.com/sifive/federation/pull/25828|smart-link] ) reduced flops:

* synthesis - flops/engine (before, after) = (1121, 936) -> 16.5% reduced

Did you try running PowerArtist also?  I would expect that we might see some benefit there too.","13/Sep/22 3:10 PM;60a963ed8cbda700681b40c1;I haven’t tried PA yet, I am waiting for [https://sifive.atlassian.net/browse/PEHD-928|https://sifive.atlassian.net/browse/PEHD-928|smart-link] to get the correct estimate.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] Streamline the V2S side of operand transfers,,,,,,MAL-2133,119541,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,7/6/2022 7:31,7/14/2022 18:21,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,TGV_RTL/X2Y,,,,,,,,0,,,,"The {{OperandTransfer}} bundle has got more overhead and latency than is needed for VEX writes into the V2S register file. Come up with a reduced bundle, and refactor the timing, so that latency and useless flops can be reduced.",Brian Grayson,David Kravitz,Fu-Ching Yang,Ian Chuang,I-Cheng Cheng,Jaksa Djordjevic,Knute Lingaard,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,61aaae1d9615eb006f5ff922,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1374fb7a22c90da0c60495,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2074,MAL-1619,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|i000ev:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,53:18.0,"13/Jul/22 6:53 AM;5e1374fb7a22c90da0c60495;We consider this modeled and will wait for correlation results 

CC: [~accountid:5e137458efa19b0e976b5c7a], [~accountid:61aaae1d9615eb006f5ff922] ","14/Jul/22 7:24 AM;61aaae1d9615eb006f5ff922;We are planning to add more microbenchmarks. {{vmv}} is ready on the design. We can add it to stress that. 

CC: [~accountid:5e49f622a17f930c9b94b6cd] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Assertion:: Physical register 24 set as ready twice,[TGV] Assertion:: Physical register,Instruction decode and dispatch ,PRF,,,MAL-2132,119518,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,7/5/2022 23:22,9/7/2022 17:43,9/28/2022 0:51,7/13/2022 8:40,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,TGV,,,"Hi Team,
Getting following signature::
*Error:* ""/scratch/naveenr/master/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_PRA_4_assert.sv"", 74: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.v2sPra.SiFive_PRA_4_assert: at time 494682500 ps
Assertion failed: Physical register 24 set as ready twice (only first conflicting id shown)
at PRF.scala:75 assert(\!(readyVec & setVec).orR, ""Physical register %d set as ready twice (only first conflicting id shown)"", firstRegSetTwice)


*sha1:* {{fc938383a18f05dd574a965830baac25c949a136}}


*Verdi-Snippet::*

!image-20220706-061958.png|width=1237,height=372!

*Logs path::*
gamma26:: /scratch/naveenr/master/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline_assertion/t0000_lmul4/vector/vector_tests_gen/rvv_64/vid.v

*config:* coreip_u8_minimal_vector

*rerun.outline::*

{{override_testbench_in_outline(""coreipvipcosim"") add_subcircuit_in_outline([]) require 'json' opts = <<'JSON' { ""name"": ""vector/vector_tests_gen/rvv_64"", ""raw_plusargs"": [ ""+enable_spike_cosim"" ], ""subdir"": ""t0000_lmul4"", ""subtest"": ""vid.v"", ""enable_postsim_py_check"": false, ""generator_args"": ""vid.v_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_SelfCheck-1_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-4_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-1"", ""seed"": { ""value"": 3755249129 }, ""sim"": { ""vendor"": ""vcs"" }, ""program"": { ""env"": ""abi"" } } JSON run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))}}",Alexandre Solomatnikov,David Kravitz,Josh Smith,Naveen Rathore,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,6235105a3eacc50071ff07ec,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,05/Jul/22 11:22 PM;ug:00e334db-2e60-4fae-a5b5-d5d39244fe5c;image-20220706-061958.png;https://sifive.atlassian.net/secure/attachment/74138/image-20220706-061958.png,,,,,,,,,,,,,,,,fc93838,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-12T14:24:32.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/0661c3c3f43f5c9c9628d07ad487475b382c2142,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|i0009r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"./scripts/quick-submodule-update
BUILD_DIR=builds ./generate-build coreip_u8_minimal_vector
cd builds/coreip_u8_minimal_vector/
make sim
source load-modules
cd sim/
./sitest @rerun.outline +verbose --waves=fsdb",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,50:56.0,"06/Jul/22 6:50 AM;5fd15143b4a74900763834e0;[~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] can you please take a look at this? It appears that the {{vmv.x.s}} instruction (PC=80001ebc) coming from scalar dispatch gets sequenced into 2 uops going into VEX.

The scalar dispatch is at 490265500, and it enters VEX at 494482500.

If you don’t want to rerun, you can look in my area:
davidk2@gamma13:/scratch/verif/davidk2/MAL-2132/builds/coreip_u8_minimal_vector/sim/sim/mal-2134.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vid.v/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Design and Cosim Mismatch between tail-elements for Vrgather with Tail-agnostic=1,[TGV] Design and Cosim Mismatch,Execution Unit ,Vector ,,,MAL-2131,119513,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,7/5/2022 22:44,9/7/2022 17:43,9/28/2022 0:51,7/6/2022 17:51,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"Hi Nicolas,
With vrgatherei16.vv and Tail-agnostic=1
Tail-elements in design filled with 0's
But Cosim Tail-elements are filled with 1'sSEW=64, Lmul=2, vl=3


*sha1:* {{fc938383a18f05dd574a965830baac25c949a136}}


*Error::*
\[COSIM-ERROR]\[0] COSIM VS RTL WRDATA MISMATCH
\[DoCheck]\[0] m_dut_inst_item: \[17488] InstInfo: VLD=1 | PC=0x0000000080000fca | INSN=0x3ba20e57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r28=0x00000000000000000000000000000000 mask=ffff r29=0x00000000000000000000000000000000 mask=ffff | READY=1 | CSR_TIMER=17488 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x00000000800014bc | MCAUSE=0x0000000000000002 | VSTART=0 | VL=2 | SEW=64 | LMUL=1 | VSEGELT=0
\[COSIM-ERROR]\[0] m_dut_inst_item: \[17488] InstInfo: VLD=1 | PC=0x0000000080000fca | INSN=0x3ba20e57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r28=0x00000000000000000000000000000000 mask=ffff r29=0x00000000000000000000000000000000 mask=ffff | READY=1 | CSR_TIMER=17488 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x00000000800014bc | MCAUSE=0x0000000000000002 | VSTART=0 | VL=2 | SEW=64 | LMUL=1 | VSEGELT=0
\[COSIM-ERROR]\[0] m_cosim_inst_info: VLD=0 | PC=0x0000000080000fca | INSN=0x3ba20e57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r28=0x00000000000000000000000000000000 mask=ffff r29=0xffffffffffffffff0000000000000000 mask=ffff

*In Cosim::*
core   0: 0x0000000080000fc6 (0x0592f2d7) vsetvli t0, t0, e64, m2, ta, mu
core   0: 3 0x0000000080000fc6 (0x0592f2d7) x 5 0x0000000000000003
core   0: 0x0000000080000fca (0x3ba20e57) vrgatherei16.vv v28, v26, v4
core   0: 3 0x0000000080000fca (0x3ba20e57) e64 m2 l3 v28 0x00000000000000000000000000000000 v29 0xffffffffffffffff0000000000000000
*In Design::*
C0:      17488 \[1] pc=\[0000000080000fca] W\[r 0=0000000000000000]\[0] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[3ba20e57] vrgatherei16.vv v28, v26, v4
C0:      17488 \[1] pc=\[0000000080000fce] W\[r 7=0000000000000059]\[1] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[c21023f3] csrr    t2, vtype
C0:      17485 vrf\[28]=\[00000000000000000000000000000000]\[ffff]
C0:      17486 vrf\[29]=\[00000000000000000000000000000000]\[ffff]

*Logs Path:*
{{gamma26:/scratch/naveenr/master/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline_vrgather/t0000_lmul2/vector/vector_tests_gen/rvv_64/vrgatherei16.vv}}

*config:* coreip_u8_minimal_vector

*rerun.outline:*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""t0000_lmul2"",
  ""subtest"": ""vrgatherei16.vv"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vrgatherei16.vv_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_SelfCheck-1_FLMUL-1_NonzeroVstart-1_VstartPercent-10_Sample-50_LMUL-2_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-1"",
  ""seed"": {
    ""value"": 4126661096
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Naveen Rathore,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,fc93838,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-06T17:51:15.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/416f2992802ceaf16d5b801c56d1b74d1bb17bf8,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,VI-6535,,,100,,,No,,,,,,,,,,,,2|i0008n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"./scripts/quick-submodule-update
BUILD_DIR=builds ./generate-build coreip_u8_minimal_vector
cd builds/coreip_u8_minimal_vector/
make sim
source load-modules
cd sim/
./sitest @rerun.outline +verbose --waves=fsdb",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,51:58.5,06/Jul/22 8:51 AM;6065017e90e3950069cf01c5;I think the SHA1 is {{fc938383a18f05dd574a965830baac25c949a136}} (issue does not show on a more recent master).,06/Jul/22 11:18 AM;5a938e9c0913194d2d262658;[~accountid:6065017e90e3950069cf01c5] With the same outline? ,"06/Jul/22 12:02 PM;6065017e90e3950069cf01c5;Yes, but I am able to reproduce on the SHA1 I added to the ticket, and I have a fix in preparation.

(on master did you revert changes enabling TA ?)","06/Jul/22 1:23 PM;5a938e9c0913194d2d262658;{quote}(on master did you revert changes enabling TA ?){quote}

Yes. We were seeing failures in VTG tests, which seemed like test was expecting the wrong data. SO [~accountid:5d4a0f85af16f20ceaf5442e] is looking into it. 

And in the meanwhile its disabled.","06/Jul/22 1:59 PM;6065017e90e3950069cf01c5;I think the sha1 for this bug report is in the middle, TA was still enabled.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Precise per-module clock gating in VexPipe,,Execution Unit ,Vector Vexpipe,,,MAL-2130,119512,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,7/5/2022 22:22,7/14/2022 18:45,9/28/2022 0:51,7/7/2022 12:55,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Currently per-module clock gating are not restricted enough as discussed here

[https://github.com/sifive/federation/pull/24201#discussion_r914262494|https://github.com/sifive/federation/pull/24201#discussion_r914262494]",Brad Wu,Nicolas Brunie,,,,,,,,,,,,,,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-07T12:55:07.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/5badadb80522be28aef9cfdd13ec31a1b4f7e06f,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i0008f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Cross reference to predictors in IFU,,,,,,MAL-2129,119509,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Adam George,61b2a458657a0500706b9c39,Chia-I Chen,61aaafab977c5b007241043c,Chia-I Chen,61aaafab977c5b007241043c,7/5/2022 20:46,7/13/2022 15:56,9/28/2022 0:51,7/11/2022 22:18,,,,,,,,,,,Panda DR,,Performance,RTL/Frontend,,,,,,,,0,,,,"trying to add references to predictors' signals for correlation, but the predictors in IFU are instanced in {{withClock}} block thus failing to reference

Chisel channel in slack had discussed similar issue (2 years ago): 

[https://sifive.slack.com/archives/C3X0EUP5Y/p1601577796002800?thread_ts=1601577502.002700&cid=C3X0EUP5Y|https://sifive.slack.com/archives/C3X0EUP5Y/p1601577796002800?thread_ts=1601577502.002700&cid=C3X0EUP5Y|smart-card]

based on the discussion, {{IFU.scala}} can be modified to make cross reference possible:

{noformat}class IFUModule(outer: IFU) {
…
class IFUImpl(outer2: IFUModule) {
// the codes with withClock block originally
} // end-of-IFUImpl
val ifuimpl_ = withClock(ifuClock)(new IFUImpl(this))
...
} // end-of-IFUModule{noformat}

but I’m not sure if this is the most appropriate way to solve this issue.",Adam George,Chia-I Chen,I-Cheng Cheng,John Ingalls,Josh Smith,,,,,,,,,,,61b2a458657a0500706b9c39,61aaafab977c5b007241043c,5d7bfdaa003e040c3e175060,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{repository={count=7, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":7,""lastUpdated"":""2022-07-11T23:41:46.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":7,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,fc6a32d8622045f518e10536218071f606c0b34e,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|i0007r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,34:59.1,"06/Jul/22 7:34 AM;5acffeafaa802f2a797a955c;What signals are we trying to reference? I want to be careful about making changes which change the IFU hierarchy in weird ways just for this.  There may be other ways to handle it, like making the signals we want to observe I/O from the IFU somehow.","06/Jul/22 8:07 AM;5bb6808b9ba2930990f81895;In {{PTW_Mallard.scala}}, I worked around this by declaring wires for GrandCentral to tap outside the {{withClock}} scope at [https://github.com/sifive/federation/blob/ac088e49144f1c49b47f0c284f6ed240ecbb2d7b/mallard/src/main/scala/core/mallard/PTW_Mallard.scala#L46-L57|https://github.com/sifive/federation/blob/ac088e49144f1c49b47f0c284f6ed240ecbb2d7b/mallard/src/main/scala/core/mallard/PTW_Mallard.scala#L46-L57]","06/Jul/22 8:30 AM;61aaafab977c5b007241043c;So far only {{ijtp.ctrReset}} and {{ifu.directRedirect_F3}} (in IFU's withClock block). 

The reason why I mentioned cross-referencing the whole instance is that I’d try to avoid modifying the RTL Scala source each time when only changing the probing signals. If it is not avoidable in the way you feel comfortable, I'm cool with it. 

I guess there is no way to cross-reference the whole instance without changing the hierarchy? ","06/Jul/22 9:12 AM;5acffeafaa802f2a797a955c;{quote}I guess there is no way to cross-reference the whole instance without changing the hierarchy?{quote}

Yes, I believe that is what Jack Koenig was saying in the Slack conversation.  You can only reference something that is “returned” by the {{withClock() {}}} block.

If you only want to probe a few signals, I think John’s approach is better.  Declare a wire outside of the {{withClock()}} block, and then inside of the {{withClock()}} block, just assign that wire to the value of the signal you want to probe.","06/Jul/22 8:21 PM;61aaafab977c5b007241043c;If needing the signals inside the instance in {{withClock()}} block, does it mean that those signals should be I/O of the instance class?","07/Jul/22 8:41 AM;5acffeafaa802f2a797a955c;I suppose it would have to be.

Just so that I understand, what are you going to be doing with those signal references?  Are you trying to write checkers in GrandCentral or something?

You can already see these in a waveform viewer, so are you trying to write some tool to help with correlation?  There are already ways to extract information from FSDB files so we shouldn’t need to actually modify the chisel to pull out these signals.",07/Jul/22 7:34 PM;61aaafab977c5b007241043c;Because the signal names varies when Chisel gets update even the source Scala remains the same. So we are trying to add them to the GrandCentral but some (in {{withClock()}} block) are failed to probe.,"08/Jul/22 8:09 AM;5acffeafaa802f2a797a955c;{quote}Because the signal names varies when Chisel gets update even the source Scala remains the same{quote}

Ah, okay.  Well we may be able to just use {{dontTouch()}} in the source chisel to prevent the signal name from changing if that’s all you need.","10/Jul/22 8:28 PM;61aaafab977c5b007241043c;Okay, cool. ",11/Jul/22 10:18 PM;61b2a458657a0500706b9c39;Added requested wire declarations.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion failed : L1DCData ECC Correctable Error,Assertion failed : L1DCData ECC Correctable Error,,,,,MAL-2128,119507,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,Duplicate,John Ingalls,5bb6808b9ba2930990f81895,Hung-Lun Chen,60ce876f624d7000695b9589,Hung-Lun Chen,60ce876f624d7000695b9589,7/5/2022 20:46,7/20/2022 19:13,9/28/2022 0:51,7/20/2022 16:47,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"Git information:

{noformat}commit: 5fa12860c6e751bce53f94a6649d57bf46fc80b7
Date:   Mon Jul 4 18:49:05 2022 -0700{noformat}

Assertion failed message:

{noformat}C                   0:       3919 [1] pc=[00000000800005c6] W[r31=0000000000000000][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00004f81] DASM(00004f81)
C                   0:       3926 [1] pc=[00000000800005c8] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[34005073] DASM(34005073)
C                   0:       3926 [1] pc=[00000000800005cc] W[r 0=0000000000000000][0] R[r 1=00000000800003dc] R[r 0=0000000000000000] inst=[00008082] DASM(00008082)
[33393] %Error: SiFive_LDPipe_assert.sv:613: Assertion failed in top.TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LDPipes.LDPipes_0.SiFive_LDPipe_assert: Assertion failed (verification library): L1DCData ECC Correctable Error  @[LDPipe.scala 2065:22]
%Error: /nfs/teams/perf/tmp-he/users/hunglunc/federation_02/builds_5fa12860c6e/coreip_p650/verilog/design/assertions/SiFive_LDPipe_assert.sv:613: Verilog $stop
Stopping...
[33393] %Error: SiFive_LDPipe_assert.sv:615: Assertion failed in top.TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LDPipes.LDPipes_0.SiFive_LDPipe_assert
%Error: /nfs/teams/perf/tmp-he/users/hunglunc/federation_02/builds_5fa12860c6e/coreip_p650/verilog/design/assertions/SiFive_LDPipe_assert.sv:615: Verilog $stop
Stopping...

*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 16197 simulation cycles (in top.TestDriver.report_phase_actions)

*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 16197 simulation cycles (in top.TestDriver.report_phase_actions)
[33000] %Error: TestDriver.sv:529: Assertion failed in top.TestDriver.assert_final_phase.final_error: 'assert' failed.
%Error: /nfs/teams/perf/tmp-he/users/hunglunc/federation_02/vsrc/sim/common/../TestDriver.sv:529: Verilog $stop
Stopping...{noformat}",Adam George,Chia-I Chen,Fu-Ching Yang,Hung-Lun Chen,I-Cheng Cheng,John Ingalls,Mike Schoenfelder,,,,,,,,,61b2a458657a0500706b9c39,61aaafab977c5b007241043c,5ca54304bb1ed00ac5e5e852,60ce876f624d7000695b9589,5d7bfdaa003e040c3e175060,5bb6808b9ba2930990f81895,5e1375a4b783d60db0a03c51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-7592,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2152,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Other -- Put in description,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|i0007b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"1. Checkout git sha (5fa12860c6e751bce53f94a6649d57bf46fc80b7).

2. Using coreip_p650 and make sim.

3. Going to <FED>/coreip_p650/sim and build verilator and vcs by using the following commands.
    ./sitest rv64ui-add --sim=verilator --slurm-partition=redhat
    ./sitest rv64ui-add --sim=vcs --waves=fsdb --slurm-partition=redhat

4. You are now at :<FED>/coreip_p650/sim
    Typing command : cd ../, and you should at <FED>/coreip_p650/
    Typing following command to setup the environment: (The xxxxxxx depends the name you get)
        ln -s sim/vcs.xxxxxxx ./vcs
        ln -s sim/verilator.program.waves.xprop.xxxxxxx/obj_dir/VTestDriver ./VTestDriver
        ln -s sim/verilator.program.waves.xprop.xxxxxxx/sim.so ./sim.so
        ln -s /work/sparta/rtlsim/p65/latest/linker_script/ .
        cp /work/sparta/rtlsim/p65/latest/cosim.cfg .

5. Execute the following command to run the test of 0075/177.
    RTL_ROOT=$PWD /work/sparta/scripts/run_micro_benchmark.sh -t rtlsim -c p65 -p 0075/177

6. The detailed log will be at <FED>/coreip_p650/0075/177.",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,57:47.5,"05/Jul/22 10:57 PM;5dcdcc6a99e7ea0c60b0e6aa;This assert also occurs for {{useries_coremark_tuned}} 

{noformat}cd coreip_p650/sim
./sitest --sim=verilator @../../../test-outlines/coremark.outline{noformat}","05/Jul/22 11:36 PM;60ce876f624d7000695b9589;The assertion also occurs in test_u8_hwpf_perf.outline.

I managed to dump the vcd waveform for test_u8_hwpf_perf.outline.

Command: (Copy test_u8_hwpf_perf.outline before running the test)

{{./sitest @test_u8_hwpf_perf.outline --sim=verilator --nobuild  --waves --slurm-partition=redhat}}

Location of test_u8_hwpf_perf.outline:

{{/nfs/teams/perf/tmp-he/users/hunglunc/federation_02/builds_5fa12860c6e/coreip_p650/sim/test_u8_hwpf_perf.outline}}

Location of waves.vcd:

{{/nfs/teams/perf/tmp-he/users/hunglunc/federation_02/builds_5fa12860c6e/coreip_p650/sim/sim/test_u8_hwpf_perf.outline/HWPF_0/sparta-ubenchmarks/mem_probe/mem_probe_generator/kStride/TEST_SIZE_8/TEST_STRIDE_64/waves.vcd}}",12/Jul/22 7:13 AM;5e1375a4b783d60db0a03c51;This ticket is marked as a duplicate of [https://sifive.atlassian.net/browse/VI-7592|https://sifive.atlassian.net/browse/VI-7592|smart-link].  I raised the priority of [https://sifive.atlassian.net/browse/VI-7592|https://sifive.atlassian.net/browse/VI-7592|smart-link] since it is causing problems for a performance model correlation flow.,20/Jul/22 4:47 PM;5bb6808b9ba2930990f81895;this is being worked on as a possible Verilator bug in https://sifive.atlassian.net/browse/VI-7592 and related tickets,"20/Jul/22 7:13 PM;60ce876f624d7000695b9589;Hi [~accountid:5bb6808b9ba2930990f81895] ,

Which related ticket should we follow about this problem?

Just want to make sure I am following the correct ticket.

Should I just follow VI-7592?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: L1DCache power recovery after splitting SRAMs within Banks,,,,,,MAL-2127,119468,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,Done,Khondakar Mujtaba,622a930149c900007023d105,Mehul Thakkar,622a8208db58c100687dd15a,Mehul Thakkar,622a8208db58c100687dd15a,7/5/2022 16:00,7/29/2022 9:05,9/28/2022 0:51,7/19/2022 17:55,,,,,,,,,,,,,Power,RTL/LSU,,,,,,,,0,,,,"Based on our recent runs over the weekend L1D power has gone up by 2x, There seems to be a recent change due to splitting SRAM’s within the Banks. L1D power is extremely sensitive to all the BenchMarks we runs. This is most likely due rd/wr enable of smaller instance and data broadcast.

Since its a Healdsburg feature, I would like to disable this feature until we mitigate the power cost for Panda. Spoke to [~accountid:622a930149c900007023d105]  already and he will do further debug to understand the issue, let me know if you need any help from me.  



[~accountid:5bb6808b9ba2930990f81895] [~accountid:5acffeafaa802f2a797a955c] - please let me know if you agree to disable the feature.",John Ingalls,Josh Smith,Khondakar Mujtaba,Mehul Thakkar,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,622a930149c900007023d105,622a8208db58c100687dd15a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1977,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-16T17:38:16.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24425,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|hzzzzz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,40:35.4,"16/Jul/22 5:40 PM;5acffeafaa802f2a797a955c;[~accountid:622a930149c900007023d105] Did you collect any PowerArtist data for your changes in [https://github.com/sifive/federation/pull/24425|https://github.com/sifive/federation/pull/24425|smart-link] ?  If so, could you summarize it here?","17/Jul/22 8:01 AM;622a930149c900007023d105;With the individual SRAM clock gating and read data-gating, the power increase is reduced from 100% increase to 20% increase. Changing from 4-SRAM to 1-SRAM is the only way to recover full power. The implementation is parametrized to 4 SRAM for now. We will see 20% power increase from DCache data array.","17/Jul/22 8:28 AM;622a8208db58c100687dd15a;We shouldn’t be calling this ticket resolved in that case [~accountid:622a930149c900007023d105]. 20% L1d power is 0.6% of total power and its huge cost. We need a review with team to understand if this feature required for Panda or not or explore other optimizations to pay for it. One item i can think of is the data gating - in current implementation we are forcing data input to 0 which creates additional toggle at input of SRAM, do we save n-1 write data to keep it stable instead ? ","19/Jul/22 5:55 PM;5bb6808b9ba2930990f81895;[~accountid:622a8208db58c100687dd15a] Yes, the new Healdsburg L1DC arrangement in [https://sifive.atlassian.net/browse/MAL-1510|https://sifive.atlassian.net/browse/MAL-1510|smart-link] will have a pipeline for write data closer to the SRAMs that will also conveniently help for data gating as you describe.
We should continue driving forwards MAL-1510 for Healdsburg to make these optimizations, and whatever makes it into Panda will be a bonus.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] viota scheduling constraint,,,,,,MAL-2126,119467,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,7/5/2022 15:48,7/25/2022 11:28,9/28/2022 0:51,7/12/2022 2:10,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,"{{viota}} uops expect a specific scheduling order to work for {{LMUL > 1}}

This constraint should be specific and implemented into {{VectorSequencer}} and {{VexPipe}}



Implementation:

viota uops requires similar issuing constraint like complex uops.

* Only viota with LMUL>1 apply to the following constraints
* Only 1 viota instruction in a ROB group
* In vexPipe issue queue, viota uops with the same gid are sequenced in-order and no interleaved issuing viota uops with different gid.",Brad Wu,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,,62103777eb2978006893b778,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-12T02:10:02.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzzzzr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Add PRA functionality to STB,,,,,,MAL-2125,119453,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,7/5/2022 14:53,7/5/2022 14:53,9/28/2022 0:51,,,,,,,,,,,,,,RTL/RDU,TGV_RTL/BAL,,,,,,,,0,,,,"If the Baler is ever running ahead of the LSU, store data could be placed into the STB before the matching “STB-to-StQ” uop makes it into the LSU issue queue. When these uops move from scalar RDU dispatch stage into the LSU issue queue, they need to check whether the data they’re consuming is ready in the STB.

For two reasons, it makes sense to add this capability to the STB rather than have a separate PRA.

# In P670, ROB IDs are 8 bits; a bit-vector PRA would need 256 bits.
# The STB already holds the ROB ID associated with each data.

The PRA functionality will just be an additional CAM lookup of the information that’s already present in the STB. Only one srcTag needs to be checked per “STB-to-StQ” uop, so this should only add 2 “ports” to the CAM logic. If timing becomes a problem, the PRA CAM could be located closer to scalar RDU dispatch logic.",David Kravitz,John Ingalls,Vijith KS,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,5fa30ce971ab9e006a1d63d8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2065,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2057,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-2065,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|hzzzuf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] vcompress.vm should follow the tail agnostic rule,[TGV] vcompress.vm ,Execution Unit ,Vector,,,MAL-2124,119445,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Zhiqiang Hao,5d02d411febd110bc78aabc3,Zhiqiang Hao,5d02d411febd110bc78aabc3,7/5/2022 13:06,9/7/2022 17:43,9/28/2022 0:51,7/11/2022 16:40,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"This issue was involved in [https://github.com/sifive/federation/pull/21567|https://github.com/sifive/federation/pull/21567|smart-link] 

Now spike already supports TGV tail-agnostic behavior, we need to revert that RTL changes



{noformat}[COSIM-ERROR][0] COSIM VS RTL WRDATA MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [16256] InstInfo: VLD=1 | PC=0x0000000080000e70 | INSN=0x5f0faa57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r20=0xddffd41e57194567444bcda3cd266e55 mask=ffff | READY=1 | CSR_TIMER=16256 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080001c7c | MCAUSE=0x0000000000000002 | VSTART=0 | VL=16 | SEW=8 | LMUL=1 | VSEGELT=0
[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000080000e70 | INSN=0x5f0faa57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r20=0xffffffffffffffffffffffa3cd266e55 mask=bfff{noformat}",Nicolas Brunie,Zhiqiang Hao,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,MAL-1781,VI-6774,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-11T16:39:52.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/45a34d27cefb68f4d3f3020c57b69ffc29e6698c,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,VI-6535,,,100,,,No,,,,,,,,,,,,2|hzzzsn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,46:41.0,07/Jul/22 1:43 PM;5d02d411febd110bc78aabc3;[~accountid:6065017e90e3950069cf01c5] - Could you take a look or re-assign to correct people?,"08/Jul/22 1:46 PM;6065017e90e3950069cf01c5;[~accountid:5d02d411febd110bc78aabc3] I am trying to test the revert and I am seeing some issues

with tail agnostic, if there is no bit set in the input mask the RTL returns a all1s and VTG expects undisturbed elements before the tail.

If I understand RVV spec correctly, both are correct (the remaining elements, so {{vl}} in this case since no mask bit is set) should follow current tail policy so all1s is legal)","08/Jul/22 1:48 PM;5d02d411febd110bc78aabc3;[~accountid:6065017e90e3950069cf01c5] - we know there’s a known issue in the tail agnostic checking part in VTG, and [~accountid:5d4a0f85af16f20ceaf5442e] is working on fixing it

If it’s just a VTG self-checking failure and not a COSIM WRData Mismatch, then I think it’s fine for now","08/Jul/22 1:50 PM;6065017e90e3950069cf01c5;👍  For the case I am debugging cosim does not complain, only the self check.","08/Jul/22 2:03 PM;5d02d411febd110bc78aabc3;This is the ticket of that VTG issue

[https://sifive.atlassian.net/browse/VI-6774|https://sifive.atlassian.net/browse/VI-6774|smart-link] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LTB read started too soon,[TGV] LTB,LSU (Load Store Unit),,,,MAL-2123,119393,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Cannot Reproduce,Warren Menezes,600773dcee80bd006f750bba,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,7/5/2022 6:50,9/27/2022 11:01,9/28/2022 0:51,9/27/2022 11:01,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"It looks like a read of the LTB is starting too soon. The {{data_valid}} of the entry is becoming true at the same time as {{established}}, which seems wrong to me. There could be a long gap between establish and the tag coming the LSU. {{data_valid}} should be based on the LDR-cycle tag. That’s going to hurt performance in the short term, but maybe we can figure out some way to make the tag broadcast to the Baler issue queue faster, and reduce the pipeline to the VRF?",David Kravitz,John Ingalls,Warren Menezes,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,600773dcee80bd006f750bba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2006,,,,,,,,,,,05/Jul/22 6:46 AM;ug:03996552-4b14-4132-be2b-a08c9c621951;Screen Shot 2022-07-05 at 9.46.51 AM.png;https://sifive.atlassian.net/secure/attachment/74075/Screen+Shot+2022-07-05+at+9.46.51+AM.png,,,,,,,,,,,,,,,,,No,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,`sitest` with outline below,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,No,,,,,,,,,,,,2|hzzzgn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vle8.v"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vle8.v_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-1_VSETIVLI-1_FENCEbeforeVSETVL-1_VSETVL-0_FLMUL-0_NonzeroVstart-0_Sample-50_AVL-16_INITFULLVREG-1_LMUL-1_TGV-1_IMM-1_SEW-8"",
  ""seed"": {
    ""value"": 4282876139
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,01:06.0,"05/Jul/22 9:32 AM;5fd15143b4a74900763834e0;As of master {{c5680f694c72be2d1cf759f5f9ede6131a7c515f}}, I can't reproduce this anymore. I'm sure it's still there, though, so a little looking at the timing and a pre-emptive fix might not be a bad idea.",27/Sep/22 11:01 AM;600773dcee80bd006f750bba;Closing this ticket as the design has matured and changed since this was last opened,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
X-prop through integer divider io.ready if divide replays in EX stage,X-prop through integer divider io.ready if divide replays in EX stage,ExPipe,,,Refer https://github.com/sifive/arch-specs/blob/master/core/mallard_mas.adoc#integer-execution-unit,MAL-2122,119336,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Dave Parry,5cc37f384573b30ffbeb88b0,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,7/4/2022 5:35,8/23/2022 11:38,9/28/2022 0:51,7/13/2022 8:53,mongoose.00.00,mongoose.01.00,mongoose.02.00,narwhal.00.00,narwhal.01.00,narwhal.02.00,narwhal.03.00,narwhal.04.00,orca.00.00,orca.01.00,,,RTL/IEX,,,,,,,,,0,,,,"*Error:*

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-xprop-coreip_mallard-test-nightly-xprop/114/builds/coreip_p650/verilog/design/assertions/SiFive_LsIssQEntry_assert.sv"", 179: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.lsIssQ.entries_0.SiFive_LsIssQEntry_assert: at time 314482500 ps
Assertion failed (verification library): make sure we don't match tag on a source that's marked ready  @[MallardUtil.scala 521:20]{noformat}

At {{T:314462500ps}} {{lsu.lsIssQ.entries_0.SiFive_LsIssQEntry_assert.io_exPipeTag_1_0_0_valid}} & {{lsu.lsIssQ.entries_0.SiFive_LsIssQEntry_assert.io_exPipeTag_1_0_0_bits_prIdx[8:0]}} transition to xx triggering the assertion.

This xx is coming from uninitialized {{lsu.LDPipes.LDPipes_1.ldf_pipeDataRow_q_3[63:0]}} & {{lsu.LDPipes.LDPipes_1.ldf_pipeDataRow_q_0[63:0]}} registers. The condition for the drivers to these registers never becomes true, keeping them uninitialized.

*Config*: coreip_p650

*Commit*: cf06289

*Regression*: master/nightly-mallard-xprop/114

*Simscope*: [https://simscope.internal.sifive.com/sigs/2327/cl5k69f1xdja|https://simscope.internal.sifive.com/sigs/2327/cl5k69f1xdja]

*rerun.outline*:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.tag_array_.*ext,0,1,32:.*\\.data_arrays_0_.*ext,0,1,32:.*\\.syssram.*ext,0,1,32:.*\\.island.*\\.lim\\.syssram.*ext,0,1,32:.*\\.tagged_tables_0_.*ext,0,1,32:.*\\.base_table_0_.*ext,0,132""
  ],
  ""subdir"": ""rat_default_T_0013"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3972379837
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Andrew Hanselman,Dave Parry,John Echard,John Ingalls,Josh Smith,Julian Bailey,Megan Wachs,Nicolas Brunie,Saurabh Singh,,,,,,,609d7e1f5998a6006800dcc5,5cc37f384573b30ffbeb88b0,6258a58313c2c8006a372228,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,6065017e90e3950069cf01c5,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-13T01:43:26.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,CAT-C,,Minor,"In x-prop enabled simulation, a divide instruction whose source operand is provided by a load may pessimistically propagate X to the rest of the CPU core.",Low,Simulation only: if the input values were anything other than X then the behavior of the divider would be identical.,P500,,X-prop simulation failure due to load with dependent divide,"Execute ld instructions at offsets 0x00, 0x08, 0x10, 0x18 from both L1 cache hits and misses before executing a divide based on a load.",1. BRC: should Publish for all customers,,,,,,,,,,466ec123453b8d6363db945f8929f20be9ba79b3,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|hzzz3z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,39:07.1,04/Jul/22 5:38 AM;607e26f781e7b900681be48c;Wave Dump at {{gamma10:/scratch/saurabhs/mallard_master_xprop_114/federation/builds/coreip_p650/sim/sim/LsIssQ.outline/rat_default_T_0013/rat/default}},"07/Jul/22 9:39 AM;5bb6808b9ba2930990f81895;I believe that this X-prop is showing a Spectre-category timing side-channel vulnerability through the Integer Divider {{io.ready}} signal being data-dependent on a replayed data value.

[~accountid:5acffeafaa802f2a797a955c] is there a way to prevent integer divide instructions whose source operands replay from affecting the execution of other potentially older instructions near them in the EX pipelines?

[~accountid:607e26f781e7b900681be48c] I was unable to reproduce the failing test, so can you please keep those waveforms around while we continue looking at this?","07/Jul/22 9:58 AM;5acffeafaa802f2a797a955c;The {{io.ready}} signal would actually not be data dependent on a replayed source value.  If the input values were anything other than x the behavior of {{io.ready}} would be identical.

Currently the divide operation gets killed one cycle after EX if the instruction was replayed in EX stage.  I’m guessing I made that change (instead of not starting the divider at all) for some timing fix.  I can probably come up with something better to avoid this issue.","07/Jul/22 10:22 AM;5acffeafaa802f2a797a955c;I’m reassigning to [~accountid:629ab2a89bc7150068d00cdf] for now.

The symptom is that the integer divider on integer execution pipe 1 makes it to the EX stage, but then sees that one or more of its source operand replays.  In the first cycle, the divider checks the sign of the inputs to see if it needs to negate them, so the state machine for the divider depends on the input values (which there are X’s).

I think we can bring in the EX stage replay signal late to avoid x-prop into the {{state}} variable for the divider.","11/Jul/22 6:35 AM;629ab2a89bc7150068d00cdf;[~accountid:5acffeafaa802f2a797a955c] I have tried to rerun this locally, I copied rerun.outline above into 

_builds/coreip_p650/sim_ 

within my federation checkout, I run 

_./sitest --waves rerun.outline_ 

but i get 

_=== sitest found errors in test sim/rerun.outline:_

_Error: cannot find test named rerun.outline_



I have been trying to follow the sitest guide but it doesnt seem to work, am I doing something wrong?","11/Jul/22 7:36 AM;5acffeafaa802f2a797a955c;[~accountid:629ab2a89bc7150068d00cdf] when specifying an outline to run (instead of a test name), you need to use an '@' symbol.  Like

{noformat}./sitest --waves=fsdb @rerun.outline{noformat}

You should also use {{--waves=fsdb}} instead of just {{--waves}}, otherwise you will get a {{.vpd}} or {{.vcd}} file ( I forget which).","12/Jul/22 8:32 AM;629ab2a89bc7150068d00cdf;Have created a pull request for this, [~accountid:5bb6808b9ba2930990f81895] & [~accountid:5acffeafaa802f2a797a955c] are reviewers, as this is my first PR let me know if i have missed anything off that I should have done?



Julian","12/Jul/22 11:38 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;[~accountid:5acffeafaa802f2a797a955c] , [~accountid:5bb6808b9ba2930990f81895] , [~accountid:629ab2a89bc7150068d00cdf] is this an errata that needs to be reported to customers? When was it introduced/","12/Jul/22 11:41 AM;5cc37f384573b30ffbeb88b0;[~accountid:5acffeafaa802f2a797a955c] this was discovered on a P650 configuration. Is it particular to P650, or could it show up on p550? If the latter, does it go all the way back to Mallard? Is there any software workaround (like don’t do integer divides soon after reset or something)?","12/Jul/22 12:09 PM;5acffeafaa802f2a797a955c;[~accountid:557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66] I think a recent change to the L1 DCache data array structuring may have introduced this x-propagation.  [~accountid:5bb6808b9ba2930990f81895] or [~accountid:622a930149c900007023d105] can comment.

[~accountid:5cc37f384573b30ffbeb88b0] to be clear I don’t think this is a functional bug (for IEX at least, I think there are still some DCache issues to be worked out after the data array restructuring).  If the input data were anything other than 'X' it would be fine. But the IEX side of this would be the same for P550 and P650.  I’m not sure if some difference in the DCache would prevent this from happening in P550.","12/Jul/22 12:50 PM;5bb6808b9ba2930990f81895;As [~accountid:5acffeafaa802f2a797a955c] said, this is *_not_* an actual silicon vulnerability:

{quote}If the input values were anything other than x the behavior of {{io.ready}} would be identical.{quote}

This was not introduced recently, despite the other recent L1 D-Cache Data Array changes.  This simulation-only X-pessimism affects prior versions.",13/Jul/22 1:57 AM;629ab2a89bc7150068d00cdf;merged into master…does this ticket need to be left open/in progress?,13/Jul/22 7:40 AM;6065017e90e3950069cf01c5;You can set it as resolved and commit the link to the commit in master in the commit field that will appear in the resolve/close form when you switch the ticket state.,"19/Jul/22 11:24 AM;5cc37f384573b30ffbeb88b0;[~accountid:5acffeafaa802f2a797a955c] / [~accountid:5bb6808b9ba2930990f81895] / [~accountid:629ab2a89bc7150068d00cdf], so we should show this as affecting all versions back to Mongoose.00.00, right? 

I don’t think I see a response to my above question about potential workaround, so I’ll ask again:

{quote}Is there any software workaround (like don’t do integer divides soon after reset or something)?{quote}

We’ve been running 4-state x-prop simulation in Mallard regressions for a long time, why are we only seeing this now?","19/Jul/22 1:31 PM;5acffeafaa802f2a797a955c;The X’s are coming from the LSU.  I’m going to have to defer to [~accountid:5bb6808b9ba2930990f81895] and [~accountid:622a930149c900007023d105] for ideas about why this is only popping up now, or if there’s some sort of simulation workaround.  It looks like of the 32 bytes of {{ldf_pipeDataRow_q}}, we never enable half of the bytes.  If we did something like inserting loads to specific cacheline offsets could we force those registers to be enabled at least once?",19/Aug/22 12:25 PM;6258a58313c2c8006a372228;[~accountid:5bb6808b9ba2930990f81895] and [~accountid:622a930149c900007023d105] for ideas about why this is only popping up now.   Can you also help writing up Errata implementation.  I.E. what has to happen for this to occur. ,"20/Aug/22 11:12 AM;5bb6808b9ba2930990f81895;This took so long to pop up because we needed other instructions control selects to randomly find the necessary values to propagate the X.

Yes, the workaround could be something like what Josh describes: inserting {{ld}} instructions to offsets 0x00, 0x08, 0x10, 0x18 from both L1 cache hits and misses.  Cache hits and misses are tricky to deterministically cause, though.  Since this is a simulation-only issue, I’m not suggesting that we craft such a workaround.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Tail agnostic vl=VLMAX for vmsxf / mask logical instructions,,,,,,MAL-2121,119330,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,7/4/2022 4:54,8/29/2022 7:38,9/28/2022 0:51,8/24/2022 23:51,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,"[https://sifive.atlassian.net/browse/VI-7492?focusedCommentId=367505|https://sifive.atlassian.net/browse/VI-7492?focusedCommentId=367505|smart-link]

Force {{vl=VLMAX}} for {{vmsxf / mask logical}} instructions to remove timing-critical {{vl mask}} input from {{VectorMaskCountUnit}}

Mask logical no longer need to read old data and vmsxf only need to read old data when masked.",Brad Wu,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,,,,,,,,,,,62103777eb2978006893b778,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2252,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=4}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":4,""lastUpdated"":""2022-08-24T23:50:28.000-0700"",""stateCount"":4,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":4,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,4,0,,,,100,,,,,,,,,,,,,,,2|hzzz2n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure:  pcmtEntries*_pcHigh are not initialized,Assertion Failure:  pcmtEntries*_pcHigh,,,,,MAL-2120,119323,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Deepika S K,622a9d30c4d0fe0069575ac9,Deepika S K,622a9d30c4d0fe0069575ac9,7/4/2022 3:31,7/22/2022 7:43,9/28/2022 0:51,7/5/2022 17:20,,,,,,,,,,,,,RTL/Frontend,,,,,,,,,0,,,,"*Error message :* 

{noformat}Error: ""/scratch/deepikas/mallard-xprop-114/federation/builds/coreip_p650mc/verilog/design/assertions/SiFive_BranchHistory_assert.sv"", 146: TestDriver.testHarness.system.subsystem.tile_prci_domain_3.tile.core.feu.ifu.branchHist.SiFive_BranchHistory_assert: at time 725282500 ps
Assertion failed: brqRewindPtr_F0 is incorrect
    at BranchHistory.scala:101 assert(!io.flush.valid || (flushRewindPtr_F0 === brqRewindPtr_F0),           ""brqRewindPtr_F0 is incorrect"")

Fatal: ""/scratch/deepikas/mallard-xprop-114/federation/builds/coreip_p650mc/verilog/design/assertions/SiFive_BranchHistory_assert.sv"", 148: TestDriver.testHarness.system.subsystem.tile_prci_domain_3.tile.core.feu.ifu.branchHist.SiFive_BranchHistory_assert: at time 725282500 ps
$finish called from file ""/scratch/deepikas/mallard-xprop-114/federation/builds/coreip_p650mc/verilog/design/assertions/SiFive_BranchHistory_assert.sv"", line 148.{noformat}

The Assertion fail seems to be due to x propogation. From the waves, {{io.flush.valid}}  , {{flushRewindPtr_F0}} and {{brqRewindPtr_F0}} are seen to be transitioning to xx @ {{725282500 ps}} . On tracing the waveforms, the following signals are found to be uninitialized : 

{noformat}TestDriver.testHarness.system.subsystem.tile_prci_domain_3.tile.core.feu.rdu.pcmt.pcmtEntries_7_pcHigh[38:0]
TestDriver.testHarness.system.subsystem.tile_prci_domain_3.tile.core.feu.rdu.pcmt.pcmtEntries_6_pcHigh[38:0]
TestDriver.testHarness.system.subsystem.tile_prci_domain_3.tile.core.feu.rdu.pcmt.pcmtEntries_5_pcHigh[38:0]
TestDriver.testHarness.system.subsystem.tile_prci_domain_3.tile.core.feu.rdu.pcmt.pcmtEntries_4_pcHigh[38:0]
TestDriver.testHarness.system.subsystem.tile_prci_domain_3.tile.core.feu.rdu.pcmt.pcmtEntries_3_pcHigh[38:0]
TestDriver.testHarness.system.subsystem.tile_prci_domain_3.tile.core.feu.rdu.pcmt.pcmtEntries_2_pcHigh[38:0]
TestDriver.testHarness.system.subsystem.tile_prci_domain_3.tile.core.feu.rdu.pcmt.pcmtEntries_6_pcHigh[38:0]{noformat}


*Dump path :* 

{noformat}gamma25 : /scratch/deepikas/mallard-xprop-114/federation/builds/coreip_p650mc/sim/sim/assertion.outline/hart3/hyp_directed/hlvx_lgpf{noformat}


*Simscope link :* [https://simscope.internal.sifive.com/sigs/4655/cl5lraxatd18|https://simscope.internal.sifive.com/sigs/4655/cl5lraxatd18]

*Steps to reproduce :*  

* checkout to cf06289
* build coreip_p650mc
* rerun.outline :
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""hyp_directed/hlvx_lgpf"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+memzero""
  ],
  ""subdir"": ""hart3"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3156792036
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""program"": {
    ""hartid"": 3,
    ""env"": ""abi"",
    ""cppmacros"": [
      ""LOG_LEVEL=LOG_NONE""
    ]
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



*Waveform :* 

!image-20220704-115542.png|width=100%!",Adam George,Deepika S K,Josh Smith,Megan Wachs,Rakesh Palakurthi,,,,,,,,,,,61b2a458657a0500706b9c39,622a9d30c4d0fe0069575ac9,5acffeafaa802f2a797a955c,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,62350e943eacc50071ff0753,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2115,,,,,,,,,,,,,,,,,,04/Jul/22 4:56 AM;ug:0c84c1d9-358d-4f68-993a-932052da7479;image-20220704-115542.png;https://sifive.atlassian.net/secure/attachment/74032/image-20220704-115542.png,,,,,,,,,,,,,,,,cf0628938479358c382168d1368e3e5bf5000c0b,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-05T17:18:56.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,b165f5c2a742d13464ecc37498789342ec389b52,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|hzzz13:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,25:15.5,"04/Jul/22 2:25 PM;61b2a458657a0500706b9c39;[~accountid:622a9d30c4d0fe0069575ac9] , is this commit cf0628938479358c382168d1368e3e5bf5000c0b? Going forward, can you populate the ‘Affects Commit’ field? Thanks.","04/Jul/22 8:12 PM;622a9d30c4d0fe0069575ac9;[~accountid:61b2a458657a0500706b9c39], added the commit hash in the 'Affects Commit' field.","05/Jul/22 8:33 AM;5acffeafaa802f2a797a955c;I just made some timing fixes around the PCMT last week, I might have introduced a bug here.  It looks like we see a JALR instruction before the instruction at the target. The PCMT index that is passed down for the predicted target address appears to be incorrect.  It looks like we allocate entry 1 for the predicted target address, but we tell the JALR that entry 2 was allocated.","05/Jul/22 8:44 AM;61b2a458657a0500706b9c39;Looks like this happens during the following code sequence:

{noformat}  8000096c:	6f4000ef          	jal	ra,80001060 <hlvxwu>
0000000080001060 <hlvxwu>:
  80001060:	68354573          	hlvx.wu	a0,(a0)
  80001064:	8082                	ret
  80001066:	0001                	nop{noformat}

The return at 0x8000_1064 appears to be using PCMT entry 2 which is not allocated. It looks like the return address should be 0x8000_0700 which would use PCMT entry 1.",05/Jul/22 12:01 PM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;[~accountid:5acffeafaa802f2a797a955c] can you please follow up if this was a recently introduced issue.,05/Jul/22 12:25 PM;5acffeafaa802f2a797a955c;[~accountid:557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66] Yes I believe this was a bug introduced by my timing fix a few days ago in this PR: [https://github.com/sifive/federation/pull/24126|https://github.com/sifive/federation/pull/24126|smart-link] ,"05/Jul/22 5:20 PM;5acffeafaa802f2a797a955c;I had to add back in some qualification of the PCMT lookup request valid bit, but I did it so that the {{stall_REN}} signal is not used.  The original timing fix was trying to remove {{stall_REN}} from the logic cone.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: PTW transaction not dropped in LDPipe for s2_kill can return a response to PTW Mem,,,,,,MAL-2119,119301,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Abhishek Anand,622a7ed2f1e55c0070f301a9,Abhishek Anand,622a7ed2f1e55c0070f301a9,7/3/2022 21:17,7/7/2022 11:29,9/28/2022 0:51,7/4/2022 12:53,,,,,,,,,,,,,RTL/LSU,RTL/PTW,,,,,,,,0,,,,"This was discussed over Slack. Adding below slack conversation:

----


[*Abhishek Anand*|https://app.slack.com/team/U036KPCQS90]
Hi John,I am debugging a fail for PTW correctness assertion. In the fail, there are 2 PTW instruction being sent. Fail is due to FV incorrectly detecting response from 1st PTW as the tracked (should be checking the response from 2nd instead).Corresponding to 1st PTW, we have a s2_kill being sent as well  while the instruction is in LSTM stage. This causes it to be killed in LSTM and not proceed to LSTO stage.  However, this PTW instruction was also sent to LDPipe (from LSTR stage). We don't seem to be killing PTW instruction in LDPipe and allowing it to send back response to PTW Mem interface through LDWB stage. Is this expected ?

[*John Ingalls*|https://app.slack.com/team/UD9NTT7FU] 
This _would_ be a bug, if we sent {{s2_kill}} for PTW, but we _currently_ do not: [https://github.com/sifive/federation/blob/779bb5a0544d1f2a500979ded94fb01960a53507/mallard/src/main/scala/core/mallard/PTW_Mallard.scala#L475|https://github.com/sifive/federation/blob/779bb5a0544d1f2a500979ded94fb01960a53507/mallard/src/main/scala/core/mallard/PTW_Mallard.scala#L475]

[*John Ingalls*|https://app.slack.com/team/UD9NTT7FU] 
Nevertheless, can you please open a Jira ticket for this as an improvement task for me?  Because:

# This should be easy to fix in the RTL, even easier than adding an interface constraint, and
# In the future, we may want to drive this signal from the PTW, such as with a higher performing MMU which we will be designing starting later this year.",Abhishek Anand,,,,,,,,,,,,,,,622a7ed2f1e55c0070f301a9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-7597,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-05T08:15:20.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24156,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzzyw7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Healdsburg timing: LSU lsto_replayInOrder,,,,,,MAL-2118,119290,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,John Ingalls,5bb6808b9ba2930990f81895,Vaibhav Gupta,623e4830b75ca80070580145,Vaibhav Gupta,623e4830b75ca80070580145,7/2/2022 21:13,9/6/2022 9:13,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,Timing,,,,,,,,0,,,,"LST pipes are increasing from 2 to 4 in healdsburg.  InOrderReplay computation is done sequentially for each LST pipe. So, the logic depth increases by 2X for the  logic from lsto_opWantsButCannotEstablish* to lsto_olderInOrderReplay. 

[https://sifive.atlassian.net/browse/MAL-2046|https://sifive.atlassian.net/browse/MAL-2046|smart-link] helped reduce the gate depth by ~8 gates by getting rid of lsto_selfFlushWait from the equation. 



Current depth in synthesis varies from 41 to 47 depending on the start-endpoints. 

Attached is the elab path for logic study and synth opt path for gate depth study.



Below is the logic diagram in lucid

[https://lucid.app/lucidchart/fc25d326-d58e-4434-a04e-53bacaab4129/edit?beaconFlowId=B318A0C481457A6F&invitationId=inv_1e1d0910-9200-4757-8485-df58faac410b&page=3PYu9wsgLydM#|https://lucid.app/lucidchart/fc25d326-d58e-4434-a04e-53bacaab4129/edit?beaconFlowId=B318A0C481457A6F&invitationId=inv_1e1d0910-9200-4757-8485-df58faac410b&page=3PYu9wsgLydM#]",John Ingalls,Mayank Tutwani,Raghav Chawla,Vaibhav Gupta,,,,,,,,,,,,5bb6808b9ba2930990f81895,623e4216a1d81f0069da0ea2,62986fb4563d380068b272e6,623e4830b75ca80070580145,,,,,,,,,,,,,,,,,,,MAL-2046,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1908,,,,,,,,,,,02/Jul/22 9:14 PM;ug:00594ab1-1adb-4153-9612-017217b13907;InOrderReplay_path.rtf;https://sifive.atlassian.net/secure/attachment/74007/InOrderReplay_path.rtf,02/Jul/22 9:25 PM;ug:00594ab1-1adb-4153-9612-017217b13907;InOrderReplay_synth.rtf;https://sifive.atlassian.net/secure/attachment/74008/InOrderReplay_synth.rtf,,,,,,,,,,,,,,,2c24170c722a1c3dcd71f12e1c91503fb55dc171,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/23936,,,n/a,,,,,,,,,Physical Design,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzytr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
LSU: coreip_u8_maxed_out ASID not enabling bits [15:8],LSU: coreip_u8_maxed_out ASID ,LSU (Load Store Unit),SDPipe,,Refer https://github.com/sifive/arch-specs/blob/master/core/mallard_lsu_mas.adoc#store-data-sd-pipe,MAL-2117,113383,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,4/20/2022 8:24,7/5/2022 8:52,9/28/2022 0:51,7/1/2022 19:46,,,,,,,,,,,,,RTL/LSU,RTL/PTW,,,,,,,,0,,,,"*Error:*

Failure is seen at following accesses:

* hfences access in m mode [https://github.com/sifive/federation/blob/0f6e26d7e36a4428ac0800e166245fca39d342e8/software/tests/hyp_directed/hfence/hfence_tests.c#L101|https://github.com/sifive/federation/blob/0f6e26d7e36a4428ac0800e166245fca39d342e8/software/tests/hyp_directed/hfence/hfence_tests.c#L101]
* hfences access in hs mode [https://github.com/sifive/federation/blob/0f6e26d7e36a4428ac0800e166245fca39d342e8/software/tests/hyp_directed/hfence/hfence_tests.c#L147|https://github.com/sifive/federation/blob/0f6e26d7e36a4428ac0800e166245fca39d342e8/software/tests/hyp_directed/hfence/hfence_tests.c#L147]

*Config:* coreip_u8_maxed_out

*Commit:* f03e751

*Regression:* [master/nightly-mallard-xprop/85|https://simscope.internal.sifive.com/r/fed/master/nightly-mallard-xprop/85]

*Simscope:* [https://simscope.internal.sifive.com/sigs/2116/cjkju8ip9h7v|https://simscope.internal.sifive.com/sigs/2116/cjkju8ip9h7v]

*rerun.outline:*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""hyp_directed/hfence"",
  ""raw_plusargs"": [
    """"
  ],
  ""subdir"": ""hart0"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2252748433
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""cppmacros"": [
      ""LOG_LEVEL=LOG_NONE""
    ]
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",John Ingalls,Max Lin,Saurabh Singh,Srivatsa Yogendra,,,,,,,,,,,,5bb6808b9ba2930990f81895,5e0651c861d95d0d9aa546ac,607e26f781e7b900681be48c,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CIP-2981,,,,,,,VI-7030,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-05T08:16:41.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24121,,,,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|hzz0br:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,19:04.7,"28/Apr/22 6:12 AM;607e26f781e7b900681be48c;Failure in hfences access in m mode:

cond is set to false [here|https://github.com/sifive/federation/blob/0f6e26d7e36a4428ac0800e166245fca39d342e8/software/tests/hyp_directed/hfence/hfence_tests.c#L80]:

{noformat}    hfence_vvma_asid(0);
    cond &= hlvd(vaddr) != val;{noformat}","28/Apr/22 6:14 AM;607e26f781e7b900681be48c;For failure in hfences access in hs mode:

cond is set to false [here|https://github.com/sifive/federation/blob/0f6e26d7e36a4428ac0800e166245fca39d342e8/software/tests/hyp_directed/hfence/hfence_tests.c#L116]:

{noformat}    hpt_switch();
    cond &= hlvd(vaddr) == val;{noformat}",08/May/22 8:28 AM;607e26f781e7b900681be48c;[~accountid:5a938e9c0913194d2d262658] Can you take a look into this.,"12/May/22 10:19 AM;5a938e9c0913194d2d262658;these tests are better known to [~accountid:5e0651c861d95d0d9aa546ac] , changing to him.","23/May/22 3:27 AM;5e0651c861d95d0d9aa546ac;I think the test case is good. 
I have to trace the Waveform, 
[~accountid:5a938e9c0913194d2d262658] If I has any issue in hfence in u8, how can I get the help?
","24/May/22 8:01 AM;5a938e9c0913194d2d262658;What issues are you seeing? You can talk to the designers, but its better for us to look, what might be happening, before taking a look. 

You should be able to find a PTW module under core, which you can look through to see, if the issue is there. 

Are you not able to execute a hfence inst, or is it not invalidating the TLB?","30/Jun/22 8:18 AM;5bb6808b9ba2930990f81895;I don’t see any activity in the last month on this ticket.  I am keenly interested in potential bugs in this area.  Can we please continue looking at this?  If you want me to look, then send the ticket my way.","30/Jun/22 8:08 PM;5e0651c861d95d0d9aa546ac;Hi [~accountid:5bb6808b9ba2930990f81895], sorry for reply this ticket. I want to check the {{hfence_vvma_asid(0);}} and the {{asid}} part 

I think the test case for now are setting Zero for the asid but not sure why the fence did not clean the cache
the workspace {{gamma26}} in {{/scratch/verif/maxl/fed6/builds/coreip_u8_maxed_out/sim/0629_1/r6936.outline/hart0/hyp_directed/hfence}} with the waves.fsdb","01/Jul/22 7:30 PM;5bb6808b9ba2930990f81895;This is a RTL bug, but it only affects the {{coreip_u8_maxed_out}} config with asIdBits=16.  This does *not* affect any other Mallard configs, including {{coreip_p550}}, nor does it affect any Bullet configs, including {{coreip_u7_maxed_out}}.

The bug is that ASID/VMID bits *_at bit_* *8* *_and above_* were clock gated, and the erroneous stale value was sent to the PTW for SFENCE/HFENCE.

The work-around would have been to set {{LSUChickenCSR.forceSFenceAllAsid}}, if this had actually affected any product configs, but again, this bug does not.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
ROB completion counter optimizations,,,,,,MAL-2116,119281,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,François Donati,624f6b22f813eb00692ee29a,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,7/1/2022 17:50,9/7/2022 12:02,9/28/2022 0:51,,,,,,,,,,,,,,Power,RTL/RDU,Timing,,,,,,,0,,,,"The ROB has a bunch of completion interfaces, and logic for every ROB entry to increment and decrement the completion counters.  In P650 for example, there are about 13 completion interfaces from various execution units (7 from non-LSU, and 6 from LSU).  The decrement logic for each entry does a {{PopCount}} of a 13-bit vector.

This can be optimized in two ways:

# Using the {{Compressor}} function which is optimized for calculating a population count.
# OR’ing the 6 LSU completion signals together instead of summing them.  Currently, load/store instructions will not merge into the same ROB group.  So we should only ever see one completion from the LSU for a given ROB entry.",John Ingalls,Josh Smith,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{branch={count=1, dataType=branch}, json={""cachedValue"":{""errors"":[],""summary"":{""branch"":{""overall"":{""count"":1,""lastUpdated"":null,""dataType"":""branch""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|hzzyrr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
Timing: Move stall_REN qualification later in BRQ and PCMT logic,,,,,,MAL-2115,119277,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,7/1/2022 15:49,9/3/2022 7:41,9/28/2022 0:51,7/2/2022 11:12,,,,,,,,,,,,,Implementation,RTL/RDU,Timing,,,,,,,0,,,,Currently there are some timing paths into the BRQ and PCMT allocation logic which are showing up because of qualification with {{stall_REN}}.  We can move {{stall_REN}} later into the logic cone to help with timing.,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Josh Smith,Knute Lingaard,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,5e1374fb7a22c90da0c60495,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2120,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Mid Core,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-02T11:14:40.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1f70db945b01bccc889ba76a0b73dbd3a8c98307,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzzyqv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,06:24.2,"02/Jul/22 11:12 AM;5acffeafaa802f2a797a955c;Marking as possible impact to performance because this adds a cycle to the latency of a PCMT entry deallocating to it being seen in the count of entries available.  So if the PCMT is completely full or near full, we may stall REN for one extra cycle after an entry deallocates.  I expect this to have almost 0 performance impact though.","13/Jul/22 7:06 AM;5e1374fb7a22c90da0c60495;Looking at P650 Panda latest results (dabble 0a4aa3dc), we have a *very small* handful of PCMT full stalls, the worst being 8% of total cycles for {{wkld.0062578.specint2006.perl-splitmail}}.  If we want to mitigate the perf loss on the late reclaim, then I’d suggest we increase the PCMT table size (currently 8).  I’ll add that to the list of possible enhancements for healdsburg.","13/Jul/22 7:07 AM;5e1374fb7a22c90da0c60495;I think we won’t model this for now, unless correlation sees an issue with it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Vector stores need to wake up VEX clock before sending VRF read requests,,,,,,MAL-2114,119242,,Task,Reopened,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,7/1/2022 7:53,7/21/2022 16:03,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"Some of the {{vseN.v}} tests are failing with this assertion:

{noformat}at VEX.scala:334 assert(!prfReadReq.map(_.valid).reduce(_ || _)  || vexClockEnable_q)   // Make sure clock on for read requests{noformat}

The current VEX clock wakeup signal from the Baler only looks at the LTB’s wakeup signal.

Using {{issReq_ISS.valid}} is too late b/c that’s the same timing as the read request for stores. A short-term fix can look at the {{balerIssQ}} empty (and about-to-be not empty, i.e. dispReq valid). A longer-term fix, if we move to having separate issue queues for VRF reads vs. VRF writes, would look only at the reading issue queue.",David Kravitz,John Ingalls,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2065,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-01T10:32:39.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2065,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24093,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzzyjb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Jul/22 1:07 PM;5fd15143b4a74900763834e0;The short-term fix was merged with [https://github.com/sifive/federation/commit/f528c16ae21aee2dcab382276d45bc11914890ce|https://github.com/sifive/federation/commit/f528c16ae21aee2dcab382276d45bc11914890ce|smart-link] 

Leaving this open to see if we can have a better fix if the Baler issue queue is split up.",21/Jul/22 4:02 PM;5fd15143b4a74900763834e0;Done,21/Jul/22 4:02 PM;5fd15143b4a74900763834e0;Done,21/Jul/22 4:03 PM;5fd15143b4a74900763834e0;Reopening b/c I forgot we're looking for a better solution than the one implemented,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
P550 MC4: mods_2/abc_mshrs_1/w_rprobeacklast_reg loads spanning design,,,,,,MAL-2113,119193,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Richard Van,61fd7408f51e8500708a377d,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,6/30/2022 18:16,9/7/2022 12:12,9/28/2022 0:51,,,,,,,,,,,,,,RTL/Tile,Timing,,,,,,,,0,,,,"Similar info as [https://sifive.atlassian.net/browse/MAL-2112|https://sifive.atlassian.net/browse/MAL-2112|smart-link]

Highlighted path is:
from: tlMasterClockXing_sink/bundle_out_0_a_sink/deq_gated_q/elts_0_address_reg
to: ccacheGatedClockDomainWrapper/ccache/mods_2/abc_mshrs_1/w_rprobeacklast_reg

Red highlighted is endpoint fanout loads from mods_2/abc_mshrs_1/w_rprobeacklast_reg

!image-20220701-011518.png|width=724,height=613!

Timing path info: /project/tsmc/cln7ff/P5_ppa_runs/michaelw/P550/timing_reports/MAL-2113",Cody Croxton,John Ingalls,Josh Smith,Michael White,Richard Van,Susheel Sharma,,,,,,,,,,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,61fd7408f51e8500708a377d,6064f88fb30f0d00703824c8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2112,MAL-1939,,,,,,,,,,30/Jun/22 6:16 PM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220701-011518.png;https://sifive.atlassian.net/secure/attachment/73910/image-20220701-011518.png,15/Aug/22 3:44 PM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220815-224353.png;https://sifive.atlassian.net/secure/attachment/75906/image-20220815-224353.png,,,,,,,,,,,,,,,7298b78ef05eb83b717a835a01b558c47c2af440,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|hzzy8n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,37:56.9,15/Aug/22 3:37 PM;61fd7408f51e8500708a377d;[~accountid:60f1ea6c6491110069392f8f] Was the problem resolved? Do you still need anything from RTL?,"15/Aug/22 3:44 PM;60f1ea6c6491110069392f8f;I reshaped the floorplan to shrink the Tile to L3 distance but all runs for at least a month have been broken due to changes in Hammer flow scripts.  In recent runs with broken, but not horrendous, Tile timing might be getting impacted by routing congestion from the cells shifting too far into L3 area.  The new Tile shape is ~150um thinner, and ~200 um taller, which should reduce paths to/from L3 about 200 um.  I assume we will still have a timing issue but it might be close….
Current shape I am trying:

!image-20220815-224353.png|width=524,height=517!",16/Aug/22 7:24 AM;60f1ea6c6491110069392f8f;Is it possible to add a cycle on the L3 return signals only?,16/Aug/22 9:22 PM;61fd7408f51e8500708a377d;No. We cannot add 1 cycle.,17/Aug/22 8:21 AM;5e1371930242870e996efde2;[~accountid:60f1ea6c6491110069392f8f] So have you been able to generate any date for this or is the Hammer stuff got you completely stuck?,17/Aug/22 11:19 AM;60f1ea6c6491110069392f8f;I’m not having much luck trying to separate HAMMER changes from floorplan changes.  Shrinking the Tile width is somehow influencing tool to pull gates back over L3 and causing a lot of jumping between memory channels.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
P550 MC4: sourceD/s4_req_param_reg[2] loads spanning design,,,,,,MAL-2112,119189,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Richard Van,61fd7408f51e8500708a377d,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,6/30/2022 15:43,9/7/2022 12:12,9/28/2022 0:51,,,,,,,,,,,,,,RTL/Tile,Timing,,,,,,,,0,,,,"For the following statepoint:

subsystem_l3_wrapper/ccacheGatedClockDomainWrapper/ccache/mods_2/sourceD/s4_req_param_reg\[2]

Do we want all of these loads?  Should this be split to allow the statepoints to move closer to the L3 arrays?  Timing is from route_design so still possible to improve but the outputs are broken in many directions.  Should the flop be replicated??

White cross is statepoint location.  Red highlighted cells are endpoint fanout loads.

!image-20220630-223901.png|width=727,height=614!

Timing info: /project/tsmc/cln7ff/P5_ppa_runs/michaelw/P550/timing_reports/MAL-2112",Cody Croxton,John Ingalls,Josh Smith,Michael White,Richard Van,Susheel Sharma,,,,,,,,,,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,61fd7408f51e8500708a377d,6064f88fb30f0d00703824c8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1939,,,,MAL-2113,,,,,,,30/Jun/22 3:43 PM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220630-223901.png;https://sifive.atlassian.net/secure/attachment/73902/image-20220630-223901.png,,,,,,,,,,,,,,,,7298b78ef05eb83b717a835a01b558c47c2af440,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,0,,,,,,,,,,,,,,,,,,,2|hzzy7r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,54:51.8,"30/Jun/22 3:54 PM;5acffeafaa802f2a797a955c;I have no idea what’s going on here, I’m going to reassign to [~accountid:61fd7408f51e8500708a377d] for now.",05/Jul/22 11:10 AM;61fd7408f51e8500708a377d;I discussed with Michael. One thing Michael can try is to move 2 columns of L2 SRAMS to the left and move the pins to the right. It might save us some distance. The second part is tough since it’s pure RC delay to the top right SRAMs. ,15/Aug/22 3:37 PM;61fd7408f51e8500708a377d;[~accountid:60f1ea6c6491110069392f8f] Was the problem resolved? Do you still need anything from RTL?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] LSU power: VEX result tag broadcast buses toggling for non-Vector-Loads,,,,,,MAL-2111,119147,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Sanjay Gandham,6275860c66ad530069d5d1d8,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,6/30/2022 9:35,7/19/2022 8:22,9/28/2022 0:51,7/7/2022 11:05,,,,,,,,,,,,,Power,RTL/LSU,,,,,,,,0,,,,"[https://sifive.atlassian.net/browse/MAL-1981|https://sifive.atlassian.net/browse/MAL-1981|smart-link] showed the benefit of stopping the FEX load result tags from toggling.

We should be able to get a similar benefit from doing the same for VEX.

Two changes in LDPipe.scala building on [https://github.com/sifive/federation/pull/23676|https://github.com/sifive/federation/pull/23676|smart-link]:

# Create {{val ldr_vexTag_q = RegEnable(io.ldArb_reqWinner.bits.metaInfo.robNdx.bits, ldArb_mightValid && io.ldArb_reqWinner.bits.metaInfo.prnVexValid)}}
# Use this in the LDR stage:

{noformat}- ldr_vexTag.bits.robID    := Fill(mp.gidBits, ldr_metaInfo_q.robNdx.valid) & ldr_metaInfo_q.robNdx.bits
+ ldr_vexTag.bits.robID    := ldr_vexTag_q{noformat}

and similar for the LDF and LDWB stages.",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,MAL-1981,,,,MAL-2195,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1985,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-06T15:25:10.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24248,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzzxyn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650 LSU Timing: stqE_retireFsmState_q_reg through stqRetArb,,,,,,MAL-2110,119143,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Tom Mickelson,5e137757f65a6b0e9bf1636f,Tom Mickelson,5e137757f65a6b0e9bf1636f,6/30/2022 9:19,9/6/2022 9:13,9/28/2022 0:51,7/13/2022 8:43,,,,,,,,,,,,,RTL/LSU,Timing,,,,,,,,0,,,,"Top path in latest master rtl run (6/27) prects results show this as the top path:

Path 1: VIOLATED (-0.067 ns) Setup Check with Pin tile/core/lsu/StQ/stqEntries_22/stqE_retireFsmState_q_reg\[0]/CP->D
Retime Analysis:  Data Path-Slew SOCV
View: func_0p675v_0c_cworst_CCworst
Group: reg2reg
Startpoint: (R) tile/core/lsu/StQ/stqEntries_5/stqE_retireFsmState_q_reg\[0]/CP
Clock: (R) core_clk
Endpoint: (F) tile/core/lsu/StQ/stqEntries_22/stqE_retireFsmState_q_reg\[0]/D
Clock: (R) core_clk


This is a 33 gate path, and has ~500um of net delay of ~90ps.

Attaching the timing report and pics.

Color code:

Blue: stqEntries_(0:31)
Red dots:  StQ/stqEntries_*/stqE_retireFsmState_q_reg\[*]
Green: stqAgeMatrix 

Yellow/Gold: LSTPipes_0,1",Brian Grayson,Cody Croxton,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Josh Smith,Michael White,Tom Mickelson,,,,,,,5e1371705361330daaeaf389,5e1371930242870e996efde2,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,MAL-2081,,,,MAL-2405,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1904,,,,,,,,,,,,,,,,,,30/Jun/22 9:14 AM;e6f627bd-82df-43d2-a775-e108801e4606;LSU.txt;https://sifive.atlassian.net/secure/attachment/73887/LSU.txt,30/Jun/22 9:06 AM;e6f627bd-82df-43d2-a775-e108801e4606;LSU_1.jpg;https://sifive.atlassian.net/secure/attachment/73885/LSU_1.jpg,30/Jun/22 9:06 AM;e6f627bd-82df-43d2-a775-e108801e4606;LSU_2.jpg;https://sifive.atlassian.net/secure/attachment/73886/LSU_2.jpg,,,,,,,,,,,,,,c936cc95c46a0d708f64684e988bccec1439b030,,,Load/Store,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-07-13T08:42:45.000-0700"",""stateCount"":3,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ac9a3f2704bb2efe9355d28c0f58353de02768ba,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,3,0,,,,100,,,,,,,,,,,,,,,2|hzzxxr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,07:34.3,01/Jul/22 11:07 AM;5acffeafaa802f2a797a955c;[~accountid:5bb6808b9ba2930990f81895] Could you add some detail about what the logic is actually trying to do in this path?,01/Jul/22 11:09 AM;5bb6808b9ba2930990f81895;The logic from [https://sifive.atlassian.net/browse/MAL-1432|https://sifive.atlassian.net/browse/MAL-1432|smart-link] is trying to find the oldest two StoreQ entries to retire _but only if they are in the same L1dcData row_.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[FPU] add hammer flow support for individual FPU units,,,,,,MAL-2109,119127,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,6/30/2022 4:14,7/20/2022 10:49,9/28/2022 0:51,7/20/2022 10:37,,,,,,,,,,,,,Implementation,,,,,,,,,0,,,,,Erdinc Ozturk,,,,,,,,,,,,,,,61ccb01d90cfd20071b96af2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-01T15:42:29.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzzxu7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[TGV] [RVV 16.6] optimize vmv[1, 2, 4, 8]r.v to share datapath with vmv.v.v",,,,,,MAL-2108,119096,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,6/29/2022 19:04,9/27/2022 10:31,9/28/2022 0:51,9/22/2022 23:45,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,"{{vmv[1, 2, 4, 8]r.v}} is using {{vs2}} , which {{vmv.v.v}} is using {{vs1}}, we can try to optimize it in VectorSequencer to fire uops as {{vmv.v.v}} to reduce the mux selection in VexPipe.",Kira Tsao,Nicolas Brunie,,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1792,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-22T17:31:46.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,0,1,,,,100,,,,,,,,,,,,,,,2|hzzxnb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Fix the padding in RDU for srctag for dispatch ,,,,,,MAL-2107,119077,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,6/29/2022 16:33,7/1/2022 12:50,9/28/2022 0:51,7/1/2022 12:50,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,,,,"The below code in RDU results in failure

{{d.bits.srcTag(1).prIdx := instGid_DIS(i).padTo(mp.actualPrIdxBits)}}

Need to change it to match LHS",David Kravitz,Warren Menezes,,,,,,,,,,,,,,5fd15143b4a74900763834e0,600773dcee80bd006f750bba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-30T12:59:39.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzzxjr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[ALU] Investigate power impact of the 2-cycle scalar (integer, 64-bit signed) multiplier",,,,,,MAL-2106,119068,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Won't Do,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,6/29/2022 13:43,7/20/2022 10:41,9/28/2022 0:51,7/20/2022 10:41,,,,,,,,,,,,,Power,RTL/IEX,,,,,,,,0,,,,"I would like to run PowerArtist and investigate the impact of this PR:

[https://github.com/sifive/federation/pull/20828|https://github.com/sifive/federation/pull/20828|smart-link] ",Erdinc Ozturk,Josh Smith,Mehul Thakkar,,,,,,,,,,,,,61ccb01d90cfd20071b96af2,5acffeafaa802f2a797a955c,622a8208db58c100687dd15a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1643,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzxhr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LSU FV: TGV addition on sdrr_lgSize propogated into p550,[TGV] LSU FV: TGV addition,LSU (Load Store Unit),,,,MAL-2105,119059,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Alvin Tung,60f1ecfcf664300069fbfb00,Alvin Tung,60f1ecfcf664300069fbfb00,Alvin Tung,60f1ecfcf664300069fbfb00,6/29/2022 12:42,9/7/2022 17:43,9/28/2022 0:51,6/30/2022 13:02,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,TGV,,,"Some of the Baler [updates|https://github.com/sifive/federation/pull/23827] propagated into p550 for the LSU formal test. Abhishek identified these [lines|https://github.com/sifive/federation/blame/master/mallard/src/main/scala/core/mallard/SDPipe.scala#L159-L161] which might need to be protected with {{if (isa.v)}} ?
Something along the lines of?

{noformat}val sdrr_baler  = if (isa.v) sdrr_payload_q.cmn.ctrl.v && sdrr_payload_q.cmn.ctrl.dispBal else false.B
val sdrr_lgSize = if (isa.v) Mux(sdrr_baler, mp.tgvParams.dBytes.log2.U, sdrr_payload_q.cmn.ctrl.mem_sz) else sdrr_payload_q.cmn.ctrl.mem_sz{noformat}",Abhishek Anand,Alvin Tung,John Ingalls,Yohann Rabefarihy,,,,,,,,,,,,622a7ed2f1e55c0070f301a9,60f1ecfcf664300069fbfb00,5bb6808b9ba2930990f81895,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2063,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-30T12:51:21.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Formal,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|hzzxfz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] differentiate frequency targets for fast/slow corner,,,,,,MAL-2104,119049,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,6/29/2022 9:48,7/26/2022 9:35,9/28/2022 0:51,7/20/2022 13:59,,,,,,,,,,,,,TGV_RTL/Top,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-07-07T15:29:35.000-0700"",""stateCount"":3,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/6e45e273407d63507309581f15d1cf639fe79cf6,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,3,0,,,,100,,,,,,,,,,,,,,,2|hzzxdz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Reduce code duplication of payloads / requests in interfaces between modules,,,,,,MAL-2103,118971,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,6/28/2022 13:27,6/29/2022 8:06,9/28/2022 0:51,,,,,,,,,,,,,,RTL/RDU,TGV_RTL/RDU,TGV_RTL/SEQ,,,,,,,0,,,,"Improve pattern used to construct different instances of the same hardware type/interface with slightly different parameters. We’ve started to introduce unique generators, see two different use cases in RDU ([link|https://github.dev/sifive/federation/blob/3e8e1337688a1655b7e9394b34f63d1baccdd373/mallard/src/main/scala/core/mallard/RDU.scala#L90-L102]). But this tends to be replicated across multiple files / modules to define the same interface. Maybe we can lift this code into mallard params or expose as more specific classes that take {{mp}} as the only argument.

This was spurred by additional parameterization required by TGV, but is really not TGV specific.",Andrew Hanselman,Nicolas Brunie,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-28T13:37:05.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzwxj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Accumulator File / PRA Refactor,,,,,,MAL-2102,118969,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,6/28/2022 13:11,9/7/2022 10:16,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/MU,TGV_RTL/RDU,TGV_RTL/VEX,,,,,,,0,,,,"Some refactor work that can be done for accumulator logic

* Vector accumulator logic was stuck into VEX.scala, and contributes to a large portion of the file. It would be better to have this moved to its own file.
* Move PRA logic out of each accumulator object, rework to match existing PRA style
* Address other FIXMEs related to accumulator
* move accumulator PRA out of VEX and into VRDU [https://github.com/sifive/federation/pull/25270#discussion_r943882182|https://github.com/sifive/federation/pull/25270#discussion_r943882182]",Andrew Hanselman,Nicolas Brunie,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-28T13:37:05.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzwx3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jul/22 3:56 PM;609d7e1f5998a6006800dcc5;Specific FIXME(s):

* [https://github.com/sifive/federation/blob/785505c90e8fef3c2a839c821f820adb4e302691/block-tgv-sifive/src/main/scala/core/tgv/VexPipe.scala#L179|https://github.com/sifive/federation/blob/785505c90e8fef3c2a839c821f820adb4e302691/block-tgv-sifive/src/main/scala/core/tgv/VexPipe.scala#L179]",07/Sep/22 10:16 AM;609d7e1f5998a6006800dcc5;Address workaround introduced in the fix for [https://sifive.atlassian.net/browse/MAL-2556|https://sifive.atlassian.net/browse/MAL-2556|smart-link] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Clean up Baler & LSU per SiFive Chisel Coding Guidelines,,,,,,MAL-2101,118965,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/28/2022 11:52,6/28/2022 11:52,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,TGV_RTL/RDU,,,,,,,0,,,,"While working on the Baler, [~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] noticed instances of Chisel that did not follow [SiFive’s guidelines|https://sifive.atlassian.net/wiki/spaces/ENG/pages/24346627/SiFive+Chisel+Coding+Guidelines]. Clean that up along with harmonizing pipeline stage naming schemes.

Some of the Baler cleanup could potentially reach back into VRDU, particularly dispatch.",Alexandre Solomatnikov,David Kravitz,John Ingalls,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzww7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] expose head of perm eng occupancy shift-reg to IssQ to anticipate WB conflict,,,,,,MAL-2100,118945,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Lowest,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,6/28/2022 9:24,7/14/2022 18:45,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"[~accountid:5fa30e7662584c006b182b35]  suggested the permutation engine could expose a schedule occupancy shift-registers to the vex IssQ so it can anticipate possible tag broadcast / WB conflict between perm eng nano-ops and uops in the queue and avoid delaying nano-ops WB.

[~accountid:609d7e1f5998a6006800dcc5] suggested we limit this exposure to the max static latency of a vector operations.",Andrew Hanselman,Brad Burgess,Nicolas Brunie,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,5fa30e7662584c006b182b35,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzwsf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,38:56.4,"28/Jun/22 12:38 PM;5fa30e7662584c006b182b35;In the past we had such problems with dividers where there was variable latency.  We would have the divider “ring the doorbell” and the scheduler would not schedule for a cycle to create a writeback slot for the divider.  There was a latency of 3-4 cycles from when the doorbell was signaled to when the writeback slot was available.  What I was wondering is once the index register is parced (or perhaps this is a process…), can we figure out a few cycles ahead of time when we will need a writeback and ring a doorbell (perhaps ringing it multiple times…).  or perhaps ring a doorbell and have some result buffering to cover the latency of when the writeback will be available… I've seen scenarios where if one simply waits for a slot to arbitrarily become available, one can wait a very long time…  ","28/Jun/22 3:57 PM;6065017e90e3950069cf01c5;Hi [~accountid:5fa30e7662584c006b182b35] , the are multiple things

* currently on Mallard’s scalar side the divider does not ring a doorbell, it stalls tag broadcast if a conflict occurs, and stall as long as a slot is not available (divider as lower priority compared to other units) => there is a backlog task to model and evaluate this effect [https://sifive.atlassian.net/browse/SPARTA-1695|https://sifive.atlassian.net/browse/SPARTA-1695|smart-link] )
* we could know some time in advance a broadcast is coming, but because of the LongLatencyPipeline actual latency (between 5 and 8  ), we may need to need it quite in advance if we want the issue queue to still be able to delay issuing of the longest operations which may conflict with a permute broadcast / WB. One solution could be to be less agressive and limit the conflict checking to the smaller latency uops.","28/Jun/22 4:07 PM;5fa30e7662584c006b182b35;I have seen scenarios (related more to schedulers handling different latency instructions that were a modulo of each other), where the ROB had to completely fill up to break us out of the deadlock… Longer term I would suggest we need something that guarantees a maximum latency to get a writeback slot.","28/Jun/22 4:36 PM;6065017e90e3950069cf01c5;Interesting,

I think that for now large non-static latency are not guaranteed such slot (in the case where they conflict against large static latency uops whose tag broadcast pipeline is delayed wrt the standard ISS / RR / EX / WB stages).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Make mask-to-scalar interface to V2S look like other V2S moves,,,,,,MAL-2099,118937,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/28/2022 7:32,6/30/2022 23:26,9/28/2022 0:51,6/30/2022 23:26,,,,,,,,,,,,,TGV_RTL/MU,TGV_RTL/X2Y,,,,,,,,0,,,,"All the S2V “writes” and V2S “writes” for {{vmv}} instructions use the {{OperandTransfer}} class, which includes the issue request information (at ISS stage) and data (at RR stage). Mask-to-scalar operations are currently using {{PRFWriteReq}}.

To simplify the V2S write logic, pipeTag generation, and {{v2sPraSetReq}} logic, the mask-to-scalar interface should also use {{OperandTransfer}}, with all the signals transposed to the timing of the {{vpopc.m}} and {{vfirst.m}} instruction results.

This was discovered while working on [https://sifive.atlassian.net/browse/MAL-2074|https://sifive.atlassian.net/browse/MAL-2074|smart-link] and will make it cleaner to do [https://sifive.atlassian.net/browse/MAL-2096|https://sifive.atlassian.net/browse/MAL-2096|smart-link] in X2Y.",Brad Wu,David Kravitz,,,,,,,,,,,,,,62103777eb2978006893b778,5fd15143b4a74900763834e0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2074,MAL-2096,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-30T19:30:43.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzzwqn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
HWPF timing: bit pattern leading edge,,,,,,MAL-2098,118899,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,6/27/2022 19:51,9/3/2022 7:41,9/28/2022 0:51,7/7/2022 11:52,,,,,,,,,,,,,Implementation,RTL/HWPF,Timing,,,,,,,0,,,,"Attached timing path from {{pm_currLESubZoneIdx_q}} through {{pm_patternVec}} to {{pm_pattern_q.bits}}.


* branch: MAL-2081_stqAgedSelect (now gone)
* commit SHA: 878a46fce043ab1cce558eb2ecccfb02bef02dab
* config: coreip_p650_7nm_H240_tile



# In {{pm_indexSelected}} we can replace {{OHToUInt(PriorityEncoderOH(}} with {{PriorityEncoder(}}.
# I see a subtract in {{pm_patternBitsSelected_in}}.  Can we restructure this logic without it?",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1520,,,,,,,,,,,,,,,,,,27/Jun/22 7:44 PM;John.Ingalls;report.txt;https://sifive.atlassian.net/secure/attachment/73761/report.txt,,,,,,,,,,,,,,,,878a46fce043ab1cce558eb2ecccfb02bef02dab,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-07T11:49:47.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzzwiv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] modify VectorSequencer and VexPipe to support vfwredusum.vs,,,,,,MAL-2097,118896,111463,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,6/27/2022 19:32,7/21/2022 19:05,9/28/2022 0:51,7/7/2022 20:16,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1767,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-07-07T23:11:03.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/4c97fece24f1e4850ddc2ebeb9add0a41760ce92,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,,,,,,,,,,,,,2|hzzwi7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,111463,[TGV][RVV 14.4] Vector Widening Floating-Point Reduction,Done
Refactor creation of pipeTag values,,,,,,MAL-2096,118851,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/27/2022 13:15,7/26/2022 14:54,9/28/2022 0:51,,,,,,,,,,,,,,RTL/FEX,RTL/IEX,RTL/LSU,TGV_RTL/BAL,TGV_RTL/VEX,TGV_RTL/X2Y,,,,0,,,,"The creation of {{Valid(new ExPipeTag(mp)}} values throughout Mallard scalar and TGV code has a lot of common boilerplate. As part of [https://sifive.atlassian.net/browse/MAL-2074|https://sifive.atlassian.net/browse/MAL-2074|smart-link], [~accountid:6065017e90e3950069cf01c5] prompted me to start thinking about ways to reduce code copy/paste both for creating of the ISS-stage {{ExPipeTag}} and the copying of it into later pipeline stages. Unclear exactly how far we’ll go with refactoring at this time, i.e., whether LSU and Baler are included (haven’t looked there yet).",David Kravitz,John Ingalls,Nicolas Brunie,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,MAL-1997,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2074,,,,MAL-2099,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzwav:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,11/Jul/22 6:09 AM;5fd15143b4a74900763834e0;Decided this should wait until we resolve the scalar/vector exPipeTag and StageExPipeTag stuff in MAL-1997,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
LSU power: LSTPipe PCHash toggling for non-Loads,,,,,,MAL-2095,118850,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Swarnashri Chandrashekar,6287f376f0302e0068bff30c,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,6/27/2022 13:12,7/29/2022 9:05,9/28/2022 0:51,7/19/2022 10:07,,,,,,,,,,,,,Power,RTL/LSU,,,,,,,,0,,,,"[https://sifive.atlassian.net/browse/MAL-1522|https://sifive.atlassian.net/browse/MAL-1522|smart-link] [https://github.com/sifive/federation/pull/23792|https://github.com/sifive/federation/pull/23792|smart-link] added {{pcHash}} in the LsDispBuf, LsIssQ, and LSTPipe for training.  This field is 16 bits in size, and thus is big enough to have its own {{RegEnable}}, enabled by {{stage_valid_q && stage_memRead_q}}.",John Ingalls,Mehul Thakkar,Swarnashri Chandrashekar,Warren Menezes,,,,,,,,,,,,5bb6808b9ba2930990f81895,622a8208db58c100687dd15a,6287f376f0302e0068bff30c,600773dcee80bd006f750bba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1522,,,,,,,MAL-1986,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-19T10:10:05.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24570,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzzwan:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,3,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,56:21.8,"18/Jul/22 9:56 AM;6287f376f0302e0068bff30c;Clock-gated {{pcHash}} with {{memRead_q}} signals in addition to the {{valid_q}} signals and observed the following power savings.

PA tool results for config P650:
Before:

{noformat}Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core
Power Unit: mW
      Category       Internal    Switching      Leakage        Total
    ----------------------------------------------------------------
      register         29.484        2.355        4.228       36.067
         latch          0.000        0.000        0.000        0.000
         logic         29.759       44.104        5.162       79.025 (+ibp)
          bbox          0.000        0.000        0.000        0.000
        memory         37.419        0.069        4.117       41.605
           pad          0.000        0.000        0.000        0.000
         clock          4.537       15.443        0.164       20.144
    ----------------------------------------------------------------
      Subtotal        101.199       61.971       13.671      176.841
    Percentage         57.23%       35.04%        7.73%      100.00%
       (*) ibp          6.294       26.896        0.269       33.459 (Inferred Buffer Power)
After:{noformat}

After:

{noformat}Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core 
Power Unit: mW
      Category       Internal    Switching      Leakage        Total
    ----------------------------------------------------------------
      register         29.489        2.356        4.226       36.071
         latch          0.000        0.000        0.000        0.000
         logic         29.754       44.074        5.149       78.977 (+ibp)
          bbox          0.000        0.000        0.000        0.000
        memory         37.419        0.069        4.117       41.605
           pad          0.000        0.000        0.000        0.000
         clock          4.532       15.447        0.165       20.144
    ----------------------------------------------------------------
      Subtotal        101.194       61.946       13.657      176.797
    Percentage         57.24%       35.04%        7.72%      100.00%
       (*) ibp          6.291       26.889        0.269       33.449 (Inferred Buffer Power){noformat}

Power Savings in Mallard Core = 176.841 - 176.797 = 0.044 mW",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] path through flush and permutation engine,,,,,,MAL-2094,118830,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,6/27/2022 9:14,7/28/2022 8:50,9/28/2022 0:51,6/29/2022 12:11,,,,,,,,,,,,,Implementation,TGV_RTL/VEX,,,,,,,,0,,,,"Target: 390ps



{noformat}------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------                                                                                                                                         
group      #minI  #maxI   path_start                                                     path_end                                                   num     min     max   level fanout drive  min;max ulvt %                                                                                                                                         
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------                                                                                                                                         
clock      #2     #2      vex/vexFlushReq_robFlushValid_E*_reg/CP                        vex/issueQueues_*/entries_*/ready_reg*                       1    -0.120  -0.120 59-59   3.58  5.51   98.3;98.3   {noformat}



{noformat}#----------------------------------------------------------------------------------------------------------------------------------------------------
  vex/vexFlushReq_robFlushValid_E2_reg/CP               -       -      R     (arrival)                         610    -     0     0       0    (-,-) 
  vex/vexFlushReq_robFlushValid_E2_reg/Q                -       CP->Q  R     DFQD4BWP240H8P57PDULVT              4  5.2     9    26      26    (-,-) 
  vex/fopt18/ZN                                         -       I->ZN  F     DCCKND8BWP240H8P57PDULVT            6  9.7     8     8      34    (-,-) 
  vex/fopt17/ZN                                         -       I->ZN  R     DCCKND6BWP240H8P57PDULVT            6  6.4     6     6      40    (-,-) 
  vex/fopt3652/ZN                                       -       I->ZN  F     INVD3BWP240H8P57PDULVT              1  2.7     6     6      46    (-,-) 
  vex/g1761/ZN                                          -       A1->ZN R     OAI21D8BWP240H8P57PDULVT            7  5.6    12     9      55    (-,-) 
  vex/exPipes_1/vperm_permEngMod/g708/Z                 -       A1->Z  R     AN2D2BWP240H8P57PDULVT              1  1.6     7    14      69    (-,-) 
  vex/exPipes_1/vperm_permEngMod/g51068/ZN              -       B1->ZN F     IOA22D4BWP240H8P57PDULVT            1  1.6     8     7      76    (-,-) 
  vex/exPipes_1/vperm_permEngMod/g51429/ZN              -       B->ZN  R     OAI21D4BWP240H8P57PDULVT            1  2.1     9     6      82    (-,-) 
  vex/exPipes_1/vperm_permEngMod/g51366/ZN              -       A1->ZN F     ND2D6BWP240H8P57PDULVT              2  3.0     7     7      89    (-,-) 
  vex/exPipes_1/vperm_permEngMod/g51047/ZN              -       A2->ZN R     ND2D6BWP240H8P57PDULVT              3  4.2     6     6      95    (-,-) 
  vex/exPipes_1/vperm_permEngMod/g2115/ZN               -       A1->ZN F     OAI21D4BWP240H8P57PDULVT            1  4.9    15    11     106    (-,-) 
  vex/exPipes_1/vperm_permEngMod/g40135/ZN              -       A2->ZN R     ND2OPTPAD12BWP240H8P57PDULVT        2  7.9     8     8     114    (-,-) 
  vex/exPipes_1/vperm_permEngMod/fopt40209/ZN           -       I->ZN  F     DCCKND8BWP240H8P57PDULVT            1  5.0     5     6     120    (-,-) 
  vex/exPipes_1/vperm_permEngMod/g40207/ZN              -       A2->ZN R     NR2OPTPAD12BWP240H8P57PDULVT        3  7.4     8     7     127    (-,-) 
  vex/exPipes_1/vperm_permEngMod/fopt2048/ZN            -       I->ZN  F     DCCKND5BWP240H8P57PDULVT            6  8.5    10     9     136    (-,-) 
  vex/exPipes_1/vperm_permEngMod/fopt2047/ZN            -       I->ZN  R     INVD6BWP240H8P57PDULVT              3  5.6     7     7     143    (-,-) 
  vex/exPipes_1/vperm_permEngMod/g40314/ZN              -       B1->ZN F     IND2OPTPAD8BWP240H8P57PDULVT        1  4.7     7     7     149    (-,-) 
  vex/exPipes_1/vperm_permEngMod/g11/ZN                 -       A1->ZN R     ND2D16BWP240H8P57PDULVT            17 19.1    11     8     157    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/fopt23057/ZN      -       I->ZN  F     DCCKND5BWP240H8P57PDULVT           10 11.3    13    11     168    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/fopt22110/ZN      -       I->ZN  R     DCCKND4BWP240H8P57PDULVT            3  4.6     8     7     175    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/g22603/ZN         -       I->ZN  F     INVD2BWP240H8P57PDULVT              1  1.5     6     6     181    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/g22897/ZN         -       B->ZN  R     OAI211OPTPAD4BWP240H8P57PDULVT      1  1.6     9     5     186    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/g23105/ZN         -       B->ZN  F     OAI21OPTPAD4BWP240H8P57PDULVT       2  1.4     7     7     193    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/g20341/Z          -       A1->Z  F     CKAN2D4BWP240H8P57PDULVT            1  2.8     6    11     204    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g225002/ZN -       A1->ZN R     NR3OPTPAD8BWP240H8P57PDULVT         1  2.4     8     6     210    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g225000/ZN -       A2->ZN F     ND2D6BWP240H8P57PDULVT              1  2.3     6     6     217    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g231114/ZN -       A1->ZN R     CKNR2TWAD4BWP240H8P57PDULVT         2  2.9     6     6     222    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g231113/ZN -       A1->ZN F     CKND2D4BWP240H8P57PDULVT            1  2.1     7     6     229    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g231112/ZN -       A1->ZN R     NR2D6BWP240H8P57PDULVT              1  2.1     6     6     234    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g190/ZN    -       A1->ZN F     ND2D6BWP240H8P57PDULVT              1  2.7     6     6     240    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g224995/ZN -       A1->ZN R     NR2OPTPAD8BWP240H8P57PDULVT         6  5.0     8     7     247    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/g22552/ZN         -       A1->ZN F     ND2OPTPAD6BWP240H8P57PDULVT         1  4.7     8     8     255    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/g22551/ZN         -       A1->ZN R     ND2D16BWP240H8P57PDULVT             8 10.7     8     6     261    (-,-) 
  vex/exPipes_1/vperm_permEngMod/g51403/ZN              -       A1->ZN F     ND2D3BWP240H8P57PDULVT              1  1.5     8     6     268    (-,-) 
  vex/exPipes_1/vperm_permEngMod/g51402/ZN              -       A1->ZN R     CKND2D4BWP240H8P57PDULVT            1  4.9    10     7     275    (-,-) 
  vex/exPipes_1/vperm_permEngMod/g51401/ZN              -       A1->ZN F     ND2D16BWP240H8P57PDULVT            23 16.8    13    10     285    (-,-) 
  vex/exPipes_1/vperm_permEngMod/tagRF/fopt39/ZN        -       I->ZN  R     CKND2BWP240H8P57PDULVT              2  1.9     6     6     291    (-,-) 
  vex/exPipes_1/vperm_permEngMod/tagRF/fopt38/ZN        -       I->ZN  F     INVD2BWP240H8P57PDULVT              4  2.7     8     7     298    (-,-) 
  vex/exPipes_1/vperm_permEngMod/tagRF/g83/ZN           -       A1->ZN R     NR3OPTPAD1BWP240H8P57PDULVT         1  1.6    20    14     312    (-,-) 
  vex/exPipes_1/vperm_permEngMod/tagRF/g10942/ZN        -       B->ZN  F     IAO21D4BWP240H8P57PDULVT            1  1.4     7     6     319    (-,-) 
  vex/exPipes_1/vperm_permEngMod/tagRF/g10941/ZN        -       A1->ZN R     ND3D4BWP240H8P57PDULVT              1  1.5     8     5     324    (-,-) 
  vex/exPipes_1/vperm_permEngMod/tagRF/g10983/ZN        -       A1->ZN F     ND3OPTPAD4BWP240H8P57PDULVT         1  2.0     9     8     331    (-,-) 
  vex/exPipes_1/g72824/ZN                               -       A1->ZN R     ND2D6BWP240H8P57PDULVT              1  4.9     7     7     338    (-,-) 
  vex/exPipes_1/g72823/ZN                               -       A1->ZN F     ND2D16BWP240H8P57PDULVT            19 23.0    15    12     349    (-,-) 
  vex/issueQueues_0/fopt208275/ZN                       -       I->ZN  R     CKND2BWP240H8P57PDULVT              4  6.4    14    12     361    (-,-) 
  vex/issueQueues_0/fopt208276/ZN                       -       I->ZN  F     INVD2BWP240H8P57PDULVT              1  1.0     6     6     366    (-,-) 
  vex/issueQueues_0/g140/ZN                             -       A1->ZN F     IOA21D4BWP240H8P57PDULVT            1  1.0     5    11     377    (-,-) 
  vex/issueQueues_0/g208221/ZN                          -       B->ZN  R     IAO21D2BWP240H8P57PDULVT            1  1.6     9     7     384    (-,-) 
  vex/issueQueues_0/g208220/ZN                          -       A1->ZN F     ND2D4BWP240H8P57PDULVT              2  1.7     6     6     391    (-,-) 
  vex/issueQueues_0/g77/ZN                              -       I->ZN  R     CKND2BWP240H8P57PDULVT              1  1.6     5     5     395    (-,-) 
  vex/issueQueues_0/g208301/ZN                          -       A1->ZN F     CKND2D4BWP240H8P57PDULVT            1  1.5     6     5     401    (-,-) 
  vex/issueQueues_0/g208308/ZN                          -       A1->ZN R     NR3OPTPAD4BWP240H8P57PDULVT         1  1.5    10     7     407    (-,-) 
  vex/issueQueues_0/g84/ZN                              -       A1->ZN F     NR2OPTPAD4BWP240H8P57PDULVT         1  5.2    10     8     416    (-,-) 
  vex/issueQueues_0/g208267/ZN                          -       I->ZN  R     DCCKND14BWP240H8P57PDULVT          32 19.8     8     8     423    (-,-) 
  vex/issueQueues_0/entries_7/g43082/ZN                 -       A1->ZN F     IOAI21D1BWP240H8P57PDULVT           1  1.0    10    10     433    (-,-) 
  vex/issueQueues_0/entries_7/g43081/ZN                 -       B1->ZN R     INR3OPTPAD2BWP240H8P57PDULVT        1  1.4    11     9     442    (-,-) 
  vex/issueQueues_0/entries_7/g43074/ZN                 -       A2->ZN F     ND2D3BWP240H8P57PDLVT               1  1.1     8     8     450    (-,-) 
  vex/issueQueues_0/entries_7/g42970/ZN                 -       A2->ZN R     CKND2D2BWP240H8P57PDULVT            1  0.8     5     5     456    (-,-) 
  vex/issueQueues_0/entries_7/ready_reg[0]/D            -       -      R     DFQD4BWP240H8P57PDULVT              1    -     -     0     456    (-,-) 
#----------------------------------------------------------------------------------------------------------------------------------------------------
{noformat}",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-07-28T07:52:07.000-0700"",""stateCount"":3,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/9343b88ee6bcb43986ebae8027c5b07d23227713,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,3,0,,,,100,,,No,,,,,,,,,,,,2|hzzw6v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Orca DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jul/22 3:11 PM;6065017e90e3950069cf01c5;

{noformat}#---------------------------------------------------------------------------------------------------------------------------------------------------------
#                       Timing Point                         Flags    Arc   Edge              Cell               Fanout Load Trans Delay Arrival Instance 
#                                                                                                                       (fF)  (ps)  (ps)   (ps)  Location 
#---------------------------------------------------------------------------------------------------------------------------------------------------------
  vex/exPipes_1/vperm_permEngMod/nanoRRCmd_rs1_PEX_reg[0]/CP -       -      R     (arrival)                           3    -     0     0       0    (-,-) 
  vex/exPipes_1/vperm_permEngMod/nanoRRCmd_rs1_PEX_reg[0]/Q  -       CP->Q  R     DFQD4BWP240H8P57PDULVT              5  7.6    12    28      28    (-,-) 
  vex/exPipes_1/vperm_permEngMod/dataRF/fopt81187/ZN         -       I->ZN  F     CKND4BWP240H8P57PDULVT              2  4.2     8     8      35    (-,-) 
  vex/exPipes_1/vperm_permEngMod/dataRF/g5758/ZN             -       A2->ZN R     ND2D6BWP240H8P57PDULVT              2 10.3    11     9      45    (-,-) 
  vex/exPipes_1/vperm_permEngMod/dataRF/g114_dup5761/ZN      -       A2->ZN F     NR2D16BWP240H8P57PDULVT            25 13.4     8     8      53    (-,-) 
  vex/exPipes_1/vperm_permEngMod/dataRF/fopt35/Z             -       I->Z   F     BUFFD5BWP240H8P57PDULVT             6  4.5     7    12      64    (-,-) 
  vex/exPipes_1/vperm_permEngMod/dataRF/g81283/ZN            -       A1->ZN F     IOA21D1BWP240H8P57PDULVT            1  1.0    10    13      77    (-,-) 
  vex/exPipes_1/vperm_permEngMod/dataRF/g81282/ZN            -       A1->ZN R     NR2D2BWP240H8P57PDULVT              1  1.1     8     7      84    (-,-) 
  vex/exPipes_1/vperm_permEngMod/dataRF/g81278/ZN            -       A2->ZN F     CKND2D2BWP240H8P57PDULVT            1  1.3     8     7      92    (-,-) 
  vex/exPipes_1/vperm_permEngMod/g51016/ZN                   -       A1->ZN R     ND2D3BWP240H8P57PDULVT              1  2.1     7     6      98    (-,-) 
  vex/exPipes_1/vperm_permEngMod/g51015/ZN                   -       A1->ZN F     ND2OPTPAD6BWP240H8P57PDULVT         5  4.9     9     8     105    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/g22511/ZN              -       A1->ZN R     ND2D3BWP240H8P57PDULVT              1  1.6     6     6     111    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/g22510/ZN              -       B->ZN  F     IOA21D4BWP240H8P57PDULVT            1  1.7     6     6     117    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/g20524/ZN              -       A2->ZN R     NR2D4BWP240H8P57PDULVT              2  1.9     7     7     123    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/g20892/ZN              -       A1->ZN F     NR2D4BWP240H8P57PDULVT              1  2.3     6     5     128    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g160223/ZN      -       A2->ZN R     NR2OPTPAD4BWP240H8P57PDULVT         1  2.1     6     7     135    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g160222/ZN      -       A1->ZN F     ND2D6BWP240H8P57PDULVT              1  3.0     7     6     142    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g160218/ZN      -       A2->ZN R     NR2D8BWP240H8P57PDULVT              3  4.0     7     7     149    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g160234/ZN      -       A1->ZN F     CKND2D4BWP240H8P57PDULVT            1  2.4     8     7     156    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g684/ZN         -       A2->ZN R     NR2D6BWP240H8P57PDULVT              3  3.6     8     8     163    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g160228/ZN      -       A2->ZN F     CKND2D4BWP240H8P57PDULVT            1  2.3     7     7     170    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g160227/ZN      -       A1->ZN R     CKNR2TWAD4BWP240H8P57PDULVT         2  4.7     8     7     178    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g160226/ZN      -       I->ZN  F     INVD12BWP240H8P57PDULVT             5  9.0     6     6     184    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/fopt160273/Z    -       I->Z   F     DCCKBD8BWP240H8P57PDULVT            5  6.4     7    12     195    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g160290/ZN      -       A2->ZN R     CKND2D4BWP240H8P57PDULVT            2  2.9     7     6     201    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g307/ZN         -       A1->ZN F     CKND2D4BWP240H8P57PDULVT            1  1.8     7     6     207    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/fopt164185/ZN   -       I->ZN  R     DCCKND4BWP240H8P57PDULVT            3  6.6     9     8     215    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g8127/ZN        -       A2->ZN F     ND2D6BWP240H8P57PDULVT              3  4.5     9     8     223    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/fopt164228/ZN   -       I->ZN  R     DCCKND4BWP240H8P57PDULVT            4  4.4     7     6     229    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/fopt164210/ZN   -       I->ZN  F     DCCKND4BWP240H8P57PDULVT            4  5.8     9     8     237    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/fopt164205/ZN   -       I->ZN  R     INVD4BWP240H8P57PDULVT              1  0.7     3     4     241    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g8133/Z         -       A1->Z  R     AO22D1BWP240H8P57PDULVT             1  1.1     9    14     254    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g160940/ZN      -       A2->ZN F     CKNR2D1BWP240H8P57PDULVT            1  1.0     8     8     263    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g160939/ZN      -       A1->ZN R     ND2D2BWP240H8P57PDULVT              2  1.4     6     6     269    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/mods_0/g160938/ZN      -       A1->ZN R     IOA21D4BWP240H8P57PDULVT            1  1.6     6    12     281    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/g35/ZN                 -       A1->ZN F     CKND2D4BWP240H8P57PDULVT            1  2.1     7     6     287    (-,-) 
  vex/exPipes_1/vperm_permEngMod/pmod/g22159/ZN              -       A1->ZN R     ND2OPTPAD6BWP240H8P57PDULVT         4  5.4    10     7     294    (-,-) 
  vex/exPipes_1/vperm_permEngMod/g1102/ZN                    -       A1->ZN F     AOI22D6BWP240H8P57PDULVT            2  2.1    10     7     301    (-,-) 
  vex/exPipes_1/vperm_permEngMod/fopt46830/ZN                -       I->ZN  R     INVD2BWP240H8P57PDULVT              2  1.6     7     6     307    (-,-) 
  vex/exPipes_1/vperm_permEngMod/fopt46829/ZN                -       I->ZN  F     INVD2BWP240H8P57PDULVT              1  2.8     8     7     314    (-,-) 
  vex/exPipes_1/vperm_permEngMod/g170/ZN                     -       B1->ZN R     OAI22OPTPAD6BWP240H8P57PDULVT       3  2.8    12     9     323    (-,-) 
  vex/exPipes_1/vperm_permEngMod/g48487/ZN                   -       A1->ZN F     ND2OPTPAD2BWP240H8P57PDULVT         2  1.5     8     8     331    (-,-) 
  vex/exPipes_1/vperm_permEngMod/g48465/ZN                   -       I->ZN  R     INVD2BWP240H8P57PDULVT              1  1.3     6     6     336    (-,-) 
  vex/exPipes_1/vperm_permEngMod/g50211/ZN                   -       A1->ZN F     ND2OPTPAD2BWP240H8P57PDULVT         1  1.7     8     7     343    (-,-) 
 vex/exPipes_1/g77533/ZN                                    -       A1->ZN F     ND2D3BWP240H8P57PDULVT              1  2.0     9     7     370    (-,-) 
  vex/exPipes_1/g78743/ZN                                    -       A1->ZN R     ND2D6BWP240H8P57PDULVT              3  3.6     6     6     375    (-,-) 
  vex/exPipes_1/g78742/ZN                                    -       A1->ZN F     ND2OPTPAD6BWP240H8P57PDULVT         1  3.7     8     6     382    (-,-) 
  vex/exPipes_1/g78741/ZN                                    -       A1->ZN R     ND2OPTPAD12BWP240H8P57PDULVT        6  7.8     8     6     388    (-,-) 
  vex/exPipes_1/g75863/ZN                                    -       A1->ZN F     ND2D12BWP240H8P57PDULVT             1  2.6     6     6     393    (-,-) 
  vex/exPipes_1/g75862/ZN                                    -       A1->ZN R     ND3OPTPAD8BWP240H8P57PDULVT         2  2.4     7     5     398    (-,-) 
  vex/exPipes_1/g78978/ZN                                    -       A1->ZN F     IAOI21D4BWP240H8P57PDULVT           1  1.4     7     7     405    (-,-) 
  vex/exPipes_1/g70644/ZN                                    -       A1->ZN R     ND3OPTPAD4BWP240H8P57PDULVT         1  1.6     8     5     410    (-,-) 
  vex/exPipes_1/fopt79460/ZN                                 -       I->ZN  F     INVD4BWP240H8P57PDULVT              1  1.0     3     4     413    (-,-) 
  vex/exPipes_1/g75097/ZN                                    -       A1->ZN R     ND2D2BWP240H8P57PDULVT              1  1.1     6     5     418    (-,-) 
  vex/exPipes_1/g75094/ZN                                    -       A2->ZN F     CKNR2D1BWP240H8P57PDULVT            1  1.0     8     7     425    (-,-) 
  vex/exPipes_1/g53863/ZN                                    -       A1->ZN R     ND3OPTPAD2BWP240H8P57PDULVT         1  0.8     7     5     430    (-,-) 
  vex/exPipes_1/bpeMaskPre_EX_reg[3]/D                       -       -      R     DFQD2BWP240H8P57PDULVT              1    -     -     0     430    (-,-) 
#---------------------------------------------------------------------------------------------------------------------------------------------------------
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
PPA evaluation and fix for TGV generator,,,,,,MAL-2093,118827,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,6/27/2022 9:02,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2094,MAL-2104,MAL-2139,MAL-2154,MAL-2169,MAL-2172,MAL-2224,MAL-2226,MAL-2230,MAL-2241,MAL-2254,MAL-2259,MAL-2289,MAL-2290,MAL-2301,MAL-2302,MAL-2322,MAL-2444,MAL-2586,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-12,,[TGV] fixing timing / power / area for TGV generator,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,grey,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzw67:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] simple reduction unit in critical paths,,,,,,MAL-2092,118825,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,6/27/2022 8:57,9/3/2022 7:41,9/28/2022 0:51,7/7/2022 9:24,,,,,,,,,,,,,Implementation,TGV_RTL/VEX,Timing,,,,,,,0,,,,"Target: 390ps





{noformat}------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
group      #minI  #maxI   path_start                                                     path_end                                                   num     min     max   level fanout drive  min;max ulvt %
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
clock      #1     #1      vex/exPipes_*/instPayload_EX_cmn_ctrl_funct*_reg*/CP           vex/exPipes_*/instSrcs_EX_*_reg*/D                           1    -0.121  -0.121 54-54   2.48  5.04   98.1;98.1 
{noformat}





{noformat}  vex/exPipes_1/instPayload_EX_cmn_ctrl_funct7_reg[3]/CP    -       -      R     (arrival)                       723    -     0     0       0    (-,-) 
  vex/exPipes_1/instPayload_EX_cmn_ctrl_funct7_reg[3]/Q     -       CP->Q  R     DFQD4BWP240H8P57PDULVT            5  6.5    10    27      27    (-,-) 
  vex/exPipes_1/fopt71994/ZN                                -       I->ZN  F     CKND4BWP240H8P57PDULVT            4  8.5    12    11      38    (-,-) 
  vex/exPipes_1/g70645/ZN                                   -       A2->ZN R     NR2OPTPAD12BWP240H8P57PDULVT      2  6.9     8     8      45    (-,-) 
  vex/exPipes_1/g70650/ZN                                   -       A2->ZN F     ND2OPTPAD16BWP240H8P57PDULVT      5  8.0     6     7      52    (-,-) 
  vex/exPipes_1/fopt51891/ZN                                -       I->ZN  R     DCCKND5BWP240H8P57PDULVT          1  3.3     4     4      57    (-,-) 
  vex/exPipes_1/fopt51890/ZN                                -       I->ZN  F     DCCKND8BWP240H8P57PDULVT          2  4.1     4     5      62    (-,-) 
  vex/exPipes_1/g70429/ZN                                   -       A2->ZN R     CKND2TWAD8BWP240H8P57PDULVT       6  7.2     8     7      68    (-,-) 
  vex/exPipes_1/fopt51893/Z                                 -       I->Z   R     DCCKBD10BWP240H8P57PDULVT         7  8.7     7    12      80    (-,-) 
  vex/exPipes_1/fopt72/ZN                                   -       I->ZN  F     INVD1BWP240H8P57PDULVT            1  1.5     9     8      88    (-,-) 
  vex/exPipes_1/g70249/ZN                                   -       A1->ZN R     ND2OPTPAD4BWP240H8P57PDULVT       1  1.6     6     5      93    (-,-) 
  vex/exPipes_1/g72028/ZN                                   -       I->ZN  F     INVD4BWP240H8P57PDLVT             1  2.6     5     6      99    (-,-) 
  vex/exPipes_1/g72026/ZN                                   -       A4->ZN R     NR4D6BWP240H8P57PDULVT            2  2.1    13    11     110    (-,-) 
  vex/exPipes_1/g52128/ZN                                   -       A1->ZN F     NR2D3BWP240H8P57PDULVT            1  1.6     6     6     116    (-,-) 
  vex/exPipes_1/g52120/ZN                                   -       B->ZN  R     IAO21D4BWP240H8P57PDULVT          1  1.6     6     6     122    (-,-) 
  vex/exPipes_1/g68609/ZN                                   -       B->ZN  F     IOAI21D4BWP240H8P57PDULVT         3  2.8     9     8     130    (-,-) 
  vex/exPipes_1/g68409/ZN                                   -       A2->ZN F     IAOI21D4BWP240H8P57PDULVT         1  2.1     9    14     143    (-,-) 
  vex/exPipes_1/g68408/ZN                                   -       A1->ZN R     NR2D6BWP240H8P57PDULVT            2  5.7    11     9     152    (-,-) 
  vex/exPipes_1/g85/ZN                                      -       I->ZN  F     INVD2BWP240H8P57PDULVT            1  1.3     6     6     158    (-,-) 
  vex/exPipes_1/g70152/ZN                                   -       A1->ZN R     ND2D3BWP240H8P57PDULVT            1  1.5     6     5     163    (-,-) 
  vex/exPipes_1/g72129/ZN                                   -       A1->ZN F     ND3OPTPAD4BWP240H8P57PDULVT       3  3.7    13     9     173    (-,-) 
  vex/exPipes_1/fopt72703/ZN                                -       I->ZN  R     INVD6BWP240H8P57PDULVT            3  5.2     8     7     180    (-,-) 
  vex/exPipes_1/fopt72702/ZN                                -       I->ZN  F     DCCKND8BWP240H8P57PDULVT          3  4.9     5     6     186    (-,-) 
  vex/exPipes_1/g69297/Z                                    -       A1->Z  F     AN2D4BWP240H8P57PDULVT            3  3.1     6    10     196    (-,-) 
  vex/exPipes_1/sintredmod/g38/ZN                           -       I->ZN  R     CKND2BWP240H8P57PDULVT            1  1.6     5     5     201    (-,-) 
  vex/exPipes_1/sintredmod/g44658/ZN                        -       A1->ZN F     CKND2D4BWP240H8P57PDULVT          1  3.7    10     8     208    (-,-) 
  vex/exPipes_1/sintredmod/g44735/ZN                        -       A1->ZN R     ND2OPTPAD12BWP240H8P57PDULVT     10  9.6     9     7     216    (-,-) 
  vex/exPipes_1/sintredmod/addReduced_redMod_1/g141/ZN      -       C->ZN  F     MAOI222D4BWP240H8P57PDULVT        2  2.5    12    10     226    (-,-) 
  vex/exPipes_1/sintredmod/addReduced_redMod_1/g273/S       -       B->S   R     FCISD4BWP240H8P57PDULVT           4  3.3     9    31     257    (-,-) 
  vex/exPipes_1/sintredmod/addReduced_redMod_1/g270/ZN      -       A1->ZN R     IOA22D4BWP240H8P57PDULVT          2  2.0     9    12     269    (-,-) 
  vex/exPipes_1/sintredmod/addReduced_redMod_1/g21303/ZN    -       B->ZN  F     IOA21D2BWP240H8P57PDULVT          2  3.6    16    12     282    (-,-) 
  vex/exPipes_1/sintredmod/addReduced_redMod_1/g23185/ZN    -       A2->ZN R     CKND2D4BWP240H8P57PDULVT          2  2.9     8     8     289    (-,-) 
  vex/exPipes_1/sintredmod/addReduced_redMod_1/fopt23897/ZN -       I->ZN  F     CKND4BWP240H8P57PDULVT            1  2.0     5     5     294    (-,-) 
  vex/exPipes_1/sintredmod/addReduced_redMod_1/g160/ZN      -       A1->ZN R     ND2D6BWP240H8P57PDULVT            1  2.8     5     5     299    (-,-) 
  vex/exPipes_1/sintredmod/addReduced_redMod_1/g23957/ZN    -       B->ZN  F     IOA21D8BWP240H8P57PDULVT          6  5.3     8     7     306    (-,-) 
  vex/exPipes_1/sintredmod/addReduced_redMod_1/g21360/ZN    -       B->ZN  R     MAOI222D2BWP240H8P57PDULVT        1  1.3    12    10     316    (-,-) 
  vex/exPipes_1/sintredmod/addReduced_redMod_1/g21359/ZN    -       A1->ZN F     XNR2D6BWP240H8P57PDULVT           4  4.8     9    20     337    (-,-) 
  vex/exPipes_1/sintredmod/addReduced_redMod_1/g23802/ZN    -       A2->ZN F     IOA22D4BWP240H8P57PDULVT          1  2.0     9    13     350    (-,-) 
  vex/exPipes_1/sintredmod/addReduced_redMod_1/g23801/ZN    -       A1->ZN R     ND2D6BWP240H8P57PDULVT            3  4.6     7     6     356    (-,-) 
  vex/exPipes_1/sintredmod/addReduced_redMod_1/g23571/ZN    -       B->ZN  F     OAI21D6BWP240H8P57PDULVT          2  2.1     8     7     363    (-,-) 
  vex/exPipes_1/sintredmod/addReduced_redMod_1/g183/ZN      -       A2->ZN R     CKNR2D2BWP240H8P57PDULVT          1  1.6     6     6     369    (-,-) 
  vex/exPipes_1/sintredmod/addReduced_redMod_1/g23513/ZN    -       A1->ZN F     ND2OPTPAD4BWP240H8P57PDULVT       1  3.5     9     7     376    (-,-) 
  vex/exPipes_1/sintredmod/addReduced_redMod_1/g23657/ZN    -       A2->ZN R     ND2D10BWP240H8P57PDULVT          10 10.0     8     8     384    (-,-) 
  vex/exPipes_1/sintredmod/addReduced_redMod_1/fopt23952/ZN -       I->ZN  F     INVD2BWP240H8P57PDULVT            1  1.3     5     5     389    (-,-) 
  vex/exPipes_1/sintredmod/addReduced_redMod_1/g23926/ZN    -       A1->ZN R     NR3D3BWP240H8P57PDULVT            1  1.1    10     7     397    (-,-) 
  vex/exPipes_1/sintredmod/addReduced_redMod_1/g23924/ZN    -       A2->ZN F     OAI21D2BWP240H8P57PDULVT          1  1.1     9     8     405    (-,-) 
  vex/exPipes_1/sintredmod/addReduced_redMod_1/g23918/ZN    -       B->ZN  R     OAI21D2BWP240H8P57PDULVT          1  1.3    11     6     412    (-,-) 
  vex/exPipes_1/sintredmod/g44433/ZN                        -       A1->ZN F     ND2D3BWP240H8P57PDULVT            1  1.5     7     7     419    (-,-) 
  vex/exPipes_1/sintredmod/g44840/ZN                        -       A1->ZN R     CKND2D4BWP240H8P57PDULVT          1  2.7     7     6     424    (-,-) 
  vex/exPipes_1/g70473/ZN                                   -       A1->ZN F     ND2OPTPAD8BWP240H8P57PDULVT       2  4.1     8     6     430    (-,-) 
  vex/exPipes_1/g70472/ZN                                   -       A1->ZN R     ND2D12BWP240H8P57PDULVT           7  6.4     6     6     436    (-,-) 
  vex/exPipes_1/g70304/ZN                                   -       I->ZN  F     CKND4BWP240H8P57PDULVT            2  1.9     4     5     441    (-,-) 
  vex/exPipes_1/fopt68951/ZN                                -       I->ZN  R     INVD2BWP240H8P57PDULVT            1  0.7     3     4     444    (-,-) 
  vex/exPipes_1/g62762/ZN                                   -       A1->ZN R     IOA21D2BWP240H8P57PDULVT          1  0.8     6    12     456    (-,-) 
  vex/exPipes_1/instSrcs_EX_1_reg[13]/D                     -       -      R     DFQD4BWP240H8P57PDULVT            1    -     -     0     456    (-,-) 
{noformat}",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-07-07T09:22:36.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/0d83f45b0984c5506e9260c86c583629434f8500,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,No,,,,,,,,,,,,2|hzzw5r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Retime VectorFcvtUnit to 3-cycle latency,,,,,,MAL-2091,118787,116657,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,6/26/2022 22:02,7/13/2022 8:02,9/28/2022 0:51,6/27/2022 23:45,,,,,,,,,,,,,Implementation,TGV_RTL/VEX,,,,,,,,0,,,,"Per [https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2287338308/TGV+P670+synthesis+result+Prometheus+v.s.+Hammer+no+ULVT+with+ULVT+TGV+only+with+ULVT|https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2287338308/TGV+P670+synthesis+result+Prometheus+v.s.+Hammer+no+ULVT+with+ULVT+TGV+only+with+ULVT|smart-link] , VectorFcvtUnit is one of the longest path.
I also experimented to use the LLP retime style to retime VectorFcvtUnit [https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2285764900/TGV+Result+of+VectorFcvtUnit+1+cycle+latency+retime+in+LLP+style|https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2285764900/TGV+Result+of+VectorFcvtUnit+1+cycle+latency+retime+in+LLP+style|smart-link] , but it still requires additional cycle to meet the timing.",Brad Wu,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Knute Lingaard,Nicolas Brunie,,,,,,,,,62103777eb2978006893b778,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1374fb7a22c90da0c60495,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2004,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-27T18:40:10.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzvwf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,51:44.0,"13/Jul/22 6:51 AM;5e1374fb7a22c90da0c60495;[~accountid:6065017e90e3950069cf01c5], dabble’s latency for {{vf*cvt*}} instructions is currently 5 cycles.  Should we change to 3?","13/Jul/22 7:31 AM;6065017e90e3950069cf01c5;[~accountid:5e1374fb7a22c90da0c60495] , yes to reflect the new RTL state.

I am curious if the change from 5 to 3 will have any impact.

Beware that we are still working on timing fixes and latency may move around in the coming weeks (though not particularly for this instruction)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,116657,[TGV] fix VexPipe timing issue seen in P670,Done
Redundant Read Power in Core SRAMs,,,,,,MAL-2090,118771,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Highest,,Josh Smith,5acffeafaa802f2a797a955c,Mehul Thakkar,622a8208db58c100687dd15a,Mehul Thakkar,622a8208db58c100687dd15a,6/26/2022 8:43,7/29/2022 9:02,9/28/2022 0:51,,,,,,,,,,,,,,Power,RTL/Frontend,,,,,,,,0,,,,"Hi, 

We touched on this on predictor tables, I am trying to dump the list of all instances where we are reading 0’s from SRAM. Based on below table, reading empty Banks also cause lot of power conceptions. 

 

|*Clock*|100%|100%|100%|100%|100%|100%|100%|
|*Data*|50%|50%|0%|0%|0%|50%|60%|
|*Q*|50%|50%|0%|0%|0%|50%|60%|
|*Mode*|Read|Write|Read|Write|R/W|R/W|R/W|
|*CEB*|Access|Access|Access|Access|No-Access|No-Access|No-Access|
|*Dyn (mW/GHz)*|3.19|3.07|*2.025*|*1.907*|0.016|1.18|1.34|

Here are the instances in Frontend where redundant access are happening, this could potentially save *4-5mW (2-3%) of total core power in P650.*



|Instance|Redundant Read Power (W)|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.feu.ifu.icTagArray.icTagArray_ext.sram_0_0|0.000591295|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.feu.ifu.predictor.base_table_0.base_table_0_ext.sram_0_0|0.000219516|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.feu.ifu.predictor.base_table_1.base_table_0_ext.sram_0_0|0.000194941|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.feu.ifu.ijtp.ijtp_base_table.ijtp_base_table_ext.sram_0_0|6.10E-05|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.feu.ifu.icDataArray_0.icDataArray_0_ext.sram_0_0|5.85E-05|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.feu.ifu.icDataArray_1.icDataArray_0_ext.sram_0_0|7.15E-05|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.feu.ifu.icDataArray_2.icDataArray_0_ext.sram_0_0|0.000107264|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.feu.ifu.icDataArray_3.icDataArray_0_ext.sram_0_0|0.000101021|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.feu.ifu.icDataArray_4.icDataArray_0_ext.sram_0_0|9.79E-05|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.feu.ifu.icDataArray_5.icDataArray_0_ext.sram_0_0|8.20E-05|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.feu.ifu.icDataArray_6.icDataArray_0_ext.sram_0_0|6.87E-05|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.feu.ifu.icDataArray_7.icDataArray_0_ext.sram_0_0|7.18E-05|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.lsu.l1dcTagArrayPipe0Bank0.l1dcTagArrayPipe0Bank0_ext.sram_0_0|0.000168522|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.lsu.l1dcTagArrayPipe0Bank0.l1dcTagArrayPipe0Bank0_ext.sram_0_1|0.000168522|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.lsu.l1dcTagArrayPipe0Bank0.l1dcTagArrayPipe0Bank0_ext.sram_1_0|6.14E-05|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.lsu.l1dcTagArrayPipe0Bank0.l1dcTagArrayPipe0Bank0_ext.sram_1_1|6.14E-05|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.feu.ifu.predictor.tagged_table_0_0.tagged_table_0_0_ext.sram_0_0|0.000241886|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.feu.ifu.predictor.tagged_table_0_1.tagged_table_0_0_ext.sram_0_0|0.000247523|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.feu.ifu.predictor.tagged_table_1_0.tagged_table_0_0_ext.sram_0_0|0.000241886|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.feu.ifu.predictor.tagged_table_1_1.tagged_table_0_0_ext.sram_0_0|0.000247523|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.feu.ifu.predictor.tagged_table_2_0.tagged_table_0_0_ext.sram_0_0|0.000241886|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.feu.ifu.predictor.tagged_table_2_1.tagged_table_0_0_ext.sram_0_0|0.000247523|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.feu.ifu.predictor.tagged_table_3_0.tagged_table_0_0_ext.sram_0_0|0.000241886|
|SiFive_CoreIPSubsystem.tile_prci_domain.tile.core.feu.ifu.predictor.tagged_table_3_1.tagged_table_0_0_ext.sram_0_0|0.000247523|

Filling this as highest priority item since power ROI is high. LSU  L1D tag array’s are also part of the list, going through the rest.",John Ingalls,Josh Smith,Mehul Thakkar,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,622a8208db58c100687dd15a,,,,,,,,,,,,,,,,,,,,,,,,MAL-2080,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzvsv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,32:33.6,"27/Jun/22 9:32 AM;5acffeafaa802f2a797a955c;Just because we’re reading 0’s doesn’t mean it’s a “redundant read”.  For example, the branch predictor tables are zeroed out by a hardware state machine at reset.  So we’re going to read a lot of zeros from every entry in the table until the core has run a sufficient amount of code to warm up the tables.  This is only going to show up in a short workload which runs right after reset.

At a minimum, we already prevent from reading the same entry twice in a row in the ICTag and Predictor arrays.",27/Jun/22 9:39 AM;622a8208db58c100687dd15a;We can start with not reading empty banks across the board. Dhrystone is the test we use to quote power to our customers until we get to better BenchMark.,27/Jun/22 9:45 AM;5acffeafaa802f2a797a955c;What is “empty”?  The bank hasn’t been written since the last reset?  Changing that just to make Dhrystone look better isn’t a good call.  Anything after millions of cycles will see precisely zero benefit.,"27/Jun/22 10:00 AM;5bb6808b9ba2930990f81895;Regarding the LSU L1D tag arrays:

* timing is already tight to these in P650: we squeezed out the last gate in [https://sifive.atlassian.net/browse/MAL-1906|https://sifive.atlassian.net/browse/MAL-1906|smart-link] 
* Healdsburg will change these to flop arrays: [https://sifive.atlassian.net/browse/MAL-1673|https://sifive.atlassian.net/browse/MAL-1673|smart-link] 

So probably no action on those right now for P650.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV][backlog] refactor src valid decoding in VRDU,,,,,,MAL-2089,118724,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,6/24/2022 10:24,7/14/2022 18:45,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,,,,"Equation for {{srcValid}} in {{VRDU}} (in particular for MapTable inputs) are getting quite convoluted and could benefit from refactoring and decoding sharing between the various sources.

[https://github.com/sifive/federation/pull/23493#discussion_r906054264|https://github.com/sifive/federation/pull/23493#discussion_r906054264]",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzvin:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
"[TGV] Some uses of `tp.nVexPipes` should be replaced by ""number of V2S pipes + 1 (for mask2S)""",,,,,,MAL-2088,118605,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/23/2022 13:22,7/8/2022 6:25,9/28/2022 0:51,7/8/2022 6:25,,,,,,,,,,,,,TGV_RTL/X2Y,,,,,,,,,0,,,,"While working on [https://sifive.atlassian.net/browse/MAL-2074|https://sifive.atlassian.net/browse/MAL-2074|smart-link], noticed that there are a bunch of places in X2Y.scala (and on its various I/Os wherever they live) that are defined in terms of {{tp.nVexPipes}}.

That’s wrong for 2 reasons:
- In the case of 1 VexPipe instance, there should be 2 elements because of 1 regular v2s moves plus 1 mask unit result
- In the case of multiple VexPipe instances, the number of VexPipes that connect to V2S is set in the {{.json}} and should be derived from that setting (plus 1 for the mask unit, as before).

After [https://sifive.atlassian.net/browse/MAL-2074|https://sifive.atlassian.net/browse/MAL-2074|smart-link] is all set, we (myself or maybe [~accountid:62103777eb2978006893b778]) should clean this up.",David Kravitz,Nicolas Brunie,,,,,,,,,,,,,,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2074,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-28T06:33:51.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/c464b0bac58fd68978d1bf32d19dedf2030d9d40,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzus7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,08/Jul/22 6:25 AM;5fd15143b4a74900763834e0;[~accountid:62103777eb2978006893b778] fixed this as part of MAL-2099,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSIssQ entry clock gating ,,,,,,MAL-2087,118600,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,John Ingalls,5bb6808b9ba2930990f81895,Mehul Thakkar,622a8208db58c100687dd15a,Mehul Thakkar,622a8208db58c100687dd15a,6/23/2022 12:46,7/29/2022 9:06,9/28/2022 0:51,6/23/2022 12:53,Panda PR,,,,,,,,,,,,Power,RTL/LSU,,,,,,,,0,,,,"Hi, Based on the PD data, it would be great to split clock gater for IssQ per entry. Looks like all 12 entries are sharing same clock gater. The enable signals are quite exclusive ",John Ingalls,Mehul Thakkar,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,622a8208db58c100687dd15a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2085,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,23/Jun/22 12:45 PM;ug:2705f964-33ce-446a-be5d-9a27412f841d;Screen Shot 2022-06-23 at 12.44.48 PM.png;https://sifive.atlassian.net/secure/attachment/73591/Screen+Shot+2022-06-23+at+12.44.48+PM.png,23/Jun/22 12:45 PM;ug:2705f964-33ce-446a-be5d-9a27412f841d;Screen Shot 2022-06-23 at 12.45.37 PM.png;https://sifive.atlassian.net/secure/attachment/73592/Screen+Shot+2022-06-23+at+12.45.37+PM.png,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzur3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,53:47.9,23/Jun/22 12:53 PM;5bb6808b9ba2930990f81895;this is the same as / should be done as part of MAL-2085,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Replace uses of ROB Id in Baler srcTag and destIdx (and associated pipeTag signaling) with `gid`,,,,,,MAL-2086,118594,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Warren Menezes,600773dcee80bd006f750bba,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/23/2022 11:49,7/18/2022 12:52,9/28/2022 0:51,7/18/2022 12:52,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,,,,"We used ROB ID while getting first-load work off the ground, but we should have been using {{gid}} in all those places.",David Kravitz,John Ingalls,Josh Smith,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-07-06T10:51:27.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,,,,,,,,,,,,,2|hzzupr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,33:48.3,"23/Jun/22 12:33 PM;5acffeafaa802f2a797a955c;This was just for debugging purposes, right?","23/Jun/22 12:45 PM;5fd15143b4a74900763834e0;Because of the decoupling between scalar and vector, the “single source of truth” is not a (main) regfile prIdx. S2V and V2S get assigned indexes in the in-order part of the scalar RDU. Loads and stores go completely out of order, so we used ROB ID to match up the LSU to the Baler.

Should I have said {{gid}} instead of globalID? It keeps confusing me.","23/Jun/22 1:04 PM;5acffeafaa802f2a797a955c;{{gid}} is the ROB ID.  {{globalID}} is a unique ID assigned to every macro-instruction, but used for verification/performance analysis purposes only.","23/Jun/22 1:28 PM;5fd15143b4a74900763834e0;{{gid}} has the wrap bit, yes?","23/Jun/22 1:41 PM;5acffeafaa802f2a797a955c;{quote}{{gid}} has the wrap bit, yes?{quote}

Yes",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
IEX IssQueue Per Entry clock gating ,,,,,,MAL-2085,118525,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Jeffrey Huang,627586097de1ec00695bca96,Mehul Thakkar,622a8208db58c100687dd15a,Mehul Thakkar,622a8208db58c100687dd15a,6/22/2022 17:48,8/2/2022 18:45,9/28/2022 0:51,7/11/2022 11:21,,,,,,,,,,,,,Power,RTL/IEX,,,,,,,,0,,,,"Based on recent P650 GLS runs we are burning quite a bit of power in sequential internal power in IssQueu Entries. We have a local clock gate per 8 entry. There are about 200+ Sequential elements per entry and I believe its justified to have one clock gate per entry.

Enable activity is non overlapping across entries ",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Jeffrey Huang,John Ingalls,Josh Smith,Mehul Thakkar,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,627586097de1ec00695bca96,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,622a8208db58c100687dd15a,,,,,,,,,,,,,,,MAL-1538,MAL-565,MAL-566,MAL-1151,,,,,,,,,MAL-2087,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,22/Jun/22 5:48 PM;ug:2705f964-33ce-446a-be5d-9a27412f841d;Screen Shot 2022-06-22 at 5.46.53 PM.png;https://sifive.atlassian.net/secure/attachment/73556/Screen+Shot+2022-06-22+at+5.46.53+PM.png,05/Jul/22 3:39 PM;ug:12b76939-5cd7-4f44-92e1-122c9b804a69;Screen Shot 2022-06-30 at 11.40.31 PM.png;https://sifive.atlassian.net/secure/attachment/74096/Screen+Shot+2022-06-30+at+11.40.31+PM.png,05/Jul/22 7:02 PM;ug:12b76939-5cd7-4f44-92e1-122c9b804a69;Screen Shot 2022-07-05 at 9.58.47 PM.png;https://sifive.atlassian.net/secure/attachment/74108/Screen+Shot+2022-07-05+at+9.58.47+PM.png,05/Jul/22 7:02 PM;ug:12b76939-5cd7-4f44-92e1-122c9b804a69;Screen Shot 2022-07-05 at 9.59.28 PM.png;https://sifive.atlassian.net/secure/attachment/74107/Screen+Shot+2022-07-05+at+9.59.28+PM.png,08/Jul/22 3:08 PM;ug:12b76939-5cd7-4f44-92e1-122c9b804a69;Screen Shot 2022-07-08 at 5.57.21 PM.png;https://sifive.atlassian.net/secure/attachment/74254/Screen+Shot+2022-07-08+at+5.57.21+PM.png,08/Jul/22 3:08 PM;ug:12b76939-5cd7-4f44-92e1-122c9b804a69;Screen Shot 2022-07-08 at 6.00.31 PM.png;https://sifive.atlassian.net/secure/attachment/74255/Screen+Shot+2022-07-08+at+6.00.31+PM.png,11/Jul/22 8:25 AM;ug:12b76939-5cd7-4f44-92e1-122c9b804a69;Screen Shot 2022-07-09 at 10.18.50 PM.png;https://sifive.atlassian.net/secure/attachment/74300/Screen+Shot+2022-07-09+at+10.18.50+PM.png,11/Jul/22 8:25 AM;ug:12b76939-5cd7-4f44-92e1-122c9b804a69;Screen Shot 2022-07-10 at 2.58.39 PM.png;https://sifive.atlassian.net/secure/attachment/74299/Screen+Shot+2022-07-10+at+2.58.39+PM.png,05/Jul/22 3:39 PM;ug:12b76939-5cd7-4f44-92e1-122c9b804a69;image-20220705-223014.png;https://sifive.atlassian.net/secure/attachment/74095/image-20220705-223014.png,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-07-21T13:14:41.000-0700"",""stateCount"":3,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,3,0,,,,100,,,,,,,,,,,,,,,2|hzzuav:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,39:33.5,"22/Jun/22 5:48 PM;622a8208db58c100687dd15a;!Screen Shot 2022-06-22 at 5.46.53 PM.png|width=1209,height=167!

Enable activity for top 8 banks ","05/Jul/22 3:39 PM;627586097de1ec00695bca96;I set a parameter {{nEntriesPerRegion}} to control the number of entries per clock gate. This way we can set the number of clock gates to reduce some unwanted clock toggling. When {{nEntriesPerRegion}} = 2, the comparison average power of Issue Queue are:

!Screen Shot 2022-06-30 at 11.40.31 PM.png|width=1765,height=809!

The top of the picture is the result after change, and the bottom of the picture is the result before the change. For example, the clock tree power drop from 211.93uW to 195.82uW. 

The comparison average power of IEX are: 

!image-20220705-223014.png|width=3494,height=1632!

The clock tree power drop from 1.42mW to 1.40mW. The logic power drop from 11.70mW to 11.63mW.",05/Jul/22 4:06 PM;622a8208db58c100687dd15a;[~accountid:627586097de1ec00695bca96] can you please report dynamic power not total from power artist ? ,"05/Jul/22 7:02 PM;627586097de1ec00695bca96;Yeah, thanks for the reminder. When {{nEntriesPerRegion}} = 2, the comparison average power of Issue Queue are:

!Screen Shot 2022-07-05 at 9.58.47 PM.png|width=1740,height=821!



The top of the picture is the result after change, and the bottom of the picture is the result before the change. 

The comparison average power of IEX are:

!Screen Shot 2022-07-05 at 9.59.28 PM.png|width=1718,height=830!","05/Jul/22 7:10 PM;622a8208db58c100687dd15a;Thanks, the savings are miniscule but we should see better savings in PD. At least what current clock tree is showing. That’s why I was hesitant to file this based on only PA. ","08/Jul/22 9:43 AM;622a8208db58c100687dd15a;[~accountid:627586097de1ec00695bca96] 

Did you check in IssueQ changes already ?

Also - how much it saved for LSU ?",08/Jul/22 10:00 AM;5acffeafaa802f2a797a955c;The LSU and HWPF issue queue changes have not been merged in yet.,08/Jul/22 12:42 PM;5acffeafaa802f2a797a955c;[~accountid:627586097de1ec00695bca96] Did you get PowerArtist data from the changes to the LsIssQ and HwpfIssQ?  Can you post that here and mark the ticket as resolved?,"08/Jul/22 12:45 PM;627586097de1ec00695bca96;[~accountid:5acffeafaa802f2a797a955c] Okay, Mehul told me on slack. I'm running. I'll post the results today.","08/Jul/22 3:08 PM;627586097de1ec00695bca96;The comparison average power of LsIssQ are:

!Screen Shot 2022-07-08 at 5.57.21 PM.png|width=1731,height=786!

The comparison average power of hwpfIssQ are:

!Screen Shot 2022-07-08 at 6.00.31 PM.png|width=1718,height=763!

The top of the picture is the result before change, and the bottom of the picture is the result after the change. When {{nEntriesPerRegion}} = 2, the dynamic power consumption of LsIssQ is indeed reduced, but the dynamic power of hwpfIssQ has increased. I’m looking at what’s the reason.","08/Jul/22 4:22 PM;5acffeafaa802f2a797a955c;[~accountid:627586097de1ec00695bca96] Yeah, the HwpfIssQ entries have a lot fewer flops (~60 flops per entry I think).  In that case, just having 1 clock gate, or maybe 2, for the entire HwPfIssQ is probably okay.","11/Jul/22 8:25 AM;627586097de1ec00695bca96;[~accountid:5acffeafaa802f2a797a955c] I tested the case where the adding clock gate is equal to 2 and 1, and the dynamic clk power is equal to 3.85uW and 2.77uW respectively. Compared with the initial 1.69uW, the dynamic power consumption has increased. The reason is that HwpfIssQ has a gatedClock connected to all the entrey and age matrix at the beginning. It seems that no additional clock gate is needed.

The average power of hwpfIssQ when the adding clock gate = 2:

!Screen Shot 2022-07-09 at 10.18.50 PM.png|width=1736,height=472!

The average power of hwpfIssQ when the adding clock gate = 1:

!Screen Shot 2022-07-10 at 2.58.39 PM.png|width=1906,height=483!

Previous clock gate:

{quote}val enableClock = io.dispReq.earlyValid || io.disableClockGate || reset_q
val gatedClock = if (mp.clockGate) \{ ClockGate(clock, enableClock || validVec.orR, ""hwpfIssQClock"") } else clock{quote}",11/Jul/22 8:27 AM;5acffeafaa802f2a797a955c;[~accountid:627586097de1ec00695bca96] it seems strange that your case of having one clock gate is still worse than the _original_ design with only one clock gate.  What is different then?  Something should explain the increase in clock power even though the number of clock gates is the same.  Is the clock enable conditional exactly the same?,"11/Jul/22 8:41 AM;627586097de1ec00695bca96;Hi [~accountid:5acffeafaa802f2a797a955c], Having one clock gate I tested refers to adding one clock gate. There was a clock gate in HwpfIssQ, and the age matrix and each entry would share this clock gate. So there are actually two clock gates after I adding one. This is a problem with the object written at that time. When nRegions = 1, GenerateGatedIssQClocks will generate a clock gate. Originally, there was a clock gate in Hwpf, which was connected to the age matrix, so there are two in total. I should change the code in HwpfIssQ.scala so that when nRegion=1, there is only one clock gate in total.","11/Jul/22 9:42 AM;5acffeafaa802f2a797a955c;Okay, that makes sense.  I think after your PR ([https://github.com/sifive/federation/pull/24394|https://github.com/sifive/federation/pull/24394|smart-link] ) you can mark this ticket as resolved.","11/Jul/22 9:48 AM;627586097de1ec00695bca96;I got it, thanks.","11/Jul/22 11:36 AM;5acffeafaa802f2a797a955c;[~accountid:627586097de1ec00695bca96] the {{Impacts Performance}} field is used to indicate that this change may impact the performance (IPC) of a configuration.  Since these clock gating changes should not change the IPC in any way, we should make it {{No impact}}.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] simple reduction register conflict when vs2 group overlaps with vd,[TGV] simple reduction register,,,,,MAL-2084,118510,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,6/22/2022 16:28,9/7/2022 17:43,9/28/2022 0:51,6/24/2022 20:10,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,TGV,,,"Problem detected for simple reduction when the destination register overlap with the input vector register group, e.g. {{vredsum.vs v6, v4, v6 (LMUL=4)}}
this is going to be sequenced as:

{noformat} vredsum.vs v6, v4, v6 (LMUL=1)
 vredsum.vs v6, v5, v6 (LMUL=1)
 vredsum.vs v6, v6, v6 (LMUL=1) <= problem here, v6 has been overwritten by the 2 previous uops
 vredsum.vs v6, v7, v6 (LMUL=1){noformat}

2 solutions:
(A) change the sequencing to:

{noformat} vredsum.vs v6, v6, v6 (LMUL=1) <= the conflicting destination is reduced as vs2 first (before being overwritten)
 vredsum.vs v6, v5, v6 (LMUL=1)
 vredsum.vs v6, v4, v6 (LMUL=1) <= the original first vs2 value is swapper when the conflicting vs2 should have been used
 vredsum.vs v6, v7, v6 (LMUL=1){noformat}

🔻  This approach has several drawbacks:

* it requires dynamic computation of the first {{vs2}} value once the conflict uop is to be generated (which can happen after several sequencing cycles)
* the first uop (swapped {{src2 <- vd}} source should be sequenced with the same {{vl}} as the original uop with {{vs2 = vd}}, which may be {{dBytes / SEW}} or the remainder of vl % (dBytes / SEW) depending on the position of the conflicting uop
* the uop sequenced on the original conflic position ({{src2 <- vs2}}) should have the first uop original {{vl}} value
* mask chunk indexing may require the {{csid}} to be swapped too

(B) use the complex reduction sequencer:

{noformat} vredsum.vs v32, v4, v6 (LMUL=1) <= an extra temporary register outside of the architectural range is used
 vredsum.vs v32, v5, v32 (LMUL=1)
 vredsum.vs v32, v6, v32 (LMUL=1) <= the original conflicting vs2 value has not been overwritten
 vredsum.vs v6, v7, v32 (LMUL=1){noformat}",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-24T20:10:32.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/1c0b71157a1a4a8327b9c6a7176d27ce8dea00d0,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,No,,,,,,,,,,,,2|hzzu7r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
History Rot clock gating enable ,,,,,,MAL-2083,118504,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Won't Do,Josh Smith,5acffeafaa802f2a797a955c,Mehul Thakkar,622a8208db58c100687dd15a,Mehul Thakkar,622a8208db58c100687dd15a,6/22/2022 15:58,7/29/2022 9:06,9/28/2022 0:51,7/6/2022 10:49,,,,,,,,,,,,,Power,RTL/Frontend,,,,,,,,0,,,,"Hope I am understanding this right, historyRot_F3 getting clocked whenever fq is not full. In power window there are no flushes and late redirects happening. Causing the efficiency for this 128b flops to drop to 60%. 

Anyway to strengthen the enable ? The inferred clock gating have 3 levels of clock buffer driving clocks to all flop instances and this could save quite a bit of power in BrachHist. 

!Screen Shot 2022-06-22 at 3.49.31 PM.png|width=1296,height=240!

!Screen Shot 2022-06-22 at 3.47.46 PM.png|width=721,height=20!",Josh Smith,Mehul Thakkar,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,622a8208db58c100687dd15a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,22/Jun/22 3:58 PM;ug:2705f964-33ce-446a-be5d-9a27412f841d;Screen Shot 2022-06-22 at 3.47.46 PM.png;https://sifive.atlassian.net/secure/attachment/73552/Screen+Shot+2022-06-22+at+3.47.46+PM.png,22/Jun/22 3:58 PM;ug:2705f964-33ce-446a-be5d-9a27412f841d;Screen Shot 2022-06-22 at 3.49.31 PM.png;https://sifive.atlassian.net/secure/attachment/73551/Screen+Shot+2022-06-22+at+3.49.31+PM.png,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),AE Supported,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzu6n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,02:29.0,"24/Jun/22 3:02 PM;5acffeafaa802f2a797a955c;The problem is that {{historyRot_F3}} is a shift register.  It gets shifted by 1 (and a handful of the lower bits get XOR’d with some PC bits) every time there is a taken branch or jump in the F3 stage, which is pretty frequent.  This means that every single bit of the register gets updated when any of the bits get updated.","24/Jun/22 3:14 PM;5acffeafaa802f2a797a955c;The history register used to be maintained as a sort of circular FIFO where just the write pointer incremented.  In that case, only a handful of bits would change every update.  But then to generate the predictor indexes we had to rotate the history which required several levels of muxing and caused timing problems.

I don’t think there’s anything we can do here.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] P670 synthesis config for hammer flow,,,,,,MAL-2082,118404,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,6/21/2022 20:22,6/29/2022 5:23,9/28/2022 0:51,6/28/2022 9:06,,,,,,,,,,,,,Implementation,,,,,,,,,0,,,,"The P670 synthesis command for Hammer flow

{noformat}./scripts/runWake -v build specs/build-plans/pd/base.json specs/build-plans/pd/syn.json specs/build-plans/pd/7nm_H240.json specs/build-plans/pd/<P670 json config name>{noformat}



Currently we still lack P670 config for hammer flow. I build my P670 config using P650’s as the template like this

{{specs/build-plans/pd/p670_tsmc_n7_tsmc_H240_tile.json}}

{noformat}{
  ""Name"": ""ppa_p670_tsmc_n7_H240_tile"",
  ""PPA"": {
    ""GroupName"": ""tsmc7""
  },
  ""PCSSettings"": {
    ""DesignSpec"": ""specs/design/standard/p670.json""
  },
  ""ConstraintGenerationSettings"": {
    ""HierarchicalModules"": {
      ""CoreIPSubsystem"": {
        ""ClockSpec"": """",
        ""Submodules"": []
      },
      ""TilePRCIDomain"": {
        ""ClockSpec"": ""specs/clock/coreip_clocks_ports_TilePRCI.json"",
        ""Submodules"": []
      }
    }
  },
  ""SolitaireSettings"": {
    ""PPASpec"": ""specs/ppa/coreip_tsmc_cln7ff_H240.json"",
    ""SramSpec"": ""specs/sram/coreip_cln7ff_H240.json"",
    ""TechVerilog"": [
      ""vsrc/bb/cln7ff_H240_clock_gate/cln7ff_H240_clock_gate.v""
    ]
  },
  ""FlowRunnerSettings"": {
    ""HammerTechYaml"": ""lib-hammer-sifive/hammer-tsmc7ff-plugin/sifive.yml""
  }
}{noformat}



The synthesis result can be found here

[https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2287338308/TGV+P670+synthesis+result+Prometheus+v.s.+Hammer+no+ULVT+with+ULVT+TGV+only+with+ULVT|https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2287338308/TGV+P670+synthesis+result+Prometheus+v.s.+Hammer+no+ULVT+with+ULVT+TGV+only+with+ULVT|smart-link] ",Brad Wu,Colin Schmidt,Nicolas Brunie,,,,,,,,,,,,,62103777eb2978006893b778,608c619933d525006945bdcc,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-27T07:40:41.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/9e2839d74952eca89b3cf1f662fd8b9c39379e85,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzztlz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,01:24.1,"21/Jun/22 9:01 PM;6065017e90e3950069cf01c5;[~accountid:62103777eb2978006893b778] , rather than patching {{base.json}}, is it possible to list both plan {{base.json syn.json}} to get the same effect ?",21/Jun/22 9:07 PM;62103777eb2978006893b778;That should work. I’ll try it.,28/Jun/22 9:11 AM;608c619933d525006945bdcc;You should delete step 1 now.,"28/Jun/22 9:46 AM;62103777eb2978006893b778;[~accountid:608c619933d525006945bdcc] Is there any way to further reduce the synthesis time for hammer?

It takes 30 hours for P670 and 16 hours for TGV only ({{specs/build-plans/pd/p670_tsmc_cln7ff_tsmc_H240_TGV.json}}).",29/Jun/22 5:23 AM;608c619933d525006945bdcc;There are many things to try in that space but we will need to ensure it doesn’t sacrifice the utility of these synthesis runs by creating results that don’t align with the full PD team runs. We also need some time and resources to look at this.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650 LSU Timing: stqRetArb_stqVecMergeMatch,,,,,,MAL-2081,118336,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,6/21/2022 10:39,9/6/2022 9:13,9/28/2022 0:51,6/24/2022 12:14,,,,,,,,,,,,,RTL/LSU,Timing,,,,,,,,0,,,,"In a LSU block level run I am seeing paths between StQ/stqEntries_*/stqE_retireFsmState_q_reg

Startpoint:             StQ/stqEntries_20/stqE_retireFsmState_q_reg\[0]/CP
Endpoint:              StQ/stqEntries_26/stqE_retireFsmState_q_reg\[0]/DA
Slack:                     -0.0826
Skew:                       0.034
NumLvls:                28
Bud/Invs:                  6
Manhattan (X/Y):  177.798/160.92
PCD:                         0.385
PND:                        0.1088
Corner:                  func_0p675v_0c_cworst_CCworst

!image-20220621-173538.png|width=722,height=588!

See:  /project/tsmc/cln7ff/P6_ppa_runs/michaelw/P650/timing_reports/MAL-2081",Cody Croxton,John Ingalls,Josh Smith,Michael White,Tom Mickelson,,,,,,,,,,,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,MAL-1904,MAL-1903,,,MAL-2110,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,21/Jun/22 2:16 PM;John.Ingalls;MAL-2081.txt;https://sifive.atlassian.net/secure/attachment/73477/MAL-2081.txt,21/Jun/22 10:39 AM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220621-173538.png;https://sifive.atlassian.net/secure/attachment/73465/image-20220621-173538.png,,,,,,,,,,,,,,,a8061024b1826f2e6d19d191b5ef0ac4787b67fb,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-27T10:08:20.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/23843,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzt87:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,25:21.0,"21/Jun/22 2:25 PM;5bb6808b9ba2930990f81895;Darn, even after [https://sifive.atlassian.net/browse/MAL-1903|https://sifive.atlassian.net/browse/MAL-1903|smart-link] and [https://sifive.atlassian.net/browse/MAL-1904|https://sifive.atlassian.net/browse/MAL-1904|smart-link], it’s still taking 400ps to calculate {{stqRetArb_stqVecMergeMatch}}, plus some logic through {{stqRetArbVec_mergeable}} then {{stqEntry_retArbReq.ready}} afterwards.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
BDP Predictor Tables clock gating,,,,,,MAL-2080,118275,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Mehul Thakkar,622a8208db58c100687dd15a,Mehul Thakkar,622a8208db58c100687dd15a,6/20/2022 22:55,7/29/2022 9:03,9/28/2022 0:51,7/27/2022 7:38,,,,,,,,,,,,,Power,RTL/Frontend,,,,,,,,0,,,,"All the Predictor tables in P650 are running with ifu clock, in netlist these instances are driven by long heavily sized clock tree which is burning about 3% of total dynamic power. To begin with - it will help to add a clock gate outside (Similar to L1D) to reduce toggles in clock tree. 

Also -how the tagged_table are organized, can we strengthen the enable ? We are not reading 1_0, 1_1 and 3_0 and 3_1 tables in Dhrystone but the enables seems to be toggle quite a bit. ",Chia-I Chen,I-Cheng Cheng,John Ingalls,Josh Smith,Mehul Thakkar,,,,,,,,,,,61aaafab977c5b007241043c,5d7bfdaa003e040c3e175060,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,622a8208db58c100687dd15a,,,,,,,,,,,,,,,,,,MAL-2090,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2185,,,,,,,,,,,21/Jun/22 11:02 AM;ug:2705f964-33ce-446a-be5d-9a27412f841d;Screen Shot 2022-06-21 at 10.58.57 AM.png;https://sifive.atlassian.net/secure/attachment/73468/Screen+Shot+2022-06-21+at+10.58.57+AM.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-27T07:37:09.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,a6946e349d9491d225e476dd4c34885ed841b439,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzzswv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,39:54.7,21/Jun/22 9:39 AM;5acffeafaa802f2a797a955c;[~accountid:622a8208db58c100687dd15a] What do you mean “we are not reading them but the enables are toggling”?  How do you know we are not reading them then?,"21/Jun/22 11:02 AM;622a8208db58c100687dd15a;[~accountid:5acffeafaa802f2a797a955c] forgot to attached the snapshot, In Dhrystone, rddata and WrData doesn’t really change for bank 3_* and 1_* but enabled have quite a bit of activity with free running clock, I am not sure if its intentional. Are we reading multiple Bank’s together ? 

!Screen Shot 2022-06-21 at 10.58.57 AM.png|width=1306,height=511!","21/Jun/22 2:00 PM;5acffeafaa802f2a797a955c;Yeah, those tables are not used much in Dhrystone because our branch predictor is quite accurate (or the branches are easily predictable).  However, we don’t have any widget to say “Don’t read all of the predictor tables, only read some of them”.  It’s not impossible, but doing that would potentially hurt predictor accuracy and performance.","21/Jun/22 10:39 PM;622a8208db58c100687dd15a;[~accountid:5acffeafaa802f2a797a955c] These tables are consuming 3% dynamic power, its worth visiting Power-Perf trade-off or add a widget which stops reading a Bank if output is all 0’s until next write happens. ","25/Jul/22 11:19 PM;61aaafab977c5b007241043c;hi [~accountid:5acffeafaa802f2a797a955c], do you expect any performance change on this PR?  It looks like  {{disableUpperTaggedTables}} is reused for clock gating. I think the performance should be the same as in [https://sifive.atlassian.net/browse/MAL-2185|https://sifive.atlassian.net/browse/MAL-2185|smart-link].",26/Jul/22 12:05 PM;5acffeafaa802f2a797a955c;[~accountid:61aaafab977c5b007241043c] no I don’t expect this to change performance. The clocks should not be gated off in cycles where we actually wanted to read the predictor.,"27/Jul/22 7:38 AM;5acffeafaa802f2a797a955c;I also changed some logic to reduce toggling on the address pins of the upper tagged tables when they are already disabled from the power widget I recently added.

PowerArtist shows about 0.7mW improvement on Dhrystone.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LDPipes clock gating fixes ,,,,,,MAL-2079,118250,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Shreyas Ravishankar,63096787998cd0d8cb392a85,Mehul Thakkar,622a8208db58c100687dd15a,Mehul Thakkar,622a8208db58c100687dd15a,6/20/2022 18:52,9/27/2022 17:03,9/28/2022 0:51,,,,,,,,,,,,,,Power,RTL/LSU,,,,,,,,0,,,,"Simillar to LST pipes - adding this ticket to track LDPipes clock gating fixes. Need to add more finer grain clock gating 

!Screen Shot 2022-06-20 at 6.51.03 PM.png|width=863,height=193!",Mehul Thakkar,,,,,,,,,,,,,,,622a8208db58c100687dd15a,,,,,,,,,,,,,,,,,,,,,,MAL-2506,,,,MAL-1859,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,20/Jun/22 6:52 PM;ug:2705f964-33ce-446a-be5d-9a27412f841d;Screen Shot 2022-06-20 at 6.51.03 PM.png;https://sifive.atlassian.net/secure/attachment/73420/Screen+Shot+2022-06-20+at+6.51.03+PM.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzsrz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
FreeList freeVec clock gating ,,,,,,MAL-2078,118249,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Jeffrey Huang,627586097de1ec00695bca96,Mehul Thakkar,622a8208db58c100687dd15a,Mehul Thakkar,622a8208db58c100687dd15a,6/20/2022 17:46,8/17/2022 12:23,9/28/2022 0:51,8/13/2022 11:16,,,,,,,,,,,,,Power,RTL/RDU,,,,,,,,0,,,,"Please add a suitable clock gate and RegEn for below signals. 

TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.fexFreelist.freeVec\[207:0]",Jeffrey Huang,Josh Smith,Mehul Thakkar,,,,,,,,,,,,,627586097de1ec00695bca96,5acffeafaa802f2a797a955c,622a8208db58c100687dd15a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11/Aug/22 3:53 PM;ug:12b76939-5cd7-4f44-92e1-122c9b804a69;Screen Shot 2022-08-11 at 3.52.25 PM.png;https://sifive.atlassian.net/secure/attachment/75743/Screen+Shot+2022-08-11+at+3.52.25+PM.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-13T11:14:57.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,c8006aba77cc996924174fe0da92bce769507f72,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzzsrr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,40:32.8,01/Aug/22 7:40 PM;5acffeafaa802f2a797a955c;Reassigning to [~accountid:627586097de1ec00695bca96].  There’s an example of creating a shared clock gate for multiple entries/bits in my PR for [https://sifive.atlassian.net/browse/MAL-2300|https://sifive.atlassian.net/browse/MAL-2300|smart-link] here: [https://github.com/sifive/federation/pull/24971|https://github.com/sifive/federation/pull/24971|smart-link] ,"11/Aug/22 10:51 AM;627586097de1ec00695bca96;Hi [~accountid:5acffeafaa802f2a797a955c] . This is the PowerArtist result of iexFreelist:

!Screen Shot 2022-08-11 at 3.52.25 PM.png|width=2052,height=1045!



The top of the picture is the result before change, and the bottom of the picture is the result after the change(add a clock gate to freeVec, 4 bits share one gate). For example, the total power dropped from 2.49mW to 2.19mW.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Synthesis Friendly RTL for ram_pc in InstQueue ,,,,,,MAL-2077,118242,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Won't Do,Josh Smith,5acffeafaa802f2a797a955c,Mehul Thakkar,622a8208db58c100687dd15a,Mehul Thakkar,622a8208db58c100687dd15a,6/20/2022 11:51,7/29/2022 9:06,9/28/2022 0:51,7/6/2022 18:09,,,,,,,,,,,,,Power,RTL/Frontend,,,,,,,,0,,,,"I noticed most of ram_pc in InstQueue is not getting inferred clock gating in synthesis. Root cause looks like the way RTL is generated.

Opening this ticket to investigate the issues, this could be happening in other places as well. I will keep looking 

In below snapshot last line ram_0_pc doesn’t get inferred clock gating. Can we use RegEn instead. 



!Screen Shot 2022-06-15 at 1.09.42 AM.png|width=445,height=427!",Josh Smith,Mehul Thakkar,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,622a8208db58c100687dd15a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,20/Jun/22 11:51 AM;ug:2705f964-33ce-446a-be5d-9a27412f841d;Screen Shot 2022-06-15 at 1.09.42 AM.png;https://sifive.atlassian.net/secure/attachment/73413/Screen+Shot+2022-06-15+at+1.09.42+AM.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzsq7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,03:02.4,"06/Jul/22 6:03 PM;5acffeafaa802f2a797a955c;In my recent synthesis runs (as of 06/24/2022), {{ram_0_pc}} gets a clock gate.  The verilog generation does look different now that MFC is used.",06/Jul/22 6:09 PM;5acffeafaa802f2a797a955c;I’m going to close this as won’t do for now. We can reopen if it’s still needed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Clock and Data Gating for NLP Banks ,,,,,,MAL-2076,118238,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,Mehul Thakkar,622a8208db58c100687dd15a,Mehul Thakkar,622a8208db58c100687dd15a,6/20/2022 10:28,9/12/2022 12:36,9/28/2022 0:51,,,,,,,,,,,,,,Power,RTL/Frontend,,,,,,,,0,,,,"NLP Banks are consuming ~3% of total dynamic power in Dhrystone. We characterized the SRAM separately and Clock gating Banks separately and Data Gate (with CEB?) would help reduce dynamic power significantly. 

Data Gating at source (CRS reg or at Frontend boundary) is more beneficial since the toggles/Glitches traveling quite a bit through a heavily sized buffer tree to reach NLP bank DPINs. 

Here’s the sample data from SRAM characterization. Attached snapshot shows the D pin and clock toggling when chip is not accessed. 

|Clock|100%|100%|100%|100%|100%|100%|100%|100%|100%|
|Data|50%|50%|60%|60%|0%|0%|0%|50%|60%|
|Q|50%|50%|60%|60%|0%|0%|0%|50%|60%|
|Mode|Read|Write|Read|Write|Read|Write|R/W|R/W|R/W|
|CEB|0|0|0|0|0|0|1|1|1|
| | | | | | | | | | |
|Dyn (mW/GHz)|3.19|3.07|3.347|3.23|2.025|1.907|0.016|1.18|1.34|

Sample Path to DPIN, notice the D12/D18 inverters on the path. 

!Screen Shot 2022-06-20 at 10.27.46 AM.png|width=1275,height=541!



Thanks 

Mehul ",Josh Smith,Mehul Thakkar,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,622a8208db58c100687dd15a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2337,,,,,,,,,,,20/Jun/22 10:25 AM;ug:2705f964-33ce-446a-be5d-9a27412f841d;Screen Shot 2022-06-20 at 10.25.23 AM.png;https://sifive.atlassian.net/secure/attachment/73407/Screen+Shot+2022-06-20+at+10.25.23+AM.png,20/Jun/22 10:28 AM;ug:2705f964-33ce-446a-be5d-9a27412f841d;Screen Shot 2022-06-20 at 10.27.46 AM.png;https://sifive.atlassian.net/secure/attachment/73408/Screen+Shot+2022-06-20+at+10.27.46+AM.png,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-31T10:35:04.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,,,,,,,,,,,,,2|hzzspb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,36:13.3,"31/Jul/22 10:36 AM;5acffeafaa802f2a797a955c;I merged in one commit to help reduce the toggling on the WDATA pins a lot, but it’s still not perfect. {{47fdcfe63a2e971c2fb5e054bed70a8795ded8e1}}.  I think PowerArtist showed that helped by about 0.42mW. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Improve logic to allocate indices to instructions from PCMT - Healdsburg,,,,,,MAL-2075,118236,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Vishad Viplav,623e520c94742a00683f710a,Vishad Viplav,623e520c94742a00683f710a,Vishad Viplav,623e520c94742a00683f710a,6/20/2022 9:58,9/27/2022 11:19,9/28/2022 0:51,7/7/2022 15:56,,,,,,,,,,,,,Implementation,RTL/RDU,,,,,,,,0,,,,"Hi,



We are observing high logic depth paths from Dispatch Buffers through PCMT to BRQ Fifo. The Stall conditions are being checked from LSU Dispatch Buffer and other structures which is then being used during PCMT indices allocation and finally the indices go with the instructions for BRQ write. For Index allocations from PCMT, we have a recursive operation and since the number of rename ports is increasing from 4 in p650 to 8 in healdsburg - there is a significant increase in logic depth



For P650;

5 gates for LSU disp buffer stall + 5 gates for stall_REN computation + 10 gates for PCMT indices allocation + 2 gates for rotation in BRQ = 22 logic depth



For Healdsburg;

7 gates for LSU disp buffer stall + 7 gates for stall_REN computation + 18 gates for PCMT indices allocation + 5 gates for rotation in BRQ = 37 logic depth



We will be able to reduce a couple of gates in synthesis, but the logic depth would still be difficult to meet for our target spec.



Starting this thread to discuss and track changes related to this path",Josh Smith,Mayank Tutwani,Vaibhav Gupta,Vishad Viplav,,,,,,,,,,,,5acffeafaa802f2a797a955c,623e4216a1d81f0069da0ea2,623e4830b75ca80070580145,623e520c94742a00683f710a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1834,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,20/Jun/22 10:02 AM;ug:519a710a-c989-4f27-af37-bfaa49b5eb6c;RDU critical paths (mallard) - PCMT allocation (1).png;https://sifive.atlassian.net/secure/attachment/73404/RDU+critical+paths+%28mallard%29+-+PCMT+allocation+%281%29.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1f70db945b01bccc889ba76a0b73dbd3a8c98307,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzsov:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,33:16.5,"21/Jun/22 9:33 AM;5acffeafaa802f2a797a955c;There are already two other tickets filed from a long time ago for the PCMT

[https://sifive.atlassian.net/browse/MAL-1650|https://sifive.atlassian.net/browse/MAL-1650|smart-link]

[https://sifive.atlassian.net/browse/MAL-1834|https://sifive.atlassian.net/browse/MAL-1834|smart-link]

The plan is to modify the PCMT allocation scheme so that we can only allocate up to 2 entries per cycle, instead of up to {{nRename == 8}} for Healdsburg.","07/Jul/22 3:55 PM;5acffeafaa802f2a797a955c;This path should actually get better after some timing fixes I made for [https://sifive.atlassian.net/browse/MAL-2115|https://sifive.atlassian.net/browse/MAL-2115|smart-link] 

The change I made in that ticket was to remove {{stall_REN}} from the logic cone of {{io.lookupResp_REN}} in the PCMT.  So paths starting at the dispatch buffer stall should be gone now.

I’m going to mark this as resolved for now.  There is still [https://sifive.atlassian.net/browse/MAL-1834|https://sifive.atlassian.net/browse/MAL-1834|smart-link] which should help with other PCMT timing paths.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Move X2Y into VEX,,,,,,MAL-2074,118132,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/17/2022 8:17,7/6/2022 7:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/RDU,TGV_RTL/Top,TGV_RTL/X2Y,,,,,,,0,,,,"To keep the TGV partitions as clean as possible, we probably want to push X2Y down from TGV top level. Moving it into VEX makes the most sense. The {{s2vPra}} should go into VRDU if it’s not already there.",David Kravitz,,,,,,,,,,,,,,,5fd15143b4a74900763834e0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1992,,,,MAL-2088,MAL-2096,MAL-2099,MAL-2133,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-06-28T06:33:51.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzs2f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] Mask unit partitioning and the VexPipe issuing limitation for mask instructions,,,,,,MAL-2073,118113,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,6/17/2022 0:42,7/14/2022 18:45,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/RDU,TGV_RTL/VEX,,,,,,,,0,,,,"Discussion thread: 

[https://sifive.slack.com/archives/C02LGLVN2LD/p1655436810028219|https://sifive.slack.com/archives/C02LGLVN2LD/p1655436810028219|smart-card]

Since {{Mask Unit}} is instantiated in 1 VexPipe only, we need to choose which function block is part of the {{Mask Unit}}. Mask instructions are implemented like the following diagram:
[https://lucid.app/lucidchart/48b8606a-57d2-412d-9daf-bf039796e188/edit?invitationId=inv_f7870448-6a8b-4960-80d3-40c08e7da3aa&page=0_0#?referringapp=slack|https://lucid.app/lucidchart/48b8606a-57d2-412d-9daf-bf039796e188/edit?invitationId=inv_f7870448-6a8b-4960-80d3-40c08e7da3aa&page=0_0#?referringapp=slack|smart-link] 

Current TGV implementation (commit 61fb10d7337f58bdd3e6ab9509e3a0365f352be0) only treat {{mask_logical || vmsxf || vpopc_first}} as mask instruction for Mask Unit. We might want add mask instructions that uses accumulator (like {{v[f]mcompare}}) or IotaUnit (like {{viota}}) to it and remove instructions that does not need to be limited in a single pipe (like {{mask logical}} / {{vmsxf}} / {{vpopc}}).



These two json configuration affects the scheduling behavior of mask instructions:

* hasMask: Whether this pipe instantiates {{Mask Unit}}
* hasV2S: vpopc / vfirst",Brad Wu,David Kravitz,Nicolas Brunie,,,,,,,,,,,,,62103777eb2978006893b778,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzry7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,16:40.5,"28/Jun/22 7:16 AM;5fd15143b4a74900763834e0;Maybe we need to change some of the parameter names. We only want to have one mask accumulators on one pipe, and anything that feeds the accumulators might be easier if those operations are on the same pipe. Operations that do not feed mask accumulators have more flexibility. On the other hand, operations that are likely to have {{v0}} destinations also want to “be closer” to the mask RF. There no straightforward answer.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
vmsxf,,,,,,MAL-2072,118111,118095,Sub-task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,6/16/2022 23:06,8/31/2022 5:37,9/28/2022 0:51,8/31/2022 5:37,,,,,,,,,,,,,TGV_RTL/MU,,,,,,,,,0,,,,,Brad Wu,Nicolas Brunie,,,,,,,,,,,,,,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2071,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzrxr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,118095,[TGV] Test mask instructions in P670,Done
[TGV] Test mask instructions in P670,,,,,,MAL-2071,118095,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,6/16/2022 17:46,9/23/2022 0:27,9/28/2022 0:51,8/31/2022 5:36,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,"{panel:bgColor=#deebff}
Because mask unit only instantiated in 1 pipe, we need to test mask instruction in P670 to see if any bug exist like {{vfirst.m}} below.
{panel}

[https://sifive.slack.com/archives/C02LGLVN2LD/p1655425147411149|https://sifive.slack.com/archives/C02LGLVN2LD/p1655425147411149|smart-card]

* \[v] vmsxf
* \[x] vfirst / vpopc  (Fixed by David)
* \[v] mask logical
* \[v] vm\[f]compare (RVV 11.8/Integer, RVV13.13/Floating-point)
* \[v] viota (LMUL=1 only)",Andrew Hanselman,Brad Wu,Nicolas Brunie,Shaka Kao,,,,,,,,,,,,609d7e1f5998a6006800dcc5,62103777eb2978006893b778,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,MAL-2072,MAL-2365,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzruf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,56:24.8,"07/Aug/22 8:56 PM;5f94696c29bd8a006f94f0e1;Hi [~accountid:62103777eb2978006893b778], below is the P670 regression for {{vtg-tgv-tests.ouline}} with RVV 13.13 floating-point compare instructions.

git hash: c2c9e663a1ad832030239e4ab670ec2d2163251c

Outline config:

* enable_masking = 0
* enable_exceptions = 1
* num_of_tests_gen = 50
* mask = 7



The “valid test cases” for each instruction are still low, for example, for {{vmfeq.vf}}, indeed VTG generates 50 cases for {{vmfeq.vf}}, however, 

* {color:#bf2600}47 cases are “illegal instruction” cases{color}
* {color:#bf2600}2 cases are {color}{{VL = 0}}{color:#bf2600} cases{color}
* {color:#bf2600}ONLY 1 case indeed tests {color}{{vmfeq.vf}}



So, before [https://sifive.atlassian.net/browse/VI-7617|https://sifive.atlassian.net/browse/VI-7617|smart-link] issue resolved, we should set {{enable_exceptions = 0}} locally to TGV regression.



{noformat}|                                                                                    name   |      config   | simulator   |   cputime |   bucket | UUID         |
|-------------------------------------------------------------------------------------------|---------------|-------------|-----------|----------|--------------|
| regr_0808/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_p670   | vcs         |    109.69 |        1 | 6a64357243   |
| regr_0808/vtg-tgv-tests.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_p670   | vcs         |    107.72 |        2 | 95d67a6e9a   |
| regr_0808/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmflt.vf       | coreip_p670   | vcs         |     92.24 |        3 | e4f86a6d12   |
| regr_0808/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_p670   | vcs         |    114.12 |        2 | c0ea9b9ce0   |


  Bucket  Failure                                                            Count
--------  ---------------------------------------------------------------  -------
       1  FAILED: Test Result Registered Name TestDriver.testHarness.i_TF        1
       2  COSIM-ERROR# COSIM VS RTL WRDATA MISMATCH                              2
       3  COSIM-ERROR# COSIM VS RTL PC MISMATCH                                  1

Summary:
      |   Total Verilog Compiles |   Total Verilog Sims |   Incomplete/Skipped |   Build Fails |   Sim Failures |   Total Failed
------+--------------------------+----------------------+----------------------+---------------+----------------+----------------
 Jobs |                        1 |                 1276 |                    0 |             0 |              4 |              4{noformat}","09/Aug/22 6:30 AM;5f94696c29bd8a006f94f0e1;{{2022-08-09}} 

git hash: d02d9b7690da7065bf3e544cdac3c28a25bda986

* designJSON: *coreip_p670*

* Outline: vtg-tgv-tests.outline
** {color:#bf2600}*enable_masking = 1*{color}
** *enable_exceptions = 0*
** *num_of_tests_gen = 150*
** flmul = 0
** no_self_check = 1

 

*Regression summary:*

{noformat}Summary:
      |   Total Verilog Compiles |   Total Verilog Sims |   Incomplete/Skipped |   Build Fails |   Sim Failures |   Total Failed
------+--------------------------+----------------------+----------------------+---------------+----------------+----------------
 Jobs |                        1 |                 1276 |                    0 |             0 |             71 |             71{noformat}



*Simulation Failed Categories:*

{noformat}Bucket  Failure                                       Count
--------  ------------------------------------------  -------
       1  Assertion Failure: SiFive_ROB_assert             66
       2  COSIM-ERROR# COSIM VS RTL WRDATA MISMATCH         4
       3  Assertion Failure: SiFive_MSHREntry_assert        1{noformat}

For Bucket (1), an error message example is {{ROB Retire Hang around entry 117}}



*Failed Tests:*

{noformat}|                                                                                        name   |      config   | simulator   |   cputime |   bucket | UUID         |
|-----------------------------------------------------------------------------------------------|---------------|-------------|-----------|----------|--------------|
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vdiv.vx             | coreip_p670   | vcs         |    299.53 |        1 | 523446e089   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vsmul.vx            | coreip_p670   | vcs         |    293.81 |        1 | 9c726f5af8   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vssrl.vi            | coreip_p670   | vcs         |    394.09 |        1 | a65d8e1e46   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vssra.vx            | coreip_p670   | vcs         |    511.6  |        1 | e98fbb9d62   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vnclipu.wv          | coreip_p670   | vcs         |    798.66 |        1 | 5a48320482   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfadd.vf            | coreip_p670   | vcs         |    354.76 |        1 | ae4aa574a7   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfwadd.vv           | coreip_p670   | vcs         |    328.88 |        1 | 2ea57f587a   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfwsub.wv           | coreip_p670   | vcs         |    274.92 |        1 | ca3c5b84db   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfmul.vf            | coreip_p670   | vcs         |    333.8  |        1 | 3e51905c61   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfrdiv.vf           | coreip_p670   | vcs         |    301.9  |        1 | 4ef135bf2f   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfmacc.vv           | coreip_p670   | vcs         |    358.57 |        1 | 1bbe27820c   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfmacc.vf           | coreip_p670   | vcs         |    384.12 |        1 | 3f811f2bec   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfnmacc.vf          | coreip_p670   | vcs         |    350.46 |        1 | 050af2b72d   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfmsac.vf           | coreip_p670   | vcs         |    290.24 |        1 | c692032d21   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfnmsac.vf          | coreip_p670   | vcs         |    321.73 |        1 | cc3794d66f   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfmadd.vv           | coreip_p670   | vcs         |    419.15 |        1 | 16f0506649   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfmadd.vf           | coreip_p670   | vcs         |    366.81 |        1 | d14e7adbad   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfmsub.vv           | coreip_p670   | vcs         |    342.09 |        1 | 1bc5a703de   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfnmsub.vf          | coreip_p670   | vcs         |    333.76 |        1 | adb08e6d90   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfwnmacc.vv         | coreip_p670   | vcs         |    324.05 |        1 | 1ecd0ba537   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfrec7.v            | coreip_p670   | vcs         |    363.37 |        1 | 374aa384f0   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfmin.vv            | coreip_p670   | vcs         |    485.75 |        1 | 62d5f38884   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfmax.vv            | coreip_p670   | vcs         |    418.11 |        1 | 456dec1266   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmfle.vv            | coreip_p670   | vcs         |    298.65 |        1 | 443eb3885d   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfcvt.x.f.v         | coreip_p670   | vcs         |    361.27 |        1 | 4a22561661   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfcvt.f.x.v         | coreip_p670   | vcs         |    395.96 |        1 | 1c612263aa   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfwcvt.f.f.v        | coreip_p670   | vcs         |    326.99 |        1 | 767cb81285   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfncvt.xu.f.w       | coreip_p670   | vcs         |    522.14 |        1 | ca6c7816fa   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfncvt.rtz.xu.f.w   | coreip_p670   | vcs         |    615.14 |        1 | 2f0f69c8eb   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfncvt.f.f.w        | coreip_p670   | vcs         |    294.93 |        1 | 25d8d2e43c   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfncvt.rod.f.f.w    | coreip_p670   | vcs         |    304.8  |        1 | 28463f2d92   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vredmaxu.vs         | coreip_p670   | vcs         |    523.33 |        1 | f031da6aa2   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vredor.vs           | coreip_p670   | vcs         |    427.02 |        2 | 4b5e477d62   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfredsum.vs         | coreip_p670   | vcs         |    273.95 |        1 | eacba9e354   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfredmax.vs         | coreip_p670   | vcs         |    316.83 |        1 | 1f20cec93b   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfredmin.vs         | coreip_p670   | vcs         |    298.2  |        1 | ceeb500ecc   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vcompress.vm        | coreip_p670   | vcs         |     93.91 |        2 | 955c91c635   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vfwmsac.vv          | coreip_p670   | vcs         |    297.47 |        1 | d4228a02c1   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmflt.vf            | coreip_p670   | vcs         |    269    |        1 | f17496ec77   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vredminu.vs         | coreip_p670   | vcs         |    317.31 |        1 | 49cb2ea7b8   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vfredsum.vs         | coreip_p670   | vcs         |    393.27 |        1 | 6bcaf9c778   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vfredmax.vs         | coreip_p670   | vcs         |    251.69 |        1 | cf8920b4dc   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vfredmin.vs         | coreip_p670   | vcs         |    288.58 |        1 | 556ab27f42   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vfwredsum.vs        | coreip_p670   | vcs         |    272.21 |        1 | 571fe0d7ac   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vcompress.vm        | coreip_p670   | vcs         |     95.77 |        2 | bfaaec2c32   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vfnmacc.vf          | coreip_p670   | vcs         |    662.72 |        1 | aaacbf845d   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vfmsub.vv           | coreip_p670   | vcs         |    477.64 |        1 | 7ef75240c8   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vfcvt.x.f.v         | coreip_p670   | vcs         |    305.36 |        1 | 247f4304f9   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vfncvt.x.f.w        | coreip_p670   | vcs         |    899.45 |        1 | c887964c7a   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vredmaxu.vs         | coreip_p670   | vcs         |    483.43 |        1 | 6497ed8e75   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vredminu.vs         | coreip_p670   | vcs         |    279.87 |        1 | 161a41d1b0   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vfredosum.vs        | coreip_p670   | vcs         |    302.34 |        1 | d0e4872288   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vfredmax.vs         | coreip_p670   | vcs         |    244.67 |        3 | cbfd742ae5   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vand.vv             | coreip_p670   | vcs         |    963.83 |        1 | b3eaa7c9b1   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vand.vi             | coreip_p670   | vcs         |    332.19 |        1 | 30f95d6979   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmulhsu.vv          | coreip_p670   | vcs         |    900.49 |        1 | 89891df0a0   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vssrl.vx            | coreip_p670   | vcs         |    346.78 |        1 | 71f33ae158   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vssra.vx            | coreip_p670   | vcs         |   1402.87 |        1 | cb0cf95ac0   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfadd.vf            | coreip_p670   | vcs         |    755.85 |        1 | aea5ee9d80   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfsub.vv            | coreip_p670   | vcs         |    602.5  |        1 | 8f9082e5f6   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfrsub.vf           | coreip_p670   | vcs         |    419.84 |        1 | da50352b7f   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfdiv.vv            | coreip_p670   | vcs         |    315.53 |        1 | 42669cd48a   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfnmadd.vv          | coreip_p670   | vcs         |    284.24 |        1 | 626753fae0   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfnmsub.vv          | coreip_p670   | vcs         |    284.17 |        1 | 289305ba99   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfcvt.f.x.v         | coreip_p670   | vcs         |    333.33 |        1 | 515f46be80   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vredor.vs           | coreip_p670   | vcs         |    701.1  |        1 | 2b3b778aa2   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfredsum.vs         | coreip_p670   | vcs         |    266.72 |        1 | 842e029ceb   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfredmax.vs         | coreip_p670   | vcs         |    268.65 |        1 | b63594b23a   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfredmin.vs         | coreip_p670   | vcs         |    321.74 |        1 | af8720f770   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfwredsum.vs        | coreip_p670   | vcs         |    353.86 |        1 | c9d29a5627   |
| regrMask/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm        | coreip_p670   | vcs         |    122.28 |        2 | b7d7bce4c4   |


  Bucket  Failure                                       Count
--------  ------------------------------------------  -------
       1  Assertion Failure: SiFive_ROB_assert             66
       2  COSIM-ERROR# COSIM VS RTL WRDATA MISMATCH         4
       3  Assertion Failure: SiFive_MSHREntry_assert        1{noformat}",09/Aug/22 6:55 PM;62103777eb2978006893b778;[~accountid:5f94696c29bd8a006f94f0e1] I can reproduce the errors. I’m checking some “{{Assertion Failure: SiFive_ROB_assert}}“ cases to see if anything is broken.,"09/Aug/22 7:00 PM;5f94696c29bd8a006f94f0e1;[~accountid:62103777eb2978006893b778], I will also check some instructions. I rerun {{vand.vv}} and indeed failed. A little bit surprised. ","09/Aug/22 8:43 PM;62103777eb2978006893b778;From the first look, it seems like {{csid}} set to bogus value in VRDU before send to dispBuf, I will check it afternoon.","09/Aug/22 8:45 PM;5f94696c29bd8a006f94f0e1;{quote}someone.Frsomeone.Frosomeone.someone.From the first look, it seems like {{csid}} set to bogus value in VRDU before send to dispBuf, I will check it afternoon.{quote}

Is “someone.Frsomeone.Frosomeone.someone” encrypted? 😆 ","10/Aug/22 12:22 AM;6065017e90e3950069cf01c5;[~accountid:62103777eb2978006893b778] / [~accountid:5f94696c29bd8a006f94f0e1] there are a couple of know bugs in {{p670}} in particular a {{vl}} corruption in the sequencer which can lead to a bad number of uops being generated (and maybe a bad {{csid}}).

You may want to try the on-going fix in [https://github.com/sifive/federation/pull/25186|https://github.com/sifive/federation/pull/25186|smart-link]  to see if the problem is not related.","10/Aug/22 3:01 AM;62103777eb2978006893b778;I found a simple reduction bug in the sequencer where the csid is not set if it is queued in sequencer entry with index > 1 and is a singleUop, then the reduction sequencer will not generate sequence for it.

I’ll check if my patch can fix it and file a separate ticket.","10/Aug/22 4:46 AM;5f94696c29bd8a006f94f0e1;Quick regression update:

TL;DR: Regression result for P670:

* With [~accountid:6065017e90e3950069cf01c5] 's fix: Fail/Total: *11/1276*; was 71/1276 👍 
* The remaining failed tests majorly belong to reduction operations.

We will rerun the regression with Brad’s fix.



{{2022-08-10}} 

git hash: fd99353c972f2dcde777a3c9c9f3ef7d4cf38bba

* Use {{MAL-2314_tgv-seq-inv-vl-update}} and rebased to master

{noformat}commit fd99353c972f2dcde777a3c9c9f3ef7d4cf38bba (HEAD -> MAL-2314_tgv-seq-inv-vl-update)
Author: Nicolas Brunie <nicolas.brunie@sifive.com>
Date:   Tue Aug 9 07:12:50 2022 -0700

    [MAL-2314][TGV] disabling invalid vl update

commit e14c04169074a6b85b9522f2858f995f7198aeee (origin/master, origin/HEAD, master)
Merge: 3cb95d7ed1f 2f8286bde71
Author: Ankit Sheth <87071790+ankit-sheth-sifive@users.noreply.github.com>
Date:   Wed Aug 10 09:25:30 2022 +0530{noformat}



* designJSON: *coreip_p670*
* Outline: vtg-tgv-tests.outline
** {color:#bf2600}*enable_masking = 1*{color}
** *enable_exceptions = 0*
** *num_of_tests_gen = 150*
** flmul = 0
** no_self_check = 1



*Regression summary:*

Fail/Total: 11/1276; was 71/1276 

{noformat}Summary:
      |   Total Verilog Compiles |   Total Verilog Sims |   Incomplete/Skipped |   Build Fails |   Sim Failures |   Total Failed
------+--------------------------+----------------------+----------------------+---------------+----------------+----------------
 Jobs |                        1 |                 1276 |                    0 |             0 |             11 |             11{noformat}



*Failed tests:*

{noformat}|                                                                               name   |      config   | simulator   |   cputime |   bucket | UUID         |
|--------------------------------------------------------------------------------------|---------------|-------------|-----------|----------|--------------|
| regr_0810/tgv-regr.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vredand.vs     | coreip_p670   | vcs         |    225.9  |        1 | ad366ed5b0   |
| regr_0810/tgv-regr.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfredmax.vs    | coreip_p670   | vcs         |    419.73 |        2 | 92ddfce176   |
| regr_0810/tgv-regr.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_p670   | vcs         |    103.01 |        1 | ffa612b474   |
| regr_0810/tgv-regr.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vfredmin.vs    | coreip_p670   | vcs         |    321.85 |        2 | 662a6214de   |
| regr_0810/tgv-regr.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vfwredsum.vs   | coreip_p670   | vcs         |    324.64 |        2 | d58038aeeb   |
| regr_0810/tgv-regr.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_p670   | vcs         |    106.17 |        1 | 991886fa22   |
| regr_0810/tgv-regr.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vredminu.vs    | coreip_p670   | vcs         |    352.61 |        2 | 9c172695ae   |
| regr_0810/tgv-regr.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfredsum.vs    | coreip_p670   | vcs         |    549.4  |        2 | 2374f5c679   |
| regr_0810/tgv-regr.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfredmax.vs    | coreip_p670   | vcs         |    350.16 |        2 | 77d14666e0   |
| regr_0810/tgv-regr.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfwredsum.vs   | coreip_p670   | vcs         |    373.2  |        2 | 0d5aeadcd7   |
| regr_0810/tgv-regr.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_p670   | vcs         |    110.04 |        1 | d627a237c7   |{noformat}","17/Aug/22 6:39 PM;5f94696c29bd8a006f94f0e1;{{2022-08-18}} 

P670 ({{p670.json}}) regression (SFC build)

*Note: we manually update VTG environment ({{riscv-vector-tests}} submodule)

*Summary*: Failed/Total = {{7 / 1276}}



git hash: accd538ff7dfc5999dfbb445b4a46d3fdef8f85c

OUTLINE: vtg-tgv-tests.outline

* enable_masking = 1
* flmul = 0
* num_of_tests_gen = 100



*Failed Tests*

{noformat}|                                                                         name   |      config   |   bucket |
|--------------------------------------------------------------------------------|---------------|----------|
| sim/tgv-regr.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_p670   |   1      |
| sim/tgv-regr.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmv4r.v        | coreip_p670   |   2      |
| sim/tgv-regr.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmv8r.v        | coreip_p670   |   2      |
| sim/tgv-regr.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_p670   |   1      |
| sim/tgv-regr.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmv1r.v        | coreip_p670   |   1      |
| sim/tgv-regr.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_p670   |   1      |
| sim/tgv-regr.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmv4r.v        | coreip_p670   |   2      |

 Bucket  Failure                                          Count
--------  ---------------------------------------------  -------
       1  COSIM-ERROR# COSIM VS RTL WRDATA MISMATCH            4
       2  COSIM-ERROR# COSIM VS RTL WRDST SIZE MISMATCH        3{noformat}

Note: some instructions ignore “mask value” or no mask form (<inst> rd, rs2, rs1, {{v0.t}})

*Test counts for each instruction*

{noformat}(1)                      (2)     (3)             (4)             (5)             (6)
Inst                   Total| Masked|       (3) VL=0|      (3) VL!=0|       (5)/(2) %
vaaddu.vv                100      55              18              37              37
vaaddu.vx                100      45              12              33              33
vaadd.vv                 100      42              11              31              31
vaadd.vx                 100      42              12              30              30
vadc.vim                 100       0               0               0               0
vadc.vvm                  77       0               0               0               0
vadc.vxm                 100       0               0               0               0
vadd.vi                  100      52              16              36              36
vadd.vv                  100      59              16              43              43
vadd.vx                  100      44               8              36              36
vand.vi                  100      45              14              31              31
vand.vv                  100      50              14              36              36
vand.vx                  100      50              15              35              35
vasubu.vv                100      41               8              33              33
vasubu.vx                100      54              17              37              37
vasub.vv                 100      41               7              34              34
vasub.vx                 100      57              13              44              44
vcompress.vm               5       0               0               0               0
vcpop.m                  100      47              14              33              33
vdivu.vv                 100      46              12              34              34
vdivu.vx                 100      45              18              27              27
vdiv.vv                  100      43              15              28              28
vdiv.vx                  100      50              11              39              39
vfadd.vf                 100      49              12              37              37
vfadd.vv                 100      46              18              28              28
vfclass.v                100      47              15              32              32
vfcvt.f.xu.v             100      52              17              35              35
vfcvt.f.x.v              100      47              14              33              33
vfcvt.rtz.x.f.v          100      48              14              34              34
vfcvt.rtz.xu.f.v         100      45              19              26              26
vfcvt.x.f.v              100      55              18              37              37
vfcvt.xu.f.v             100      46              15              31              31
vfdiv.vf                 100      47              14              33              33
vfdiv.vv                 100      54              17              37              37
vfirst.m                 100      49              15              34              34
vfmacc.vf                100      51              13              38              38
vfmacc.vv                100      50              12              38              38
vfmadd.vf                100      49              16              33              33
vfmadd.vv                100      46              15              31              31
vfmax.vf                 100      49              14              35              35
vfmax.vv                 100      52              13              39              39
vfmerge.vfm              100       0               0               0               0
vfmin.vf                 100      45              14              31              31
vfmin.vv                 100      48              11              37              37
vfmsac.vf                100      49              12              37              37
vfmsac.vv                100      47              11              36              36
vfmsub.vf                100      49              13              36              36
vfmsub.vv                100      45              14              31              31
vfmul.vf                 100      49              18              31              31
vfmul.vv                 100      49               7              42              42
vfmv.f.s                 100       0               0               0               0
vfmv.s.f                 100       0               0               0               0
vfmv.v.f                 100       0               0               0               0
vfncvt.f.f.w             100      48              13              35              35
vfncvt.f.xu.w            100      49              12              37              37
vfncvt.f.x.w             100      48              11              37              37
vfncvt.rod.f.f.w         100      46              10              36              36
vfncvt.rtz.x.f.w         100      49              14              35              35
vfncvt.rtz.xu.f.w        100      55              14              41              41
vfncvt.x.f.w             100      46              12              34              34
vfncvt.xu.f.w            100      52              16              36              36
vfnmacc.vf               100      50              16              34              34
vfnmacc.vv               100      43              13              30              30
vfnmadd.vf               100      53              14              39              39
vfnmadd.vv               100      55              14              41              41
vfnmsac.vf               100      50              16              34              34
vfnmsac.vv               100      46              15              31              31
vfnmsub.vf               100      50              15              35              35
vfnmsub.vv               100      59              21              38              38
vfrdiv.vf                100      52              18              34              34
vfrec7.v                 100      50              15              35              35
vfredmax.vs              100      62              16              46              46
vfredmin.vs              100      58              15              43              43
vfredosum.vs             100      64              20              44              44
vfredusum.vs             100      52              18              34              34
vfrsqrt7.v               100      47               8              39              39
vfrsub.vf                100      52              13              39              39
vfsgnjn.vf               100      47              17              30              30
vfsgnjn.vv               100      50              17              33              33
vfsgnj.vf                  9       5               1               4              44
vfsgnj.vv                  1       1               0               1             100
vfsgnjx.vf                66      27               8              19              28
vfsgnjx.vv                11       6               2               4              36
vfslide1down.vf          100      40              11              29              29
vfslide1up.vf            100      50              13              37              37
vfsqrt.v                 100      49              17              32              32
vfsub.vf                 100      48              11              37              37
vfsub.vv                 100      41              10              31              31
vfwadd.vf                100      47              16              31              31
vfwadd.vv                100      49              14              35              35
vfwadd.wf                100      44              10              34              34
vfwadd.wv                100      42              10              32              32
vfwcvt.f.f.v             100      47              13              34              34
vfwcvt.f.xu.v            100      47              12              35              35
vfwcvt.f.x.v             100      45              11              34              34
vfwcvt.rtz.x.f.v         100      48              13              35              35
vfwcvt.rtz.xu.f.v        100      45              15              30              30
vfwcvt.x.f.v             100      50              12              38              38
vfwcvt.xu.f.v            100      52              14              38              38
vfwmacc.vf               100      52              11              41              41
vfwmacc.vv               100      48              11              37              37
vfwmsac.vf               100      50              11              39              39
vfwmsac.vv               100      56              16              40              40
vfwmul.vf                100      51              13              38              38
vfwmul.vv                100      47              13              34              34
vfwnmacc.vf              100      44               8              36              36
vfwnmacc.vv              100      49              11              38              38
vfwnmsac.vf              100      46              12              34              34
vfwnmsac.vv              100      49              13              36              36
vfwredosum.vs            100      52              14              38              38
vfwredusum.vs            100      45              13              32              32
vfwsub.vf                100      48              13              35              35
vfwsub.vv                100      50              12              38              38
vfwsub.wf                100      46              14              32              32
vfwsub.wv                100      48              13              35              35
vid.v                    100      48              13              35              35
viota.m                  100      48              13              35              35
vmacc.vv                 100      44              11              33              33
vmacc.vx                 100      52               7              45              45
vmadc.vi                 100       0               0               0               0
vmadc.vim                100       0               0               0               0
vmadc.vv                 100       0               0               0               0
vmadc.vvm                100       0               0               0               0
vmadc.vx                 100       0               0               0               0
vmadc.vxm                100       0               0               0               0
vmadd.vv                 100      52              14              38              38
vmadd.vx                 100      52              14              38              38
vmand.mm                 100       0               0               0               0
vmandn.mm                100       0               0               0               0
vmaxu.vv                 100      46              13              33              33
vmaxu.vx                 100      46               8              38              38
vmax.vv                  100      47              15              32              32
vmax.vx                  100      52              15              37              37
vmerge.vim               100       0               0               0               0
vmerge.vvm               100       0               0               0               0
vmerge.vxm               100       0               0               0               0
vmfeq.vf                 100      53              18              35              35
vmfeq.vv                 100      39              14              25              25
vmfge.vf                 100      46              14              32              32
vmfge.vv                   0       0               0               0               0
vmfgt.vf                 100      46              11              35              35
vmfgt.vv                   0       0               0               0               0
vmfle.vf                 100      36              13              23              23
vmfle.vv                 100      47              11              36              36
vmflt.vf                 100      48              14              34              34
vmflt.vv                 100      49              10              39              39
vmfne.vf                 100      48              17              31              31
vmfne.vv                 100      44              15              29              29
vminu.vv                 100      46              14              32              32
vminu.vx                 100      50              12              38              38
vmin.vv                  100      51              15              36              36
vmin.vx                  100      53              19              34              34
vmnand.mm                100       0               0               0               0
vmnor.mm                 100       0               0               0               0
vmor.mm                  100       0               0               0               0
vmorn.mm                 100       0               0               0               0
vmsbc.vv                 100       0               0               0               0
vmsbc.vvm                100       0               0               0               0
vmsbc.vx                 100       0               0               0               0
vmsbc.vxm                100       0               0               0               0
vmsbf.m                  100      51              17              34              34
vmseq.vi                 100      44              12              32              32
vmseq.vv                 100      43              11              32              32
vmseq.vx                 100      54              13              41              41
vmsgtu.vi                100      49              14              35              35
vmsgtu.vx                100      51              13              38              38
vmsgt.vi                 100      44              12              32              32
vmsgt.vx                 100      51              14              37              37
vmsif.m                  100      51              16              35              35
vmsleu.vi                100      47              10              37              37
vmsleu.vv                100      47              15              32              32
vmsleu.vx                100      52              14              38              38
vmsle.vi                 100      47              11              36              36
vmsle.vv                 100      51              14              37              37
vmsle.vx                 100      47              13              34              34
vmsltu.vv                100      50              15              35              35
vmsltu.vx                100      56              15              41              41
vmslt.vv                 100      42              13              29              29
vmslt.vx                 100      48              14              34              34
vmsne.vi                 100      48              11              37              37
vmsne.vv                 100      40              11              29              29
vmsne.vx                 100      53              14              39              39
vmsof.m                  100      50              14              36              36
vmulhsu.vv               100      48              13              35              35
vmulhsu.vx               100      47              11              36              36
vmulhu.vv                100      48              16              32              32
vmulhu.vx                100      46              14              32              32
vmulh.vv                 100      45              13              32              32
vmulh.vx                 100      52              15              37              37
vmul.vv                  100      42              14              28              28
vmul.vx                  100      50              12              38              38
vmv1r.v                  100       0               0               0               0
vmv2r.v                  100       0               0               0               0
vmv4r.v                   47       0               0               0               0
vmv8r.v                   30       0               0               0               0
vmv.s.x                  100       0               0               0               0
vmv.v.i                  104       0               0               0               0
vmv.v.v                 1260       0               0               0               0
vmv.v.x                  100       0               0               0               0
vmv.x.s                  100       0               0               0               0
vmxnor.mm                100       0               0               0               0
vmxor.mm                 100       0               0               0               0
vnclipu.wi               100      52              14              38              38
vnclipu.wv               100      50              17              33              33
vnclipu.wx               100      40               6              34              34
vnclip.wi                100      39              12              27              27
vnclip.wv                100      52              11              41              41
vnclip.wx                100      47              10              37              37
vnmsac.vv                100      45               7              38              38
vnmsac.vx                100      48              16              32              32
vnmsub.vv                100      46              14              32              32
vnmsub.vx                100      49              14              35              35
vnsra.wi                 100      45              13              32              32
vnsra.wv                 100      47              12              35              35
vnsra.wx                 100      49              13              36              36
vnsrl.wi                 100      44              13              31              31
vnsrl.wv                 100      40               9              31              31
vnsrl.wx                 100      39              10              29              29
vor.vi                   100      54              14              40              40
vor.vv                   100      43              11              32              32
vor.vx                   100      52              15              37              37
vredand.vs               100      64              17              47              47
vredmaxu.vs              100      69              18              51              51
vredmax.vs               100      42              12              30              30
vredminu.vs              100      68              22              46              46
vredmin.vs               100      49              12              37              37
vredor.vs                100      64              19              45              45
vredsum.vs               100      41              14              27              27
vredxor.vs               100      46              11              35              35
vremu.vv                 100      54              14              40              40
vremu.vx                 100      49              14              35              35
vrem.vv                  100      47              15              32              32
vrem.vx                  100      49              15              34              34
vrgatherei16.vv          100      44              13              31              31
vrgather.vi              100      49              11              38              38
vrgather.vv              100      50              13              37              37
vrgather.vx              100      48              12              36              36
vrsub.vi                 100      45              19              26              26
vrsub.vx                 100      49              17              32              32
vsaddu.vi                100      51              14              37              37
vsaddu.vv                100      49              16              33              33
vsaddu.vx                100      49              14              35              35
vsadd.vi                 100      48              13              35              35
vsadd.vv                 100      49              15              34              34
vsadd.vx                 100      48              14              34              34
vsbc.vvm                 100       0               0               0               0
vsbc.vxm                 100       0               0               0               0
vsetivli                 100       0               0               0               0
vsetvl                   101       0               0               0               0
vsetvli                  101       0               0               0               0
vsext.vf2                100      46              14              32              32
vsext.vf4                100      51              16              35              35
vsext.vf8                100      38              14              24              24
vslide1down.vx           100      52              14              38              38
vslide1up.vx            1912      47              12              35               1
vslidedown.vi            100      52              15              37              37
vslidedown.vx            100      47              14              33              33
vslideup.vi              100      48              11              37              37
vslideup.vx              100      49              13              36              36
vsll.vi                  100      52              13              39              39
vsll.vv                  100      50              13              37              37
vsll.vx                  100      48              11              37              37
vsmul.vv                 100      50              13              37              37
vsmul.vx                 100      46              10              36              36
vsra.vi                  100      50              15              35              35
vsra.vv                  100      47              14              33              33
vsra.vx                  100      46              13              33              33
vsrl.vi                  100      49              14              35              35
vsrl.vv                  100      48              14              34              34
vsrl.vx                  100      53              14              39              39
vssra.vi                 100      46               9              37              37
vssra.vv                 100      45              19              26              26
vssra.vx                 100      49              15              34              34
vssrl.vi                 100      51              12              39              39
vssrl.vv                 100      45              14              31              31
vssrl.vx                 100      46              16              30              30
vssubu.vv                100      45              13              32              32
vssubu.vx                100      55              15              40              40
vssub.vv                 100      47              14              33              33
vssub.vx                 100      48              14              34              34
vsub.vv                  100      49              16              33              33
vsub.vx                  100      50              13              37              37
vwaddu.vv                100      47              15              32              32
vwaddu.vx                100      50              17              33              33
vwaddu.wv                100      45              13              32              32
vwaddu.wx                100      49              10              39              39
vwadd.vv                 100      47              15              32              32
vwadd.vx                 100      46               9              37              37
vwadd.wv                 100      45              11              34              34
vwadd.wx                 100      48              16              32              32
vwmaccsu.vv              100      49              13              36              36
vwmaccsu.vx              100      51              13              38              38
vwmaccus.vx              100      46              10              36              36
vwmaccu.vv               100      48              13              35              35
vwmaccu.vx               100      44               8              36              36
vwmacc.vv                100      46              12              34              34
vwmacc.vx                100      48              12              36              36
vwmulsu.vv               100      47              13              34              34
vwmulsu.vx               100      46              13              33              33
vwmulu.vv                100      47              14              33              33
vwmulu.vx                100      43               7              36              36
vwmul.vv                 100      44              13              31              31
vwmul.vx                 100      45               6              39              39
vwredsumu.vs             100      66              17              49              49
vwredsum.vs              100      51              11              40              40
vwsubu.vv                100      47              15              32              32
vwsubu.vx                100      51              15              36              36
vwsubu.wv                100      42              12              30              30
vwsubu.wx                100      46              13              33              33
vwsub.vv                 100      59              20              39              39
vwsub.vx                 100      51              10              41              41
vwsub.wv                 100      44              10              34              34
vwsub.wx                 100      50              13              37              37
vxor.vi                  100      50              14              36              36
vxor.vv                  100      46              12              34              34
vxor.vx                  100      50              13              37              37
vzext.vf2                100      46              17              29              29
vzext.vf4                100      52              14              38              38
vzext.vf8                100      49              18              31              31{noformat}","24/Aug/22 10:09 PM;5f94696c29bd8a006f94f0e1;{{2022-08-25}} 

P670

*Note: we manually update VTG environment ({{riscv-vector-tests}} submodule)

git branch: {{MAL2441_fix_vmvr_vl_override}} ([PR|https://github.com/sifive/federation/pull/25491]) with rebased to master

Summary: Failed/Total = 14 / 1276

Failed tests: (has reported failed tests to Brad)

{noformat}|                                                                            name   |      config   |   bucket |
|-----------------------------------------------------------------------------------|---------------|----------|
| regr/p670_rerun.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmsbf.m        | coreip_p670   |   1      |
| regr/p670_rerun.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmsif.m        | coreip_p670   |   1      |
| regr/p670_rerun.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmsof.m        | coreip_p670   |   1      |
| regr/p670_rerun.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_p670   |   1      |
| regr/p670_rerun.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsbf.m        | coreip_p670   |   1      |
| regr/p670_rerun.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsif.m        | coreip_p670   |   1      |
| regr/p670_rerun.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vmsof.m        | coreip_p670   |   1      |
| regr/p670_rerun.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsbf.m        | coreip_p670   |   1      |
| regr/p670_rerun.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsif.m        | coreip_p670   |   1      |
| regr/p670_rerun.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vmsof.m        | coreip_p670   |   1      |
| regr/p670_rerun.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vcompress.vm   | coreip_p670   |   1      |
| regr/p670_rerun.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsbf.m        | coreip_p670   |   1      |
| regr/p670_rerun.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsif.m        | coreip_p670   |   1      |
| regr/p670_rerun.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsof.m        | coreip_p670   |   1      |{noformat}","28/Aug/22 4:42 PM;5f94696c29bd8a006f94f0e1;{{2022-08-29}} 

git hash (master): 44e85000814c62133c4516b8df02675cf9cab561

* config: p670 ({{p670.json}}) (MFC build)
* Manually update VTG environment ({{riscv-vector-tests}} submodule)

Summary: Failed/Total = 0 / 1276

Test Cast Count for each RVV instruction:

**

{noformat}(1)                         (2)        (3)        (4)        (5)        (6)
Inst                     Total|    Masked|  (3) VL=0| (3) VL!=0|  (5)/(2) %
vaaddu.vv                   500        233         43        190         38
vaaddu.vx                   500        230         39        191         38
vaadd.vv                    500        242         42        200         40
vaadd.vx                    500        329         28        301         60
vadc.vim                    500          0          0          0          0
vadc.vvm                    500          0          0          0          0
vadc.vxm                    500          0          0          0          0
vadd.vi                     500        237         55        182         36
vadd.vv                     500        330         32        298         59
vadd.vx                     500        241         51        190         38
vand.vi                     500        329         31        298         59
vand.vv                     500        252         49        203         40
vand.vx                     500        321         37        284         56
vasubu.vv                   500        317         32        285         57
vasubu.vx                   500        241         46        195         39
vasub.vv                    500        328         29        299         59
vasub.vx                    500        236         51        185         37
vcompress.vm                500          0          0          0          0
vcpop.m                     500        258         50        208         41
vdivu.vv                    500        329         34        295         59
vdivu.vx                    500        241         45        196         39
vdiv.vv                     500        329         34        295         59
vdiv.vx                     500        332         33        299         59
vfadd.vf                    500        252         25        227         45
vfadd.vv                    500        341         10        331         66
vfclass.v                   500        351         10        341         68
vfcvt.f.xu.v                500        231         32        199         39
vfcvt.f.x.v                 500        247         23        224         44
vfcvt.rtz.x.f.v             500        327         16        311         62
vfcvt.rtz.xu.f.v            500        348         23        325         65
vfcvt.x.f.v                 500        240         25        215         43
vfcvt.xu.f.v                500        225         27        198         39
vfdiv.vf                    500        318         13        305         61
vfdiv.vv                    500        234         18        216         43
vfirst.m                    500        245         51        194         38
vfmacc.vf                   500        230         23        207         41
vfmacc.vv                   500        254         25        229         45
vfmadd.vf                   500        237         17        220         44
vfmadd.vv                   500        320         14        306         61
vfmax.vf                    500        329         11        318         63
vfmax.vv                    500        319          9        310         62
vfmerge.vfm                 500          0          0          0          0
vfmin.vf                    500        336         11        325         65
vfmin.vv                    500        245         21        224         44
vfmsac.vf                   500        248         24        224         44
vfmsac.vv                   500        253         20        233         46
vfmsub.vf                   500        317         14        303         60
vfmsub.vv                   500        236         18        218         43
vfmul.vf                    500        247         25        222         44
vfmul.vv                    500        328         13        315         63
vfmv.f.s                    500          0          0          0          0
vfmv.s.f                    500          0          0          0          0
vfmv.v.f                    500          0          0          0          0
vfncvt.f.f.w                500        330         10        320         64
vfncvt.f.xu.w               500        249         16        233         46
vfncvt.f.x.w                500        313          7        306         61
vfncvt.rod.f.f.w            500        244         17        227         45
vfncvt.rtz.x.f.w            500        251         35        216         43
vfncvt.rtz.xu.f.w           500        344         28        316         63
vfncvt.x.f.w                500        239         35        204         40
vfncvt.xu.f.w               500        323         25        298         59
vfnmacc.vf                  500        335          9        326         65
vfnmacc.vv                  500        215         15        200         40
vfnmadd.vf                  500        323         11        312         62
vfnmadd.vv                  500        324         20        304         60
vfnmsac.vf                  500        255         19        236         47
vfnmsac.vv                  500        237         26        211         42
vfnmsub.vf                  500        314          7        307         61
vfnmsub.vv                  500        233         26        207         41
vfrdiv.vf                   500        316         17        299         59
vfrec7.v                    500        321         13        308         61
vfredmax.vs                 500        241         13        228         45
vfredmin.vs                 500        252         13        239         47
vfredosum.vs                500        341         32        309         61
vfredusum.vs                500        229         17        212         42
vfrsqrt7.v                  500        338         20        318         63
vfrsub.vf                   500        241         14        227         45
vfsgnjn.vf                  500        324         13        311         62
vfsgnjn.vv                  500        231         20        211         42
vfsgnj.vf                   500        327         13        314         62
vfsgnj.vv                   500        233         15        218         43
vfsgnjx.vf                  500        339         12        327         65
vfsgnjx.vv                  500        266         14        252         50
vfslide1down.vf             500        328         14        314         62
vfslide1up.vf               500        325          5        320         64
vfsqrt.v                    500        334         23        311         62
vfsub.vf                    500        326         13        313         62
vfsub.vv                    500        309          8        301         60
vfwadd.vf                   500        306          9        297         59
vfwadd.vv                   500        343          0        343         68
vfwadd.wf                   500        245         17        228         45
vfwadd.wv                   500        239         12        227         45
vfwcvt.f.f.v                500        242         18        224         44
vfwcvt.f.xu.v               500        244         31        213         42
vfwcvt.f.x.v                500        346         10        336         67
vfwcvt.rtz.x.f.v            500        241         17        224         44
vfwcvt.rtz.xu.f.v           500        339          8        331         66
vfwcvt.x.f.v                500        337          6        331         66
vfwcvt.xu.f.v               500        317          5        312         62
vfwmacc.vf                  500        249         17        232         46
vfwmacc.vv                  500        335          1        334         66
vfwmsac.vf                  500        320          5        315         63
vfwmsac.vv                  500        330          3        327         65
vfwmul.vf                   500        335          2        333         66
vfwmul.vv                   500        237         20        217         43
vfwnmacc.vf                 500        338          4        334         66
vfwnmacc.vv                 500        227         20        207         41
vfwnmsac.vf                 500        323          3        320         64
vfwnmsac.vv                 500        319          5        314         62
vfwredosum.vs               500        240         21        219         43
vfwredusum.vs               500        232         15        217         43
vfwsub.vf                   500        325          6        319         63
vfwsub.vv                   500        245         14        231         46
vfwsub.wf                   500        235         18        217         43
vfwsub.wv                   500        325          6        319         63
vid.v                       500        243         50        193         38
viota.m                     500        258         49        209         41
vmacc.vv                    500        233         46        187         37
vmacc.vx                    500        333         31        302         60
vmadc.vi                    500          0          0          0          0
vmadc.vim                   500          0          0          0          0
vmadc.vv                    500          0          0          0          0
vmadc.vvm                   500          0          0          0          0
vmadc.vx                    500          0          0          0          0
vmadc.vxm                   500          0          0          0          0
vmadd.vv                    500        232         45        187         37
vmadd.vx                    500        326         28        298         59
vmand.mm                    500          0          0          0          0
vmandn.mm                   500          0          0          0          0
vmaxu.vv                    500        330         34        296         59
vmaxu.vx                    500        330         34        296         59
vmax.vv                     500        238         48        190         38
vmax.vx                     500        224         45        179         35
vmerge.vim                  500          0          0          0          0
vmerge.vvm                  500          0          0          0          0
vmerge.vxm                  500          0          0          0          0
vmfeq.vf                    500        257         22        235         47
vmfeq.vv                    500        322         28        294         58
vmfge.vf                    500        330         30        300         60
vmfge.vv                      0          0          0          0          0
vmfgt.vf                    500        247         24        223         44
vmfgt.vv                      0          0          0          0          0
vmfle.vf                    500        332         24        308         61
vmfle.vv                    500        334         32        302         60
vmflt.vf                    500        246         18        228         45
vmflt.vv                    500        318         34        284         56
vmfne.vf                    500        241         20        221         44
vmfne.vv                    500        322         33        289         57
vminu.vv                    500        244         42        202         40
vminu.vx                    500        247         46        201         40
vmin.vv                     500        240         47        193         38
vmin.vx                     500        251         46        205         41
vmnand.mm                   500          0          0          0          0
vmnor.mm                    500          0          0          0          0
vmor.mm                     500          0          0          0          0
vmorn.mm                    500          0          0          0          0
vmsbc.vv                    500          0          0          0          0
vmsbc.vvm                   500          0          0          0          0
vmsbc.vx                    500          0          0          0          0
vmsbc.vxm                   500          0          0          0          0
vmsbf.m                     500        239         32        207         41
vmseq.vi                    500        333         67        266         53
vmseq.vv                    500        231         56        175         35
vmseq.vx                    500        331         71        260         52
vmsgtu.vi                   500        244         52        192         38
vmsgtu.vx                   500        335         66        269         53
vmsgt.vi                    500        238         53        185         37
vmsgt.vx                    500        236         40        196         39
vmsif.m                     500        334         17        317         63
vmsleu.vi                   500        332         65        267         53
vmsleu.vv                   500        238         49        189         37
vmsleu.vx                   500        332         69        263         52
vmsle.vi                    500        238         42        196         39
vmsle.vv                    500        242         48        194         38
vmsle.vx                    500        329         69        260         52
vmsltu.vv                   500        327         65        262         52
vmsltu.vx                   500        239         47        192         38
vmslt.vv                    500        327         72        255         51
vmslt.vx                    500        335         67        268         53
vmsne.vi                    500        327         67        260         52
vmsne.vv                    500        241         44        197         39
vmsne.vx                    500        321         63        258         51
vmsof.m                     500        240         48        192         38
vmulhsu.vv                  500        228         48        180         36
vmulhsu.vx                  500        337         36        301         60
vmulhu.vv                   500        336         36        300         60
vmulhu.vx                   500        329         29        300         60
vmulh.vv                    500        329         35        294         58
vmulh.vx                    500        335         31        304         60
vmul.vv                     500        327         32        295         59
vmul.vx                     500        254         42        212         42
vmv1r.v                     500          0          0          0          0
vmv2r.v                     500          0          0          0          0
vmv4r.v                     500          0          0          0          0
vmv8r.v                     500          0          0          0          0
vmv.s.x                     500          0          0          0          0
vmv.v.i                     504          0          0          0          0
vmv.v.v                    7648          0          0          0          0
vmv.v.x                     500          0          0          0          0
vmv.x.s                     500          0          0          0          0
vmxnor.mm                   500          0          0          0          0
vmxor.mm                    500          0          0          0          0
vnclipu.wi                  500        225         44        181         36
vnclipu.wv                  500        240         37        203         40
vnclipu.wx                  500        317         24        293         58
vnclip.wi                   500        332         25        307         61
vnclip.wv                   500        337         22        315         63
vnclip.wx                   500        315         34        281         56
vnmsac.vv                   500        232         51        181         36
vnmsac.vx                   500        329         32        297         59
vnmsub.vv                   500        327         36        291         58
vnmsub.vx                   500        252         51        201         40
vnsra.wi                    500        334         19        315         63
vnsra.wv                    500        246         44        202         40
vnsra.wx                    500        242         40        202         40
vnsrl.wi                    500        237         36        201         40
vnsrl.wv                    500        324         17        307         61
vnsrl.wx                    500        250         43        207         41
vor.vi                      500        336         34        302         60
vor.vv                      500        323         31        292         58
vor.vx                      500        329         28        301         60
vredand.vs                  500        249         43        206         41
vredmaxu.vs                 500        331         67        264         52
vredmax.vs                  500        332         72        260         52
vredminu.vs                 500        240         41        199         39
vredmin.vs                  500        326         70        256         51
vredor.vs                   500        332         72        260         52
vredsum.vs                  500        228         32        196         39
vredxor.vs                  500        236         50        186         37
vremu.vv                    500        330         28        302         60
vremu.vx                    500        323         30        293         58
vrem.vv                     500        330         34        296         59
vrem.vx                     500        326         34        292         58
vrgatherei16.vv             500        330          6        324         64
vrgather.vi                 500        337         18        319         63
vrgather.vv                 500        246         41        205         41
vrgather.vx                 500        251         50        201         40
vrsub.vi                    500        232         55        177         35
vrsub.vx                    500        254         47        207         41
vsaddu.vi                   500        235         46        189         37
vsaddu.vv                   500        331         38        293         58
vsaddu.vx                   500        241         45        196         39
vsadd.vi                    500        233         44        189         37
vsadd.vv                    500        332         35        297         59
vsadd.vx                    500        239         44        195         39
vsbc.vvm                    500          0          0          0          0
vsbc.vxm                    500          0          0          0          0
vsetivli                    500          0          0          0          0
vsetvl                      501          0          0          0          0
vsetvli                     501          0          0          0          0
vsext.vf2                   500        237         48        189         37
vsext.vf4                   500        330         19        311         62
vsext.vf8                   500        231         72        159         31
vslide1down.vx              500        325         35        290         58
vslide1up.vx               3262        322         17        305          9
vslidedown.vi               500        327         34        293         58
vslidedown.vx               500        241         55        186         37
vslideup.vi                 500        338         15        323         64
vslideup.vx                 500        233         42        191         38
vsll.vi                     500        339         36        303         60
vsll.vv                     500        232         40        192         38
vsll.vx                     500        338         32        306         61
vsmul.vv                    500        340         36        304         60
vsmul.vx                    500        336         24        312         62
vsra.vi                     500        338         33        305         61
vsra.vv                     500        231         45        186         37
vsra.vx                     500        241         49        192         38
vsrl.vi                     500        242         43        199         39
vsrl.vv                     500        329         32        297         59
vsrl.vx                     500        324         37        287         57
vssra.vi                    500        327         32        295         59
vssra.vv                    500        330         28        302         60
vssra.vx                    500        226         53        173         34
vssrl.vi                    500        322         28        294         58
vssrl.vv                    500        334         42        292         58
vssrl.vx                    500        337         34        303         60
vssubu.vv                   500        235         47        188         37
vssubu.vx                   500        321         36        285         57
vssub.vv                    500        329         35        294         58
vssub.vx                    500        234         46        188         37
vsub.vv                     500        239         49        190         38
vsub.vx                     500        335         33        302         60
vwaddu.vv                   500        239         33        206         41
vwaddu.vx                   500        240         44        196         39
vwaddu.wv                   500        237         56        181         36
vwaddu.wx                   500        240         43        197         39
vwadd.vv                    500        233         45        188         37
vwadd.vx                    500        336         17        319         63
vwadd.wv                    500        234         28        206         41
vwadd.wx                    500        249         40        209         41
vwmaccsu.vv                 500        331          7        324         64
vwmaccsu.vx                 500        327         12        315         63
vwmaccus.vx                 500        323         15        308         61
vwmaccu.vv                  500        332          6        326         65
vwmaccu.vx                  500        336         16        320         64
vwmacc.vv                   500        243         46        197         39
vwmacc.vx                   500        340         12        328         65
vwmulsu.vv                  500        227         41        186         37
vwmulsu.vx                  500        327         16        311         62
vwmulu.vv                   500        324          5        319         63
vwmulu.vx                   500        245         44        201         40
vwmul.vv                    500        335          6        329         65
vwmul.vx                    500        340         15        325         65
vwredsumu.vs                500        237         50        187         37
vwredsum.vs                 500        331         65        266         53
vwsubu.vv                   500        232         39        193         38
vwsubu.vx                   500        249         39        210         42
vwsubu.wv                   500        332          9        323         64
vwsubu.wx                   500        245         38        207         41
vwsub.vv                    500        239         52        187         37
vwsub.vx                    500        232         48        184         36
vwsub.wv                    500        240         40        200         40
vwsub.wx                    500        336         27        309         61
vxor.vi                     500        244         47        197         39
vxor.vv                     500        330         34        296         59
vxor.vx                     500        328         32        296         59
vzext.vf2                   500        326         16        310         62
vzext.vf4                   500        328         14        314         62
vzext.vf8                   500        333         27        306         61{noformat}","31/Aug/22 5:34 AM;6065017e90e3950069cf01c5;[~accountid:5f94696c29bd8a006f94f0e1]  & [~accountid:62103777eb2978006893b778] , can we close this task or do you have pending action(s) ?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] VRDU partition cleanup ,,,,,,MAL-2070,118090,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,6/16/2022 16:29,6/21/2022 13:08,9/28/2022 0:51,6/17/2022 6:06,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,,,,"Previous PR [https://sifive.atlassian.net/browse/MAL-1992|https://sifive.atlassian.net/browse/MAL-1992|smart-link] was pushed to make progress , but there is missing to solve feedback. ",Cristóbal Ramirez Lazo,Nicolas Brunie,,,,,,,,,,,,,,62632262d7f1b80069c030b8,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-17T06:03:27.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzrtr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Speed up transfers from LTB to VRF/VEX (earlier wakeup edition),,,,,,MAL-2069,118074,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/16/2022 12:20,6/28/2022 11:52,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"There’s a spare cycle in broadcasting the pipeTag information from Baler to VEX when the Baler is doing moves from LTB to VRF. Please see the {{FIXME-TGV}} near line 131 of Baler.scala, right on top of the pipeTag generation logic.",Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,{},,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzrqn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Separate Baler issue queues for loads and stores,,,,,,MAL-2068,118073,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Warren Menezes,600773dcee80bd006f750bba,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/16/2022 12:14,6/28/2022 11:52,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"To make full use of vector load and store bandwidth, the Baler should be able to issue (# of load pipes + # of store pipes) per cycle. If our issue queues can only issue max of 2 instructions per cycle, we’ll need separate issue queues for loads and stores. That will also alleviate any potential problems with head-of-line stores blocking loads that could be processed.

Work will consist of several parts:
- add a second issue queue in the Baler
- modify the dispatching logic to route loads and stores appropriately, including credits
- muxing of VRF read requests from the issue queues
- routing VRF return data to the appropriate destination
- we’ll need some arbitration in case simultaneous issued instructions try to consume more VRF read ports than the number the Baler has


This is sort of backlog until we get through 1st load and 1st store work. Some of the work may overlap with work needed for indexed and/or masked loads/stores. This is low priority among all the 1st load tech debt.",Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,MAL-2065,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,{},,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzrqf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Support masked loads,,,,,,MAL-2067,118071,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/16/2022 12:02,8/23/2022 15:59,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,,,,Will attach Task tickets to this Epic after 1st Load and 1st Store Epics,David Kravitz,John Ingalls,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,MAL-2065,,,,,,,,,MAL-2453,,,,,,,,,,,,,,,,,,,,MAL-2209,,,MAL-2213,MAL-2212,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-23T11:43:52.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,ghx-label-5,,[TGV] Support masked loads/stores,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,dark_teal,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzrpz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,21/Aug/22 11:40 AM;5fd15143b4a74900763834e0;Splitting out stores into their own epic for easier milestone tracking. This will now correspond to [~accountid:60e8c16ad6ba9a0077ad4e51]'s milestone #16.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] [RVV 7.6] Implement indexed loads,,,,,,MAL-2066,118070,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/16/2022 12:00,8/22/2022 10:06,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,,,,Will attach Task tickets to this Epic after 1st Load and 1st Store Epics,Brad Wu,David Kravitz,John Ingalls,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,62103777eb2978006893b778,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,MAL-2065,,,,,,,,,MAL-2452,,,,,,,,,,,,,,VI-8063,,,,,,MAL-2209,,,MAL-2394,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-12,,[TGV] Add support for indexed loads/stores,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,grey,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzrpr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,21/Aug/22 11:35 AM;5fd15143b4a74900763834e0;Splitting out stores into their own epic for easier milestone tracking. This will now correspond to [~accountid:60e8c16ad6ba9a0077ad4e51]'s milestone #21.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] First Store work,,,,,,MAL-2065,118069,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/16/2022 11:56,8/21/2022 11:43,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,,,,One place to keep track of the 1st store work,David Kravitz,John Ingalls,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2066,MAL-2067,MAL-2068,MAL-2452,MAL-2453,,,,,,,,,,,,,,,,,,,,,,,,MAL-2114,MAL-2125,MAL-2294,MAL-2295,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-3,,[TGV] First Store tasks,In Progress,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,yellow,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzrpj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Add sequencing to SDRR to handle vector stores,,,,,,MAL-2064,118067,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Yohann Rabefarihy,61730c9cbcb57400683f15a6,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/16/2022 10:33,9/22/2022 20:58,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"Not needed for first store, but anything with
- LMUL > 1
- non-unit stride
- indexed addressing
- masked store
- segmenting
may need support that isn’t present yet.",Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2518,MAL-2697,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,{},,,,,,,,MAL-2065,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzrp3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Add support in LSU for vector store data retrieval from STB,,,,,,MAL-2063,118066,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Yohann Rabefarihy,61730c9cbcb57400683f15a6,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/16/2022 10:26,8/17/2022 1:02,9/28/2022 0:51,8/17/2022 1:02,,,,,,,,,,,Panda DR,,RTL/LSU,,,,,,,,,0,,,,Recognize pipeTag broadcasts from STB operations; create/send read requests to STB; receive store data responses from STB; put data into StQ entries.,Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2276,,,,,MAL-2062,,,,MAL-2105,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=9}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":9,""lastUpdated"":""2022-07-11T09:00:50.000-0700"",""stateCount"":9,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":9,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2065,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,9,0,,,,100,,,,,,,,,,,,,,,2|hzzrov:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Store Transpose Buffer,,,,,,MAL-2062,118063,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/16/2022 10:20,7/30/2022 15:45,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,Include read ports from VRF to STB; CAMs for SDPipe to read STB entries; return datapath from STB to LSU top-level.,Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,MAL-2294,MAL-2295,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2063,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-31T13:43:09.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2065,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzro7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,16/Jun/22 10:22 AM;5fd15143b4a74900763834e0;Also includes adding the necessary pipeTag generation to wake up the LSU for vector stores. Does not include hookup on LSU side.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] Connect flush logic to LTB entries ,,,,,,MAL-2061,118056,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Yohann Rabefarihy,61730c9cbcb57400683f15a6,Yohann Rabefarihy,61730c9cbcb57400683f15a6,Yohann Rabefarihy,61730c9cbcb57400683f15a6,6/16/2022 9:23,8/11/2022 21:49,9/28/2022 0:51,7/8/2022 3:42,,,,,,,,,,,Panda DR,,TGV_RTL/BAL,,,,,,,,,0,,,,When a BrFlush or a robFlush happen we need to flush entries which match the RobID and younger,John Ingalls,Yohann Rabefarihy,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2296,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2294,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,"{repository={count=4, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":4,""lastUpdated"":""2022-08-11T16:56:44.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":4,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,2,,,,100,,,,,,,,,,,,,,,2|hzzrmn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[TGV] Make vpopc/vfirst dispatch down Mask Unit pipe, not V2S pipe",[TGV] Make vpopc/vfirst dispatch,,,,,MAL-2060,118046,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,6/16/2022 7:58,9/7/2022 17:43,9/28/2022 0:51,6/17/2022 10:10,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"The assertion is getting fired up from the TGV block

*Error Message*

{noformat}  // Make sure a pipe is assigned
  (0 until tp.nRename).map(i => assert( !valid_DIS(i) || !dbTgt_DIS(i)(0) || vexPipeTgtDyn_DIS(i).orR ) ){noformat}

*Test Code*

{noformat} LOAD_SCALAR_AND_VSLIDE1UP(lh, v9, v0, -2, 8)
    800009a2:	    43a1                	li	x7,8
    800009a4:	/-> 00029303          	lh	x6,0(x5)
    800009a8:	|   12f9                	addi	x5,x5,-2
    800009aa:	|   3a0364d7          	vslide1up.vx	v9,v0,x6
    800009ae:	|   5e048057          	vmv.v.v	v0,v9
    800009b2:	|   13fd                	addi	x7,x7,-1
    800009b4:	\-- fe0398e3          	bnez	x7,800009a4 <_ftext+0xa4>

  VSETVLI(1, e16, m8, tu, mu)
    800009b8:	    4285                	li	x5,1
    800009ba:	    00b2f2d7          	vsetvli	x5,x5,e16,m8,tu,mu

    800009be:	    4298aed7          	vfirst.m	x29,v9{noformat}

Here the RTL executes the above loop({{LOAD_SCALAR_AND_VSLIDE1UP}}) for 3 times and then the assertion is fired up.

*SHA:*[+4df651c+|https://simscope.internal.sifive.com/models/undefined--master--4df651ccf9c7c237c8aa8aff1aa998ee81d12377]

*Config:* coreip_p670

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0000_lmul8"",
  ""subtest"": ""vfirst.m"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vfirst.m_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-50_LMUL-8_TGV-1_IMM-1_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 3746082672
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath*
{{@gamma25:/scratch/ishitashah/tgv_regression/sign_118_tgv_assert/federation/builds2/coreip_p670/sim/rerundir1/rerun.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfirst.m}}",David Kravitz,Ishita Shah,,,,,,,,,,,,,,5fd15143b4a74900763834e0,607e26355431a500701f5aed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-17T10:08:41.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/0dffe79432c12078770b98f35cacb37cd898c4a5,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,No,,,,,,,,,,,,2|hzzrkf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,28:20.3,"16/Jun/22 8:28 AM;5fd15143b4a74900763834e0;I was kind of expecting we’d have a problem with the {{vfirst.v}} and {{vpopc.v}} instructions, which need V2S. Will take a look at this in the afternoon.","17/Jun/22 10:10 AM;5fd15143b4a74900763834e0;When instructions get to dispatch selection of VEX pipes, make `vpopc.m` and `vfirst.m` look (only) like Mask Unit ops and not V2S ops.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: MSHR Entry L2 FSM Hang,Assertion Failure : MSHR Entry L2 FSM Hang,LSU (Load Store Unit),MSHR (Miss Status Handling Register),,,MAL-2059,118041,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Rick Chen,5fc1b965d670b8006eda0fde,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,6/16/2022 5:11,7/15/2022 10:55,9/28/2022 0:51,7/15/2022 10:55,orca.00.00,,,,,,,,,,,,RTL/Tile,,,,,,,,,0,,,,"*Error*:

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-xprop-coreip_mallard-test-nightly-xprop/106/builds/coreip_p550mc/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", 662: TestDriver.testHarness.system.subsystem.tile_prci_domain_1.tile.core.lsu.MSHRq.mshrEntries_4.SiFive_MSHREntry_assert: at time 4831422500 ps
Assertion failed (verification library): MSHR Entry L2 FSM Hang  @[MSHR_Mallard.scala 4176:14]

Fatal: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-xprop-coreip_mallard-test-nightly-xprop/106/builds/coreip_p550mc/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", 664: TestDriver.testHarness.system.subsystem.tile_prci_domain_1.tile.core.lsu.MSHRq.mshrEntries_4.SiFive_MSHREntry_assert: at time 4831422500 ps{noformat}



Steps to reproduce:

* Checkout *8687473*
* Build *coreip_p550mc*
* *rerun.outline*:
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0343"",
  ""subtest"": ""sifive/memory/ccache_cmo_directed.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 246599791
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Dave Parry,John Ingalls,Josh Smith,Megan Wachs,Rick Chen,Saurabh Singh,,,,,,,,,,5cc37f384573b30ffbeb88b0,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,5fc1b965d670b8006eda0fde,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CIP-3631,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,Duplicate and does not apply to mallard because mallard is not an orca product,,,,,,,,,,,1. BRC: Should not Publish,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,No,,,,,,,,,,,,2|hzzrjb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,06:44.8,"16/Jun/22 5:14 AM;607e26f781e7b900681be48c;On PL2 boundary, No response is seen on DR channel after {{T:4083062500ps.}} Response are still  pending, but not able to pin point the request that is stuck.

[~accountid:5acffeafaa802f2a797a955c] Can you look into this further?

Wave Dump is available at:

{noformat}gamma10:/scratch/saurabhs/mallard_master_321_xprop_106/federation/builds/coreip_p550mc/sim/sim/MSHR.outline/sting_StingSiFiveTuple_T_0343/sting/sifive/memory/ccache_cmo_directed.conf{noformat}","16/Jun/22 7:06 AM;5acffeafaa802f2a797a955c;If a pL2 request never comes back, that sounds like a pL2 issue.  I’m reassigning to [~accountid:5fc1b965d670b8006eda0fde] ","18/Jun/22 9:02 AM;5fc1b965d670b8006eda0fde;No request is stuck inside PL2 but a set-way CMO is stuck in the CCache due to 

[https://sifive.atlassian.net/browse/CIP-3631|https://sifive.atlassian.net/browse/CIP-3631|smart-link].

[~accountid:607e26f781e7b900681be48c] Could you cherry-pick commit {{fd7cd7118384382fb4a8ec2695a1bf47b6b22c98}} and rerun?

[~accountid:5bb6808b9ba2930990f81895] How do I find out what the L1 MSHR is waiting for?","19/Jun/22 10:25 AM;5bb6808b9ba2930990f81895;{quote}How do I find out what the L1 MSHR is waiting for?{quote}

Each L1 MSHR Entry has bits for {{valid}} and {{l2ReqFsmState}}.  There are other non-L2-related inputs too in the equation {{mshrE_idle}}.","05/Jul/22 11:31 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;[~accountid:5fc1b965d670b8006eda0fde] , [~accountid:5bb6808b9ba2930990f81895] any update on this ticket for errata tracking purposes? It seems that this does exist on Mallard but we haven’t flagged as an errata for this ticket because no mallard core is in Orca. Is this issue completely explained by CIP-3631? If so can you please close it as duplicate of CIP-3631?",05/Jul/22 11:34 AM;5cc37f384573b30ffbeb88b0;[~accountid:607e26f781e7b900681be48c] I see no response here to the above request. Can you please confirm that this bug no longer occurs since we merged [\[CIP-3631] Fix CCache SetWay CMO|https://github.com/sifive/federation/pull/23608]?,"05/Jul/22 11:20 PM;607e26f781e7b900681be48c;[~accountid:5cc37f384573b30ffbeb88b0] 
Yes, this bug is no longer seen after fix for [https://sifive.atlassian.net/browse/CIP-3631|https://sifive.atlassian.net/browse/CIP-3631|smart-link] .","15/Jul/22 12:10 AM;607e26f781e7b900681be48c;[~accountid:5fc1b965d670b8006eda0fde] [~accountid:5bb6808b9ba2930990f81895] 
This issue is resolved. Can we close this ticket? I am not the right person to updated {{Dabble Model Status}} & {{Impact Performance}} information needed to mark this as resolved.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Add PRA functionality to LTB,,,,,,MAL-2057,117777,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/15/2022 11:14,8/5/2022 7:03,9/28/2022 0:51,8/2/2022 16:14,,,,,,,,,,,,,TGV_RTL/BAL,TGV_RTL/RDU,,,,,,,,1,,,,"Could have sworn there was already a Jira for this, but never found it. Anyhow…

If the LSU is running well ahead of the Baler, load data could be placed into the LTB before the matching “LTB-to-VRF” uop makes it into the Baler issue queue. When these uops move from TGV dispatch stage into the Baler issue queue, they need to check whether the data they’re consuming is ready in the LTB.

For two reasons, it makes sense to add this capability to the LTB rather than have a separate PRA.
1. In P670, ROB IDs are 8 bits. With 3 more bits for uopNum, a bit-vector PRA would need 2k bits.
2. The LTB already holds the ROB ID and (will have) the uopNum associated with each data.
The PRA functionality will just be an additional CAM lookup of the information that’s already present in the LTB. Only one srcTag needs to be checked per “LTB-to-VRF” uop, so this should only add 2 “ports” to the CAM logic.

There needs to be similar functionality, facing the other direction, for the STB.",David Kravitz,John Ingalls,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1795,,,,MAL-2040,MAL-2125,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-03T05:31:27.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/3c68d3c74d7d9ad3ffdc5d3a6e581c5e68a0f11b,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzzq0f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,02/Aug/22 4:14 PM;5fd15143b4a74900763834e0;Added PRA for the LTB. Done.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Vector Accumulator Clock Gating,,,,,,MAL-2056,117773,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,6/15/2022 10:29,8/16/2022 9:38,9/28/2022 0:51,8/16/2022 9:38,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,Wrap vector accumulators used by mask producing instructions in clock gating. The same logic is implemented by S2V/V2S buffers. Clock enable signal is already available in TGV.scala. Just needs to be hooked up and tested for correctness.,Andrew Hanselman,Nicolas Brunie,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,MAL-1878,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-28T13:37:05.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzpzr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion:: VMSIF.M::  vector compare should always be 2-cycle full latency,[TGV] Assertion:: VMSIF.M,,,,,MAL-2055,117770,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,6/15/2022 10:04,9/7/2022 17:43,9/28/2022 0:51,6/15/2022 22:10,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"*Seeing Following assertion issue::*
Error: ""/scratch/naveenr/master/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", 438: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_0.SiFive_VexPipe_assert_0: at time 332562500 ps
Assertion failed: vector compare should always be 2-cycle full latency
at VexPipe.scala:1087 assert(\!instValid_RR || \!comparemod.applicable(tgvVectorCmd_RR) || instPayload_RR.ex.latency === 1.U, ""vector compare should always be 2-cycle full latency"")



*Debug-Info::*
Snippet::
VSETVLI(2, e8, mf4, tu, mu)
80000c9e:	4289                	li	t0,2
80000ca0:	0062f2d7          	vsetvli	t0,t0,e8,mf4,tu,mu
vmsif.m v30, v17
80000ca4:	5311af57          	vmsif.m	v30,v17



*RTL-Instuction-trace::*
C                   0:      16366 \[1] pc=\[0000000080000c9e] W\[r 5=0000000000000002]\[1] R\[r 0=0000000000000000] R\[r 0=0000000000000000] inst=\[00004289] [c.li|http://c.li]    t0, 2
C                   0:      16366 \[1] pc=\[0000000080000ca0] W\[r 5=0000000000000002]\[1] R\[r 5=0000000000000002] R\[r 0=0000000000000000] inst=\[0062f2d7] vsetvli t0, t0, e8, mf4, tu, mu

*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 66512 simulation cycles (in TestDriver.report_phase_actions)

*Dump-path::*
gamma26:: /scratch/naveenr/master/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmsif.m

*config:* coreip_u8_minimal_vector

*rerun.outline::*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
""name"": ""vector/vector_tests_gen/rvv_64"",
""raw_plusargs"": [
""+enable_spike_cosim""
],
""subdir"": ""t0000_lmul8"",
""subtest"": ""vmsif.m"",
""enable_postsim_py_check"": false,
""generator_args"": ""vmsif.m_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-50_LMUL-8_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
""seed"": {
""value"": 300930656
},
""sim"": {
""vendor"": ""vcs""
},
""program"": {
""env"": ""abi""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",David Kravitz,Naveen Rathore,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,5fd15143b4a74900763834e0,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7813efd1aba38aa43466fc74317c8c130d222dff,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @rerun.outline +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-15T21:47:35.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/991c1c9bf752e77fa6e09b07ad5279e9acfb500d,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,No,,,,,,,,,,,,2|hzzpzb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"./scripts/quick-submodule-update
BUILD_DIR=builds ./generate-build coreip_u8_minimal_vector
cd builds/coreip_u8_minimal_vector/
make sim
source load-modules
cd sim/
./sitest @rerun.outline +verbose --waves=fsdb",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,36:07.3,15/Jun/22 11:36 AM;5fd15143b4a74900763834e0;[~accountid:62103777eb2978006893b778] please take a look at this. Re-assign if it’s not a problem in your logic.,16/Jun/22 9:05 AM;5a938e9c0913194d2d262658;[~accountid:6235105a3eacc50071ff07ec] Can u add the commit ID for folks to recreate this failure?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650: Timing path from FEU -> LSU -> IEX,,,,,,MAL-2054,117752,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,6/15/2022 6:16,6/17/2022 8:27,9/28/2022 0:51,6/15/2022 17:39,,,,,,,,,,,,,Implementation,RTL/RDU,,,,,,,,0,,,,"Can this path be modified to not pass through LSU?

 io_lsuDispReq_DIS_1_valid -       -      F     (arrival)                         3    12     0     207  2.8    (-,-)

   io_lsuDispReq_DIS_1_valid -       -      -     (net)                             -     -     -       -    -    (-,-)

   lsIssQ/g146/ZN            -       B->ZN  R     IOA21D4BWP240H8P57PDULVT          1     7     7     214  1.8    (-,-)

   lsIssQ/n_40487            -       -      -     (net)                             -     -     -       -    -    (-,-)

   lsIssQ/g199285/ZN         -       A2->ZN F     ND3OPTPAD4BWP240H8P57PDULVT       1    12    11     226  2.7    (-,-)

   lsIssQ_io_readIexPrf      -       -      -     (net)                             -     -     -       -    -    (-,-)

   g7052/ZN                  -       B1->ZN R     INR2OPTPAD8BWP240H8P57PDULVT      1    10    10     236  5.4    (-,-)

   n_17292                   -       -      -     (net)                             -     -     -       -    -    (-,-)

   g7051/ZN                  -       I->ZN  F     INVD18BWP240H8P57PDULVT           1    20    16     252 50.4    (-,-)

   io_lsuIexClockWakeup      -       -      -     (net)                             -     -     -       -    -    (-,-)

   io_lsuIexClockWakeup      <<<     -      F     (port)                            -     -     4     256    -    (-,-)",Cody Croxton,Josh Smith,Michael White,Tom Mickelson,,,,,,,,,,,,5e1371930242870e996efde2,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ac20be86a24e1f461f6e52a55030db42962d7179,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-15T17:39:03.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,fa20d05d44a45bbd4d0a3e7295dc288c55218c4f,,,n/a,,,,,,,,,Physical Design,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzpvz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,28:20.3,"15/Jun/22 11:28 AM;5acffeafaa802f2a797a955c;The point of this path is to wakeup the IEX/FEX clock if a load/store dispatches to the LSU Issue Queue which could possibly issue on the next cycle and send a read request to the IEX/FEX PRFs.

The fix here would be to move that wakeup condition into the wakeup signal that goes from the RDU directly to IEX, instead of through the LSU wakeup conditions.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[Power] FEX prIdx gating in Dhrystone ,,,,,,MAL-2053,117706,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,Mehul Thakkar,622a8208db58c100687dd15a,Mehul Thakkar,622a8208db58c100687dd15a,6/14/2022 16:57,7/29/2022 9:03,9/28/2022 0:51,,,,,,,,,,,,,,Power,RTL/FEX,,,,,,,,0,,,,"Fex is consuming 0.7% of total dynamic power in Dhrystone in gate level simulations. Clocks are well gated but the few signals broadcasted from LSU/IEX is consuming quite a bit of power. These signals are traveling through heavily sized inverted and buffers. Is it possible to data gate these at source ?  

TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu_io_iexDispReq_DIS_*_bits_destI*_prIdx*

TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.io_iexDispReq_DIS_*_bits_srcTag_*_prIdx*",Mehul Thakkar,,,,,,,,,,,,,,,622a8208db58c100687dd15a,,,,,,,,,,,,,,,,,,,,,,MAL-1981,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzplz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Mallard IFU does not report parity errors to BEU,Mallard IFU does not report parity errors to BEU,,,,,MAL-2052,117701,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Adam George,61b2a458657a0500706b9c39,Adam George,61b2a458657a0500706b9c39,Adam George,61b2a458657a0500706b9c39,6/14/2022 15:35,7/12/2022 11:02,9/28/2022 0:51,6/24/2022 9:25,mongoose.00.00,mongoose.01.00,mongoose.02.00,narwhal.00.00,narwhal.01.00,narwhal.02.00,narwhal.03.00,narwhal.04.00,orca.00.00,,,,RTL/Tile,,,,,,,,,0,,,,"Examining the verilog output shows that the IFU only provides memory system errors reported during fills. Parity errors generated locally by the tag and data arrays are not reported. It’s not clear yet why the assignment from _validIcErr_F3_ is not propagated to the BEU.

 IFU.scala:1985

{code:scala}  // report ECC errors
  io.errors.correctable.foreach { c =>
    c.valid := validIcErr_F3
    c.bits  := pcPA_F3
  }
  io.errors.uncorrectable.foreach { c =>
    c.valid := false.B  // only possible with ITIM, so tie-off
    c.bits  := DontCare
  }
  io.errors.bus := missQ.io.busRespError{code}

SiFive_MallardTile.sv:5580

{noformat}  SiFive_BusErrorUnit beu (
    ...
    .auto_in_d_ready                       (_fragmenter_1_auto_out_d_ready),
    .io_errors_icache_bus_valid            (_core_io_icacheErrors_bus_valid),
    .io_errors_icache_bus_bits             (_core_io_icacheErrors_bus_bits),
    .io_errors_dcache_correctable_valid    (_core_io_dcacheErrors_correctable_valid),
    .io_errors_dcache_correctable_bits     (_core_io_dcacheErrors_correctable_bits),
    .io_errors_dcache_uncorrectable_valid  (_core_io_dcacheErrors_uncorrectable_valid),
    .io_errors_dcache_uncorrectable_bits   (_core_io_dcacheErrors_uncorrectable_bits),
    .io_errors_dcache_bus_valid            (_core_io_dcacheErrors_bus_valid),
    .io_errors_dcache_bus_bits             (_core_io_dcacheErrors_bus_bits),{noformat}",Adam George,Bunnaroath Sou,Dave Parry,John Ingalls,Josh Smith,Megan Wachs,Suraj Vellengar,,,,,,,,,61b2a458657a0500706b9c39,5a615c054d88dd469ba9c162,5cc37f384573b30ffbeb88b0,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,5e1377323e586d0dafebf4e3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3eb40f468911c3d74049d7e84846127fedde2688,Requires further investigation,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-24T08:07:31.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,Wait to make a ruling until we know if it hangs the core or not?,CAT-B,,Medium,"Although the core will correctly handle an I-Cache parity error (in both tag and data arrays). by invalidating and reloading the line, the occurrence of the parity error and/or its correction is not reported to software via the Bus Error Unit nor can it be captured in the HPM.

If correctible I-cache errors are occurring this will only be observable to software as a performance degradation. If persistent errors exist there will be a more significant performance degradation but the core will continue to make forward progress.",High,All P500 Cores With ECC,P500,,Instruction Cache Parity Errors are not reported to the BEU,,1. BRC: should Publish for all customers,,,,,,,,,,f8ef5e2ee56814d4f86fc701094a32dbf5baae8d,,,n/a,,,,,,,,,Inspection,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,No,,,,,,,,,,,,2|hzzpl3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,36:21.7,"15/Jun/22 7:36 AM;5acffeafaa802f2a797a955c;After digging into it a bit more, I think this is because Mallard uses the {{ICacheErrors}} class from Rocket for the IFU {{errors}} output.

{noformat}class ICacheErrors(implicit p: Parameters) extends CoreBundle()(p) with HasL1ICacheParameters with CanHaveErrors {
  val correctable   = (cacheParams.tagCode.canDetect || cacheParams.dataCode.canDetect).option(Valid(UInt(width = paddrBits)))
  val uncorrectable = (cacheParams.itimAddr.nonEmpty && cacheParams.dataCode.canDetect).option(Valid(UInt(width = paddrBits)))
  val bus           = Valid(UInt(width = paddrBits))
}{noformat}

 This class makes {{correctable}} and {{uncorrectable}} an option based on {{cacheParams.tagCode/dataCode}}.  {{cacheParams}} is of the {{ICacheParams}} class, which neither Bullet nor Mallard use.

It turns out that Bullet uses the {{FetchErrors}} class, which looks at {{FetchParams}} for the {{tagCode}} and {{dataCode}}. {{FetchParams}} is what Bullet uses instead of {{ICacheParams}}.

{noformat}class FetchErrors(val params: FetchParams)(implicit p: Parameters) extends CoreBundle()(p) with CanHaveErrors {
  private val tagCode  = params.tagCode
  private val dataCode = params.dataCode
  private val itimCode = params.itim.map(_.ecc).getOrElse(IdentityCode)

  val correctable   = (tagCode.canDetect || dataCode.canDetect || itimCode.canCorrect).option(Valid(UInt(paddrBits.W)))
  val uncorrectable = itimCode.canDetect.option(Valid(UInt(paddrBits.W)))
  val bus           = Valid(UInt(paddrBits.W))
}{noformat}

I think Mallard needs to create its own {{IFUErrors}} class (similar to {{FetchErrors}}) which uses {{IFUParams}} to get {{tagCode}} and {{dataCode}}",21/Jun/22 11:58 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;tentatively marking this as affecting all Mongoose since not sure when this was introduced,21/Jun/22 11:59 AM;5cc37f384573b30ffbeb88b0;[~accountid:5acffeafaa802f2a797a955c] looks like from the above that this affects Mallard (inc p550) all the way back to Mongoose - is this right? ,"21/Jun/22 2:21 PM;5acffeafaa802f2a797a955c;[~accountid:5cc37f384573b30ffbeb88b0] Yes I believe so.  And as I mentioned in the Friday meeting, we don’t appear to have an HPM event for this either, so there’s no real easy way of knowing that errors were happening.","21/Jun/22 3:29 PM;5acffeafaa802f2a797a955c;[~accountid:61b2a458657a0500706b9c39] [~accountid:5e1377323e586d0dafebf4e3] We’d like to get an RTL fix in master for this pretty soon.  Do we have any tests available which can be used to verify this fix?  If no self-checking tests, at least something which should exercise parity errors in the ICache (tag and data arrays) so we can visually inspect waves to make sure the BEU is seeing it.","21/Jun/22 6:25 PM;5a615c054d88dd469ba9c162;[~accountid:5acffeafaa802f2a797a955c] , [~accountid:5cc37f384573b30ffbeb88b0] here using [~accountid:5a615c054d88dd469ba9c162] ‘s laptop…pls disregard my earlier statement about needing to ugently fix this and get into Orca. Since it is Mallard-only it does not affect Orca supported product/config. I’ve put the Target Version back to Panda DR","22/Jun/22 5:28 AM;5e1377323e586d0dafebf4e3;[~accountid:5acffeafaa802f2a797a955c] ,
I will provide the test to [~accountid:61b2a458657a0500706b9c39] .",22/Jun/22 9:51 PM;61b2a458657a0500706b9c39;I ran Suraj’s test with Josh’s fix and verified instruction cache tag and data errors are propagated to the BEU.,"28/Jun/22 11:38 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;marking as affecting orca even though Mallard is not an orca thing, so that the filters on fixed/affecting dont keep flagging it as wondering if it is fixed in orca or not.","28/Jun/22 11:44 AM;5cc37f384573b30ffbeb88b0;[~accountid:61b2a458657a0500706b9c39] [~accountid:5acffeafaa802f2a797a955c] is it an implication of this bug that if we have a persistent error in an icache RAM (ie a stuck bit), the core will hang because the cache will be continuously flushed/reloaded/reaccessed and we’ll never break out of that loop? ","28/Jun/22 11:58 AM;5acffeafaa802f2a797a955c;[~accountid:5cc37f384573b30ffbeb88b0] I don’t think that’s a given due to the replacement policy.  Unless the line is already at the LRU way, it will be filled into a different way in the ICache after we flush and refetch it.  I think we’d need to double check this in simulation, but I don’t think it would keep getting filled into the same way because on a fill that way should then become MRU.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Try to reuse S2V allocation for consecutive S2V-needing instructions,,,,,,MAL-2051,117688,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Andrew Hanselman,609d7e1f5998a6006800dcc5,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/14/2022 12:29,6/30/2022 10:12,9/28/2022 0:51,,,,,,,,,,,,,,RTL/RDU,TGV_RTL/X2Y,,,,,,,,0,,,,"[https://sifive.atlassian.net/browse/MAL-1627|https://sifive.atlassian.net/browse/MAL-1627|smart-link] has some tricky aspects to it. However, in talking with the patent attorneys today, it seems fairly easy to have the same behavior when the re-use occurs without any intervening S2V-needing instructions. In such a situation, deallocation can still proceed monotonically, with no skipped entries. The “history buffer” will only need to hold the most-recent S2V-needing instruction; if the source architectural register matches, the scalar uop can be dropped (will need a new field in the {{inst_*}} word (or nearby) to indicate that) and the vector uop can be assigned the previous entry number and color.

See the first code sample at [https://sifive.atlassian.net/wiki/spaces/CIP/pages/2191818807/SPARTA-1580+Transfer+Buffer+Deallocation#Negative-Outlier-Deep-Dives|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2191818807/SPARTA-1580+Transfer+Buffer+Deallocation#Negative-Outlier-Deep-Dives|smart-link] for an example that could benefit from the described behavior.

Not sure if this should be a Panda goal or a post-Panda performance improvement.",Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Knute Lingaard,,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1374fb7a22c90da0c60495,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1647,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzpiv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,55:14.4,30/Jun/22 9:55 AM;5e1374fb7a22c90da0c60495;A quick update from perf on this: it’s not worth the time/effort unless we have to reduce the S2V buffer sizes.,"30/Jun/22 10:12 AM;5fd15143b4a74900763834e0;Good to know. We may still try to patent the broader case for protection, but I’ll let them know we won’t be doing the easy case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
ORCA TilePRCIDomain shows timing violations not seen in Narwhal,,,,,,MAL-2050,117672,,Question,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Highest,Duplicate,Robbie Adler,5dcc1b25bb355b0ddbd19f53,Susheel Sharma,6064f88fb30f0d00703824c8,Susheel Sharma,6064f88fb30f0d00703824c8,6/14/2022 10:52,6/14/2022 13:17,9/28/2022 0:51,6/14/2022 13:17,,,,,,,,,,,,,Implementation,,,,,,,,,0,,,,"I am running TilePRCIDomain in Orca with the same Floorplan used in Narwhal and seeing timing violations in PL2 ending on memories not seen in Narwhal as given below:



{noformat}=> tile   tile{noformat}

-0.049 (#1) 1652.89MHz func_ssg_0p675_0c_cworst_view auto_tile_clock_domain_ungatedClockNode_in_clock(R)->auto_tile_clock_domain_ungatedClockNode_in_clock(R) reg2mem begin: tile/pl2_wrapper/pl2/datBanks_0/postMergeData_D4_r_data_0_reg\[26]/Q end: tile/pl2_wrapper/pl2/datBanks_0/RamBank_0_0/RamBank_0_0_ext/sram_0_0/D\[71]  depth: 15 INTERNAL
-0.048 (#2) 1655.63MHz func_ssg_0p675_0c_cworst_view auto_tile_clock_domain_ungatedClockNode_in_clock(R)->auto_tile_clock_domain_ungatedClockNode_in_clock(R) reg2mem begin: tile/pl2_wrapper/pl2/datBanks_0/postMergeData_D4_r_data_0_reg\[26]/Q end: tile/pl2_wrapper/pl2/datBanks_0/RamBank_0_0/RamBank_0_0_ext/sram_1_0/D\[71]  depth: 15 INTERNAL
-0.040 (#5) 1677.85MHz func_ssg_0p675_0c_cworst_view auto_tile_clock_domain_ungatedClockNode_in_clock(R)->auto_tile_clock_domain_ungatedClockNode_in_clock(R) reg2mem begin: tile/pl2_wrapper/pl2/datBanks_1/postMergeData_D4_r_data_1_reg\[21]/Q end: tile/pl2_wrapper/pl2/datBanks_1/RamBank_1_1/RamBank_0_0_ext/sram_1_0/D\[67]  depth: 10 INTERNAL
-0.039 (#6) 1680.67MHz func_ssg_0p675_0c_cworst_view auto_tile_clock_domain_ungatedClockNode_in_clock(R)->auto_tile_clock_domain_ungatedClockNode_in_clock(R) reg2mem begin: tile/pl2_wrapper/pl2/datBanks_1/postMergeData_D4_r_data_1_reg\[21]/Q end: tile/pl2_wrapper/pl2/datBanks_1/RamBank_1_1/RamBank_0_0_ext/sram_0_0/D\[67]  depth: 10 INTERNAL
-0.037 (#3) 1686.34MHz func_ssg_0p675_0c_cworst_view auto_tile_clock_domain_ungatedClockNode_in_clock(R)->auto_tile_clock_domain_ungatedClockNode_in_clock(R) reg2mem begin: tile/pl2_wrapper/pl2/globalArb/reqData_T1_1_bits_r_data_reg\[114]/Q end: tile/pl2_wrapper/pl2/datBanks_1/RamBank_0_1/RamBank_0_0_ext/sram_0_0/D\[67]  depth: 10 INTERNAL
-0.036 (#4) 1689.19MHz func_ssg_0p675_0c_cworst_view auto_tile_clock_domain_ungatedClockNode_in_clock(R)->auto_tile_clock_domain_ungatedClockNode_in_clock(R) reg2mem begin: tile/pl2_wrapper/pl2/globalArb/reqData_T1_1_bits_r_data_reg\[114]/Q end: tile/pl2_wrapper/pl2/datBanks_1/RamBank_0_1/RamBank_0_0_ext/sram_1_0/D\[67]  depth: 10 INTERNAL
-0.034 (#12) 1694.92MHz func_ssg_0p675_0c_cworst_view auto_tile_clock_domain_ungatedClockNode_in_clock(R)->auto_tile_clock_domain_ungatedClockNode_in_clock(R) reg2mem begin: tile/pl2_wrapper/pl2/globalArb/reqData_T1_0_bits_r_data_reg\[21]/Q end: tile/pl2_wrapper/pl2/datBanks_0/RamBank_0_0/RamBank_0_0_ext/sram_1_0/D\[68]  depth: 16 INTERNAL
-0.034 (#10) 1694.92MHz func_ssg_0p675_0c_cworst_view auto_tile_clock_domain_ungatedClockNode_in_clock(R)->auto_tile_clock_domain_ungatedClockNode_in_clock(R) reg2mem begin: tile/pl2_wrapper/pl2/globalArb/reqData_T1_0_bits_r_data_reg\[21]/Q end: tile/pl2_wrapper/pl2/datBanks_0/RamBank_0_0/RamBank_0_0_ext/sram_0_0/D\[68]  depth: 16 INTERNAL
-0.031 (#7) 1703.58MHz func_ssg_0p675_0c_cworst_view auto_tile_clock_domain_ungatedClockNode_in_clock(R)->auto_tile_clock_domain_ungatedClockNode_in_clock(R) reg2mem begin: tile/pl2_wrapper/pl2/datBanks_1/postMergeData_D4_r_data_1_reg\[63]/Q end: tile/pl2_wrapper/pl2/datBanks_1/RamBank_0_1/RamBank_0_0_ext/sram_0_0/D\[70]  depth: 10 INTERNAL
-0.031 (#8) 1703.58MHz func_ssg_0p675_0c_cworst_view auto_tile_clock_domain_ungatedClockNode_in_clock(R)->auto_tile_clock_domain_ungatedClockNode_in_clock(R) reg2mem begin: tile/pl2_wrapper/pl2/datBanks_1/postMergeData_D4_r_data_1_reg\[63]/Q end: tile/pl2_wrapper/pl2/datBanks_1/RamBank_0_1/RamBank_0_0_ext/sram_1_0/D\[70]  depth: 10 INTERNAL
-0.030 (#11) 1706.48MHz func_ssg_0p675_0c_cworst_view auto_tile_clock_domain_ungatedClockNode_in_clock(R)->auto_tile_clock_domain_ungatedClockNode_in_clock(R) reg2mem begin: tile/pl2_wrapper/pl2/globalArb/reqData_T1_0_bits_r_data_reg\[21]/Q end: tile/pl2_wrapper/pl2/datBanks_0/RamBank_0_0/RamBank_0_0_ext/sram_0_0/D\[67]  depth: 15 INTERNAL
-0.029 (#13) 1709.40MHz func_ssg_0p675_0c_cworst_view auto_tile_clock_domain_ungatedClockNode_in_clock(R)->auto_tile_clock_domain_ungatedClockNode_in_clock(R) reg2mem begin: tile/pl2_wrapper/pl2/globalArb/reqData_T1_0_bits_r_data_reg\[21]/Q end: tile/pl2_wrapper/pl2/datBanks_0/RamBank_0_0/RamBank_0_0_ext/sram_1_0/D\[67]  depth: 15 INTERNAL
-0.023 (#14) 1727.12MHz func_ssg_0p675_0c_cworst_view auto_tile_clock_domain_ungatedClockNode_in_clock(R)->auto_tile_clock_domain_ungatedClockNode_in_clock(R) reg2mem begin: tile/pl2_wrapper/pl2/datBanks_0/postMergeData_D4_r_data_0_reg\[26]/Q end: tile/pl2_wrapper/pl2/datBanks_0/RamBank_1_0/RamBank_0_0_ext/sram_1_0/D\[71]  depth: 14 INTERNAL
-0.023 (#15) 1727.12MHz func_ssg_0p675_0c_cworst_view auto_tile_clock_domain_ungatedClockNode_in_clock(R)->auto_tile_clock_domain_ungatedClockNode_in_clock(R) reg2mem begin: tile/pl2_wrapper/pl2/datBanks_0/postMergeData_D4_r_data_0_reg\[26]/Q end: tile/pl2_wrapper/pl2/datBanks_0/RamBank_1_0/RamBank_0_0_ext/sram_0_0/D\[71]  depth: 14 INTERNAL
-0.021 (#18) 1733.10MHz func_ssg_0p675_0c_cworst_view auto_tile_clock_domain_ungatedClockNode_in_clock(R)->auto_tile_clock_domain_ungatedClockNode_in_clock(R) reg2mem begin: tile/pl2_wrapper/pl2/datBanks_1/postMergeData_D4_r_data_1_reg\[63]/Q end: tile/pl2_wrapper/pl2/datBanks_1/RamBank_1_1/RamBank_0_0_ext/sram_1_0/D\[70]



Any idea why these are seen and what has changed in Orca?",Susheel Sharma,,,,,,,,,,,,,,,6064f88fb30f0d00703824c8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzpfr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
brqUpdatePossibleLate can keep IFU clock on even when BRQ is empty,brqUpdatePossibleLate can keep IFU clock on even when BRQ ,IFU (Instruction Fetch Unit),,,Refer https://github.com/sifive/arch-specs/blob/master/core/mallard_lsu_mas.adoc#miss-status-handling-register-mshr,MAL-2049,117505,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,6/13/2022 6:40,6/27/2022 9:14,9/28/2022 0:51,6/14/2022 16:21,,,,,,,,,,,,,RTL/RDU,,,,,,,,,0,,,,"*Error:*

{noformat}""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/319/builds/coreip_u8_maxed_out/verilog/testbench/ceaseMonitor.v"", 440: TestDriver.testHarness.ceasemonitor_ceasemonitor.ceaseInstToSignal: started at 81167882500ps failed at 81167882500ps
 Offending 'cease[0]'

Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/319/builds/coreip_u8_maxed_out/verilog/testbench/ceaseMonitor.v"", 440: TestDriver.testHarness.ceasemonitor_ceasemonitor.ceaseInstToSignal: at time 81167882500 ps
Cease instruction was executed, but cease_from_tile_0 was not asserted{noformat}



Cease Instruction {{PC=800066b0}} is seen to be executed at {{T:1167782500ps}}, but no cease is seen from core, causing the counter to cross the threshold 0x1e8481 and trigger the assertion. 

core_io_cease depends as {{io_cease = csr_io_status_cease & ~ifu_io_ifuClockEn & io_lsuIdle & rdu_io_brqEmpty;}}

{{core.feu.ifu_io_ifuClockEn}} is expected to go low for io_cease to assert, but since {{T:1166602500ps}}, {{ifu_io_ifuClockEn }}is seen asserted till end of simulation. Tracing back, other signals driving {{ifu_io_ifuClockEn}} are seen to be toggling but {{core.feu.ifu.io_brqPossibleUpdLate}} is asserted at {{T:1167042500ps}} till end of simulation. 



Steps to Reproduce:

* Checkout *aa51843*
* Build *coreip_u8_maxed_out*
* *rerun.outline* 
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""torture"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+clock_periph=3"",
    ""+clock_div0=1"",
    ""+clock_div1=1"",
    ""+clock_div2=1"",
    ""+clock_div3=1"",
    ""+clock_div4=1"",
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+axi_mem_latency_cycles=10"",
    ""+axi_mem_dither_cycles=10"",
    ""+enable_spike_cosim"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    """",
    ""+cosim_scoreboard_stall_cycle_count=500000""
  ],
  ""subdir"": ""torture_branch_T_0380"",
  ""subtest"": ""branch"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3091004010
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""2000000""
  },
  ""program"": {
    ""torture_inbound"": true,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Josh Smith,Saurabh Singh,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-14T16:21:01.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,f784378a41a853c6277e428a6c07ec9249711c31,,,n/a,,,,,,,,,Simulation-Torture,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,No,,,,,,,,,,,,2|hzzoj3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,33:13.4,14/Jun/22 8:33 AM;5acffeafaa802f2a797a955c;[~accountid:607e26f781e7b900681be48c] do you already have a waveform for this?,"14/Jun/22 8:34 AM;607e26f781e7b900681be48c;[~accountid:5acffeafaa802f2a797a955c] Yes.
{{gamma10:/scratch/saurabhs/mallard_master_319/federation/builds/coreip_u8_maxed_out/sim/sim/Cease.outline/torture_branch_T_0380/torture/branch}}","14/Jun/22 8:41 AM;5acffeafaa802f2a797a955c;Ah, yeah the {{brqPossibleUpdLate}} signal can be asserted even when the BRQ is empty.  That wasn’t my intention.  I’ll fix it.

This was introduced just in the last week or so by my fix for [https://sifive.atlassian.net/browse/MAL-2029|https://sifive.atlassian.net/browse/MAL-2029|smart-link] ",14/Jun/22 4:21 PM;5acffeafaa802f2a797a955c;[~accountid:607e26f781e7b900681be48c] this commit should fix the issue.  Can you close the ticket if it looks okay to you?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU timing: pre-calculate memSearch in LSTPipe RR stage flop,,,,,,MAL-2047,117576,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Swarnashri Chandrashekar,6287f376f0302e0068bff30c,Vaibhav Gupta,623e4830b75ca80070580145,Vaibhav Gupta,623e4830b75ca80070580145,6/13/2022 20:26,7/19/2022 10:38,9/28/2022 0:51,7/19/2022 10:38,,,,,,,,,,,,,Implementation,RTL/LSU,,,,,,,,0,,,,"Hi John,

Attaching the path report from cmn_ctrl to ready_reg. Both elab and pnr report attached. 

Would be great if you can also provide some guidance on what will change in healdsburg with respect to this path. Since we have more LST pipes, will we have more gates in memSearch logic. Also we have more issueQ entries, would that add more muxing for ready_reg calculation?",John Ingalls,Vaibhav Gupta,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,623e4830b75ca80070580145,,,,,,,,,,,,,,,,,,,,,MAL-1994,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1673,,,,,,,,,,,13/Jun/22 8:26 PM;ug:00594ab1-1adb-4153-9612-017217b13907;cmn_ctrl_opc_TO_ready_reg.rtf;https://sifive.atlassian.net/secure/attachment/73149/cmn_ctrl_opc_TO_ready_reg.rtf,,,,,,,,,,,,,,,,5eb9cdf82a175ae9b3b30ed03c48bc295f33c101,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-07-18T21:43:09.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24514,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,,,,,,,,,,,,,2|hzzovr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,11:56.9,"14/Jun/22 1:11 AM;5bb6808b9ba2930990f81895;We can improve this path for Panda by pre-calculating {{rr_memSearch_q}} similarly to [https://sifive.atlassian.net/browse/MAL-1994|https://sifive.atlassian.net/browse/MAL-1994|smart-link], but reaching farther up into the duplicated LsIssQ entries to do it.

# Create new flop {{rr_memSearch_q}} in the LSTPipe RR stage alongside {{rr_mdp_q}}:
{noformat}val rr_memSearch_q = RegEnable(io.issReq.bits.memSearch, io.issReq.earlyValid){noformat}
# Create new decode to drive that new signal {{io.issReq.bits.memSearch}}, reaching as far back through the LsIssQ and LsDispBuf as necessary to follow the same pattern as {{io.issReq.bits.mdp}} and {{issQEntry.io.state.memCmdRead}}.
# Search for and replace all uses in LSTPipe.scala of {{rr_memSearch}} with {{rr_memSearch_q}}.  For example, particularly for this timing path:
{noformat}- io.lstThisPipe_memSearch(0) := rr_memSearch
+ io.lstThisPipe_memSearch(0) := rr_memSearch_q{noformat}
# Rely on existing assertion that we pipeline this pre-decoded flop bits through all the stages correctly:
{noformat}lsuAssert(lstc_payload_q.cmn.ctrl.memSearch === lstc_memSearch_q, ""pre-decode for MemSearch""){noformat}

In general, yes, everything around the LsIssQ gets worse when adding register bits (flop area) and more entries.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650 Timing: LSU lsto_replayInOrder path from lsto_selfFlushWait,,,,,,MAL-2046,117516,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,John Ingalls,5bb6808b9ba2930990f81895,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,6/13/2022 8:59,9/6/2022 9:13,9/28/2022 0:51,6/28/2022 15:02,,,,,,,,,,,,,RTL/LSU,Timing,,,,,,,,0,,,,"LSU block in2out path from io_chicken_disableFastLoadResolve to io_ptwMem_s3_nack.  I/O timing likely needs adjustment.  J Ingalls says “This is one of several timing paths going through lsto_replayInOrder.”

See: /project/tsmc/cln7ff/P6_ppa_runs/michaelw/P650/timing_reports/MAL-2046",John Ingalls,Josh Smith,Michael White,Vaibhav Gupta,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,623e4830b75ca80070580145,,,,,,,,,,,,,,,,,,,MAL-1330,MAL-1972,MAL-1017,,MAL-2118,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1425,,,,,,,,,,,,,,,,,,27/Jun/22 10:22 PM;ug:00594ab1-1adb-4153-9612-017217b13907;Screenshot 2022-06-28 at 10.27.33 AM.png;https://sifive.atlassian.net/secure/attachment/73771/Screenshot+2022-06-28+at+10.27.33+AM.png,,,,,,,,,,,,,,,,0be81f7d454f717b339b5846bbd8f425cdc3f1e6,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-29T07:36:10.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/23936,,,n/a,,,,,,,,,Physical Design,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzolb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,05:43.9,"13/Jun/22 9:05 AM;5acffeafaa802f2a797a955c;[~accountid:60f1ea6c6491110069392f8f] after my change for [https://sifive.atlassian.net/browse/MAL-1330|https://sifive.atlassian.net/browse/MAL-1330|smart-link] , the chicken bits should be coming from a local copy inside of the LSU.  So {{chicken_disable_fastLoadResolve}} should be coming from a flop that lives inside of the LSU now.",13/Jun/22 9:37 AM;60f1ea6c6491110069392f8f;Thanks.  I’m trying to build a newer RTL today.,"13/Jun/22 3:40 PM;5bb6808b9ba2930990f81895;With that new RTL that you’re building, can you please report timing through the wire {{LSTPipes_0_io_lstThisPipe_replayInOrder_4}} (which is a.k.a. lsto_replayInOrder) again?  And that worst path’s startpoint previous cycle slack too please?  Thanks\!","27/Jun/22 9:56 PM;5bb6808b9ba2930990f81895;[~accountid:623e4830b75ca80070580145] pointed me to a timing path through {{lsto_selfFlushWait}}, which does not need to be a component in {{lstPipeVec_replayWait(4)}} to adjacent pipelines LSTO stages.  A fix will be to copy out the other subterms to a new signal {{lstThisPipe_replayWaitOrder}} without it.","27/Jun/22 10:22 PM;623e4830b75ca80070580145;Hi John

_OlderInOrderReplay_ signals are calculated serially for each LST pipe through lsto_selfFlushWait. 

Attaching the logic diagram for a critical path going through lsto__OlderInOrderReplay_

!Screenshot 2022-06-28 at 10.27.33 AM.png|width=1631,height=424!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] add integer / fp merge instruction in rvv_isa_inst_tgv list,,,,,,MAL-2045,117515,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Shaka Kao,5f94696c29bd8a006f94f0e1,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,6/13/2022 8:42,7/12/2022 9:54,9/28/2022 0:51,6/14/2022 7:13,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Once {{enable_masking}} is enabled in VTG outline, instructions whose support was added in [https://sifive.atlassian.net/browse/MAL-1751|https://sifive.atlassian.net/browse/MAL-1751|smart-link]  and [https://sifive.atlassian.net/browse/MAL-1762|https://sifive.atlassian.net/browse/MAL-1762|smart-link]  should be added to the test list.",Nicolas Brunie,Shaka Kao,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzol3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,12:59.4,"14/Jun/22 7:12 AM;5f94696c29bd8a006f94f0e1;PR is merged.

[https://github.com/sifive/federation/pull/23513|https://github.com/sifive/federation/pull/23513|smart-link] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU lw forwarding result from LDF does not match LDWB,LSU lw forwarding result from LDF does not match LDWB,,,,,MAL-2044,117445,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Max Lin,5e0651c861d95d0d9aa546ac,Max Lin,5e0651c861d95d0d9aa546ac,6/11/2022 8:38,6/14/2022 9:17,9/28/2022 0:51,6/13/2022 15:28,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"[https://simscope.internal.sifive.com/sigs/704/ckmgg2l0ugmg|https://simscope.internal.sifive.com/sigs/704/ckmgg2l0ugmg]

the case which failed cause the PC mismatch

{noformat}460 [COSIM-ERROR][0] COSIM VS RTL PC MISMATCH
461 [COSIM-ERROR][0] m_dut_inst_item: [15189] InstInfo: VLD=1 | PC=0x000000008000021c | INSN=0x00160613 | INST_DST=INT | REDUCTION = false | WR: en=true r12=0x0000000000000001 mask=ff | READY=1 | CSR_TIMER=15189     | PRV=3 | MSTATUS=0x8000000a00007800 | MTVEC=0x0000000080000400 | MCAUSE=0x0000000000000000 | VSTART=0 | VL=0 | SEW=8 | LMUL=1 | VSEGELT=0
462 [COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000080000228 | INSN=0x00160613 | INST_DST=INT | REDUCTION = false | WR: en=true r10=0x0000000000000000 mask=ff{noformat}

according the trace log 

Dut log


{noformat}4369 C                   0:      15184 [1] pc=[0000000080000204] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00c0006f] j       pc + 0xc
4370 C                   0:      15185 [1] pc=[0000000080000210] W[r 0=0000000000000000][0] R[r12=0000000000000000] R[r11=0000000000000003] inst=[02b60063] beq     a2, a1, pc + 32;setup_cpuid_loop_start
4371 C                   0:      15188 [1] pc=[0000000080000214] W[r14=0000000000000000][1] R[r13=0000000080805008] R[r 0=0000000000000000] inst=[0006a703] lw      a4, 0(a3)
4372 Error: Instruction-by-Instruction check failed
4373 Error: Instruction-by-Instruction check failed
4374 C                   0:      15189 [1] pc=[0000000080000218] W[r 0=0000000000000000][0] R[r14=0000000000000000] R[r10=0000000000000000] inst=[00a70863] beq     a4, a0, pc + 16
4375 C                   0:      15189 [1] pc=[000000008000021c] W[r12=0000000000000001][1] R[r12=0000000000000000] R[r 0=0000000000000000] inst=[00160613] addi    a2, a2, 1
4376 C                   0:      15189 [1] pc=[0000000080000220] W[r13=000000008080500c][1] R[r13=0000000080805008] R[r 0=0000000000000000] inst=[00468693] addi    a3, a3, 4
4377 C                   0:      15189 [1] pc=[0000000080000224] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[fedff06f] j       pc - 0x14
4378 C                   0:      15190 [1] pc=[0000000080000210] W[r 0=0000000000000000][0] R[r12=0000000000000001] R[r11=0000000000000003] inst=[02b60063] beq     a2, a1, pc + 32;setup_cpuid_loop_start{noformat}

and the cosim log

{noformat}26321 core   0: 0x0000000080000214 (0x0006a703) lw      a4, 0(a3)
26322 core   0: 3 0x0000000080000214 (0x0006a703) x14 0x0000000000000000 mem 0x0000000080805008-0x0000000080805008
26323 core   0: 0x0000000080000218 (0x00a70863) beq     a4, a0, pc + 16
26324 core   0: 3 0x0000000080000218 (0x00a70863)
26325 core   0: 0x0000000080000228 (0x00c66533) or      a0, a2, a2
26326 core   0: 3 0x0000000080000228 (0x00c66533) x10 0x0000000000000000
26327 core   0: 0x000000008000022c (0x00008067) ret
26328 core   0: 3 0x000000008000022c (0x00008067)
26329 core   0: 0x00000000800000a8 (0x190000ef) jal     pc + 0x190                                                                                                                                                 
26330 core   0: 3 0x00000000800000a8 (0x190000ef) x 1 0x00000000800000ac{noformat}

the a4 are all zero, so the {{0x0000000080000218 }}should jmp to {{0x0000000080000228}}
in the dut log can see the a4 =0x0, but it still jmp to {{0x000000008000021c }}

will try to trace the waveform to look into this issue



the workspace is gamma29 in {{/scratch/verif/maxl/fed0201/builds/coreip_u8mc_ultra_minimal/sim/0611_1/rerun.outline/sting_StingTopMoreTuple_T_0007/sting/valtrix/more_c_st.conf}}

how to reproduce

the commit {{e70bdb8}}

the config {{coreip_u8mc_ultra_minimal}}

the rerun.outline

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+axi_mem_latency_cycles=10"",
    ""+axi_mem_dither_cycles=10"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingTopMoreTuple_T_0007"",
  ""subtest"": ""valtrix/more_c_st.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3826649259
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",John Ingalls,Josh Smith,Max Lin,Saurabh Singh,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,5e0651c861d95d0d9aa546ac,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-7412,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1906,,,,,,,,,,,,,,,,,,13/Jun/22 5:32 AM;jsmith;Screen Shot 2022-06-13 at 6.31.49 AM.png;https://sifive.atlassian.net/secure/attachment/73108/Screen+Shot+2022-06-13+at+6.31.49+AM.png,,,,,,,,,,,,,,,,,No,,Load/Store,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-13T16:50:37.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/23502,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,No,,,,,,,,,,,,2|hzzo5r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,31:12.7,"12/Jun/22 11:31 PM;607e26f781e7b900681be48c;Similar failure is observed in recent mallard regression [https://simscope.internal.sifive.com/rules/704.34|https://simscope.internal.sifive.com/rules/704.34]

*DUT LOG:*

{noformat}C 0:       9018 [1] pc=[000000008000019a] W[r15=0000000000000001][1] R[r14=000000008000bc34] R[r 0=0000000000000000] inst=[0000431c] c.lw    a5, 0(a4)
C 0:       9021 [1] pc=[000000008000019c] W[r14=0000000000000001][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00004705] c.li    a4, 1
C 0:       9021 [1] pc=[000000008000019e] W[r 0=0000000000000000][0] R[r14=0000000000000001] R[r15=0000000000000001] inst=[06f71163] bne     a4, a5, pc + 98
C 0:       9210 [1] pc=[0000000080000200] W[r 5=000000000c1ff000][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[0c1ff2b7] lui     t0, 0xc1ff{noformat}

{{a5=a4=0x1}}, still, RTL doesn't branch to PC+98, instead, executes the next PC {{0x80000200.}}",13/Jun/22 1:59 AM;5e0651c861d95d0d9aa546ac;[~accountid:607e26f781e7b900681be48c] does anyone will solve this issue?,"13/Jun/22 5:30 AM;5acffeafaa802f2a797a955c;It looks like the LSU is forwarding the wrong data from the lw at PC 0x8000214 to the beq at PC 0x80000218.

It looks like this may have to do with the timing fix that [~accountid:5bb6808b9ba2930990f81895] put in for [https://sifive.atlassian.net/browse/MAL-1906|https://sifive.atlassian.net/browse/MAL-1906|smart-link] ([https://github.com/sifive/federation/pull/23314|https://github.com/sifive/federation/pull/23314|smart-link] ).  Because I can see that in the LDF stage fowarding to the beq, the result is 0x1_0000_0000, but the LDWB stage result is 0x0000_0000 (as expected).  The beq forwards the result from the LDF stage and gets the wrong value for {{a4}}.

I attached a screnshot of the waveform, where you can see that {{io_lsuIexPipeFwdData_0_0}} does not match with {{io_lsuIexPipeFwdData_0_1}} on the next cycle.  The {{lw}} has destination tag 0x3, and appears to be in the LDF stage around time 306,093 ns",13/Jun/22 8:17 AM;5e0651c861d95d0d9aa546ac;Thanks [~accountid:5acffeafaa802f2a797a955c] to clarify the issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] add load result bypass from EX for simple vector loads,,,,,,MAL-2043,117370,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,6/10/2022 8:08,8/16/2022 11:56,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"Following [https://github.com/sifive/federation/pull/23402|https://github.com/sifive/federation/pull/23402|smart-link]  a bypass from Baler’s {{WB}} was added. 

[~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] suggested that the timing in the previous cycle ({{EX}}) should be short enough that simple vector loads could also be bypassed from this stage (matching standard 2-bypass architecture seen in {{FexPipe}}, {{VexPipe}}).",Alexandre Solomatnikov,John Ingalls,Nicolas Brunie,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5bb6808b9ba2930990f81895,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2039,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzznof:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Fix mask logical / vmsxf masking bug after MAL-1998,,,,,,MAL-2042,117356,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,6/10/2022 4:05,6/10/2022 4:11,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,Mask logical / vmsxf hit masking bug after [https://sifive.atlassian.net/browse/MAL-1998|https://sifive.atlassian.net/browse/MAL-1998|smart-link] was merged into master.,Brad Wu,,,,,,,,,,,,,,,62103777eb2978006893b778,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-10T14:10:03.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzznlb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
IJTP's baseRdIdx should be piped to get correct counter,IJTP's baseRdIdx,,,,,MAL-2041,117346,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Adam George,61b2a458657a0500706b9c39,Chia-I Chen,61aaafab977c5b007241043c,Chia-I Chen,61aaafab977c5b007241043c,6/10/2022 0:57,9/6/2022 9:25,9/28/2022 0:51,6/12/2022 22:24,mongoose.00.00,mongoose.01.00,mongoose.02.00,narwhal.00.00,narwhal.01.00,narwhal.02.00,narwhal.03.00,narwhal.04.00,orca.00.00,orca.01.00,,,RTL/Frontend,,,,,,,,,0,,,,"As described in [SPARTA-1830|https://sifive.atlassian.net/browse/SPARTA-1830], in [https://github.com/sifive/federation/blob/master/mallard/src/main/scala/core/mallard/IJTP.scala#L173-L180|https://github.com/sifive/federation/blob/master/mallard/src/main/scala/core/mallard/IJTP.scala#L173-L180]

{noformat}// F2 stage - generate index and read enable
val baseRdIdx_F2  = baseIndex(io.req_F2.bits.pc)
val baseRdEn_F2   = io.req_F2.valid && !baseWrEn_F1
// F3 - Read table
val baseRdEn_F3   = RegNext(baseRdEn_F2, false.B)
val baseRdData_F3 = baseTable.read(baseRdIdx_F2, baseRdEn_F2)
val baseRdCtr_F3  = baseCtrArray(baseRdIdx_F2){noformat}

should be 

{noformat}// F2 stage - generate index and read enable
val baseRdIdx_F2  = baseIndex(io.req_F2.bits.pc)
val baseRdEn_F2   = io.req_F2.valid && !baseWrEn_F1
// F3 - Read table
val baseRdIdx_F3  = RegNext(baseRdIdx_F2, false.B)  // [newly add] pipe baseRdIdx_F2
val baseRdEn_F3   = RegNext(baseRdEn_F2, false.B)
val baseRdData_F3 = baseTable.read(baseRdIdx_F2, baseRdEn_F2)
val baseRdCtr_F3  = baseCtrArray(baseRdIdx_F3)  // [modify] use baseRdIdx_F3 instead of baseRdIdx_F2{noformat}

{{baseRdIdx}} should be piped to F3 and used to get counter from {{baseCtrArray}}, which is REG (where {{baseTable}} is SRAM)",Adam George,Brian Grayson,Chia-I Chen,Dave Parry,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,,,,,,,,,61b2a458657a0500706b9c39,5e1371705361330daaeaf389,61aaafab977c5b007241043c,5cc37f384573b30ffbeb88b0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-12T22:20:52.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,Performance impact is too minor to publish,,,,,,,,,,,1. BRC: Should not Publish,,,,,,,,,,ca3f06af6710cd3579567654a2850d58c969a8f8,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,No,,,,,,,,,,,,2|hzznj3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,25:21.1,"12/Jun/22 10:25 PM;61b2a458657a0500706b9c39;Fixed as indicated, substituting a non-resettable flop.","15/Jun/22 7:12 PM;61aaafab977c5b007241043c;Compared the baseline {{31f83db}} (before merged) and {{f6b9ab8}}

the BogoMark project scores (200K warmup plus 200K ROI) remain the same (though there are differences on several workloads,  they are not significant enough to affect final scores)

# 0074: *8.78*
# 0075: *10.16*","21/Jun/22 11:18 AM;5cc37f384573b30ffbeb88b0;[~accountid:61b2a458657a0500706b9c39] was this introduced by some change to Mallard along the way (if so, when?), or has it been there since initial Mallard shipment in Mongoose?",21/Jun/22 11:35 AM;61b2a458657a0500706b9c39;This code has existed since the initial federation/mallard checkin from September of 2019. So it appears it is in Mongoose.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Update the LssIssQ to use ROBID and UOPNUM for wakeup from Baler,,,,,,MAL-2040,117307,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,6/9/2022 13:39,6/30/2022 19:49,9/28/2022 0:51,6/30/2022 19:49,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,Use ROBID and UOPNUM as wakeup for LsIssQ from Baler,Alexandre Solomatnikov,David Kravitz,John Ingalls,Warren Menezes,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,600773dcee80bd006f750bba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2057,,,,,,,,,,,22/Jun/22 11:22 AM;sols;MAL-2040.png;https://sifive.atlassian.net/secure/attachment/73533/MAL-2040.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-21T14:12:15.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2065,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzznbb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,30:52.9,"16/Jun/22 10:30 AM;5fd15143b4a74900763834e0;From discussions, it sounded like stores will wait for all data to be delivered to STB before sequencing in SD pipe begins. In that case, only ROB ID should be needed. If _that’s_ true, then is should also be true for mask and index wakeups.","17/Jun/22 12:55 PM;600773dcee80bd006f750bba;Hi [~accountid:5fd15143b4a74900763834e0] , I think I don’t need to make any additional changes to the code I have pushed as PR since the Tag Broadcast has a prIdx which can accommodate the ROB ID.  We just need to make sure the connecting signal only broadcasts ROBID and not ROBID+UOPNUM","22/Jun/22 11:22 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;STB pipe tags are not connected to anything and as a result vector store is never woken up in the LSU

","22/Jun/22 11:22 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;!MAL-2040.png|width=1238,height=317!",22/Jun/22 11:28 AM;600773dcee80bd006f750bba;Ok Let me do the connectivity,29/Jun/22 3:28 PM;600773dcee80bd006f750bba;This should be fixed with this PR - [https://github.com/sifive/federation/pull/23863|https://github.com/sifive/federation/pull/23863|smart-link] ,29/Jun/22 3:35 PM;5fd15143b4a74900763834e0;Apparently the fix causes a problem when compiling P670.,29/Jun/22 4:55 PM;600773dcee80bd006f750bba;I made a different Jira for that [https://sifive.atlassian.net/browse/MAL-2107|https://sifive.atlassian.net/browse/MAL-2107|smart-link] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Connect Baler to VEX bypass network,,,,,,MAL-2039,117279,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,Done,Nicolas Brunie,6065017e90e3950069cf01c5,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/9/2022 8:29,8/16/2022 11:56,9/28/2022 0:51,6/10/2022 19:47,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"To reduce load-to-use latency, load data from the Baler should be connected to the bypass network, as well as being written into the VRF.",David Kravitz,John Ingalls,Nicolas Brunie,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2043,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1795,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-10T19:08:56.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/6ad8ec8842dfcc6b35c7215fdbe6d0bb045919f0,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzn5z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Support 2 Baler pipes,,,,,,MAL-2038,117278,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Warren Menezes,600773dcee80bd006f750bba,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/9/2022 8:26,8/1/2022 15:33,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"Make it possible for the Baler to perform 2 16B data transfers/cycle from the LTB to the VRF. If possible, support 2 moves in the other direction (VRF to STB/VIB/VMB) as well.",David Kravitz,John Ingalls,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1795,,,,MAL-2305,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzn5r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Retime viota,,,,,,MAL-2037,117240,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,6/8/2022 20:36,7/14/2022 18:45,9/28/2022 0:51,6/16/2022 4:43,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"As [this synthesis report|https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2276655476/MAL-1789+VIOTA+synthesis+report] shows, viota needs at least 2 cycles to fit withing the timing bucket and is better to split the vid from viota.

It’s also good to have [https://sifive.atlassian.net/browse/MAL-2036|https://sifive.atlassian.net/browse/MAL-2036|smart-link] to reduce the input delay of bpeMask.",Brad Wu,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,,,,,,,,,,,62103777eb2978006893b778,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2036,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-13T23:12:53.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzmxr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Timing improvement for bpeMask_EX,,,,,,MAL-2036,117239,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,6/8/2022 20:30,7/14/2022 18:45,9/28/2022 0:51,7/5/2022 9:54,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"As [this synthesis report|https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2276655476/MAL-1789+VIOTA+synthesis+report] shows, bpeMask_EX take around 0.231ns to propagate, which affects modules that take bpeMask_EX as the input (like viota / vcompress).",Andrew Hanselman,Brad Wu,Nicolas Brunie,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-05T09:54:09.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,92e067cd4ff7244df193a4b34e5817675e255d0a,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzzmxj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,06:27.9,"28/Jun/22 10:06 AM;609d7e1f5998a6006800dcc5;[~accountid:62103777eb2978006893b778] proposed a solution via slack:

{code:none}val bpeMaskLUT_EX     = VecInit(tp.validEWIndex.map { sew => VecInit(((0 until 8).map(maskSrc_EX.grouped(tp.dBytes >> sew)(_).padTo(tp.dBytes)))) })
val maskVsewLUT_EX    = augVectorCmd_EX.vsew + splitWideningInst_EX
val bpeMaskPre_EX     = bpeMaskLUT_EX(maskVsewLUT_EX)(instPayload_EX.vector.csid){code}

Additional, we may be able to split the final muxing between RR and the beginning of EX because the mask source register is slightly smaller and more quickly accessible:

{noformat}val bpeMaskOfVsew_RR = bpeMaskLUT_RR(maskVsew_RR)
... // Flop from RR -> EX
val bpeMaskAtPos_EX = bpeMaskOfVsew_EX(maskPos_EX){noformat}","28/Jun/22 7:05 PM;62103777eb2978006893b778;[~accountid:609d7e1f5998a6006800dcc5] Or {{bpeMaskOfVsew_EX(maskPos_EX)}} can be moved to RR completely and flop lesser bits to EX?

The {{bpeMask_EX}} fix could be done in a separate PR because [https://github.com/sifive/federation/pull/23408|https://github.com/sifive/federation/pull/23408|smart-link] is actually deprecated.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Enable multi-PB builds for P670,,,,,,MAL-2035,117205,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,Done,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/8/2022 13:28,6/10/2022 6:37,9/28/2022 0:51,6/9/2022 6:45,,,,,,,,,,,,,Implementation,,,,,,,,,0,,,,P670 builds using SFC crash due to memory/heap exhaustion. Add multi-PB capability to the relevant {{.mk}} and {{.json}} files.,David Kravitz,,,,,,,,,,,,,,,5fd15143b4a74900763834e0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-06-13T15:57:49.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/d2d52ca2eac5e45ec6ad9e2d642e537de3b15438,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzmqf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,09/Jun/22 6:45 AM;5fd15143b4a74900763834e0;Added `largeFIRRTL` to the `p670.json` and increased some memory allocations from 32/36 to 48G in `coreip_p670.mk`. P670 now compiles with SFC,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Get rid of redundant/confusion Baler -> VRF writeback bundles,,,,,,MAL-2034,117196,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/8/2022 11:48,6/28/2022 11:52,9/28/2022 0:51,6/21/2022 14:08,,,,,,,,,,,,,TGV_RTL/BAL,TGV_RTL/Top,TGV_RTL/VEX,,,,,,,0,,,,"LoadBuffer.scala drives two different bundles with very similar names. We only need one of these. The other one should be pruned. Also, to prevent confusion, the name of the one we keep should be propagated across the hierarchy to be the same everywhere.

The last 2 lines in this block should be reduced to one, and changes propagated up and down the TGV hierarchy.

{{  ltbPipes.zipWithIndex.foreach { case (ltbPipe, i) =>
    ltbPipe.io.issReq_VISS     := io.issReq_VISS
    ltbPipe.io.ltb_entriesData := ltbEntries.map(_.io.data)
    io.balPrfWriteReq_WB(i)    := ltbPipe.io.balPrfWriteReq_WB
    io.balVexPrfWriteReq_WB(i) := ltbPipe.io.balVexPrfWriteReq_WB
  }}}",David Kravitz,,,,,,,,,,,,,,,5fd15143b4a74900763834e0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1979,,,,,,,,,,,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1795,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-21T14:03:00.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/ce424b31c14b665fd0023e8dd798a97ef0eb7f74,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzmov:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,21/Jun/22 2:08 PM;5fd15143b4a74900763834e0;This was actually causing a VTG failure in `vle*.v` testing. The VEX PRA was getting the unused version. Connected the proper signal (thanks [~accountid:61730c9cbcb57400683f15a6]!) and made progress in VTG. Also did the rest of the pruning while I was in there.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Baler must send completion messages to ROB when moving load data from LTB to VRF,,,,,,MAL-2033,117193,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Highest,Done,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/8/2022 11:37,6/10/2022 14:50,9/28/2022 0:51,6/10/2022 14:50,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,Need to drive the {{balPipeCmplReq_WB}} messages from Baler to the ROB when load data is moved from LTB to VRF.,Alexandre Solomatnikov,David Kravitz,Yohann Rabefarihy,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1795,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-06-14T03:06:50.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/8b5de191fe1a7be20ba4046cc1686f915b0fd9dc,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzmo7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,18:27.1,"09/Jun/22 3:18 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;ROB cnt underflow assertion is firing after this completion is added.

LSU sends the completion a couple cycles before.

Either LSU completion should be removed, or ROB cnt increment has to be added or this change is unnecessary.",09/Jun/22 3:28 PM;5fd15143b4a74900763834e0;I will ask [~accountid:61730c9cbcb57400683f15a6] to remove the LSU completion messages for loads. Is there a branch he can work on?,09/Jun/22 3:48 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;branch MAL-2033,"10/Jun/22 3:44 AM;61730c9cbcb57400683f15a6;Thanks for this branch, looks ok for me, I’ll add a commit to tied off the Rob completion and resolve in the LDPipe.

I wonder if it is not better to take the “ltb.io.balVexPrfWriteReq_WB(i).valid” and the “ltb.io.instDestTag_WB(i).bits.payload.cmn.gid” (which should be created at the interface).

In order to avoid the Pipeline of depth 3, this should save flops on the valid at least.","10/Jun/22 5:28 AM;61730c9cbcb57400683f15a6;I have added the Rob resolve/completion from LDPipe work to the Branch “MAL-2033”.

But it seems that it is failing on some coreip_u8_minimal tests, I’ll try to debug those fails. ","10/Jun/22 8:24 AM;61730c9cbcb57400683f15a6;I found my issue:

Core.scala:

{noformat} val extraPrIdxMSBs  = if (useVector) 2 else 1           // 1 extra MSB to distinguish x vs. f; 1 more for S2V/V2S
  val prIdxBits       = actualPrIdxBits + extraPrIdxMSBs
  val prIdxFBit       = prIdxBits - extraPrIdxMSBs        // There's a lot of code that peeks at tags to see if X or F
  val prIdxVBit       = prIdxBits - 1                     // On scalar side means v2s. Vector side can use FBit?? FIXME-TGV??{noformat}

The prIdxVBit is equal to prIdxFBit when not isa.v, which is error prone to me.

I would prefer that this bit doesn't exist when not using isa.v so that we fail at compilation time.

Anyway this is temporary fix apparently (according to the fix me) I’ll add a commit to make it work and rerun Rat/Sting.","10/Jun/22 9:03 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;{noformat}diff --git a/mallard/src/main/scala/core/mallard/LDPipe.scala b/mallard/src/main/scala/core/mallard/LDPipe.scala
index 9ba8348af07..183f92d8ce9 100644
--- a/mallard/src/main/scala/core/mallard/LDPipe.scala
+++ b/mallard/src/main/scala/core/mallard/LDPipe.scala
@@ -1491,8 +1491,8 @@ class LDPipe (implicit val p: Parameters, val isa: ISA, val mp: MallardCoreParam
   val ldwb_robResolvePtr  = Wire(Valid(UInt(mp.gidBits.W)))
   val ldwb_robCompletePtr = Wire(Valid(UInt(mp.gidBits.W)))
   io.ldwb_robException.earlyValid := ldwb_valid_q && ldwb_metaInfo_q.robNdx.valid && ldwb_readyToResolveFlush_q && (ldwb_flushSelf_q || ldwb_flushNewer_q)
-  ldwb_robResolvePtr.valid        := ldwb_valid_q && ldwb_metaInfo_q.robNdx.valid && ldwb_readyToResolveFlush_q && !ldwb_flushSelf_q
-  ldwb_robCompletePtr.valid       := ldwb_valid_q && ldwb_metaInfo_q.robNdx.valid && !(ldwb_readyToResolveFlush_q && ldwb_flushSelf_q) && !ldwb_cmdAmoSc
+  ldwb_robResolvePtr.valid        := ldwb_valid_q && ldwb_metaInfo_q.robNdx.valid && ldwb_readyToResolveFlush_q && !ldwb_flushSelf_q && !(ldwb_metaInfo_q.prn.valid && ldwb_metaInfo_q.prn.bits(mp.prIdxVBit))
+  ldwb_robCompletePtr.valid       := ldwb_valid_q && ldwb_metaInfo_q.robNdx.valid && !(ldwb_readyToResolveFlush_q && ldwb_flushSelf_q) && !ldwb_cmdAmoSc && !(ldwb_metaInfo_q.prn.valid && ldwb_metaInfo_q.prn.bits(mp.prIdxVBit)){noformat}

Can you do something simpler instead? I.e. {{!something.bits.payload.cmn.ctrl.v}}?",10/Jun/22 9:58 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;I pushed a minor fix into this branch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Drive pipeTag to VEX pipes when moving load data from Baler LTB to VRF,,,,,,MAL-2032,117192,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Highest,Done,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/8/2022 11:34,6/10/2022 6:37,9/28/2022 0:51,6/9/2022 12:03,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,Consuming instructions in the VEX issue queue need to get a wakeup message when their source data is being moved from the LTB into the VRF.,David Kravitz,,,,,,,,,,,,,,,5fd15143b4a74900763834e0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1795,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-09T08:50:45.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/153578d15adbe9fd0a89bfffe875e36a38ca9e6d,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzmnz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,09/Jun/22 12:03 PM;5fd15143b4a74900763834e0;Added `pipeTag` drivers in the Baler. There may still be some tech debt to pay down in terms of optimal timing but we'll look at that in terms of performance/correlation.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] pay tech debt in singleUop/zeroUop/singleNop expressions,,,,,,MAL-2031,117191,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,6/8/2022 11:30,7/14/2022 18:45,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,,,,"Lots of technical debt accumulated in TGV’s {{VectorSequencer}} needs to be paid off to simplify predicates.

[https://github.com/sifive/federation/blob/master/block-tgv-sifive/src/main/scala/core/tgv/VectorSequencer.scala#L148|https://github.com/sifive/federation/blob/master/block-tgv-sifive/src/main/scala/core/tgv/VectorSequencer.scala#L148]

[https://github.com/sifive/federation/pull/23277#discussion_r892301000|https://github.com/sifive/federation/pull/23277#discussion_r892301000]",Alexandre Solomatnikov,Brad Wu,David Kravitz,Nicolas Brunie,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,62103777eb2978006893b778,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzmnr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[SiFive_IFU_assert] Assertion failed: jalrRVIEndMask_F3 should be one-hot or zero,[SiFive_IFU_assert] Assertion failed:  jalrRVIEndMask_F3,,,,,MAL-2030,117185,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Adam George,61b2a458657a0500706b9c39,Rakesh Palakurthi,62350e943eacc50071ff0753,Rakesh Palakurthi,62350e943eacc50071ff0753,6/8/2022 10:26,6/22/2022 23:14,9/28/2022 0:51,6/8/2022 23:11,,,,,,,,,,,Panda DR,,RTL/Frontend,,,,,,,,,0,,,,"This looks like fall-out of fix in [https://sifive.atlassian.net/browse/MAL-1988|https://sifive.atlassian.net/browse/MAL-1988|smart-link],

Test fails with below error:

{noformat}Error: ""/scratch/rakeshp/mallard_0608/federation/builds/coreip_p650/verilog/design/assertions/SiFive_IFU_assert.sv"", 740: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.ifu.SiFive_IFU_assert_0: at time 502102500 ps
Assertion failed: jalrRVIEndMask_F3 should be one-hot or zero
    at IFU.scala:1646 assert(!val_jalr_precondition || val_jalr_precondition & (PopCount(jalrRVIEndMask_F3) <= 1.U),""jalrRVIEndMask_F3 should be one-hot or zero"")

Fatal: ""/scratch/rakeshp/mallard_0608/federation/builds/coreip_p650/verilog/design/assertions/SiFive_IFU_assert.sv"", 749: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.ifu.SiFive_IFU_assert_0: at time 502102500 ps
$finish called from file ""/scratch/rakeshp/mallard_0608/federation/builds/coreip_p650/verilog/design/assertions/SiFive_IFU_assert.sv"", line 749.
{noformat}



{{@501822500}}

{{ifu.icDataArray_3.icDataArray_0_ext_RW0_rdata[64:0]  =xxxxxx}}

{{ifu.icDataArray_3.icDataArray_0_ext_RW0_addr[8:0]  = 0x100}}



*Local path & fsdb:*

{noformat}gamma29:/scratch/rakeshp/mallard_0608/federation/builds/coreip_p650/sim/sim/mallard_0806.outline/hart0/rv64ud-move{noformat}



[https://simscope.internal.sifive.com/sigs/1367/ckkaqvgk7pxe|https://simscope.internal.sifive.com/sigs/1367/ckkaqvgk7pxe]

*Steps to reproduce:*

git checkout [+ac3f89c+|https://simscope.internal.sifive.com/models/master--master--ac3f89c6be5e4ae20f65f308a7d8dae5965c3180]

Build [+coreip_p650+|https://simscope.internal.sifive.com/tests/?regr=fed%2fmaster%2fnightly-mallard-xprop%2f103&build=coreip_p650.vcs]

*rerun.outline:*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rv64ud-move"",
  ""subdir"": ""hart0"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2208340748
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""v""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Adam George,Rakesh Palakurthi,,,,,,,,,,,,,,61b2a458657a0500706b9c39,62350e943eacc50071ff0753,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Requires further investigation,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-08T23:06:32.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,"Assertion only error, CAT-D",CAT-D,,Non-RTL,,,,,,,,1. BRC: Should not Publish,,,,,,,,,,db3af6a301ec31de78bf4d27e9f2cadccbd141f6,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,No,,,,,,,,,,,,2|hzzmmn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,06:17.9,"08/Jun/22 11:06 PM;61b2a458657a0500706b9c39;This test, rv64ud-move, has a TLB exception which causes all data bits to be undefined. The assertion precondition did not consider this case so the assertion fires.","08/Jun/22 11:11 PM;61b2a458657a0500706b9c39;Prior logic assumed _icTagHit_F3_ is _~icTagMiss_F3_ but this is not the case. Assertion logic has been modified to only check when data is moving out of F3 stage, which incorporates the TLB exception check via _~icTagMiss_F3_.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
IFU clock enable should consider RD3 stage of BDP training pipeline,IFU clock enable  should consider RD3 stage of BDP,,,,,MAL-2029,117130,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,6/7/2022 17:51,6/17/2022 15:02,9/28/2022 0:51,6/9/2022 14:17,,,,,,,,,,,,,Performance,RTL/Frontend,,,,,,,,0,,,,"[~accountid:5e1371705361330daaeaf389] found that Coremark performance differed when the IFU clock gating was disabled via the chicken bit, and was able to narrow down the point of divergence between clock gating enabled and disabled.

Part of the clock enable conditions are checking whether there are BDP training events somewhere in flight between the BRQ and the MD stage of the BDP training pipeline.  It turns out that we missed one stage of the training pipeline (ST stage).  It’s possible that a BDP update can make it to the ST stage and the computed IFU clock enable for the next cycle will be low.  The update will then be in the RD stage when the clock is disabled, but the RD stage being valid will cause the IFU clock to be enabled again on the following cycle.  So as a result, the training update will effectively just be stalled by one cycle.  This can lead to differences in the prediction behavior later on.

The current IFU clock enable conditions are below:

{noformat}  ifuClockEn_q := !params.clockGate.B ||                  // clock gating not configured
                  missesOutstanding_CE0 ||                // TLB/miss request outstanding
                  io.bdpUpdate_RD2.valid ||               // Incoming BDP update
                  fetchPipeActive_CE0 ||                  // init/fetch/prefetch in flight
                  ifuMightRequest ||                      // chicken bit or possibility of getting flush
                  (!fetchQueuesFull_CE0 && !io.csr_stall) // Queues not full and not trying to stall for WFI/CEASE{noformat}

We should be able to fix this by adding {{bdpUpdate_RD3.io.deq.valid}} to that expression.",Brian Grayson,Chia-I Chen,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Josh Smith,,,,,,,,,5e1371705361330daaeaf389,61aaafab977c5b007241043c,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,MAL-1868,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,07/Jun/22 5:52 PM;jsmith;ifu_clock.png;https://sifive.atlassian.net/secure/attachment/72979/ifu_clock.png,08/Jun/22 3:48 PM;3ae27148-51ed-4374-80b5-ebc165a416eb;image-20220608-224804.png;https://sifive.atlassian.net/secure/attachment/73008/image-20220608-224804.png,,,,,,,,,,,,,,,,Yes,,Branch Prediction,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-06-14T16:21:01.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,Minor performance issue.,,,,,,,,,,,1. BRC: Should not Publish,,,,,,,,,,1743df5c7ed419d3e7b557f50b1fcb350be9d4ae,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,No,,,,,,,,,,,,2|hzzmbb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,48:57.8,"08/Jun/22 3:48 PM;5e1371705361330daaeaf389;[~accountid:5acffeafaa802f2a797a955c] I tried making the requested change, but it didn’t seem to make much difference. I don’t know exactly what I’m looking at 🙂, but I found this on the waveform that looks suspicious – note the updateValid_ST_1 being held high for an extra clock on the left.

The waveform for this is at {{/scratch/briang/fed_clockgate_june/builds.fix1/coreip_p650/sim/sim.vcs.waves/benchmark_cg_coremark_1_3.outline/chickenCSR=1/useries_coremark_tuned/waves.fsdb}}

Does {{bdp/brqUpdValid_RD}} need to be exported and taken into account, to give the one-cycle heads-up?

!image-20220608-224804.png|width=878,height=533!","08/Jun/22 5:40 PM;5acffeafaa802f2a797a955c;[~accountid:5e1371705361330daaeaf389] Yeah, it turns out there’s more involved than I mentioned in the description.  I’m working on it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU timing: don't monitor FEX tag broadcasts for source 0 in LsDispatch,,,,,,MAL-2028,117107,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,6/7/2022 15:58,9/6/2022 9:14,9/28/2022 0:51,6/7/2022 16:04,,,,,,,,,,,,,RTL/LSU,Timing,,,,,,,,0,,,,"Currently, LS Dispatch monitors tag broadcasts from all IEX, FEX, and Load pipes.  However, source 0 is the address source and can only come from an integer register.  So we only need to monitor FEX tag broadcasts for source 1 (store data).

We did this already inside the LsIssQ Entries in [https://sifive.atlassian.net/browse/MAL-1201|https://sifive.atlassian.net/browse/MAL-1201|smart-link], but missed doing the same in LS Dispatch.  [~accountid:623e4830b75ca80070580145] pointed this out to me today.",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,MAL-1201,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-08T08:51:38.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/23311,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzm8f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
InOrderDispBuf doesn't take into account flushReq gid,InOrderDispBuf,,,,,MAL-2027,117065,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,6/7/2022 10:46,7/12/2022 9:54,9/28/2022 0:51,6/7/2022 15:07,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,,,,,Alexandre Solomatnikov,John Ingalls,Josh Smith,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-07T15:06:22.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/93994b19440e290d5501c92565cbd53fce409ac5,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,No,,,,,,,,,,,,2|hzzlzr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,08:02.4,07/Jun/22 11:08 AM;5acffeafaa802f2a797a955c;Could you add some more detail here?  Does this affect the scalar pipeline as well?,"07/Jun/22 11:12 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;No, it does not affect scalar RDU because flush request is always older.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][RVV 15.2~15.9] VectorMaskCountUnit for vmsxf / viota / vid / vfirst / vpopc,,,,,,MAL-2026,117001,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,6/6/2022 20:50,7/12/2022 9:54,9/28/2022 0:51,6/8/2022 20:18,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,Separate VectorMaskCountUnit for vmsxf / viota / vid / vfirst / vpopc,Brad Wu,,,,,,,,,,,,,,,62103777eb2978006893b778,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1789,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-08T20:04:40.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzll3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Rob Hang assertion on a sting test,[TGV] Rob,,,,,MAL-2025,116930,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,6/6/2022 14:59,9/7/2022 17:43,9/28/2022 0:51,6/8/2022 8:50,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,TGV,,,"I see the assertion fired on a sting test. the assertion is 


{noformat}Error: ""/scratch/verif/srivatsa/ta_spike_vtg_update/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", 2222: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert_0: at time 5152622500 ps
Assertion failed (verification library): ROB Retire Hang around entry 38   @[ROB.scala 699:9]
Fatal: ""/scratch/verif/srivatsa/ta_spike_vtg_update/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", 2231: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert_0: at time 5152622500 ps
$finish called from file ""/scratch/verif/srivatsa/ta_spike_vtg_update/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", line 2231.{noformat}



From the inputs to ROB i see the pclow signals for PC, with valid after the PC {{0x40e6081e}}

{noformat}40e6083a:	921e29d7          	vmulhu.vv	v19,v1,v28
40e6083e:	c038c6d3          	fcvt.lu.s	a3,fa7,rmm{noformat}

the other PC’s are not reported yet. 

{noformat}    40e60822:	42f02057          	vmv.x.s	zero,v15
    40e60826:	82a0d6d7          	vfdiv.vf	v13,v10,ft1
    40e6082a:	00053533          	sltu	a0,a0,zero
    40e6082e:	0f1c4157          	vrsub.vx	v2,v17,s8
    40e60832:	269a3557          	vand.vi	v10,v9,-12
    40e60836:	1e2a8257          	vmax.vv	v4,v2,v21{noformat}



To recreate this failure 

# clone federation and checkout the commit 75c7ccc94cef0aea700530f0e28750327ab3c737
# Build coreip_u8_minimal_vector and run the test using the outline
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_stall_cycle_count=500000"",
    ""+cosim_scoreboard_trap_epc_count=30"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0155"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1950498667
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}



The waves for the simulation are at 

{{gamma22:/scratch/verif/srivatsa/ta_spike_vtg_update/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0155/sting/sifive/vector/vector_tgv_dev.conf}}",Alexandre Solomatnikov,Andrew Hanselman,David Kravitz,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,609d7e1f5998a6006800dcc5,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-08T05:48:12.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/553e5336a1db2490cdbfdb828a881ea63ceafc3e,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,Yes,,,,,,,,,,,,2|hzzl6v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,43:02.3,"07/Jun/22 7:43 AM;5fd15143b4a74900763834e0;This instruction looks suspicious: {{    40e60822:	42f02057          	vmv.x.s	zero,v15}}
Would like [~accountid:609d7e1f5998a6006800dcc5] to give this a quick look to see if that’s the problem.","07/Jun/22 8:09 AM;609d7e1f5998a6006800dcc5;The {{vmv.x.s zero, v15}} instruction reaches scalar dispatch, asserts bits at the IEX dispReq, but isn’t valid nor reaches any issue queue / ex pipe. It’s being marked as only using TGV. {{inst.dispTgvIex = 0}}. Not sure where exactly in the decode chain this is happening, but I think there are a couple different solutions we could implement. One being just squashing the instruction at scalar dispatch if IEX rd == 0, and marking as complete.","07/Jun/22 11:32 AM;5fd15143b4a74900763834e0;We either need to do something like what Andrew proposed, *or* make sure the instruction issues to both TGV and IEX. What’s easier to do right now? Any opinion, [~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185]?","07/Jun/22 11:45 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;{{vmv.x.s zero,...}}  can be dropped by the vector sequencer as vector instructions with {{vl==0}} by adding it to {{v2x0}} in {{MallardMicroOp}}","07/Jun/22 12:32 PM;609d7e1f5998a6006800dcc5;Related: [https://sifive.atlassian.net/browse/MAL-1845|https://sifive.atlassian.net/browse/MAL-1845|smart-link] 
Unsure of status/progress of other ticket.","07/Jun/22 3:19 PM;609d7e1f5998a6006800dcc5;I think the hang here now occurs because there is no scalar uop produced. [https://sifive.atlassian.net/browse/MAL-1845|https://sifive.atlassian.net/browse/MAL-1845|smart-link] makes the sequencer not output any producer uop when rd = 0. But this must not be sufficient. For s2v instructions where rd \!= 0, the sequencer is required to produce an instruction (even if would otherwise be a zeroCycle sequence), so that the consumer on the scalar side doesn’t get orphaned and result in some ROB hang. In this scenario, no uops are produced on either side but there needs to be a completion from somewhere.

I think we should just add the {{v2x0}} as a term in the RDU {{cmpl_ID}} term, which identifies the instruction as not needing to dispatch (not even to TGV), but also marks it as done right there. There is a comment around there that makes me cautious ([link|https://github.com/sifive/federation/blob/92e87b3972094513e39302d802699f14636a66b3/mallard/src/main/scala/core/mallard/RDU.scala#L712]). Is there a CSR that also gets updated when a v2s move occurs? Or is this only for f2i moves?",07/Jun/22 4:57 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;According to [~accountid:6065017e90e3950069cf01c5] this case should be covered by {{zeroUop}} already but I don’t see completion signal from the sequencer.,"07/Jun/22 5:15 PM;609d7e1f5998a6006800dcc5;It looks like completion req signals are only generated from flopped sequencer entries. So when an entry is bypassed to {{zeroUop}} without occupying an entry for a cycle, it doesn’t trigger that logic. I don’t know what “correct” is in this case, but that appears to be what is happening.","07/Jun/22 5:21 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;{quote}It looks like completion req signals are only generated from flopped sequencer entries. So when an entry is bypassed to {{zeroUop}} without occupying an entry for a cycle, it doesn’t trigger that logic. I don’t know what “correct” is in this case, but that appears to be what is happening.{quote}

{{zeroUop}} case should not be bypassed - I removed bypass for {{zeroUop}} to avoid timing problems because {{zeroUop}} doesn’t matter for performance.","07/Jun/22 5:24 PM;609d7e1f5998a6006800dcc5;This is sufficient to get the test passing. We could remove the usage of {{v2x0}} from {{zeroUop}} if this is the case, because {{vmv.x.s zero ...}} would never actually reach the sequencer.

{noformat}$ git diff
diff --git a/mallard/src/main/scala/core/mallard/RDU.scala b/mallard/src/main/scala/core/mallard/RDU.scala
index 782b762e4cf..0404eb6290a 100644
--- a/mallard/src/main/scala/core/mallard/RDU.scala
+++ b/mallard/src/main/scala/core/mallard/RDU.scala
@@ -724,7 +724,8 @@ class RDU(val mp: MallardCoreParams, val fp: IFUParams, val isa: ISA)(implicit v
                                             inst.fenceI               ||
                                             inst.system)) |
                       moveElimSel_ID.asBools |
-                      fusedCmpl_ID
+                      fusedCmpl_ID |
+                      inst_ID.map(inst => isa.v.B && inst.v2x0) // v2s to x0
   val suppress_ID   = replay_ID
 
   for ( ((tgt, inst), suppress) <- ((dbTgt_ID zip inst_ID) zip suppress_ID)) {{noformat}","07/Jun/22 11:17 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;The fix [https://github.com/sifive/federation/pull/23325|https://github.com/sifive/federation/pull/23325|smart-link] is to make {{v2x0}} not bypassable. This is consistent with the rest of the code.

It is possible to drop {{v2x0}} in RDU instead as a further optimization. Then, {{v2x0}} should be completely removed from the sequencer RTL.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][eval] evaluate separate vcompress unit to reduce latency,,,,,,MAL-2024,116896,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,6/6/2022 8:19,7/14/2022 18:45,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Currently {{vcompress.vm}} for any LMUL is implemented using the index-building/index-expansion/full-crossbar datapath shared with {{vrgather*}}. This unit is currently exposing a 3-cycle latency, which seems a bit long (see [~accountid:5e1371705361330daaeaf389] remarks here). We should investigate cost/opportunity for a low latency vcompress implementation using a dedicated prefix compression structure.

[https://sifive.slack.com/archives/C01MHGLSZ0D/p1654525676191369?thread_ts=1654451380.805509&cid=C01MHGLSZ0D|https://sifive.slack.com/archives/C01MHGLSZ0D/p1654525676191369?thread_ts=1654451380.805509&cid=C01MHGLSZ0D|smart-card]",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzkzr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Assertion failed: Rd/WrReqQ entry deallocted without dirWakeUp/missQWakeUp/evictQWakeUp,Assertion failed: Rd/WrReqQ,PL2,wrReqQ,,Refer https://github.com/sifive/arch-specs/blob/master/core/privateL2_mas.adoc#write-request-queue-wrreqq,MAL-2023,116891,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Rick Chen,5fc1b965d670b8006eda0fde,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,6/6/2022 7:18,6/22/2022 23:14,9/28/2022 0:51,6/17/2022 16:55,,,,,,,,,,,,,RTL/Tile,,,,,,,,,0,,,,"*Error*:

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-xprop-coreip_mallard-test-nightly-xprop/101/builds/coreip_p550mc/verilog/design/assertions/SiFive_PL2Cache_RdWrEntFSM_6_assert.sv"", 102: TestDriver.testHarness.system.subsystem.tile_prci_domain_2.tile.pl2_wrapper.pl2.wrReqQ.ents_1.fsm.InvisibleBind_assert: at time 4244302500 ps
Assertion failed: Rd/WrReqQ entry deallocted without dirWakeUp/missQWakeUp/evictQWakeUp

    at RdReqQ.scala:1168 assert(!sva_sleepSeen || sva_dirWakeupSeen || sva_missQWakeupSeen || sva_evictQWakeupSeen, s""Rd/WrReqQ entry deallocted without dirWakeUp/missQWakeUp/evictQWakeUp""){noformat}

The assertion triggers as {{tile_prci_domain_2.tile.pl2_wrapper.pl2.wrReqQ.io_deallocWrReqQ_valid}} goes high when {{tile_prci_domain_2.tile.pl2_wrapper.pl2.wrReqQ.ents_1.fsm.InvisibleBind_assert.sva_sleepSeen}} was asserted.

WaveDump at {{gamma10:/scratch/saurabhs/mallard_master_316_xprop_101/federation/builds/coreip_p550mc/sim/sting_StingMixTuple_T_0187/sting/valtrix/mix/more_st_c_fp_ldst.conf}}

*Steps to Reproduce*:

* Checkout *d2b7b4c*
* Build *coreip_p550mc*
* Run empty test to compile once. {{./sitest @empty}}
* create a directory test,
{{mkdir -p sting_StingMixTuple_T_0187/sting/valtrix/mix/more_st_c_fp_ldst.conf}}
cd path just created
* {noformat}scp -r <username>@sigma27:/scratch/jenkins/archived-builds/fed/master/nightly-mallard-xprop-coreip_mallard-test-nightly-xprop/101/builds/coreip_p550mc/sim/sim-xprop/moaoRIT-nightly.outline/sting_StingMixTuple_T_0187/sting/valtrix/mix/more_st_c_fp_ldst.conf/* .{noformat}
* {noformat}Modify the vcs.sim.rerun.local to
  a. replace the simv to your local simv
  b. add this in any place +fsdbfile\=waves.fsdb +verbose
Modify cosim.cfg dtb to point to your local directory
{noformat}
* run with {{source ./vcs.sim.rerun.local 2>&1 | tee simulation.err2}}",Dave Parry,John Ingalls,Joseph Huang,Saurabh Singh,,,,,,,,,,,,5cc37f384573b30ffbeb88b0,5bb6808b9ba2930990f81895,61579e1f78e5e400703c17e0,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CIP-3586,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,,,,,,,2|hzzkyv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,16:21.8,06/Jun/22 6:16 PM;61579e1f78e5e400703c17e0;[~accountid:607e26f781e7b900681be48c] It’s an assertion issue. The wakeup event is flopped and postponed once cycle and therefore is somehow the checker is skewed. This is an known issue and is going to be fixed in the same PR for [https://sifive.atlassian.net/browse/CIP-3586|https://sifive.atlassian.net/browse/CIP-3586|smart-link] ,17/Jun/22 2:59 PM;5cc37f384573b30ffbeb88b0;[~accountid:61579e1f78e5e400703c17e0] so should this be closed as a duplicate of cip-3886?,"17/Jun/22 4:52 PM;61579e1f78e5e400703c17e0;[~accountid:5cc37f384573b30ffbeb88b0] Yes, this should be closed now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] evaluate more optimistic nano-op scheduling for large vrgather sequence,,,,,,MAL-2022,116819,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,6/5/2022 21:00,7/22/2022 9:44,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Currently the nano-op sequencing for large permute operations ({{vrgather.vx}}, {{vrgather.vv}}, {{vrgatherei16.vv}}) waits for the full data register group to be stored into the permutation engine RFs before issuing the first nano-op. A trigger based on the availability of any data for any nano-op could allow for faster sequencing.



Note: for {{vrgather.vx}} the sequencing only needs the data contains the index encoded by the scalar operand. If this index overflows or if the data containing this index is received sequencing can start without waiting for any other data.",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzkin:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] evaluate large crossbar network in permutation unit,,,,,,MAL-2021,116818,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,6/5/2022 20:59,7/22/2022 9:44,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Try to speed-up vrgather/compress/… (complex and non-complex) by evaluating a crossbar reading {{n*DLEN}} data bits and producing {{m*DLEN}} bits of results.

(n, m are certainly in \{1, 2}).",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzkif:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] optimize tag broadcast / WB latency for complex permute sequence,,,,,,MAL-2020,116816,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,6/5/2022 20:37,9/22/2022 14:48,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Current the {{VectorPermutationEngine}} waits for a complex nano operations to reach the last execution stage of the permutation unit ({{EX2}} or {{EX3}}) before broadcasting the result tag.

This implies the result must be staged during 2 cycles before being forwarded (this is a low bound, as the tag broadcast may be cancelled if it conflicts with another broadcast in the same {{VexPipe}} and may need to be retried, thus delaying result forwarding even more).

This stagging latency could be saved if the first attempt to broadcast tag was made {{wakeUpToRR}} cycles before the result reached the end of the permutation unit.



!image-20220922-214451.png|width=1954,height=1035!



The complex permute operations have different latencies and different constraints:

* vslide has 2-cycle latency
** best would be to broadcast the cycle before {{PEX}} (that is {{PSEQ}})
* vrgather has 3-cycle latency so tag can be broadcasted from {{PEX}}
* vcompress has also 3-cycle latency but we don’t know before the end of the unit if a result will be ready or not (as it depends on the number of elements/bytes accumulated during that operation)
** Does not seem visible to broadcast {{vcompress}} tags early



For {{vslide}} and {{vpermute}}, if a tag conflict happen then we must try again the next cycle, but since result is not ready yet, we don’t need to stage it right away.",Ian Chuang,Nicolas Brunie,,,,,,,,,,,,,,61aaae1d9615eb006f5ff922,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,22/Sep/22 2:48 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220922-214451.png;https://sifive.atlassian.net/secure/attachment/78139/image-20220922-214451.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzkhz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Vex pipe assertion for 2 results committing in one cycle,[TGV] Vex ,Execution Unit ,Vex pipe,,,MAL-2019,116747,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,6/3/2022 14:26,9/7/2022 17:43,9/28/2022 0:51,6/7/2022 13:03,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"I see a vector assertion being fired during the sting test. the assertion fired is 

{noformat}Error: ""/scratch/verif/srivatsa/ta_spike_vtg_update/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", 535: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_0.SiFive_VexPipe_assert_0: at time 2968602500 ps
Assertion failed: At most one result should try to commit at EXN stage of VexPipe.
    at VexPipe.scala:1339 assert(PopCount(outputs.map(o => o._1).asUInt) <= 1.U, ""At most one result should try to commit at EXN stage of VexPipe."")

Fatal: ""/scratch/verif/srivatsa/ta_spike_vtg_update/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", 544: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_0.SiFive_VexPipe_assert_0: at time 2968602500 ps
$finish called from file ""/scratch/verif/srivatsa/ta_spike_vtg_update/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", line 544.{noformat}



the instruction to be retired are 

{noformat}    8b0210c2:	cb4ca957          	vwsubu.vv	v18,v20,v25
    8b0210c6:	82e1d657          	vfdiv.vf	v12,v14,ft3{noformat}

Seems like both are trying to commit at the same time. I see the valids going high in design. 

to recreate this failure

# clone federation and checkout the commit 6a0180c19289d0c40ea756e2d8bd5da183bffb92
# build coreip_u8_minimal_vector and rerun the test using the outline
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_stall_cycle_count=500000"",
    ""+cosim_scoreboard_trap_epc_count=30"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0294"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2807101700
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}

the waves are at {{gamma22:/scratch/verif/srivatsa/ta_spike_vtg_update/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0294/sting/sifive/vector/vector_tgv_dev.conf}}",Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1937,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-07T13:02:57.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/8bcf0a094b81130ed95732c9c32abcb64f2e3da2,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,Yes,,,,,,,,,,,,2|hzzk3b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,55:00.8,"03/Jun/22 4:55 PM;6065017e90e3950069cf01c5;[~accountid:5fd15143b4a74900763834e0] / [~accountid:5a938e9c0913194d2d262658]  Looks like a bug not taking into account intNarrow tag broadcast. The code was partially merged with minmax broadcast except, the flag indicating a broadcast was not merged which is leading the division to ignore a tag broadcast conflict and leads to a result forwarding conflict. I am trying a fix right now and also using this to clean it up a bit as we wanted to do in [https://sifive.atlassian.net/browse/MAL-1937|https://sifive.atlassian.net/browse/MAL-1937|smart-link] 

I am already hearing [~accountid:5fd15143b4a74900763834e0] saying “I told you so” …","03/Jun/22 6:53 PM;6065017e90e3950069cf01c5;[~accountid:5a938e9c0913194d2d262658] , could you test with change from [https://github.com/sifive/federation/pull/23223|https://github.com/sifive/federation/pull/23223|smart-link]  ?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] refactor TGVVecCmd to use MallardMicroOp as uop class,,,,,,MAL-2018,116726,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Brad Wu,62103777eb2978006893b778,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,6/3/2022 11:11,9/8/2022 8:08,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,"Currently {{TGVVecCmd}} class inherits from {{AugmentedVectorCommand}} (and indirectly from {{VectorCommand}}), those class defines a {{MicroOp}} field which can be used to access part of the opcode decoding. {{TGVVecCmd}} would rather benefit from having a {{MallardMicroOp}} field  (this could allow us to remove some TGV specific code from Bullet’s {{MicroOp}} definition introduced in [https://github.com/sifive/federation/pull/22955|https://github.com/sifive/federation/pull/22955/files] for example).





+ [https://github.com/sifive/federation/pull/23312#discussion_r898044287|https://github.com/sifive/federation/pull/23312#discussion_r898044287]

[~accountid:5fd15143b4a74900763834e0] 's comment:

{quote}Given some confusion among {{uop}}, {{csid}}, and {{uopNum}}. I want to rename {{.uop}} to be {{.ctrl}}, but then it holds {{payload}} which eventually leads to another {{ctrl}}, right? {{inst}} will be confusing too.{quote}



PPA comparison reports of the design choice to use {{MallardMicroOp}} as the base class of {{TGVVecCmd}} and replacing almost all the Bullet’s {{MicroOp/AugmentedVectorCommand/etc}} classes
[https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2321580627/MAL-2018+P670+PPA+comparison|https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2321580627/MAL-2018+P670+PPA+comparison|smart-link] ",Brad Wu,Nicolas Brunie,,,,,,,,,,,,,,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-07-29T22:40:54.000-0700"",""stateCount"":3,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,,,,,,,,,,,,,,,,,,,2|hzzjz3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,33:09.5,"21/Jul/22 8:33 PM;62103777eb2978006893b778;[~accountid:6065017e90e3950069cf01c5] What do we want to do?

# Have a {{MallardMicroOp}} field in {{TGVVecCMD}} 
# Create Mallard’s own {{AugmentedVectorCommand}} and {{TGVVecCMD}} can inherit from it
# Let {{TGVVecCMD}} be the {{AugmentedVectorCommand/VectorCommand}} for Mallard and {{TGVVecCMD}} just need to inherit from {{MallardMicroOp}}

If we want to switch completely to {{MallardMicroOp}} (as [https://docs.google.com/spreadsheets/d/1gIphV8RkvVz7GatKi29Yl6qWpCyitjonXrX5hW8bBHk/edit#gid=0|https://docs.google.com/spreadsheets/d/1gIphV8RkvVz7GatKi29Yl6qWpCyitjonXrX5hW8bBHk/edit#gid=0|smart-link]  sugggests), then we need to do the 2. or 3. way.","21/Jul/22 9:31 PM;6065017e90e3950069cf01c5;The underlying principles are:

* simplify the code
* re-use as much code as possible
* try not to modify Bullet code specifically for Mallard/TGV
* remove duplicates

What combinations of your plans permit to maximize these goals ?","21/Jul/22 9:52 PM;62103777eb2978006893b778;I agree to reuse as much code as possible now, so maybe Plan 1 is the better choice.

The downside of it is if we want to access TGV specific methods, then the code looks like

{{tgvVecCmd.mop.vintredop}} instead of {{tgvVecCmd.uop.vintredop}}, and having 2 uop fields ({{uop}} for Bullet, {{mop}} for Mallard (TBD)) in it is confusing and wastes area.

In the long term, I think having Mallard’s own {{AugmentedVectorCommand}} might be a good choice, just like we eventually want to have TGV’s own version of LLP. But it requires rather large modifications to the code base and would break things accidentally.","28/Jul/22 5:52 PM;62103777eb2978006893b778;Since LLP uses the {{AugmentedVectorCommand}} as the input CMD, which is the base class {{TGVVecCmd}} is extended from, I think it is not possible to switch to {{MallardMicroOp}} completely if we are still using Bullet’s LLP.","28/Jul/22 6:04 PM;6065017e90e3950069cf01c5;Ok, so we may want to delay that to the point where we switched the LLP for a mallard specific LLP (post-panda)","29/Jul/22 2:02 AM;62103777eb2978006893b778;After we have a mallard specific LLP, then we can working on mallard-specific VectorUnit.scala (includes {{AugmentedVectorCommand}}, {{VectorCommand}}, etc.) and 

TGVVecCmd will be inherit from MallardMicroOp naturally -and remove all the Bullet’s dependencies-.","29/Jul/22 8:19 PM;62103777eb2978006893b778;Created PRs [https://github.com/sifive/federation/pull/24945|https://github.com/sifive/federation/pull/24945|smart-link], [https://github.com/sifive/federation/pull/24944|https://github.com/sifive/federation/pull/24944|smart-link]  to demonstrate the possibility/overhead of using {{MallardMicroOp}} as the base class of {{TGVVecCmd}}.","02/Aug/22 5:31 AM;62103777eb2978006893b778;The PPA report of {{TGV_own_LLP}} and {{TGVVectorUnit_experimental}} is out [https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2321580627/MAL-2018+P670+PPA+comparison|https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2321580627/MAL-2018+P670+PPA+comparison|smart-link] , [~accountid:6065017e90e3950069cf01c5] you might want to take a look.","02/Aug/22 5:50 AM;6065017e90e3950069cf01c5;Very promising result overall, except the LLP itself which grows when simplified \!","02/Aug/22 6:47 AM;62103777eb2978006893b778;I’m expecting LLP size can be shrink down by roughly a quarter because I removed some functions, but it turns out not to be the case 😞 

We can explain the LLP size in that report in two different ways

# Genus is smart enough to remove the already-implemented functions from Bullet’s LLP by checking the masked opcode from Vexpipe. We could confirm it by un-masking the LLP opcode and re-do the master version synthesis. Then we don’t need to bother implementing TGV’s own LLP.
# Removing these functions really just save little area. Then we should revisit the a area of {{VectorFcvtUnit/VectorIntNarrowUnit/VectorRecipApproxUnit}} because they are too big that doesn’t make sense.",02/Aug/22 7:18 AM;6065017e90e3950069cf01c5;Another solution is that area of LLP is not constrained by being critical in timing yet. You can try to strip down one cycle from LLP depth and see how area evolves in the various configurations.,"03/Aug/22 7:55 PM;62103777eb2978006893b778;The result is updated in [https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2321580627/MAL-2018+P670+PPA+comparison|https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2321580627/MAL-2018+P670+PPA+comparison|smart-link] , and it confirms the following hypothesis:

{quote}Removing these functions really just save little area. Then we should revisit the a area of {{VectorFcvtUnit/VectorIntNarrowUnit/VectorRecipApproxUnit}} because they are too big that doesn’t make sense.{quote}

It’s not critical for now. We can revisit it when available.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] Rationalize tests after loads are stable,,,,,,MAL-2017,116724,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/3/2022 10:40,6/28/2022 11:52,9/28/2022 0:51,,,,,,,,,,,,,,Verification,,,,,,,,,0,,,,Add a {{vle*.v}} test to {{tgv-sanity.outline}}. Delete the {{vle}}-only test and its ancillary files.,David Kravitz,John Ingalls,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzjyn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] vrgather.vi instruction causes WRDATA mismatch,[TGV] vrgather.vi instruction causes WRDATA,Execution Unit ,Vector,,,MAL-2016,116710,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Anil Sharma,607e26831417e2006abb3189,Anil Sharma,607e26831417e2006abb3189,6/3/2022 5:21,9/7/2022 17:43,9/28/2022 0:51,6/6/2022 19:01,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"[vrgather.vi|http://vrgather.vi] instruction causes WRDATA mismatch when it is trying to update 2 destination registers.
It is correctly updating the first register but second register data is completely different.
SEW=8b, vl=23, LMUL=4
As shown below, vrf\[13] should be updated with *46* instead of *1d* for the last 7 active elements.

{noformat}C                   0:      23362 vrf[12]=[46464646464646464646464646464646][ffff]
C                   0:      23363 vrf[13]=[8569ce14c84174d9b01d1d1d1d1d1d1d][ffff]
Error: Instruction-by-Instruction check failed
C                   0:      23365 [1] pc=[0000000080001d9a] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[3300b657] vrgather.vi v12, v16, 1
C                   0:      23365 [1] pc=[0000000080001d9e] W[r 7=0000000000000002][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[c21023f3] csrr    t2, vtype
{noformat}

I tried to trace the signals and instSrcs_EX_1 is being updated with data of index 1 with 1d (Which was changing from 46)
 

!image-20220603-122225.png|width=1362,height=567!

!image-20220603-122254.png|width=606,height=176!


config: coreip_u8_minimal_vector
SHA: 72aec32d7b6
rerun.outline


{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+verbose""
  ],
  ""subdir"": ""t0000_lmul4"",
  ""subtest"": ""vrgather.vi"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vrgather.vi_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-50_LMUL-4_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 3230774769
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}



Run Area:

{noformat}gamma28 /scratch/verif/anils/tgv/tgv-104/federation/builds/coreip_u8_minimal_vector/sim/rerun_wrdata/rerun.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vrgather.vi{noformat}",Anil Sharma,Nicolas Brunie,,,,,,,,,,,,,,607e26831417e2006abb3189,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,03/Jun/22 5:23 AM;ug:19ff183d-5b79-4eee-aa26-e8e79a0ae23a;image-20220603-122225.png;https://sifive.atlassian.net/secure/attachment/72836/image-20220603-122225.png,03/Jun/22 5:23 AM;ug:19ff183d-5b79-4eee-aa26-e8e79a0ae23a;image-20220603-122254.png;https://sifive.atlassian.net/secure/attachment/72837/image-20220603-122254.png,03/Jun/22 10:21 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220603-172020.png;https://sifive.atlassian.net/secure/attachment/72845/image-20220603-172020.png,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-03T12:50:12.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,No,,,,,,,,,,,,2|hzzjvj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,21:09.7,"03/Jun/22 10:21 AM;6065017e90e3950069cf01c5;The issue seems to be a bad index for the static source data register: {{rs2}} should be uniform across all the uops sequenced from the same {{vrgather.vi}} 

The issue originates in the sequencer 

!image-20220603-172020.png|width=1244,height=795!

Should be fixed in [https://github.com/sifive/federation/pull/23193|https://github.com/sifive/federation/pull/23193|smart-link] ",03/Jun/22 10:21 AM;6065017e90e3950069cf01c5;Thank for the thorough report [~accountid:607e26831417e2006abb3189] ,"06/Jun/22 6:59 PM;607e26831417e2006abb3189;Thanks [~accountid:6065017e90e3950069cf01c5] 
The failing test is passing with the RTL change and not seeing anymore issue with {{vrgather}} instruction in the regression for now.
Marking the ticket as *Resolved*.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Improve Instruction Boundary marking Logic in IFU for Healdsburg,,,,,,MAL-2014,116705,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Won't Do,Adam George,61b2a458657a0500706b9c39,Vishad Viplav,623e520c94742a00683f710a,Vishad Viplav,623e520c94742a00683f710a,6/3/2022 2:29,6/3/2022 8:31,9/28/2022 0:51,6/3/2022 2:30,,,,,,,,,,,,,Implementation,RTL/Frontend,,,,,,,,0,,,,"Hi 



Currently, for finding instruction boundaries in a fetch group we are using a recursive operation which leads to multiple mux like gates getting added in sequence which will grow linearly with fetch size. The Fetch bypass to Instruction Queue uses an adaptor which uses these instruction boundaries in another recursive operation to get the desired number of opcodes. 

The logic depth of these paths in F3 stage is increasing by a huge margin , with the fetch bypass to instruction queue going upto 50 gates at synthesis



Starting this thread to discuss ideas and share results for RTL experiments",Vishad Viplav,,,,,,,,,,,,,,,623e520c94742a00683f710a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzjun:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Improve Instruction Boundary marking Logic in IFU for Healdsburg,,,,,,MAL-2013,116706,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Adam George,61b2a458657a0500706b9c39,Vishad Viplav,623e520c94742a00683f710a,Vishad Viplav,623e520c94742a00683f710a,6/3/2022 2:32,7/28/2022 7:44,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/Frontend,,,,,,,,0,,,,"Hi

 

Currently, for finding instruction boundaries in a fetch group we are using a recursive operation which leads to multiple mux like gates getting added in sequence which will grow linearly with fetch size. The Fetch bypass to Instruction Queue uses an adaptor which uses these instruction boundaries in another recursive operation to get the desired number of opcodes.

The logic depth of these paths in F3 stage is increasing by a huge margin , with the fetch bypass to instruction queue going upto 50 gates at synthesis

 

Starting this thread to discuss ideas and share results for RTL experiments",Josh Smith,Vaibhav Gupta,Vishad Viplav,,,,,,,,,,,,,5acffeafaa802f2a797a955c,623e4830b75ca80070580145,623e520c94742a00683f710a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,03/Jun/22 2:31 AM;ug:519a710a-c989-4f27-af37-bfaa49b5eb6c;IFU critical paths (mallard) - F3 Redirect (reg2mem).png;https://sifive.atlassian.net/secure/attachment/72833/IFU+critical+paths+%28mallard%29+-+F3+Redirect+%28reg2mem%29.png,03/Jun/22 2:31 AM;ug:519a710a-c989-4f27-af37-bfaa49b5eb6c;IFU critical paths (mallard) - Instruction Queue.png;https://sifive.atlassian.net/secure/attachment/72834/IFU+critical+paths+%28mallard%29+-+Instruction+Queue.png,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzjuv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Enable fast-path for load data returns to LTB,,,,,,MAL-2012,116685,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Lance Huang,62aae145188d08006fe3031f,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/2/2022 14:45,9/23/2022 4:44,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,,,,"As part of 1st-load bringup, the replay logic in the LTB was incomplete. The chosen workaround was to force vector data to come from LdqWbReq. We’d like to return vector load data faster if possible.

There will be a performance impact if we cannot enable fast data returns.",Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Knute Lingaard,Nicolas Brunie,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,5e1374fb7a22c90da0c60495,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-26T19:42:44.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,2|hzzjr3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,14:17.7,"13/Sep/22 2:14 PM;5bb6808b9ba2930990f81895;# Remove this line: [https://github.com/sifive/federation/blob/f4843d8c71b937e104871c528e54050a832626d3/mallard/src/main/scala/core/mallard/LSTPipe.scala#L1185|https://github.com/sifive/federation/blob/f4843d8c71b937e104871c528e54050a832626d3/mallard/src/main/scala/core/mallard/LSTPipe.scala#L1185]
# Fix whatever else breaks\!  😆 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Support more than one `srcTag` in Baler issue queue(s),,,,,,MAL-2011,116684,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Declined,Warren Menezes,600773dcee80bd006f750bba,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/2/2022 14:34,7/8/2022 2:27,9/28/2022 0:51,7/1/2022 13:21,,,,,,,,,,,,,TGV_RTL/BAL,TGV_RTL/RDU,,,,,,,,0,,,,"The Baler issue queue currently handles only one {{srcTag}}. There will be some instructions/uops that need up to 3 sources, e.g., an indexed & masked store. Indexed & masked loads will use 2 sources for the index & mask move uops, then another uop (with 1 source) for the data move to VRF.",David Kravitz,Warren Menezes,,,,,,,,,,,,,,5fd15143b4a74900763834e0,600773dcee80bd006f750bba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzjqv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,19:31.0,29/Jun/22 3:19 PM;600773dcee80bd006f750bba;The Baler Issue Queue Params has the parameter nSrcs that helps to control the number of sources in the IssQ. I don’t think we need to add any additional code for this,"29/Jun/22 3:30 PM;5fd15143b4a74900763834e0;OK, we’ll just need to bump the number and fill in the details in dispatch stage when we get to indexed & masked loads/stores.",01/Jul/22 1:21 PM;600773dcee80bd006f750bba;Since we already have existing parameters to resolve this will be declining this issue ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Need to support TagID in Issue Queues,,,,,,MAL-2010,116682,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Warren Menezes,600773dcee80bd006f750bba,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/2/2022 14:29,9/20/2022 11:28,9/28/2022 0:51,7/26/2022 13:31,,,,,,,,,,,,,TGV_RTL/BAL,TGV_RTL/RDU,,,,,,,,0,,,,"Required to support TagID in the code to identify different tag broadcasts from different sources.  Additional info about refactoring the Tag index can be read in the doc [https://docs.google.com/document/d/1J524tkBrcv5qLyXw6K5o68wdIyywNYWldLZs_c_ZVUw/edit|https://docs.google.com/document/d/1J524tkBrcv5qLyXw6K5o68wdIyywNYWldLZs_c_ZVUw/edit|smart-link] 

 

<Changed description>

Load operations will have a {{srcTag}} field for the load-data-move-to-VRF consisting of \{gid, uopNum}. Currently, the {{u8_minimal_vector}} Baler issue queue has a narrower field. Might be OK for p670 but we need to make sure parameterization is correct for all reasonable configs.",David Kravitz,Nicolas Brunie,Warren Menezes,,,,,,,,,,,,,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,600773dcee80bd006f750bba,,,,,,,,,,,,,,,,,,,,,,,,MAL-2518,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FED-2158,MAL-2619,MAL-2672,,,MAL-2008,MAL-2007,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-08-11T12:57:25.000-0700"",""stateCount"":3,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,,,,100,,,,,,,,,,,,,,,2|hzzjqf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,47:49.5,"15/Jun/22 4:47 PM;600773dcee80bd006f750bba;Need some guidance here [~accountid:5fd15143b4a74900763834e0] [~accountid:5acffeafaa802f2a797a955c] 

I was looking at creating a separate field called tagtype in TagBroadcast of VectorPrfId so that tag type does not get appended as part of prIdx. This means that ROBID and UOPNUM can easily fit into prIdx.

If I go in this direction then the changes that I need to make will affect the IssQ.scala  cause all modules that use SrcTag will require a parameter that makes this tagType optional so that Vector and Baler Issue queues will use tagType while Integer queue will not. 

I have created a draft PR that shows the changes on TagBroadcast and source and destination tag classes.  Let me know what you folks think. 



Draft PR : [https://github.com/sifive/federation/pull/23591|https://github.com/sifive/federation/pull/23591|smart-link] ","15/Jun/22 7:06 PM;5fd15143b4a74900763834e0;I don’t love the idea of adding more stuff, but not sure what the best answer is.

For the Baler Issue Queue:
Load data-move uops need the (only one they care about) srcTag to represent \{ROB ID, uopNum} but none of the other srcTags or destInfo. Store data-move uops need only the destInfo to represent \{ROB ID, uopNum}. However, index- and mask-move uops (which could be part of with store data-move uops, but not load data-move uops) will also need \{ROB ID, uopNum}.

For the LS Issue Queue: mask, index, and store data srcTags will all be woken up / read by \{ROB ID, uopNum}.

Is it possible to define the tag size on a per-Issue Queue as a parameter? Is that desirable? It’s definitely worth getting some thoughts from Josh on this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Some LSU params do not make JSON tweaks easy,,,,,,MAL-2009,116680,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,Brian Grayson,5e1371705361330daaeaf389,Brian Grayson,5e1371705361330daaeaf389,6/2/2022 14:28,7/11/2022 15:42,9/28/2022 0:51,7/7/2022 14:10,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"I’ve noticed that the LSU.scala nLdqSubbankEntries and nStqSubbankEntries in particular do not allow the top-level JSON user to easily add a few more entries – the default for nLdqSubbankEntries is 16, which means one can only change nLdqEnt in the top-level JSON to multiples of 16. Similar for the STQ.

It would be nice if the structure of the parameters/variables were changed to be a subbanking-factor – 1 for LDQ, 2 for STQ – allowing one to add just one or two or three LDQ entries, and two or four or six STQ entries.

I have not scanned the rest of the Mallard core to see if there are other instances of the same issue.",Binayak Tiwari,Brian Grayson,John Ingalls,,,,,,,,,,,,,60a963ed8cbda700681b40c1,5e1371705361330daaeaf389,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-926,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-07-07T11:42:12.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,,,,,,,,,,,,,2|hzzjpz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,2,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,59:49.1,"02/Jun/22 2:59 PM;5bb6808b9ba2930990f81895;The rest of the Mallard LSU has this same pattern in the LoadQ, StoreQ, MSHR, ReleaseQ, and HWPF.

[~accountid:60a963ed8cbda700681b40c1] can we (you) please generalize this Scala Chisel code in the next couple months to either

# support the current parameter scheme with values like {{nLdQEnt=18}} and {{nLdqSubbankEntries=16}}, or
# change to a {{nLdqSubbankFactor}} as Brian suggests.","06/Jul/22 9:45 AM;60a963ed8cbda700681b40c1;Instead of creating a bank for odd entries based on `nEntriesPerSubBank`, we want to merge odd entries in one of the subbank based on `nSubBanks` i.e, the banking factor. [Description|https://github.com/sifive/federation/pull/24189]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Add support for LMUL > 1 to Load Transfer Buffer,,,,,,MAL-2008,116679,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Yohann Rabefarihy,61730c9cbcb57400683f15a6,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/2/2022 14:25,9/24/2022 8:20,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"When establishing LTB entries, need to populate the uop number of all the entries being established. Normally, this will be sequential up to the LMUL of the load operation. Segmented loads will be different and will depend on both {{nf}} and LMUL.",Alexandre Solomatnikov,David Kravitz,John Ingalls,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,MAL-1795,,,,MAL-2504,MAL-2708,,,,,,,,,,,,,,,,,,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FED-2177,MAL-2511,MAL-2560,,,MAL-2007,,,,MAL-2010,MAL-1553,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=4}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":4,""lastUpdated"":""2022-08-29T17:49:14.000-0700"",""stateCount"":4,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":4,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,4,0,,,,,,,,,,,,,,,,,,,2|hzzjpr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
"[TGV] Clean up use of csid/uopNum, especially as related to Baler",,,,,,MAL-2007,116677,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Warren Menezes,600773dcee80bd006f750bba,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/2/2022 14:21,9/27/2022 17:00,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/RDU,TGV_RTL/SEQ,,,,,,,,0,,,,"{{csid}} is a 4b field, uopNum is 3b. We need to clarify how uopNum will be used in the Baler in order to handle loads and stores when LMUL > 1.

This task is mostly in the TGV sequencer/rename/dispatch space. There will be a related task in the Baler.",David Kravitz,,,,,,,,,,,,,,,5fd15143b4a74900763834e0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2008,MAL-2010,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzjpb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] Pay off tech debt added during 1st-load effort,,,,,,MAL-2006,116674,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/2/2022 14:17,8/1/2022 15:33,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/BAL,TGV_RTL/RDU,,,,,,,,0,,,,A bunch of tech debt was added trying to get the 1st load to happen. Will have about handful of tasks to pay that off.,David Kravitz,John Ingalls,Nicolas Brunie,Warren Menezes,Yohann Rabefarihy,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,6065017e90e3950069cf01c5,600773dcee80bd006f750bba,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2007,MAL-2008,MAL-2010,MAL-2011,MAL-2012,MAL-2017,MAL-2034,MAL-2038,MAL-2043,MAL-2057,MAL-2061,MAL-2068,MAL-2069,MAL-2086,MAL-2101,MAL-2296,MAL-2305,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1795,,,,MAL-2123,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-13,,[TGV] Pay down tech debt taken on during 1st-load work,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,dark_green,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzjp3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Fast Data Return: multiple pipes LSTO stages to LdqRet,,,,,,MAL-2005,116665,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,6/2/2022 12:09,7/29/2022 17:58,9/28/2022 0:51,,,,,,,,,,,,,,Performance,RTL/LSU,,,,,,,,0,,,,"[https://sifive.atlassian.net/browse/MAL-477|https://sifive.atlassian.net/browse/MAL-477|smart-link] added the ability for a Load to fast-path from the LSTO stage to the LdqRet pipeline either the LdqWbReq or LdqRetAW stage.

[https://sifive.atlassian.net/browse/MAL-65|https://sifive.atlassian.net/browse/MAL-65|smart-link] added multiple LS pipes, so now there can be multiple Loads in the multiple LSTO stages, but there is still a fast-path for only one of them to the LdqRet pipeline.  I.e., if two loads want to fast-path, and the LdqRet pipeline is empty, then the older load will go to the LdqWbReq stage, and the younger load will not fast-path into the empty LdqRetAW stage, but instead take the slow path from the LoadQ entry after establishing it.

We can speed up that second load by fast-path’ing it into that empty LdqRetAW stage.",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,MAL-477,MAL-65,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Load/Store,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzjnj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,5,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] fix VexPipe timing issue seen in P670,,,,,,MAL-2004,116657,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,6/2/2022 9:48,9/3/2022 7:41,9/28/2022 0:51,7/20/2022 14:00,,,,,,,,,,,,,Implementation,TGV_RTL/VEX,Timing,,,,,,,0,,,,"

{noformat}-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
group      #minI  #maxI   path_start                                                   path_end                                          num     min     max   level fanout drive  min;max ulvt %
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
REG2REG    #40    #52     core/tgv/freelist/freeVec_reg_*_                             core/tgv/freelist/prAllocReg_*_reg_*_              12    -0.204  -0.203 50-50   2.99  3.00  100.0;100.0
REG2REG    #0     #731    core/tgv/vex/exPipes_*/instPayload_EX_cmn_ctrl_funct*_reg_*_ core/tgv/vex/exPipes_*/instSrcs_EX_*_reg_*_       100    -0.204  -0.197 44-47   4.01  4.04  100.0;100.0
REG2REG    #180   #568    core/tgv/freelist/freeVec_reg_*_                             core/tgv/freelist/freeVec_reg_*_                   25    -0.202  -0.198 49-53   2.97  3.21  100.0;100.0
REG2REG    #313   #375    core/tgv/vex/exPipes_*/instPayload_EX_cmn_ctrl_funct*_reg_*_ core/tgv/vex/exPipes_*/fcvtmod/clock_r_REG*_S*     20    -0.201  -0.201 46-46   3.65  3.46  100.0;100.0
REG2REG    #443   #445    core/tgv/vex/exPipes_*/fcvtmod/clock_r_REG*_S*               core/tgv/vex/exPipes_*/instSrcs_EX_*_reg_*_         3    -0.200  -0.200 46-46   3.35  3.50  100.0;100.0
REG2REG    #764   #931    core/tgv/vex/vexFlushReq_robFlushValid_E*_reg                core/tgv/vex/exPipes_*/instSrcs_EX_*_reg_*_         8    -0.197  -0.197 41-41   4.95  4.27  100.0;100.0
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6/6 path families displayed for group REG2REG{noformat}

[https://sifive.slack.com/archives/C02LGLVN2LD/p1654188202811789|https://sifive.slack.com/archives/C02LGLVN2LD/p1654188202811789|smart-card]



*Work done:*

* critical paths in {{VectorFcvtUnit}} (to {{ core/tgv/vex/exPipes_*/fcvtmod/clock_r_REG*_S}}`) was optimized as part of [https://sifive.atlassian.net/browse/MAL-2091|https://sifive.atlassian.net/browse/MAL-2091|smart-link]
* critical paths in first {{EX}} stage {{exPipes_*/instPayload_EX_cmn_ctrl_funct*_reg_*}} to {{core/tgv/vex/exPipes_*/instSrcs_EX_*_reg_*}}` were in fact in the simple reduction unit and were optimized as part of [https://sifive.atlassian.net/browse/MAL-2092|https://sifive.atlassian.net/browse/MAL-2092|smart-link] 
* the other paths visible in this reports have disappeared (new functionality has introduced more critical paths we are addressing in [https://sifive.atlassian.net/browse/MAL-2093|https://sifive.atlassian.net/browse/MAL-2093|smart-link]  \[new general epic])",Alexandre Solomatnikov,Brad Wu,Josh Smith,Kira Tsao,Nicolas Brunie,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,62103777eb2978006893b778,5acffeafaa802f2a797a955c,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,MAL-2091,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-2093,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Physical Design,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,No,,,,,,,,,,,,2|hzzjlr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,05:07.8,20/Jul/22 3:05 PM;5acffeafaa802f2a797a955c;Which path was actually fixed in this ticket?  And how was it fixed?  Could you please add some more detail?,"20/Jul/22 3:26 PM;6065017e90e3950069cf01c5;[~accountid:5acffeafaa802f2a797a955c] , this was a top level tasks,  the tasks containing the details were done or moved to another epic:

Details is: 

*Work done:*

* critical paths in {{VectorFcvtUnit}} (to {{core/tgv/vex/exPipes_*/fcvtmod/clock_r_REG*_S}}`) was optimized as part of [https://sifive.atlassian.net/browse/MAL-2091|https://sifive.atlassian.net/browse/MAL-2091|smart-link]
* critical paths in first {{EX}} stage {{exPipes_*/instPayload_EX_cmn_ctrl_funct*_reg_*}} to {{core/tgv/vex/exPipes_*/instSrcs_EX_*_reg_*}}` were in fact in the simple reduction unit and were optimized as part of [https://sifive.atlassian.net/browse/MAL-2092|https://sifive.atlassian.net/browse/MAL-2092|smart-link]
* the other paths visible in this reports have disappeared (new functionality has introduced more critical paths we are addressing in [https://sifive.atlassian.net/browse/MAL-2093|https://sifive.atlassian.net/browse/MAL-2093|smart-link] \[new general epic])",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650 timing: create CCL-DS channel to remove false path from pL2 FDB to LSU ldwb_data_q,,,,,,MAL-2003,116638,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,6/2/2022 5:23,9/6/2022 9:14,9/28/2022 0:51,6/7/2022 10:21,,,,,,,,,,,,,RTL/LSU,RTL/Tile,Timing,,,,,,,0,,,,"In a recent P650 PPA run, many of the worst top paths were in a bucket of paths from the pL2 missQ back to the load pipe {{ldwb_data_q}} flop.

I’ll attach a snippet from the timing report. It looks like there is a ton of fanout on the startpoint {{iDrPldFdbPtr_R2}} register, leading to lots of buffering.  Maybe we can duplicate this flop?",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Josh Smith,Tom Mickelson,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,MAL-1215,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1214,,VI-7587,,,,,,,,,,,,,,,,02/Jun/22 5:23 AM;jsmith;MAL-2003.txt;https://sifive.atlassian.net/secure/attachment/72790/MAL-2003.txt,,,,,,,,,,,,,,,,,,,Load/Store,Memory Subsystem,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-07-10T07:55:48.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/23274,,,n/a,,,,,,,,,Physical Design,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,,,,,,,,,,,,,2|hzzjhz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,10,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,47:41.0,02/Jun/22 6:59 AM;5acffeafaa802f2a797a955c;[~accountid:5bb6808b9ba2930990f81895] FYI,"02/Jun/22 9:47 AM;5bb6808b9ba2930990f81895;In this path, data movement is, and possible fixes are:

# muxed from the Fill Data Buffer ({{fdb}}) in the PL2.  We can improve timing on this by adding a pipeline stage for FDB reads.
# sent between units from the PL2 to the LSU.  We can improve timing on this by adding a second set of data return wires (that’s 256 wires\!) for skid data.
# steered during the LDF stage into the {{ldwb_data_q}} flop.  We can improve timing on this by adding another copy of {{LoadGen}} steering muxes for PL2 data return coming in from a different direction than data from within the LSU.

Thoughts on each of those options, and which to do first?",02/Jun/22 9:58 AM;5acffeafaa802f2a797a955c;I think an easier thing to try first would be to duplicate {{iDrPldFdbPtr_R2}} because it drives a massive fanout and there’s ~90ps in just buffering at the beginning of the path.,"02/Jun/22 2:33 PM;5bb6808b9ba2930990f81895;Expanding on possible fix #2: I believe that this is a false path that arises because we try to mux Skid data onto the same DR channel wires.  We could separate this out by having a dedicated data skid (DS) channel, and removing the {{dr_skidValid}} signal from [https://sifive.atlassian.net/browse/MAL-1214|https://sifive.atlassian.net/browse/MAL-1214|smart-link].","02/Jun/22 9:58 PM;5bb6808b9ba2930990f81895;This afternoon, [~accountid:5e137757f65a6b0e9bf1636f] said that congestion has been acceptable so far, and [~accountid:60f1ea6c6491110069392f8f] said that there is enough room on the PL2-LSU interface boundary for 256 more bits, so we can go ahead and add a CCL-DS channel to remove this false path.  I’ll start on this next.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
 MSHR Entry L2 FSM Hang,MSHR Entry L2 FSM Hang,LSU (Load Store Unit),MSHR (Miss Status Handling Register),,Refer https://github.com/sifive/arch-specs/blob/master/core/mallard_lsu_mas.adoc#miss-status-handling-register-mshr,MAL-2002,116621,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Rick Chen,5fc1b965d670b8006eda0fde,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,6/2/2022 0:38,6/21/2022 10:57,9/28/2022 0:51,6/2/2022 6:26,,,,,,,,,,,,,RTL/Tile,,,,,,,,,0,,,,"*Error:*

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/315/builds/coreip_u8mc_minimal/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", 2311: TestDriver.testHarness.system.subsystem.tile_prci_domain_1.tile.core.lsu.MSHRq.mshrEntries_2.SiFive_MSHREntry_assert_0: at time 3486302500 ps
Assertion failed (verification library): MSHR Entry L2 FSM Hang  @[MSHR_Mallard.scala 4174:14]{noformat}

{{tile_prci_domain_1.tile.core.lsu.MSHRq.mshrEntries_2.SiFive_MSHREntry_assert_0.io_disableHangCatcher}} is seen to be asserted at {{T:2686262500ps.}} FSM counter increments and hits the threshold triggering the assertion.

On the PL2 boundary, 2 read requests {{(opcode=0x4, source=0x42, address=0x8000c080)}} are seen at {{T:2048722500ps}} & {{T:2048842500ps}}. On DR channel, Response for source=0x42 is seen only once, at {{T:2049302500ps.}}

No activity is seen on RD & DR Channel after {{T:2057542500ps}} till end of simulation.

!image-20220602-073320.png|width=1268,height=188!

WaveDump available at {{gamma10:/scratch/saurabhs/mallard_master_315_xprop_100/federation/builds/coreip_u8mc_minimal/sim/sim/MSHREntry.outline/torture_mem_T_0183/torture/mem}}



Steps to Reproduce:

* Checkout commit *171be20*
* Build *coreip_u8mc_minimal*
* rerun.outline:
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingInstMemTuple_T_0025"",
  ""subtest"": ""valtrix/algorithms/branches/branch_shadow.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3867538169
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",John Ingalls,Rakesh Palakurthi,Saurabh Singh,,,,,,,,,,,,,5bb6808b9ba2930990f81895,62350e943eacc50071ff0753,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CIP-3586,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,02/Jun/22 12:38 AM;ug:40f4a4a1-8fbe-4d1b-a941-c827c45ed3d4;image-20220602-073320.png;https://sifive.atlassian.net/secure/attachment/72785/image-20220602-073320.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,"Duplicate of cip-3586, which was introduced by pL2 sleep/wake restructure work. Does not affect released IP.",,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Torture,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,,,,,,,2|hzzjf3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650 Timing: First stage of double precision FADD,,,,,,MAL-2001,116598,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Won't Do,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,6/1/2022 19:37,9/21/2022 10:58,9/28/2022 0:51,9/15/2022 4:22,,,,,,,,,,,,,RTL/FEX,Timing,,,,,,,,0,,,,"In a recent P650 PPA run, one of the top timing buckets is in the first stage of the double precision FADD.  I don’t know if there are still some optimizations to be made, but I think we could always increase the latency from 2 to 3 cycles in the worst case.

The excerpt from the timing report is attached.",Brian Grayson,Erdinc Ozturk,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,Kira Tsao,Knute Lingaard,Nicolas Brunie,Tom Mickelson,,,,,,5e1371705361330daaeaf389,61ccb01d90cfd20071b96af2,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,5e1a4f5ec578120daca5ff8e,5e1374fb7a22c90da0c60495,6065017e90e3950069cf01c5,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,01/Jun/22 7:38 PM;jsmith;MAL-2001.txt;https://sifive.atlassian.net/secure/attachment/72775/MAL-2001.txt,02/Jun/22 7:47 AM;e6f627bd-82df-43d2-a775-e108801e4606;fex_retime.txt;https://sifive.atlassian.net/secure/attachment/72796/fex_retime.txt,,,,,,,,,,,,,,,,,,Floating Point,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Physical Design,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzja7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,12:55.5,01/Jun/22 7:39 PM;5acffeafaa802f2a797a955c;[~accountid:6065017e90e3950069cf01c5] FYI,"01/Jun/22 8:12 PM;6065017e90e3950069cf01c5;what is the difference between

{{Slack:= -0.025 25}}

and 

{{ Slack(original):= -0.037}} ?

What does {{original}} stands for ?

It would be interesting to see if the pipeline is balanced (what is the slack in the 2nd stage)","01/Jun/22 8:39 PM;5acffeafaa802f2a797a955c;I don’t know what {{original}} means.  [~accountid:5e137757f65a6b0e9bf1636f] do you know?

Good question about the slack in the next cycle.  But the endpoint is a retimed flop, so I don’t think there would be a lot.","01/Jun/22 9:35 PM;6065017e90e3950069cf01c5;{quote}Good question about the slack in the next cycle. But the endpoint is a retimed flop, so I don’t think there would be a lot.{quote}

You are most certainly right, although sometime retiming is performed early in the flow and the final result can show unbalanced stages. Nonetheless this should help us better balance the pipeline if you need to do it manually.



{quote}but I think we could always increase the latency from 2 to 3 cycles in the worst case.{quote}

We could, but I think we should keep this as a last resort.","02/Jun/22 7:17 AM;5e137757f65a6b0e9bf1636f;Original is the GBA number, the slack number in these reports is PBA",02/Jun/22 7:39 AM;5e137757f65a6b0e9bf1636f;The next cycle slack is +19ps,"02/Jun/22 7:39 AM;6065017e90e3950069cf01c5;{quote}Original is the GBA number, the slack number in these reports is PBA{quote}

The path based analysis is more accurate, isn’t it ? ","02/Jun/22 7:47 AM;5e137757f65a6b0e9bf1636f;[^fex_retime.txt]

","02/Jun/22 7:53 AM;5e137757f65a6b0e9bf1636f;GBA is graph based analysis, PBA is Path based analysis.  GBA just uses the worst path through the cell, PBA calculates the actual path though a cell.  So, PBA is more accurate, but takes longer to compute.
We use PBA reports for marketing.",13/Jun/22 1:27 PM;5e1374fb7a22c90da0c60495;Let us know if we need to bump the latencies of these instructions in the model…,"13/Jun/22 6:23 PM;61ccb01d90cfd20071b96af2;Currently investigating the issue, for now let’s keep it 2cc.",15/Sep/22 4:22 AM;5acffeafaa802f2a797a955c;Closing this ticket since we haven't seen this pop up in recent PPA runs.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650 Timing: Path from branch units to historyRewindRd_F1,,,,,,MAL-2000,116567,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,6/1/2022 15:56,9/3/2022 7:42,9/28/2022 0:51,6/2/2022 9:53,,,,,,,,,,,,,Implementation,RTL/Frontend,TGV_RTL/RDU,Timing,,,,,,0,,,,"When a branch mispredicts, we have to ready the branch history pointer from the BRQ in the EX stage, and send it back to the IFU to read the history rewind information.

In P650 there are two branch pipes, so the path to determine which BRQ entry to read goes through finding the oldest mispredicted branch (which goes through the misprediction detection logic).  We can read the BRQ entries for both branch pipes, read both history rewind entries, and then mux between the two based on which pipe was the oldest mispredicted branch (if any).",John Ingalls,Josh Smith,Michael White,Tom Mickelson,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,01/Jun/22 3:57 PM;jsmith;MAL-2000.txt;https://sifive.atlassian.net/secure/attachment/72767/MAL-2000.txt,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-02T09:53:15.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,a982ffbccbaae1126f505bdabd1a456ee5fc2320,,,n/a,,,,,,,,,Physical Design,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzj5z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,04:49.3,01/Jun/22 4:04 PM;5bb6808b9ba2930990f81895;ticket number 2000\!  📈 ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P550 LSU to PL2 Timing: ccl.rh.validQual to pl2/dirBanks CEB,,,,,,MAL-1999,116562,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,6/1/2022 15:10,9/6/2022 9:15,9/28/2022 0:51,6/2/2022 9:50,,,,,,,,,,,,,RTL/LSU,Timing,,,,,,,,0,,,,"Startpoint: tile/core/lsu/LSTPipes_1/lstm_dtlbResp_q_ae_ld_reg/CP
Endpoint:  tile/pl2_wrapper/pl2/dirBanks_0/TagRAM/TagRAM_ext/sram_0_3/CEB
Slack:                    -0.0284
Skew:                    -0.0036
Stages:                          24
BufINVs:                          8
Manhattan (X/Y):  251.943/309.357
PCD:                        0.2145
PND:                        0.076
Corner:                     func_tt_0p750v_85c_typical_view

!image-20220601-220024.png|width=712,height=668!

See: /project/tsmc/cln7ff/P6_ppa_runs/michaelw/P650/timing_reports/MAL-1999",John Ingalls,Joseph Huang,Michael White,,,,,,,,,,,,,5bb6808b9ba2930990f81895,61579e1f78e5e400703c17e0,60f1ea6c6491110069392f8f,,,,,,,,,,,,,,,,,,,,MAL-1905,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1213,,VI-7333,,,,,,,,,,,,,,,,01/Jun/22 3:25 PM;John.Ingalls;MAL-1999.rpt.txt;https://sifive.atlassian.net/secure/attachment/72766/MAL-1999.rpt.txt,01/Jun/22 3:10 PM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220601-220024.png;https://sifive.atlassian.net/secure/attachment/72765/image-20220601-220024.png,,,,,,,,,,,,,,,7298b78ef05eb83b717a835a01b558c47c2af440,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-02T07:48:13.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/23094,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzj4v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,55:13.6,"01/Jun/22 3:55 PM;5bb6808b9ba2930990f81895;[~accountid:61579e1f78e5e400703c17e0] [~accountid:5fc1b965d670b8006eda0fde] I think the solution on this timing path is going to be to propagate {{LateCancel}} farther into the PL2 on the CCL-*RH* channel, similar to the RD channel.  I’ll work on that real quick.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Fix masking for widening ops,,,,,,MAL-1998,116499,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,6/1/2022 8:26,6/8/2022 11:28,9/28/2022 0:51,6/7/2022 12:30,,,,,,,,,,,Panda DR,,TGV_RTL/VEX,,,,,,,,,0,,,,"* Mask source vsew corresponds to the destination vsew. When the mask source is read, the proper chunk needs to be muxed out based on vsew + widening factor.
* Flag masking used by LLP for widening ops need byte mask of source SEW (not widened SEW)",Andrew Hanselman,,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-06-10T14:10:03.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6c8a9d80af8bfe100fcb9642862d405d80256b63,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzziqv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] optimize tag broadcast toggling,,,,,,MAL-1997,116498,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,6/1/2022 7:52,7/21/2022 19:05,9/28/2022 0:51,7/12/2022 10:05,,,,,,,,,,,,,Power,TGV_RTL/VEX,,,,,,,,0,,,,Transpose [https://sifive.atlassian.net/browse/MAL-1995|https://sifive.atlassian.net/browse/MAL-1995|smart-link]  optimization to {{VexPipe}},David Kravitz,Nicolas Brunie,,,,,,,,,,,,,,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2096,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-11T17:09:12.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,0c5e60a60641cb0bad296f5ed90f9e19d574680f,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzziqn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,23:40.2,"17/Jun/22 6:23 AM;5fd15143b4a74900763834e0;TGV doesn’t have branch instructions, but these instructions may be able to suppress some pipeline stages:
- writing to mask accumulators
- explicit v2s moves
- vfirst/vpopc
There could be more possibilities found in PowerArtist",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Add clock gating to X2Y,,,,,,MAL-1996,116495,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,6/1/2022 6:41,6/3/2022 8:44,9/28/2022 0:51,6/3/2022 8:44,,,,,,,,,,,,,RTL/RDU,TGV_RTL/X2Y,,,,,,,,0,,,,Agreed on a scheme with [~accountid:609d7e1f5998a6006800dcc5] that we can use the S2V and V2S free and alloc pointers to know when clocking is needed for those units. Now just need to implement it.,Andrew Hanselman,David Kravitz,Josh Smith,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-03T08:43:00.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/933a66af244e419c8c4fc756b72ca620f0c45bdc,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzipz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,04:12.4,"01/Jun/22 7:04 AM;609d7e1f5998a6006800dcc5;Another thing I thought of: the pointers aren’t updated until a ROB group is allocated. The clock enable also needs to depend on {{robOpenGroupValid}} and {{nEntriesInRobOpenGroup}} ([ref|https://github.com/sifive/federation/blob/2144c2980266a4f217e46f42e9f24ce4bbd4ddf3/mallard/src/main/scala/core/mallard/RDU.scala#L2123]). I don’t think the highlighted line is exactly what you want, but all the signals are there to calculate the pointer including the open group.","01/Jun/22 7:39 AM;5fd15143b4a74900763834e0;Does it need to “look ahead” or can it wait for the ROB group to be allocated? That is, can the scalar-side uop get into the IEX or FEX issue queue before the ROB group allocates?","01/Jun/22 7:46 AM;5acffeafaa802f2a797a955c;Yes, instructions can dispatch, issue, and complete before the group closes and is fully written to the ROB",03/Jun/22 8:44 AM;5fd15143b4a74900763834e0;Done,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[Power] Prevent tag broadcast and PRF writeback buses from unnecessarily toggling,,,,,,MAL-1995,116459,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,5/31/2022 19:22,7/29/2022 9:04,9/28/2022 0:51,6/1/2022 9:30,,,,,,,,,,,,,Power,RTL/FEX,RTL/IEX,,,,,,,0,,,,"Currently, the flops which drive the tag broadcast PRF index can be enabled even when the instruction going down the pipe doesn’t write to a register (such as a branch instruction).  And flop which stores the WB data can be enabled too.  This just leads to unnecessary toggling on high-fanout buses.",Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,MAL-1981,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-01T09:30:25.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,a36d2149b2ec7b8c763d692fb53a29e929b98230,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzziif:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Jun/22 9:30 AM;5acffeafaa802f2a797a955c;According to PowerArtist, this didn’t help as much on {{coreip_p650_7nm_H240}} as I expected.  It looks like it saved about 0.3mW overall.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU timing: pre-calculate memRead/memWrite in LSTPipe flops,,,,,,MAL-1994,116440,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Swarnashri Chandrashekar,6287f376f0302e0068bff30c,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,5/31/2022 16:15,9/3/2022 7:42,9/28/2022 0:51,6/30/2022 13:07,,,,,,,,,,,,,Implementation,RTL/LSU,Timing,,,,,,,0,,,,"There are many uses of {{memSearch_q && isRead(memCmd_q)}} and similar for {{isWrite(memCmd_q)}} in the LSTPipe, and some of those uses are in the same logic cones as some recent timing paths that we have seen.

# Create new decode in RR stage:
{noformat}  rr_memSearch := rr_payload_q.cmn.ctrl.memSearch
  rr_memCmd    := rr_payload_q.cmn.ctrl.mem_cmd(isa, false)
  rr_memRead   := rr_payload_q.cmn.ctrl.memCmdRead
  rr_memWrite  := rr_payload_q.cmn.ctrl.memCmdWrite{noformat}
# Create new flops {{memRead/memWrite}} in the LSTPipe stages alongside {{memSearch/memCmd}}, for example starting in LSTA stage:
{noformat}  val lsta_prevMemSearch_q = RegEnable(rr_memSearch, rr_valid_q)
  val lsta_prevMemCmd_q    = RegEnable(rr_memCmd,    rr_valid_q)
+ val lsta_prevMemRead_q   = RegEnable(rr_memRead,   rr_valid_q)
+ val lsta_prevMemWrite_q  = RegEnable(rr_memWrite,  rr_valid_q){noformat}
# Search for and replace all uses in LSTPipe.scala of {{memSearch_q && isRead(memCmd_q)}} with {{memRead_q}} and similar for isWrite.  for example:
{noformat}- io.lstr_ldqClaim := lstr_valid_q && !lstr_replay && lstr_memSearch_q && isRead(lstr_memCmd_q)
+ io.lstr_ldqClaim := lstr_valid_q && !lstr_replay && lstr_memRead_q{noformat}
# Add assertions that we pipeline these pre-decoded flops bits through all the stages correctly:
{noformat}  lsuAssert(lstc_payload_q.cmn.ctrl.memCmdRead  === (lstc_memSearch_q && isRead (lstc_memCmd_q)), ""pre-decode for Read"")
  lsuAssert(lstc_payload_q.cmn.ctrl.memCmdWrite === (lstc_memSearch_q && isWrite(lstc_memCmd_q)), ""pre-decode for Write"")
+ lsuAssert(lstc_payload_q.cmn.ctrl.memCmdRead  === lstc_memRead_q,                               ""pre-decode for Read"")
+ lsuAssert(lstc_payload_q.cmn.ctrl.memCmdWrite === lstc_memWrite_q,                              ""pre-decode for Write""){noformat}",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,MAL-696,,,,MAL-2047,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-30T13:02:17.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzzifz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,2,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650: LSU Timing I/O paths,,,,,,MAL-1993,116431,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/31/2022 13:28,9/6/2022 9:15,9/28/2022 0:51,6/1/2022 17:39,,,,,,,,,,,,,RTL/HWPF,RTL/LSU,RTL/Tile,Timing,,,,,,0,,,,"From → To:

io_hwpfControl_bits_hitCacheThrdL1\[*] → io_lsuPerfEvents_hwpf_hitL1CacheThrd

io_chicken_forceTLReleaseWhenEvictClean → auto_master_out_wr_bits_*
io_chicken_forceTLReleaseWhenEvictClean → io_lsuPerfEvents_tagSrch_releaseClean
io_chicken_forceTLReleaseWhenEvictClean → io_lsuPerfEvents_mshr_l2req_putPartial
io_hwpfControl_bits_maxAllowedDist\[*] → io_lsuPerfEvents_hwpf_increaseAggr
io_chicken_forceSelfReplayToFlushSelf → io_ptwMem_resp_valid
io_chicken_disableFastLoadForward → io_lsuIexPipeTag_1_0_0_valid
io_hwpfControl_bits_maxAllowedDist\[*] → io_lsuPerfEvents_hwpf_increaseAggr


Too many to list…  These are from setting I/O to 60% so feedthrough paths are broken.  I will relax constraints but wanted to show tighter results.



See: /project/tsmc/cln7ff/P6_ppa_runs/michaelw/P650/timing_reports/MAL-1993",Binayak Tiwari,John Ingalls,Josh Smith,Michael White,,,,,,,,,,,,60a963ed8cbda700681b40c1,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,,,,,,,,,,,,,,,,,,,MAL-1972,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,85d53d7106e6b2ebcf53d3a2fdbd2292d2282d37,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-06-01T17:38:42.000-0700"",""stateCount"":3,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/23092,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzie7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,40:49.0,"01/Jun/22 5:40 PM;5bb6808b9ba2930990f81895;[~accountid:60f1ea6c6491110069392f8f] we have fixed all of those in that top ten list, and then some.  Can you please open a new Jira ticket with a new Affects Commit for the next round?  Thanks, we’ll take these as they come.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Create RDU-like partition to aid PD work,,,,,,MAL-1992,116420,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,5/31/2022 11:24,6/21/2022 13:07,9/28/2022 0:51,6/17/2022 6:07,,,,,,,,,,,,,TGV_RTL/RDU,TGV_RTL/SEQ,TGV_RTL/Top,,,,,,,0,,,,"There are a lot of modules instantiated in TGV.scala. In order to manage the floorplan, it would be better to have 3 major partitions. VEX and Baler already exist. Everything* else should go into a new module/partition. RDU isn’t quite the right name and would confuse people with Mallard’s scalar RDU. Frontend isn’t right either. Maybe SRD (for Segment/Rename/Dispatch)? 

*Not quite everything. The top-level clock gate should stay there, and leave the X2Y stuff for now. X2Y should probably move into VEX but let’s do that as a later step.",David Kravitz,,,,,,,,,,,,,,,5fd15143b4a74900763834e0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2074,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-06-17T06:03:27.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzibz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
BDP useful bit updates not generated correctly,BDP useful bit ,,,,,MAL-1991,116413,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Adam George,61b2a458657a0500706b9c39,Adam George,61b2a458657a0500706b9c39,Adam George,61b2a458657a0500706b9c39,5/31/2022 10:15,7/6/2022 13:35,9/28/2022 0:51,7/1/2022 15:57,mongoose.00.00,mongoose.01.00,mongoose.02.00,narwhal.00.00,narwhal.01.00,narwhal.02.00,narwhal.03.00,narwhal.04.00,,,Panda DR,,RTL/Frontend,,,,,,,,,0,,,,"The Mallard microarchitecture specification states the following:

{quote}The U bit is set in the case where a tagged table makes a correct prediction, and the alternate prediction (the prediction that would have been made if that tagged table did not hit) was incorrect. This is a mechanism to detect when entries are useful and should not be replaced over.

So for each conditional branch, we pass down the pipeline the predicted direction, whether the counter is saturated, and whether the U bit would need to be set if the branch is predicted correctly{quote}

The Chisel code is written as follows:

{code:scala}  bankResp_F3(b).info(i) := (parcelHitVec zip tableResp_F3).foldLeft(baseResp) { case (pr, (h, r)) =>
                              val tmp = Wire(new BDPPredInfo)
                              tmp := Mux(h, r, pr)
                              tmp.updateU := h && (r.predTkn =/= pr.predTkn) && r.updateU
                              tmp
                            }{code}

This generates RTL that always selects tagged table 3 as the alternate prediction, instead of selecting a lower indexed table that has a tag match. The signal _bankResp_F3_0_info_2_tmp_2_predTkn_ is the provider hit and signals _bankResp_F3_0_info_2_tmp_\[2-0]_updateU_ do not have any loads.

{noformat}assign bankResp_F3_0_info_*_tmp_3_updateU = parcelHitVec_3_* & tableResp_F3_3_predTkn != bankResp_F3_0_info_*_tmp_2_predTkn & tableResp_F3_3_updateU;
assign tableResp_F3_3_updateU = ~rdata_F3_3_u;{noformat}

The result is that BDP update events are not always generated when needed, and sometimes unneeded updates are generated. ",Adam George,Anhdung Ngo,Brian Grayson,Chia-I Chen,Dave Parry,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,,,,,,,61b2a458657a0500706b9c39,5e13709185a8c90ecac9beb2,5e1371705361330daaeaf389,61aaafab977c5b007241043c,5cc37f384573b30ffbeb88b0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,c342eb926c4155b74e3113e4f087fa9942d72e40,Yes,,Branch Prediction,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-01T15:48:52.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,Minor performance issue.  No functional impact. ,,,,,,,,,,,1. BRC: Should not Publish,,,,,,,,,,abccdf52bde15bea1e576a885404f26634f21e0a,,,n/a,,,,,,,,,Inspection,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,No,,,,,,,,,,,,2|hzziaf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,53:36.2,31/May/22 10:21 AM;61b2a458657a0500706b9c39;This was discovered while refactoring the BDP for [https://sifive.atlassian.net/browse/MAL-1276|https://sifive.atlassian.net/browse/MAL-1276|smart-link]. If we want to fix it in master it would take some time to find a testcase.,31/May/22 10:53 AM;5acffeafaa802f2a797a955c;Whoops. Good catch,"07/Jun/22 11:53 AM;5cc37f384573b30ffbeb88b0;[~accountid:61b2a458657a0500706b9c39] / [~accountid:5acffeafaa802f2a797a955c], it appears that this is a performance bug only, yes? Is it possible for the performance impact to be severe enough that it could be a glass jaw for some workloads? IE, should we consider this an erratum, or just consider fixing it as a Panda performance improvement?","07/Jun/22 11:58 AM;5acffeafaa802f2a797a955c;[~accountid:5cc37f384573b30ffbeb88b0] Yes it’s just a performance bug.  The useful bit only affects the BDP replacement policy, so I doubt that the performance impact would be substantial (like >1%)","13/Jun/22 12:27 PM;5e13709185a8c90ecac9beb2;Just labelled this as won’t-be-modeled.  I am assuming this will be fixed, so won’t be modelled in Dabble.",13/Jun/22 12:36 PM;61b2a458657a0500706b9c39;It’s fixed in [https://sifive.atlassian.net/browse/MAL-1276|https://sifive.atlassian.net/browse/MAL-1276|smart-link] which is expected to be merged. If not it will probably take 2-3 days to identify a test case and port over the fix.,30/Jun/22 1:00 AM;61b2a458657a0500706b9c39;[~accountid:61aaafab977c5b007241043c] I pushed a fix for this to the MAL-1991 branch if you want to see if it impacts correlation. ,30/Jun/22 1:50 AM;61aaafab977c5b007241043c;I’m on it.,"01/Jul/22 12:46 AM;61aaafab977c5b007241043c;Compared the baseline {{3d4e495}} (before the fix) and {{d8651f5}} (MAL-1991)

The BogoMark project scores (200K warmup plus 200K ROI) remain the same:

# 0074: *8.76*
# 0075: *10.17*

The correlation should be fine.","01/Jul/22 3:57 PM;61b2a458657a0500706b9c39;Fixed the BDP code to set the updateU bit if the alternate prediction does not match the selected prediction. No BRQ updates were needed. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU assertion: LSTO PTW/HWPF should not be misaligned,LSU assertion: LSTO PTW/HWPF,LSU (Load Store Unit),,,,MAL-1990,116406,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Anil Sharma,607e26831417e2006abb3189,Anil Sharma,607e26831417e2006abb3189,5/31/2022 7:37,6/14/2022 3:08,9/28/2022 0:51,5/31/2022 17:16,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"New assertion is seen in the regression for u8_minimal_Vector and p670 core.
This is popping up after the merging of [https://github.com/sifive/federation/pull/22778|https://github.com/sifive/federation/pull/22778|smart-link]  PR

Config: coreip_u8_minimal_vector
SHA: a56c6e076c8

Error:

{noformat}Error: ""/scratch/verif/anils/tgv/tgv-102/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_LSTPipe_assert.sv"", 5806: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LSTPipes_0.SiFive_LSTPipe_assert_0: at time 786942500 ps
Assertion failed (verification library): LSTO PTW/HWPF should not be misaligned  @[LSTPipe.scala 5119:18]{noformat}


rerun.outline:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rv64ua-amominu_d"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+memzero""
  ],
  ""subdir"": ""vs-mode-g1-vs1-hart0"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2743129900
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""v"",
    ""cppmacros"": [
      ""ENABLE_HYPERVISOR_CHANGES=1"",
      ""TEST_STARTUP_PRV=1"",
      ""TEST_STARTUP_V=1"",
      ""ENABLE_GSTAGE_TRANSLATION=1"",
      ""ENABLE_VSSTAGE_TRANSLATION=1""
    ]
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}


Path for Waves:

{noformat}gamma28 /scratch/verif/anils/tgv/tgv-102/federation/builds/coreip_u8_minimal_vector/sim/rerun_assert/rerun.outline/vs-mode-g1-vs1-hart0/rv64ua-amominu_d{noformat}",Anil Sharma,John Ingalls,,,,,,,,,,,,,,607e26831417e2006abb3189,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-70,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-05-31T21:10:12.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/23036,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,100,,,No,,,,,,,,,,,,2|hzzi8v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,16:20.9,"31/May/22 5:16 PM;5bb6808b9ba2930990f81895;This is an assertion-only bug, and is not specific to TGV.

This was introduced by [https://github.com/sifive/federation/pull/22778|https://github.com/sifive/federation/pull/22778|smart-link].

Fix in [https://github.com/sifive/federation/pull/23036|https://github.com/sifive/federation/pull/23036|smart-link].",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: SiFive_IFU_assert Due to X-propagation,Assertion Failure: SiFive_IFU_assert,IFU (Instruction Fetch Unit),,,,MAL-1988,116395,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Adam George,61b2a458657a0500706b9c39,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,5/31/2022 2:42,6/23/2022 13:33,9/28/2022 0:51,6/6/2022 9:34,mongoose.00.00,mongoose.01.00,mongoose.02.00,narwhal.00.00,narwhal.01.00,narwhal.02.00,narwhal.03.00,narwhal.04.00,,,,,RTL/Frontend,,,,,,,,,0,,,,"*Error*:

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-xprop-coreip_mallard-test-nightly-xprop/99/builds/coreip_p650mc/verilog/design/assertions/SiFive_IFU_assert.sv"", 742: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.ifu.SiFive_IFU_assert_0: at time 198602500 ps
Assertion failed: Lost some consume information

    at IFU.scala:1701 assert(PopCount(fqConsumeShift.asUInt) === PopCount(fqConsume.asUInt), ""Lost some consume information""){noformat}

Above assertion is triggered as {{fqConsume}} signals transition to xx at {{T:198582500ps.}}

{{feu.ifu.fqEnqValidPre_F3}} asserted at {{T:198582500ps}} is responsible for the xx of {{feu.ifu._fqValid_T}} to be latched. The xx is seen to be coming from {{feu.ifu.icDataArray_0.}} 

Read from {{addr=0x94}} is seen to be returning {{rdata= xx}}. Previous reads (where xx was returned) didn’t trigger the assertion as  {{feu.ifu.BranchDetectMod_1_io_info_*}} signals transitioned to non xx value. The source of xx in these signals is same, read from {{feu.ifu.icDataArray_0, addr=0x94 (T:198182500ps)}}.



*Steps to reproduce*:

* Checkout a56c6e0
* Build coreip_p650mc
* sitest with rerun.outline:
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vmpmp/vm_ptw_ae"",
  ""subdir"": ""hart0/abi/memory_mem"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3547391807
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""memory_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Adam George,Dave Parry,Josh Smith,Megan Wachs,Saurabh Singh,,,,,,,,,,,61b2a458657a0500706b9c39,5cc37f384573b30ffbeb88b0,5acffeafaa802f2a797a955c,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FED-2126,,,,,,,,,,,,,,,,,,,,,,,,Requires further investigation,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-06-08T23:06:32.000-0700"",""stateCount"":3,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,"This performance impact is so low, it is not worth publishing.  This is an insertion only issue.",CAT-D,,Non-RTL,"When fetching along a speculatively executed path, if an L1 I-cache read results in a cache miss due to an uninitialized cache line and that read is ultimately flushed, then undefined instruction data may be registered in the fetch unit. When fetching resumes and the cache is read again, the fetch unit may attempt to detect a branch using that undefined instruction data. 

If this happens the fetch unit might add 1 additional cycle of latency for that fetch.",Low,,,,X-propagation from L1 I-Cache shortly after reset under certain conditions,,1. BRC: Should not Publish,,,,,,,,,,b801232aaa63eb72990355e0525a02f4396b2ef6,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,No,,,,,,,,,,,,2|hzzi6f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,50:53.0,"31/May/22 5:50 AM;5acffeafaa802f2a797a955c;[~accountid:607e26f781e7b900681be48c] Do you have a waveform for this?  Just in general, if you already have waveforms dumped for these failures, could you please post a link?  That could save me 30 minutes or more just trying to reproduce the failure and dump waves myself.","31/May/22 6:08 AM;607e26f781e7b900681be48c;[~accountid:5acffeafaa802f2a797a955c] My bad, I should’ve updated path detail as well. Anyways, wave dump is available at {{gamma10:/scratch/saurabhs/mallard_master_xprop_99/federation/builds/coreip_p650mc/sim/sim/IFU.outline/hart0/abi/memory_mem/vmpmp/vm_ptw_ae}}","31/May/22 7:04 AM;5acffeafaa802f2a797a955c;[~accountid:61b2a458657a0500706b9c39] This goes through the logic that detects if there is a JALR instruction in the fetch group ({{jalrCouldBypass_F3}}), in order to prevent the fetch group from bypassing the Fetch Queue.

We start fetching toward the end of the cacheline and only get 6 valid parcels.  The 6th parcel is the first half of a JALR instruction, and the branch detection logic gets X’s for the upper half of the opcode because the last time those F3 data array flops were enabled, it was reading an uninitialized line from the ICache.

Perhaps we should modify {{jalrCouldBypassVec_F3}} to ignore 32-bit instructions that only have the first half?  Since those won’t bypass and will become the remainder to wait for the second half.","31/May/22 12:21 PM;5acffeafaa802f2a797a955c;I don’t believe this would end up being a functional issue though.  If those opcode bits were either ‘0' or '1’, then I think it would work properly but it might potentially prevent a fetch group from bypassing when it should have been able to.","06/Jun/22 9:34 AM;61b2a458657a0500706b9c39;Fixed by checking for presence of half RVI instruction at the end of the fetch.
","07/Jun/22 11:45 AM;5cc37f384573b30ffbeb88b0;[~accountid:5acffeafaa802f2a797a955c] / [~accountid:61b2a458657a0500706b9c39] three questions:

* Is this problem extant in Narwhal and/or Mongoose versions of Mallard?
* Is this an assertion-only issue?
* How likely is it that a customer running 4-state simulation would run across this?","07/Jun/22 11:55 AM;5acffeafaa802f2a797a955c;[~accountid:5cc37f384573b30ffbeb88b0] 

* I forget exactly when I made the timing fix that would have introduced this, but it was probably before Mongoose.
* It’s not quite assertion-only.  Basically if we detect that there is a JALR instruction in the F3 stage, we prevent the entire fetch group from bypassing the fetch queue and instruction queue.  Before the fix, we could potentially think there is a JALR instruction when there in fact is not. So there could be a very small performance impact, but nothing functional.
* There shouldn’t be any issue if the data were anything other than ‘X'",23/Jun/22 1:33 PM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;[~accountid:5cc37f384573b30ffbeb88b0] [~accountid:6258a58313c2c8006a372228] another one to track – should this “affectVersion = orca.00.00” or not? Technically the bug is in the codebase at that point,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
IJTP's TaggedTableParams (historyBits of each table) are not applied to idx/tag generation ,IJTP's TaggedTableParams,,,,,MAL-1987,116379,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,Done,Adam George,61b2a458657a0500706b9c39,Chia-I Chen,61aaafab977c5b007241043c,Chia-I Chen,61aaafab977c5b007241043c,5/30/2022 23:02,6/14/2022 3:08,9/28/2022 0:51,5/31/2022 12:01,,,,,,,,,,,Panda DR,,Performance,RTL/Frontend,,,,,,,,0,,,,"as [SPARTA-1830|https://sifive.atlassian.net/browse/SPARTA-1830] described, 

[https://github.com/sifive/federation/blob/master/mallard/src/main/scala/core/mallard/IJTP.scala#L233-L234|https://github.com/sifive/federation/blob/master/mallard/src/main/scala/core/mallard/IJTP.scala#L233-L234]

{noformat}val fetchIdx_F2 = hash(io.req_F2.bits.pc, cfg.addrBits, io.req_F2.bits.history, cfg.historyBits, tcfg.indexBits, cfg.nIdxXor, 2*i)
val fetchTag_F2 = hash(io.req_F2.bits.pc, cfg.addrBits, io.req_F2.bits.history, cfg.historyBits, cfg.tagBits,    cfg.nTagXor, 2*i+1){noformat}

[https://github.com/sifive/federation/blob/master/mallard/src/main/scala/core/mallard/IJTP.scala#L252-L253|https://github.com/sifive/federation/blob/master/mallard/src/main/scala/core/mallard/IJTP.scala#L252-L253]

{noformat}val updateIdx_F1  = hash(io.ijtpUpdate_BR2.bits.pc, cfg.addrBits, io.ijtpUpdate_BR2.bits.history, cfg.historyBits, tcfg.indexBits, cfg.nIdxXor, 2*i)
val updateTag_F1  = hash(io.ijtpUpdate_BR2.bits.pc, cfg.addrBits, io.ijtpUpdate_BR2.bits.history, cfg.historyBits, cfg.tagBits,    cfg.nTagXor, 2*i+1){noformat}

 *_tcfg._**historyBits* should be used instead of *_cfg._**historyBits*

currently cfg.historyBits=47 is set to all the three tagged tables: [https://github.com/sifive/federation/blob/master/mallard/src/main/scala/core/mallard/IJTP.scala#L48|https://github.com/sifive/federation/blob/master/mallard/src/main/scala/core/mallard/IJTP.scala#L48]",Adam George,Anhdung Ngo,Brian Grayson,Chia-I Chen,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Josh Smith,,,,,,,61b2a458657a0500706b9c39,5e13709185a8c90ecac9beb2,5e1371705361330daaeaf389,61aaafab977c5b007241043c,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Requires further investigation,,Branch Prediction,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-31T11:58:54.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,1. BRC: Should not Publish,,,,,,,,,,f1fb0ed,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,No,,,,,,,,,,,,2|hzzi2v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,24:04.1,31/May/22 8:24 AM;5acffeafaa802f2a797a955c;Well that’s embarrassing…,31/May/22 12:01 PM;61b2a458657a0500706b9c39;RTL updated to match Dabble.,"05/Jun/22 7:52 PM;61aaafab977c5b007241043c;Compared the baseline {{11a4944}}(before merged) and {{f1fb0ed}}

the improvements on the BogoMark project scores (200K warmup plus 200K ROI) are:

# 0074: *8.71* → *8.77* (+0.69%)
the improvement of _sjeng_ is 5.09%, which is the maximum
# 0075: *10.15* → *10.16* (+0.1%)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU power: LSTPipe result tag broadcast buses toggling for non-Loads,,,,,,MAL-1986,116366,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Swarnashri Chandrashekar,6287f376f0302e0068bff30c,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,5/30/2022 13:52,7/29/2022 9:07,9/28/2022 0:51,7/13/2022 10:15,,,,,,,,,,,,,Power,RTL/LSU,,,,,,,,0,,,,"[https://sifive.atlassian.net/browse/MAL-1981|https://sifive.atlassian.net/browse/MAL-1981|smart-link] and [https://sifive.atlassian.net/browse/MAL-1985|https://sifive.atlassian.net/browse/MAL-1985|smart-link] showed the benefit of stopping the result tags from toggling from the LDPipe.

We should be able to get a similar benefit from doing the same in the LSTPipe {{destInfo_q.bits}}.",John Ingalls,Swarnashri Chandrashekar,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,6287f376f0302e0068bff30c,,,,,,,,,,,,,,,,,,,,,MAL-1985,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2095,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-07-18T16:16:56.000-0700"",""stateCount"":3,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24206,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,3,0,,,,100,,,,,,,,,,,,,,,2|hzzi07:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,45:22.0,"13/Jul/22 12:45 PM;6287f376f0302e0068bff30c;Changes were made to split the DestInfo data bits and the valid bit. The bits were RegEnabled using its own valid bit in addition to the stage valid bit. The resulting power optimization is shown below.

Power tool results:
Before optimization:

{noformat}Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core
Power Unit: mW
      Category       Internal    Switching      Leakage        Total
    ----------------------------------------------------------------
      register         17.609        1.730        2.361       21.700
         latch          0.000        0.000        0.000        0.000
         logic         17.833       24.761        2.421       45.015 (+ibp)
          bbox          0.000        0.000        0.000        0.000
        memory         25.108        0.045        2.565       27.718
           pad          0.000        0.000        0.000        0.000
         clock          3.094        8.979        0.097       12.170
    ----------------------------------------------------------------
      Subtotal         63.644       35.515        7.444      106.603
    Percentage         59.70%       33.32%        6.98%      100.00%
       (*) ibp          3.274       14.002        0.120       17.396 (Inferred Buffer Power)
{noformat}

After optimization:

{noformat}Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core
Power Unit: mW
      Category       Internal    Switching      Leakage        Total
    ----------------------------------------------------------------
      register         17.576        1.728        2.361       21.665
         latch          0.000        0.000        0.000        0.000
         logic         17.761       24.717        2.415       44.893 (+ibp)
          bbox          0.000        0.000        0.000        0.000
        memory         25.108        0.045        2.565       27.718
           pad          0.000        0.000        0.000        0.000
         clock          3.126        8.930        0.098       12.154
    ----------------------------------------------------------------
      Subtotal         63.571       35.420        7.439      106.430
    Percentage         59.73%       33.28%        6.99%      100.00%
       (*) ibp          3.268       13.980        0.120       17.368 (Inferred Buffer Power)
{noformat}

Power savings = 106.603 - 106.430 = 0.173 mW.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU power: IEX result tag broadcast buses toggling for non-Integer-Loads,,,,,,MAL-1985,116365,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Sanjay Gandham,6275860c66ad530069d5d1d8,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,5/30/2022 13:43,7/29/2022 9:07,9/28/2022 0:51,7/6/2022 11:13,,,,,,,,,,,,,Power,RTL/LSU,,,,,,,,0,,,,"[https://sifive.atlassian.net/browse/MAL-1981|https://sifive.atlassian.net/browse/MAL-1981|smart-link] showed the benefit of stopping the FEX load result tags from toggling.

We should be able to get a similar benefit from doing the same for IEX (and for the future, VEX too).

Two changes in LDPipe.scala building on [https://github.com/sifive/federation/commit/be90b6f91570a9ca5598dd1b0804cc3db74239c4|https://github.com/sifive/federation/commit/be90b6f91570a9ca5598dd1b0804cc3db74239c4|smart-link]:

# Add {{prn.valid}} to the RegEnable
# Do the same for IEX as FEX

like so in the LDR stage:

{noformat}- val ldr_fexPrnTag_q   = RegEnable(io.ldArb_reqWinner.bits.metaInfo.prn.bits, ldArb_mightValid && io.ldArb_reqWinner.bits.metaInfo.prn.bits(mp.prIdxFBit))
+ val ldr_iexPrnTag_q   = RegEnable(io.ldArb_reqWinner.bits.metaInfo.prn.bits, ldArb_mightValid && io.ldArb_reqWinner.bits.metaInfo.prnIexValid)
+ val ldr_fexPrnTag_q   = RegEnable(io.ldArb_reqWinner.bits.metaInfo.prn.bits, ldArb_mightValid && io.ldArb_reqWinner.bits.metaInfo.prnFexValid){noformat}

and similar for the LDF and LDWB stages.",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,MAL-1981,,,,MAL-1986,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2111,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-06T12:27:17.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/23676,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzzhzz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: IFUMissQ hang,Assertion Failure: IFUMissQ hang,Assertion triggered in IFU & HWPF but was caused by PL2 (L2 Cache),,,,MAL-1984,116360,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Rick Chen,5fc1b965d670b8006eda0fde,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,5/30/2022 7:26,6/27/2022 9:14,9/28/2022 0:51,5/30/2022 19:29,,,,,,,,,,,,,RTL/Frontend,,,,,,,,,0,,,,"*Error*:

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/313/builds/coreip_p650/verilog/design/assertions/SiFive_IFUMissQ_assert.sv"", 248: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.ifu.missQ.SiFive_IFUMissQ_assert_0: at time 13401042500 ps
Assertion failed

    at IFUMissQ.scala:415 assert(blockedFullCtr =/= 30000.U){noformat}

Assertion is triggered as {{blockedFullCtr}} reaches the threshold {{'h7530.}} {{blockedFullCtr}} is last seen to be reset at {{T:12788982500ps.}} {{tile.core.feu.ifu.missQ.blockedFull}} is not seen to be deasserted since then, causing the counter to exceed the threshold.

*Config*: coreip_p650

*Commit*: a2db99c

*Regression*: master/nightly-mallard/313

*Simscope*: [https://simscope.internal.sifive.com/sigs/1369/ckau3kd5pycd|https://simscope.internal.sifive.com/sigs/1369/ckau3kd5pycd]

*rerun.outline*:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+axi_mem_latency_cycles=10"",
    ""+axi_mem_dither_cycles=10"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+pl2_randomBlockGlobalArbEnable=1"",
    """"
  ],
  ""subdir"": ""sting_StingTrapsTuple_T_0010"",
  ""subtest"": ""valtrix/traps/excp_illegal_rsvd_opcd_loadfp.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3265914112
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Jahoor Vohra,John Ingalls,Josh Smith,Rakesh Palakurthi,Rick Chen,Saurabh Singh,,,,,,,,,,5b7745bc793fa62ab2871f70,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,62350e943eacc50071ff0753,5fc1b965d670b8006eda0fde,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1983,,,CIP-3553,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,,,,,,,2|hzzhyv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,29:19.2,30/May/22 7:26 AM;607e26f781e7b900681be48c;[~accountid:5bb6808b9ba2930990f81895] Please update *Potential CAT-A* field information and reassign the ticket if required.,"30/May/22 9:29 AM;5acffeafaa802f2a797a955c;[~accountid:607e26f781e7b900681be48c] do you already have a waveform that I can look at?  I also don’t think I have a simscope account, so I can’t access that page anyway.",30/May/22 9:32 AM;607e26f781e7b900681be48c;[~accountid:5acffeafaa802f2a797a955c] Wave Dump is available at {{gamma10:/scratch/saurabhs/mallard_master_313_xprop_98/federation/builds/coreip_p650/sim/sim/IFUMissQ.outline/sting_StingTrapsTuple_T_0010/sting/valtrix/traps/excp_illegal_rsvd_opcd_loadfp.conf}},"30/May/22 10:06 AM;5acffeafaa802f2a797a955c;[~accountid:5fc1b965d670b8006eda0fde] It looks like around time 12,787,373 ns the IFU sends a miss request to the PL2 for address 0x8841_1f40.  However the PL2 never responds with the data, so the fetch unit hangs.","31/May/22 11:57 AM;5b7745bc793fa62ab2871f70;[~accountid:5fc1b965d670b8006eda0fde] [~accountid:5bb6808b9ba2930990f81895]  - On behalf of Dave, does this problem exist with the current prefetcher or only manifests with the new prefetcher for Panda? ",31/May/22 12:00 PM;5bb6808b9ba2930990f81895;This is not from the prefetcher.  Rick pointed us to [https://sifive.atlassian.net/browse/CIP-3553|https://sifive.atlassian.net/browse/CIP-3553|smart-link] ,31/May/22 5:08 PM;5fc1b965d670b8006eda0fde;[~accountid:5b7745bc793fa62ab2871f70] This is a pL2 issue introduced in Orca.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: HWPF Hang,Assertion Failure: HWPF Hang,,,,,MAL-1983,116358,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,John Ingalls,5bb6808b9ba2930990f81895,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,5/30/2022 7:07,6/27/2022 9:14,9/28/2022 0:51,5/31/2022 8:43,,,,,,,,,,,,,RTL/HWPF,,,,,,,,,0,,,,"*Error*:

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/313/builds/coreip_p550/verilog/design/assertions/SiFive_LSU_assert.sv"", 13596: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.SiFive_LSU_assert_0: at time 22568022500 ps
Assertion failed (verification library): HWPF Hang  @[LSU.scala 2437:14]{noformat}

Assertion is triggered as {{hwpfReq_hangCounter}} reaches the threshold {{'h15f90}}. {{_io_lsu_disableHangCatcher_T}}, responsible to reset counter, expects {{TagSrch_io_tsPerfEvents_tsw_l2reqGranted}} or {{auto_master_out_nr_valid}} to go high, which never happens after {{T:20767982500ps,}} causing the hangCounter to exceed the threshold.



*Steps to reproduce*:

* Checkout *a2db99c*
* Build *coreip_p550*
* create a directory test,
{{mkdir -p sting_StingInstMemTuple_T_0290/sting/valtrix/algorithms/coderdwr/smc_modify_imm_opnd.conf}}
 cd path just created
* {noformat}scp -r <username>@sigma70:/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/313/builds/coreip_p550/sim/sim/moaoRIT-nightly.outline/sting_StingInstMemTuple_T_0290/sting/valtrix/algorithms/coderdwr/smc_modify_imm_opnd.conf/* .{noformat}
* {noformat}Modify the vcs.sim.rerun.local to
  a. replace the simv to your local simv
  b. add this in any place +fsdbfile\=waves.fsdb +verbose
Modify cosim.cfg dtb to point to your local directory{noformat}
* run with {{source ./vcs.sim.rerun.local 2>&1 | tee simulation.err2}}

*SimScope*: [https://simscope.internal.sifive.com/sigs/1399/ckavrew9xcz7|https://simscope.internal.sifive.com/sigs/1399/ckavrew9xcz7]",John Ingalls,Megan Wachs,Rakesh Palakurthi,Saurabh Singh,,,,,,,,,,,,5bb6808b9ba2930990f81895,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,62350e943eacc50071ff0753,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1984,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,,,,,,,2|hzzhyf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,43:05.4,30/May/22 7:09 AM;607e26f781e7b900681be48c;[~accountid:5bb6808b9ba2930990f81895] Please update *Potential CAT-A* field information and reassign the ticket if required.,30/May/22 10:43 AM;5bb6808b9ba2930990f81895;This is likely the same as [https://sifive.atlassian.net/browse/MAL-1984|https://sifive.atlassian.net/browse/MAL-1984|smart-link] ,21/Jun/22 11:10 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;[~accountid:5bb6808b9ba2930990f81895] if this _is_ a duplicate of [https://sifive.atlassian.net/browse/MAL-1984|https://sifive.atlassian.net/browse/MAL-1984|smart-link] can you/I mark it as affectsPreviously = no so that it will stop hitting BRC filters?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[FPU] Study of applying IEEE2RecFN in MallardTile LDPipe,,,,,,MAL-1982,100782,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,10/5/2021 2:44,9/21/2022 10:58,9/28/2022 0:51,,,,,,,,,,,,,,RTL/FEX,Timing,,,,,,,,0,,,,"Make IEEE2RecFN transfer 1 cycle earlier in `LDPipe` to improve the fowarding path timing. Compare the synthesis results between legacy/fast IEEE2RecFN converter.

* Design need be verified

* Synthesis result: https://sifive.atlassian.net/wiki/spaces/CIP/pages/2124218624/MallardTile+synthesis+results",John Ingalls,Josh Smith,Kira Tsao,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,5e1a4f5ec578120daca5ff8e,,,,,,,,,,,,,,,,,,,,MAL-1474,MAL-1429,CIP-2755,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1496,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-16T09:07:56.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Mongoose -> GR1.0 (SHA adf5c3ff),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,2|hzx1n3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,14:34.1,07/Sep/22 12:14 PM;5acffeafaa802f2a797a955c;Do we still think we need to do anything here?,"07/Sep/22 12:18 PM;5e1a4f5ec578120daca5ff8e;[~accountid:5acffeafaa802f2a797a955c] actually I have a PR for this, but per [~accountid:5bb6808b9ba2930990f81895] ‘s comments it’s not the time to make these changes. I think we can put this PR on shelf and temporarily close this ticket.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[Power] FEX flush GID and load result tag broadcast buses toggling when FEX idle,,,,,,MAL-1981,116314,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,5/29/2022 15:29,7/29/2022 9:07,9/28/2022 0:51,5/30/2022 6:33,,,,,,,,,,,,,Implementation,Power,RTL/FEX,RTL/LSU,,,,,,0,,,,"We noticed in Dhrystone that FEX was still burning some dynamic power even though FEX should be completely idle.  Looking into it, some buses that have a bunch of fanout still toggle: the flush GID and the load result tag broadcast buses.

FEX already has a dedicated use of {{GenerateUnitFlush}} to create its own flush signal, so we can use {{fexClockEnable_q}} as an enable condition there.  We can also create dedicated flops in the LSU for the load result destination tags, that only get enabled for FP load results.  This should also help timing so that the same flops don’t drive both the IEX and FEX tag broadcast buses.",John Ingalls,Josh Smith,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1985,MAL-1995,MAL-2053,MAL-2111,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-30T06:32:28.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,be90b6f91570a9ca5598dd1b0804cc3db74239c4,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzhon:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/May/22 6:33 AM;5acffeafaa802f2a797a955c;I decided not to do anything with the flush GID for now, due to concerns about potential bugs.  But the destination PRF tags were separated for FP.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[Power] Predecode bank index for PRF read index flop load enable ,,,,,,MAL-1980,116313,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,5/29/2022 14:16,7/29/2022 9:08,9/28/2022 0:51,5/30/2022 1:40,,,,,,,,,,,,,Power,RTL/FEX,RTL/IEX,,,,,,,0,,,,"The Physical Register File has duplicated index flops per-bank for each read port.  To reduce toggling on the read muxes, we can decode the bank index at the end of the ISS cycle and only enable the index flop for the bank that we want to read.

For now, we’ll probably only do this on the non-LSU read ports, because the LSU issue queue pickers are more timing critical.",Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-30T01:39:45.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,f07e5e5845e8d8a86cd1d90187bae48064469997,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzhof:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Remove the additional Baler to Integer PRF write port,,,,,,MAL-1979,116281,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Declined,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,5/27/2022 11:07,6/16/2022 14:17,9/28/2022 0:51,6/16/2022 14:17,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,1,,,,In Baler module there is a redundant write port balPrfWriteReq_WB that needs to be removed.,John Ingalls,Warren Menezes,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,600773dcee80bd006f750bba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2034,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzhif:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Move P572 config into `spanning` and rename it,,,,,,MAL-1978,116277,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,5/27/2022 10:22,6/16/2022 19:56,9/28/2022 0:51,6/14/2022 7:40,,,,,,,,,,,,,Documentation,,,,,,,,,0,,,,"Because there is no P572 product definition, and we’re only using that config to look at TGV timing, it should be moved into specs/design/spanning.

It should also be renamed to something both appropriate and meaningful, which might not be easy to find.",David Kravitz,John Ingalls,Nicolas Brunie,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1936,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-14T07:39:48.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/d4d6c14481eb46a5f8c7a85608c5a8cbb1c46c72,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzhhj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,13:54.0,"28/May/22 5:13 PM;6065017e90e3950069cf01c5;What do you think about {{p55_vector_2pipes}} ? (rather than {{u8_vector_2pipes}} as the basic scalar configuration is really a  modified {{p550}})

we could also have {{p55_2_vec_pipes}} (it seems we are using {{_}} separated names [https://github.com/sifive/federation/blob/master/specs/design/spanning/p650_pl2_tiny_drq_nrq.json|https://github.com/sifive/federation/blob/master/specs/design/spanning/p650_pl2_tiny_drq_nrq.json] )

I think to recall we were using the {{p55}} naming for some configuration, e.g. [https://github.com/sifive/federation/blob/master/specs/design/marketing/p55_3w_min_ppa.json|https://github.com/sifive/federation/blob/master/specs/design/marketing/p55_3w_min_ppa.json] )",31/May/22 8:40 AM;5bb6808b9ba2930990f81895;{{p55_vector}} = {{p57}},"31/May/22 8:46 AM;6065017e90e3950069cf01c5;[~accountid:5bb6808b9ba2930990f81895] I don’t want to be too close to the original name {{p572}} (which triggered the renaming request), but your suggestion {{p57}} makes more sense",09/Jun/22 1:46 PM;6065017e90e3950069cf01c5;Inputs from [~accountid:5cc37f384573b30ffbeb88b0] : configuration should be named {{u8_vector_2x128}} or {{u8_3w_vector_2x128}}. ,15/Jun/22 7:50 AM;6065017e90e3950069cf01c5;Configuration eventually renamed to {{u8_3w_vector_2x128}} and added into {{specs/design/spanning}} directory.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: L1DCache with 4 quadrants/8 Macros with 4 SRAMs,,,,,,MAL-1977,116197,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Khondakar Mujtaba,622a930149c900007023d105,Khondakar Mujtaba,622a930149c900007023d105,Khondakar Mujtaba,622a930149c900007023d105,5/26/2022 16:30,8/28/2022 18:50,9/28/2022 0:51,7/29/2022 18:06,,,,,,,,,,,Healdsburg DR,,RTL/LSU,,,,,,,,,0,,,,"L1DCache supporting 4 quadrants. Instead of 2 half of cache block, cache block are divided into 4 quadrants with each have 1 read/write access port. ",John Ingalls,Khondakar Mujtaba,Mike Schoenfelder,,,,,,,,,,,,,5bb6808b9ba2930990f81895,622a930149c900007023d105,5e1375a4b783d60db0a03c51,,,,,,,,,,,,,,,,,,,,MAL-1857,,,,MAL-1510,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2127,MAL-2191,MAL-2506,,,,,,,,,,,,,,26/May/22 4:29 PM;ug:5e8f21ca-9d22-4598-aab7-60f95b370ff0;PandaDCache.pdf;https://sifive.atlassian.net/secure/attachment/72536/PandaDCache.pdf,26/May/22 4:27 PM;ug:5e8f21ca-9d22-4598-aab7-60f95b370ff0;dcache.pdf;https://sifive.atlassian.net/secure/attachment/72537/dcache.pdf,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=6}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":6,""lastUpdated"":""2022-08-08T10:59:48.000-0700"",""stateCount"":6,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":6,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,6,0,,,,100,,,No,,,,,,,,,,,,2|hzzh27:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,5,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,07:45.1,"06/Jul/22 9:07 AM;5e1375a4b783d60db0a03c51;The Jira “Impacts performance” field is set to “none”.  To me that means that you are positive that there is no way that this change will affect the performance.  

(The “Impacts performance” field is how the RTL team signals the performance model team to review the change in case we need to adjust the model.)

The PR seems to be merged.  When does the Jira ticket state get adjusted?","06/Jul/22 9:32 AM;5bb6808b9ba2930990f81895;{quote}The PR seems to be merged. When does the Jira ticket state get adjusted?{quote}

The Jira ticket state is still “In Progress”, and I believe that I still accurate and correct.  We expect that there will be multiple PRs that will be attached to this Jira ticket, which is a style of development that we sometimes do.

The “Impacts performance” field is not yet populated in this Jira ticket.  That check is automatically required when this ticket eventually transitions from “In Progress” to “Resolved”.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P550 MC4: TLBuffer between the Funnel and Encoder?,,,,,,MAL-1976,116161,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Ernie Edgar,5b9050cdf58aee2b8d67281e,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/26/2022 11:12,5/27/2022 8:07,9/28/2022 0:51,5/26/2022 12:13,,,,,,,,,,,,,Implementation,RTL/Tile,,,,,,,,0,,,,"Following is long path.  May be showing up due to clock balancing issues but if not required may be better to break path to reduce stress/ULVT.



P550 MC4 run showing timing path:

tile_prci_domain/tlMasterClockXing_sink/bundleOut_0_a_sink/deq_gated_q/elts_0_address_reg

sbus_junction/fixer

sbus_junction/jbar

subsystem_private_sbus/fixer/clock_tree_FE_OFC1442434_sbus_junction_auto_coupler_to_bus_named_subsystem_private_sbus_widget_out_1_a_valid

subsystem_private_sbus/system_bus_xbar/tsmc7ff_prects_iteration_FE_OCPC1248637_fixer_auto_out_1_a_valid

subsystem_private_sbus/coupler_to_port_named_axi4_sys_port_0/bridge_for_axi4_sys_port_0/widget/repeated_repeater

subsystem_private_sbus/coupler_to_port_named_axi4_sys_port_0/bridge_for_axi4_sys_port_0/tl2axi4

subsystem_private_sbus/coupler_to_port_named_axi4_sys_port_0/bridge_for_axi4_sys_port_0/widget/repeated_repeater

subsystem_private_sbus/system_bus_xbar

subsystem_private_sbus/fixer

sbus_junction/jbar

sbus_junction/coupler_from_trace_sba/fixer

traceFunnel/traceGapper

traceFunnel/tracePacker

traceFunnel/traceUnpacker_3

traceEncoder_3/traceSink

traceEncoder_3/tracePacker

traceEncoder_3/tracePacker/fifo_6_data_reg\[3]/D



More details visible in:

/project/tsmc/cln7ff/P5_ppa_runs/michaelw/P550/HAMMER/p550_4mc.220425/federation/lib-hammer-sifive/build-0505/par-SiFive_CoreIPSubsystem/reports/opt_signoff/organize.setup.pba_func_ssg_0p675_0c_cworst_view.rpt",Cody Croxton,Ernie Edgar,Josh Smith,Michael White,Robbie Adler,,,,,,,,,,,5e1371930242870e996efde2,5b9050cdf58aee2b8d67281e,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,5dcc1b25bb355b0ddbd19f53,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,032b6a88c1c658dcfbaf9dde3e0e031f76e1e8be,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-26T17:42:09.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/a70def504f2f0cad202ca2ea3161487bd91dd168,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzgvb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,13:15.1,"26/May/22 12:13 PM;5b9050cdf58aee2b8d67281e;A fix for a similar timing report was merged to master on May 8, 2022.
[https://github.com/sifive/federation/commit/a70def504f2f0cad202ca2ea3161487bd91dd168|https://github.com/sifive/federation/commit/a70def504f2f0cad202ca2ea3161487bd91dd168].

See [https://sifive.atlassian.net/browse/MAL-1885|https://sifive.atlassian.net/browse/MAL-1885|smart-link] ","26/May/22 12:51 PM;60f1ea6c6491110069392f8f;Where is the JSON file with this fix:
I don’t see specs/build-plans/pd/p550mc4_7nm_H240.json","26/May/22 1:14 PM;5b9050cdf58aee2b8d67281e;[~accountid:60f1ea6c6491110069392f8f] Ah, ok.  [https://sifive.atlassian.net/browse/MAL-1885|https://sifive.atlassian.net/browse/MAL-1885] added the necessary config param to standard cores p550mc and p650mc.  {{specs/design/standard/p550mc.json}}.

I don’t see a {{p550mc4_7nm_H240.json}} on master.  Looking at master, I see that other JSONs in the build-plans/pd directory refer back to the corresponding standard cores as their basis, so I would think {{p550mc4_7nm_H240.json}} on whatever branch you are using would do the same and would get the fix, assuming the branch was created from master after May 8?   [~accountid:5acffeafaa802f2a797a955c] can you help here with what needs to be done (if anything)?","26/May/22 1:24 PM;5acffeafaa802f2a797a955c;[~accountid:5b9050cdf58aee2b8d67281e] did you mean help with getting a build plan JSON?  I can do that.  If you meant RTL changes, I’m not sure what I can help with.",26/May/22 1:40 PM;5b9050cdf58aee2b8d67281e;[~accountid:5acffeafaa802f2a797a955c] I meant the json that [~accountid:60f1ea6c6491110069392f8f] needs for his PD work. The current p550mc.json standard config should have the change he needs for this ticket. ,"26/May/22 1:44 PM;60f1ea6c6491110069392f8f;[~accountid:5acffeafaa802f2a797a955c] Question is where is JSON for P550 MC4 on master?  It used to be p550mc_…

 $git branch

* master

$ git log -1

commit d7c2d7138fd42133a9f5f99905e61e20fdfa3194 (HEAD -> master, origin/master, origin/HEAD)

Author: Roshan Kumar <82375035+roshan-kumar-sifive@users.noreply.github.com>

Date:   Fri May 27 00:55:51 2022 +0530

    bug fix and add code comments (#22906)

    

    Co-authored-by: Roshan Kumar <roshank@gamma06.internal.sifive.com>

$ ls specs/build-plans/pd/p550*

specs/build-plans/pd/p550_7nm_H240_tile.json

specs/build-plans/pd/p550_new_28nm_9t.json

specs/build-plans/pd/p550mc8_7nm_H240.json","26/May/22 1:54 PM;5acffeafaa802f2a797a955c;[~accountid:60f1ea6c6491110069392f8f] it looks like there is not a build-plan json for p550mc.  There is still a design json file in {{specs/design/standard/p550mc.json}}.

You should be able to copy {{specs/build-plans/pd/p550mc8_7nm_H240.json}} and change the following section:

{noformat}  ""PCSSettings"": {
    ""DesignSpec"": ""specs/design/standard/p550mc8.json""
  },{noformat}

To point to {{specs/design/standard/p550mc.json}} instead",26/May/22 5:43 PM;5acffeafaa802f2a797a955c;[~accountid:60f1ea6c6491110069392f8f] {{specs/build-plans/pd/p550mc_7nm_H240.json}} was added into federation with commit {{6eb6244a8126ec3b772bfb40ba8c6fa221fce450}} So it’s on master now.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] test TGV's VexPipe support for VLEN/DLEN 512,,,,,,MAL-1975,116155,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/26/2022 9:56,7/22/2022 9:46,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,Checking that TGV’s VexPipe builds and executes correctly when configured with VLEN=DLEN=512 bits,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzgtz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
LSU FV: MDPipe stalling TSW due to stream of LDWRs,,,,,,MAL-1974,116153,,Question,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Abhishek Anand,622a7ed2f1e55c0070f301a9,Abhishek Anand,622a7ed2f1e55c0070f301a9,Abhishek Anand,622a7ed2f1e55c0070f301a9,5/26/2022 9:46,5/26/2022 18:00,9/28/2022 0:51,,,,,,,,,,,,,,Verification,,,,,,,,,0,,,,"Hi John, I am debugging fail for an assertion which checks that the TSW should not be stalled by MDPipe for more than 10 cycles (with few exceptions).In the failing scenario, TSW is blocked by MDPipe (tsw_holdForL1dcProtectedSetWay_in), while MDPipe is further blocked by a stream of ldwr_l1dcDataWrReq_earlyValid (write through the LDPipe for Store with granularity less than ECC).Please let me know if it is okay to discount this condition (ldwr_l1dcDataWrReq_earlyValid) for this forwrd-progress assertion ? Also, from LSU FV slides created earlier, I see following pre-existing stall conditions:

* stall conditions

* Release_valid  && \!Release_ready
* ProbeAck_valid && \!ProbeAck_ready
* GrantAck_valid && \!GrantAck_ready
* ReleaseAck response is pending for a Release request
* Grant response is pending for a Acquire request
* ldRRArb_pendingLdqWbReq_q && stqWG_ldArbReq_earlyValid

Do you expect any of the above condition to already take care of ldwr_l1dcDataWrReq_earlyValid ?

+Please use following command to open Verdi waves (on gamma25):+
verdi -ssf /scratch/abhisheka/federation/waveforms/assert__verif_library_e2e__fp__my_tsw_mdpipe_ldArbReq_stall.fsdb -sswr  /scratch/abhisheka/federation/mallard/scripts/verdi/my_tsw_mdpipe_ldArbReq_stall.rc -sv -f /scratch/abhisheka/federation/builds/fpv_mallard_lsu/sim/fpv/CoreIPSubsystemVerifTestHarness.WithLSUFormal.F -f /scratch/abhisheka/federation/builds/fpv_mallard_lsu/sim/compile_opts.f -f /scratch/abhisheka/federation/builds/fpv_mallard_lsu/sim/fpv/CoreIPSubsystemVerifTestHarness.WithLSUFormal.sitest_blackboxes.F +define+SYNTHESIS+USE_FORMAL_ONLY_CONSTRAINTS -top SiFive_LSU &",Abhishek Anand,John Ingalls,,,,,,,,,,,,,,622a7ed2f1e55c0070f301a9,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-7167,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzgtj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,59:45.1,"26/May/22 5:59 PM;5bb6808b9ba2930990f81895;Looking in the waves: yes, you are correct.  Because StqWG partial writes eventually trigger {{ldwr_l1dcDataWrReq_earlyValid}}, we should expand that last bullet in the list of stall conditions to:

* {{ldRRArb_pendingLdqWbReq_q && (stqWG_ldArbReq_earlyValid || ldwr_l1dcDataWrReq_earlyValid)}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV][RVV 7.8] Segmentation mux tree for LTB ans STB,,,,,,MAL-1973,116101,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,5/25/2022 18:31,9/16/2022 12:06,9/28/2022 0:51,9/16/2022 11:38,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"Implement the mux tree for segmentation load store:

* Mux tree in LTB side:
** All LTB entries → 1 x VLEN data result
** All byte enable in LTB entries → 1 x VLENB byte enable vector (for Baler to know if this entry is ready to read)
* Mux tree in STB side:
** 1 x VLEN data from PRF → All STB entries

                                                     → Byte write enable for all STB entries



Things to discuss:

* For LTB mux, do we needs to output all 8 x VLENB byte enable vector and 8 x VLEN data result for Baler?
* Should we OR-reduce the output byte enable vector to a single bit enable for LTB mux tree output?",Brad Wu,Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,62103777eb2978006893b778,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-09-16T10:47:05.000-0700"",""stateCount"":3,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2403,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,,,,100,,,,,,,,,,,,,,,2|hzzgiv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,29:21.9,26/May/22 7:29 AM;6065017e90e3950069cf01c5;[~accountid:5fd15143b4a74900763834e0] is there a specific EPIC for the Load / Store work ? ,"26/May/22 9:41 AM;5fd15143b4a74900763834e0;There is not an Epic for the load/store work, just Smartsheet. I’ll try to get more Jira-fied in the future.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650 Timing: CSR In2out paths,,,,,,MAL-1972,116091,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Michael White,60f1ea6c6491110069392f8f,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,5/25/2022 13:05,9/19/2022 8:35,9/28/2022 0:51,6/12/2022 7:57,,,,,,,,,,,,,Implementation,RTL/Tile,Timing,,,,,,,0,,,,"CSR distribution paths are showing up from chicken and control {{CSRFile}} regs in the FEU to other units:

!image-20220525-162540.png|width=855,height=231!

(PTW paths should be addressed separately in [https://sifive.atlassian.net/browse/MAL-1967|https://sifive.atlassian.net/browse/MAL-1967|smart-link])",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Josh Smith,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,MAL-1993,MAL-2046,MAL-2655,,,,,,,,,,,,,,,,,,,,,MAL-1967,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1330,,,,,,,,,,,25/May/22 1:05 PM;John.Ingalls;image-20220525-162540.png;https://sifive.atlassian.net/secure/attachment/72479/image-20220525-162540.png,,,,,,,,,,,,,,,,,,,Load/Store,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-12T07:53:27.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,a5e1147f516aaaccb878e58bafca1646606b36a8,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzgh3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,57:22.3,"12/Jun/22 7:57 AM;5acffeafaa802f2a797a955c;My update for MAL-1330 added local shadow copies of some of the CSRs in each major block (FEU, IEX, FEX, LSU).  CSR writes to these CSRs will propagate the new value around a ring bus which has a stop in each block.  If the block has a local copy of that register, it's updated with the new value.","12/Jun/22 7:57 AM;5acffeafaa802f2a797a955c;[~accountid:60f1ea6c6491110069392f8f] hopefully after my Shadow CSR bus change, the paths starting from the chicken registers should go away.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
icDataRdBankDataF2Rot_F3_0_reg[*] to adapter/RC_CG_HIER_INST1/RC_CGIC_INST/E and adapter/partial_taken_mask_reg[*],,,,,,MAL-1971,116089,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,Tom Mickelson,5e137757f65a6b0e9bf1636f,Tom Mickelson,5e137757f65a6b0e9bf1636f,5/25/2022 12:20,9/7/2022 12:12,9/28/2022 0:51,,,,,,,,,,,,,,RTL/Frontend,Timing,,,,,,,,0,,,,"A top path in the IFU….
Path 1: VIOLATED (-0.065 ns) Clock Gating Setup Check with Pin tile/core/feu/ifu/adapter/RC_CG_HIER_INST1/RC_CGIC_INST/CP->E
View: func_0p675v_0c_cworst_CCworst
Group: reg2cgate
Startpoint: (R) tile/core/feu/ifu/icDataRdBankDataF2Rot_F3_0_reg\[33]/CP
Clock: (R) core_clk
Endpoint: (R) tile/core/feu/ifu/adapter/RC_CG_HIER_INST1/RC_CGIC_INST/E
Clock: (R) core_clk
N-Sigma: 3.000

{noformat}                   Capture       Launch
     Clock Edge:+    0.500        0.000
    Src Latency:+   -0.578       -0.578
    Net Latency:+    0.475 (P)    0.534 (P)
        Arrival:=    0.397       -0.045{noformat}

Clock Gating Setup:-    0.021
Uncertainty:-    0.045
Cppr Adjust:+    0.010
Required Time:=    0.335
Launch Clock:=   -0.045
Data Path:+    0.458
Slack:=   -0.065

Path to this register are from the icDataArray.   See pics below and text file for the timing paths.

I can gather more information if required.",Cody Croxton,Josh Smith,Michael White,Tom Mickelson,,,,,,,,,,,,5e1371930242870e996efde2,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25/May/22 12:17 PM;e6f627bd-82df-43d2-a775-e108801e4606;icDataRdBankDataF2Rot_F3_0_reg.jpg;https://sifive.atlassian.net/secure/attachment/72478/icDataRdBankDataF2Rot_F3_0_reg.jpg,25/May/22 12:18 PM;e6f627bd-82df-43d2-a775-e108801e4606;icDataRdBankDataF2Rot_F3_0_reg.txt;https://sifive.atlassian.net/secure/attachment/72477/icDataRdBankDataF2Rot_F3_0_reg.txt,25/May/22 12:17 PM;e6f627bd-82df-43d2-a775-e108801e4606;to_icDataRdBankDataF2Rot_F3_0_reg.jpg;https://sifive.atlassian.net/secure/attachment/72476/to_icDataRdBankDataF2Rot_F3_0_reg.jpg,,,,,,,,,,,,,,77aabeb8a204ea1e5d078532c5089dae36b2245d,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{branch={count=2, dataType=branch}, json={""cachedValue"":{""errors"":[],""summary"":{""branch"":{""overall"":{""count"":2,""lastUpdated"":null,""dataType"":""branch""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzggn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,59:57.2,25/May/22 12:24 PM;5e137757f65a6b0e9bf1636f;I do have a new run going with the icDataArrays built with ULVT memories which will help.,26/May/22 12:59 PM;5e1371930242870e996efde2;[~accountid:5e137757f65a6b0e9bf1636f] We can’t move the L1 caches to ulvt permanently.  It’s fine if this is an experiment but we need to keep the bigger arrays as LVT (or above) ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
P650: FEX/IEX/LSU mux/flop question,,,,,,MAL-1970,116080,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Josh Smith,5acffeafaa802f2a797a955c,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/25/2022 11:18,9/7/2022 12:13,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,Timing,,,,,,,,0,,,,"Could this mux/flop move from SDPipe into IEX?  Seems like a long path from FEX and not too much logic in next cycle.  Maybe some way to move bypassWB mux into next cycle so not pulled to IEX?



    if (_sdfp_stDataNonEx_q_T_4) begin // @\[Reg.scala 17:18]

       if (stageSelRF) begin // @\[MallardUtil.scala 430:22]

         if (sdrr_payload_q_cmn_ctrl_xs2) begin // @\[SDPipe.scala 180:21]

           sdfp_stDataNonEx_q <= \{\{1'd0}, io_lsuIexPrfReadResp_RR};

         end else begin

           sdfp_stDataNonEx_q <= io_lsuFexPrfReadResp_RR;

         end

       end else if (stageSelWB) begin // @\[MallardUtil.scala 429:22]

         sdfp_stDataNonEx_q <= bypassWB;

       end else begin

         sdfp_stDataNonEx_q <= 65'h0;

       end

     end",Cody Croxton,John Ingalls,Josh Smith,Michael White,Tom Mickelson,,,,,,,,,,,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzgfb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,07:22.7,25/May/22 11:20 AM;60f1ea6c6491110069392f8f;If this is at all possible I can try to collect more timing and path data.,"25/May/22 12:07 PM;5acffeafaa802f2a797a955c;The {{bypassWB}} input should be the fastest input, and muxing that in the next stage will add another 64 bit flop for each store data pipe.",07/Sep/22 12:13 PM;5acffeafaa802f2a797a955c;Do we still think we need to do anything here?  Given the most recent P650 timing reports I think we should close this (at least for Panda).,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
missQ/ents_*/memattr_q_r_reg* to missQ/oWrWgbPtrBuf/ram_dbPtr_reg*,,,,,,MAL-1969,116070,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Rick Chen,5fc1b965d670b8006eda0fde,Tom Mickelson,5e137757f65a6b0e9bf1636f,Tom Mickelson,5e137757f65a6b0e9bf1636f,5/25/2022 10:52,9/7/2022 12:13,9/28/2022 0:51,,,,,,,,,,,,,,RTL/Tile,Timing,,,,,,,,0,,,,"Top PL2 timing paths are in the missQ with gate counts of 35-37.   

!image-20220525-180054.png|width=1464,height=90!



[^missQ_1.txt]

!missQ-20220525-153715.jpg|width=340,height=316!



[^missQ_2.txt]




[^missQ_3.txt]

",Cody Croxton,Josh Smith,Michael White,Tom Mickelson,,,,,,,,,,,,5e1371930242870e996efde2,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25/May/22 11:01 AM;e6f627bd-82df-43d2-a775-e108801e4606;image-20220525-180054.png;https://sifive.atlassian.net/secure/attachment/72467/image-20220525-180054.png,25/May/22 11:01 AM;e6f627bd-82df-43d2-a775-e108801e4606;missQ-20220525-153715.jpg;https://sifive.atlassian.net/secure/attachment/72468/missQ-20220525-153715.jpg,25/May/22 11:01 AM;e6f627bd-82df-43d2-a775-e108801e4606;missQ_1.txt;https://sifive.atlassian.net/secure/attachment/72471/missQ_1.txt,25/May/22 11:01 AM;e6f627bd-82df-43d2-a775-e108801e4606;missQ_2.txt;https://sifive.atlassian.net/secure/attachment/72470/missQ_2.txt,25/May/22 11:01 AM;e6f627bd-82df-43d2-a775-e108801e4606;missQ_3.txt;https://sifive.atlassian.net/secure/attachment/72469/missQ_3.txt,,,,,,,,,,,,aea3840da14be1b45f1ef4bab48e3512fcc15831,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzgd3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,08:52.7,"25/May/22 11:08 AM;5acffeafaa802f2a797a955c;I’m reassigning to [~accountid:5fc1b965d670b8006eda0fde] , he can decide who should look at this",01/Jun/22 11:49 AM;5acffeafaa802f2a797a955c;[~accountid:5fc1b965d670b8006eda0fde] can you have someone take a look at this path and see if there’s anything we can do?,26/Aug/22 5:52 PM;5acffeafaa802f2a797a955c;[~accountid:5e137757f65a6b0e9bf1636f] do you know if this still an issue?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
P650 LSU Timing: PTW In2out paths,,,,,,MAL-1967,116063,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/25/2022 9:25,9/6/2022 9:15,9/28/2022 0:51,5/26/2022 16:11,,,,,,,,,,,,,RTL/LSU,RTL/PTW,Timing,,,,,,,0,,,,"Are these tied to PTW moving:

!image-20220525-162540.png|width=855,height=231!",Cody Croxton,John Ingalls,Josh Smith,Michael White,Tom Mickelson,,,,,,,,,,,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,MAL-1774,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1972,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25/May/22 9:25 AM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220525-162540.png;https://sifive.atlassian.net/secure/attachment/72460/image-20220525-162540.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-27T11:02:34.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/22923,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzgbr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,38:43.0,25/May/22 9:27 AM;60f1ea6c6491110069392f8f;Note these are with 30% I/O budgets at LSU block level,"25/May/22 9:38 AM;5acffeafaa802f2a797a955c;Yeah, the highlighted path goes through the LSU to FEU because the PTW module was moved…",25/May/22 9:39 AM;5acffeafaa802f2a797a955c;[~accountid:5bb6808b9ba2930990f81895] this is probably going to cause some pain with partitioned runs.  Any suggestions here?,"25/May/22 1:08 PM;5bb6808b9ba2930990f81895;Yes, we can shuffle some flops around between PTW and LSU to avoid this on the PTW paths.

The chicken and control CSR distribution paths are a separate issue, split out to [https://sifive.atlassian.net/browse/MAL-1972|https://sifive.atlassian.net/browse/MAL-1972|smart-link] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] test support VLEN/DLEN 256,,,,,,MAL-1966,116024,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/24/2022 21:39,7/14/2022 18:45,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Support for DLEN=256b is part of Panda plan and should be added in a spanning configuration and properly tested (and fixed if required)

One of the possible issue to monitor is the slider support (statically dependent on DLEN):

* Currently the slider implementation should support DLEN=128, DLEN=256, and DLEN=512, the last two have never been exercised. 
* [https://github.com/sifive/federation/blob/master/block-tgv-sifive/src/main/scala/core/tgv/Slider.scala#L271|https://github.com/sifive/federation/blob/master/block-tgv-sifive/src/main/scala/core/tgv/Slider.scala#L271]",David Kravitz,Nicolas Brunie,,,,,,,,,,,,,,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1659,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzg33:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,39:49.9,"25/May/22 9:10 AM;6065017e90e3950069cf01c5;[~accountid:5fd15143b4a74900763834e0] , regarding the target version, although it is not the intended targetm I put “Panda DR” because it is the furthest DR listed, and [~accountid:5bb6808b9ba2930990f81895] monitors the “target info” to make sure it is filled.","25/May/22 9:39 AM;5fd15143b4a74900763834e0;Healdsburg DR is later, but not necessarily appropriate for this. We don’t know yet which post-Panda release will expect a 512b TGV. DLEN=512 should not be in a spanning configuration right now, though we should add a 256b configuration “when TGV is more stable”(TM).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] implement vfred(min/max) support,,,,,,MAL-1965,116005,111462,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/24/2022 17:07,6/30/2022 19:55,9/28/2022 0:51,6/27/2022 10:00,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,"Implement 

{noformat}    vfredmax.vs  vd, vs2, vs1, vm # Maximum value
    vfredmin.vs  vd, vs2, vs1, vm # Minimum value{noformat}

as specified here:

[https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#143-vector-single-width-floating-point-reduction-instructions|https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#143-vector-single-width-floating-point-reduction-instructions|smart-link] ",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1766,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{repository={count=4, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":4,""lastUpdated"":""2022-06-23T13:56:37.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":4,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/b6b7e8829d003b8d5aa01f71d71cbfb0595fa6a1,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzfyv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,111462,[TGV][RVV 14.3] Vector Single-Width Floating-Point Reduction,Done
LSU FV: Misalign Access Exception for MMIO,LSU FV: Misalign Access Exception for MMIO,,,,,MAL-1964,115986,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Alvin Tung,60f1ecfcf664300069fbfb00,Alvin Tung,60f1ecfcf664300069fbfb00,5/24/2022 14:12,5/26/2022 16:11,9/28/2022 0:51,5/24/2022 14:35,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"Need to add misalign access exception for MMIO here:

[https://github.com/sifive/federation/blob/5d05efd56929404e536f7507c9063900b2d1950c/mallard/src/main/scala/core/mallard/TLB_Mallard.scala#L381-L382|https://github.com/sifive/federation/blob/5d05efd56929404e536f7507c9063900b2d1950c/mallard/src/main/scala/core/mallard/TLB_Mallard.scala#L381-L382]

Formal needs to also reflect this in the dtlb2lsu constraints. ",Alvin Tung,John Ingalls,,,,,,,,,,,,,,60f1ecfcf664300069fbfb00,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-70,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6797,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-05-26T12:45:28.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/22814,,,n/a,,,,,,,,,Formal,Inspection,,,Narwhal -> GR4.01 (SHA ba492f6),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,No,,,,,,,,,,,,2|hzzfvj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650 Port wiring: Multiple block loads,,,,,,MAL-1962,115878,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/23/2022 15:32,5/27/2022 18:03,9/28/2022 0:51,5/27/2022 18:02,,,,,,,,,,,,,Implementation,RTL/Tile,,,,,,,,0,,,,"Is it possible to have port splitting occur within driving block so that no multiple loads are seen at top level:

Ex: coreip_p650_7nm_H240/verilog/design/SiFive_MallardCore.v

    .io_robRetirePtr(feu_io_robRetirePtr),

  assign lsu_io_robRetirePtr = feu_io_robRetirePtr; // @\[Core.scala 631:40]

  assign iex_io_robRetirePtr = feu_io_robRetirePtr; // @\[Core.scala 514:29]



Can FEU create two ports instead of leaving multi-connection at top level?  PD might want FEU output ports in different locations.",Cody Croxton,John Ingalls,Josh Smith,Michael Lewis,Michael White,Tom Mickelson,,,,,,,,,,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,60fb404b1c57770070d8d924,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-27T18:02:15.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5fdccf76f8ff3d3c0aea66f207a5a10297bfba58,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzfan:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,25:09.4,23/May/22 4:25 PM;5acffeafaa802f2a797a955c;Yeah that seems reasonable.,23/May/22 4:33 PM;60f1ea6c6491110069392f8f;Do you need a list?,23/May/22 4:43 PM;5acffeafaa802f2a797a955c;That would be useful,"24/May/22 10:44 AM;60f1ea6c6491110069392f8f;I noticed:


 assign  iex_io_robFlushReq_bits_gid     =  feu_io_robFlushReq_bits_gid;

 assign  fex_io_robFlushReq_bits_gid     =  feu_io_robFlushReq_bits_gid;

 assign  lsu_io_robFlushReq_bits_gid     =  feu_io_robFlushReq_bits_gid;

 

 assign  iex_io_robFlushReq_valid        =  feu_io_robFlushReq_valid;

 assign  fex_io_robFlushReq_valid        =  feu_io_robFlushReq_valid;

 assign  lsu_io_robFlushReq_valid        =  feu_io_robFlushReq_valid;

 

 assign  iex_io_robRetirePtr             =  feu_io_robRetirePtr;

 assign  lsu_io_robRetirePtr             =  feu_io_robRetirePtr;

 

 assign  feu_io_brFlushReq_BR1_bits_gid  =  iex_io_brFlushReq_BR1_bits_gid;

 assign  fex_io_brFlushReq_BR1_bits_gid  =  iex_io_brFlushReq_BR1_bits_gid;

 assign  lsu_io_brFlushReq_BR1_bits_gid  =  iex_io_brFlushReq_BR1_bits_gid;

 

 assign  feu_io_brFlushReq_BR1_valid     =  iex_io_brFlushReq_BR1_valid;

 assign  fex_io_brFlushReq_BR1_valid     =  iex_io_brFlushReq_BR1_valid;

 assign  lsu_io_brFlushReq_BR1_valid     =  iex_io_brFlushReq_BR1_valid;","24/May/22 3:24 PM;5acffeafaa802f2a797a955c;Okay, the {{robFlushReq}} stuff should be fixed now after the change for [https://sifive.atlassian.net/browse/MAL-1912|https://sifive.atlassian.net/browse/MAL-1912|smart-link].

I can work on the others in that list.",27/May/22 6:02 PM;5acffeafaa802f2a797a955c;[~accountid:60f1ea6c6491110069392f8f] I address the {{robRetirePtr}} and {{brFlushReq_BR1}} outputs.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650 Timing IEX-FEX-RDU: Timing through io_f2iNack through io_fexDispCredit_?[*],,,,,,MAL-1961,115857,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/23/2022 12:34,9/3/2022 7:42,9/28/2022 0:51,5/23/2022 22:25,,,,,,,,,,,,,Implementation,RTL/FEX,RTL/IEX,Timing,,,,,,0,,,,"This path is split across three units.  It looks tight in the FEX unit but might work with correct pin placement, budgets, and skew.  Is there an estimate of effort/impact to modify RTL?  PD would prefer not to have paths spanning multiple units…

Current block level runs use 10% I/O budgets on each block and don’t have pins placed.  Path delay numbers can definitely improve…



IEX floorplan (needs pin placement work):


!image-20220523-191818.png|width=738,height=568!

FEX floorplan ( pins on wrong edge, but distance seems reasonable )

!image-20220523-193457.png|width=730,height=556!

FEU/RDU floorplan:

!image-20220523-194545.png|width=725,height=612!



See: /project/tsmc/cln7ff/P6_ppa_runs/michaelw/P650/timing_reports/MAL-1961",Brian Grayson,Cody Croxton,Fu-Ching Yang,Ian Chuang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,Knute Lingaard,Michael White,Nicolas Brunie,Tom Mickelson,,,,,5e1371705361330daaeaf389,5e1371930242870e996efde2,5ca54304bb1ed00ac5e5e852,61aaae1d9615eb006f5ff922,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,5e1374fb7a22c90da0c60495,60f1ea6c6491110069392f8f,6065017e90e3950069cf01c5,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,23/May/22 12:34 PM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220523-191818.png;https://sifive.atlassian.net/secure/attachment/72317/image-20220523-191818.png,23/May/22 12:47 PM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220523-193457.png;https://sifive.atlassian.net/secure/attachment/72319/image-20220523-193457.png,23/May/22 12:47 PM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220523-194545.png;https://sifive.atlassian.net/secure/attachment/72318/image-20220523-194545.png,,,,,,,,,,,,,,,,,Floating Point,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-23T22:24:57.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,a6a3ff8701ebdcac4b6acf758bd9b21ebe13b378,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzf7j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,44:35.1,"23/May/22 1:10 PM;60f1ea6c6491110069392f8f;There are not many gates on this path.  Further, FEX timing might improve with flattening internal modules or moving io_fastReplay_EX AND from SiFive_FexPipe to issueQueues_0 and issueQueues_1","23/May/22 1:44 PM;5acffeafaa802f2a797a955c;I think we should just remove this path entirely.  The reason that this {{fastReplay}} path exists is so that floating point instructions can release their issue queue entry at the end of the EX stage instead of WB (1 cycle earlier).  I think the reasonable thing to do is make it so that any float → integer operation will release its issue queue entry from WB stage instead, similar to how it would if it depends on a load instruction.

[~accountid:5e1374fb7a22c90da0c60495] FYI","24/May/22 7:28 AM;5e1374fb7a22c90da0c60495;Curious, does this affect P550 future releases as well?",24/May/22 7:39 AM;5acffeafaa802f2a797a955c;This change would affect all Mallard configurations.  I didn’t add anything which would discriminate between P550 and P650.  I could do that though.,"24/May/22 8:07 AM;5e1374fb7a22c90da0c60495;Thanks, no, I don’t think that’s necessary.  I just wanted to know if I needed to keep this fast path for P550 or not.  IIRC, this wasn’t a large (if any) perf difference.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] implement proper distinction between  hasSlide/hasPerm/hasVcmplx,,,,,,MAL-1960,115826,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/23/2022 8:39,8/11/2022 18:06,9/28/2022 0:51,8/11/2022 3:38,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Currently TGV only support a all-or-nothing configuration for the permutation support: either a pipeline does not support any permutation or it supports all permutations.

However multiple flags exists in the JSON configuration {{hasSlide}}, {{hasPerm}}, {{hasVcmplx}}. These flags should be cleanup and properly implemented:

* {{hasSlide}}: a pipeline supports simple slides operations:
**  {{vslide1*}} and {{vslide*.vi}} for all LMULs
** other {{vslide*.vx}} for LMUL = 1
* {{hasPerm}}: a pipeline supports all permutations including complex permutations
** This flag is a superset of {{hasSlide}} ({{hasSlide}} should only be set if {{hasPerm}} is false)
* {{hasVcmplx}}: an issQ supports the issue of vector complex operations (required for complex permutation)",Ian Chuang,Kathlene Magnus,Nicolas Brunie,,,,,,,,,,,,,61aaae1d9615eb006f5ff922,5e137458efa19b0e976b5c7a,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=4}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":4,""lastUpdated"":""2022-08-11T03:37:41.000-0700"",""stateCount"":4,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":4,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/e45500a17a44d75db505388a2f75e1ca27b9cfa2,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,4,0,,,,100,,,,,,,,,,,,,,,2|hzzf0v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Add Read port for LTB for baler issue queue,,,,,,MAL-1959,115745,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,5/20/2022 17:40,6/2/2022 16:21,9/28/2022 0:51,5/31/2022 10:06,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,Add read port for LTB to read out data for the baler request that baler issue queue has issued,Warren Menezes,,,,,,,,,,,,,,,600773dcee80bd006f750bba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-27T17:54:10.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzekn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P550: LSU to PL2 Timing: lstm_cflushAll_q to pl2/dirBanks/TagRAM/sram*/CEB,,,,,,MAL-1958,115726,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brian Keish,62758614e51c620070bffb5a,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/20/2022 10:52,9/3/2022 7:43,9/28/2022 0:51,5/26/2022 15:45,,,,,,,,,,,,,Implementation,RTL/LSU,Timing,,,,,,,0,,,,"Recent P550 runs from master showing paths to PL2 Dirbanks CEB pins pushing macros out.  Is this related to RTL changes?

Startpoint: tile/core/lsu/LSTPipes_0/lstm_cflushAll_q_reg/CP
Endpoint:   tile/pl2_wrapper/pl2/dirBanks_0/TagRAM/TagRAM_ext/sram_0_0/CEB
Slack:                  -0.0342
Skew:                    0.0539
Stages:                19
BufINVs:                3
Manhattan (X/Y): 258.267/243.123
PCD:                     0.2557
PND:                    0.0654
Corner:                 func_ssg_0p675_0c_cworst_view

Floorplan: Path in red

!image-20220520-175141.png|width=717,height=631!",Cody Croxton,John Ingalls,Michael White,Tom Mickelson,,,,,,,,,,,,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1213,,,,,,,MAL-1905,,,,,,,,,,,20/May/22 10:52 AM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220520-175141.png;https://sifive.atlassian.net/secure/attachment/72253/image-20220520-175141.png,,,,,,,,,,,,,,,,032b6a88c1c658dcfbaf9dde3e0e031f76e1e8be,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-26T15:44:37.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/22916,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzdzb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,06:15.8,"20/May/22 12:06 PM;5bb6808b9ba2930990f81895;Yes, we can (re)move some logic from this timing path. In LSTPipe.scala [https://github.com/sifive/federation/blob/dde2f162c7d07f115e000dfaa27c0f4ae92c296b/mallard/src/main/scala/core/mallard/LSTPipe.scala#L3274-L3300|https://github.com/sifive/federation/blob/dde2f162c7d07f115e000dfaa27c0f4ae92c296b/mallard/src/main/scala/core/mallard/LSTPipe.scala#L3274-L3300], make these replacements:

* {{lstm_mshrNextEstablish.bits.cacheable}} → {{lstm_dtlbResp_q.cacheable}}
* {{lstm_mshrNextEstablish.bits.mmio}} → {{lstm_mmioIfMemSearch_q}}",20/May/22 12:31 PM;60f1ea6c6491110069392f8f;See: /project/tsmc/cln7ff/P5_ppa_runs/michaelw/P550/timing_reports/MAL-1958,26/May/22 1:27 PM;60f1ea6c6491110069392f8f;Any update or ETA?,26/May/22 1:32 PM;5bb6808b9ba2930990f81895;work in progress today,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650 Timing: disableNLP chicken bit can have long path to NLP SRAM,,,,,,MAL-1957,115712,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,5/20/2022 8:21,9/3/2022 7:43,9/28/2022 0:51,5/23/2022 22:35,,,,,,,,,,,,,Implementation,RTL/Frontend,Timing,,,,,,,0,,,,"In a standalone FEU implementation run, there were some top paths ending at the NLP SRAMs which start from the {{disableNLP}} chicken bit.  Currently this chicken bit is used in the logic for deciding to allocate an NLP entry this cycle, and ends up at the read/write conflict detection logic (which is timing critical).

We should be able to move the {{disableNLP}} bit to somewhere else in the logic cone.",Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,e1518165df0a6a03777afcf0c00ffb557314cbfb,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzdx3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,23/May/22 10:35 PM;5acffeafaa802f2a797a955c;This should have been fixed in commit e1518165df0a6a03777afcf0c00ffb557314cbfb when the NLP tag array was introduced.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: MMIOs to same PA completing out-of-order,,,,,,MAL-1956,115595,,Question,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Abhishek Anand,622a7ed2f1e55c0070f301a9,Abhishek Anand,622a7ed2f1e55c0070f301a9,Abhishek Anand,622a7ed2f1e55c0070f301a9,5/19/2022 9:53,5/26/2022 20:15,9/28/2022 0:51,5/26/2022 20:15,,,,,,,,,,,,,RTL/LSU,Verification,,,,,,,,0,,,,"+Scenario Description:+

# Out-of-reset LDQ3 is occupied with an instruction with GID 0x1, and is using MSHR 0x0. This is an MMIO (mshrE_mmio_q is asserted)
# In cycle#8 LDQ1 is getting used by an instruction with GID 0x2, and is using MSHR 0x3. This is a",Abhishek Anand,Alvin Tung,John Ingalls,,,,,,,,,,,,,622a7ed2f1e55c0070f301a9,60f1ecfcf664300069fbfb00,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-7126,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Formal,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,No,,,,,,,,,,,,2|hzzdaf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,15:19.5,"20/May/22 2:15 PM;5bb6808b9ba2930990f81895;I think what’s going is that the L2 should respond first for MSHR 0x0 (which requested earlier) before MSHR 0x3 because both requests were MMIO and used the {{requestFifo = true}} SourceID range (0x8 and 0xB, respectively).","20/May/22 8:28 PM;5bb6808b9ba2930990f81895;answer: this can theoretically happen, and it should be fine if it does, but probably won't in practice

[https://sifive.slack.com/archives/CE4DFLULW/p1653103034353209?thread_ts=1653101953.075489&cid=CE4DFLULW|https://sifive.slack.com/archives/CE4DFLULW/p1653103034353209?thread_ts=1653101953.075489&cid=CE4DFLULW|smart-card]

{quote}in practice, in our present interconnects, the responses will almost assuredly arrive in order too. but mechanically there is no guarantee in any of the underlying circuitry. it is the requests that are delayed at locations where we think reordering of them could happen (a second request is held there until a prior request's response returns){quote}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion failed: Vex PRF write should only be enabled for a valid result,Assertion failed: Vex PRF,,,,,MAL-1954,115592,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,5/19/2022 8:49,6/7/2022 13:01,9/28/2022 0:51,6/7/2022 13:01,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"There is an assertion failure seen in the latest VTG regression
Error message 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_92_assertion_vexpipep/federation/builds2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", 469: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_0.SiFive_VexPipe_assert_0: at time 2812162500 ps
Assertion failed: Vex PRF write should only be enabled for a valid result
    at VexPipe.scala:1276 assert(!(io.rfWriteReq_WB(i).valid && !instValid_WB(i)), ""Vex PRF write should only be enabled for a valid result"")
Fatal: ""/scratch/ishitashah/tgv_regression/sign_92_assertion_vexpipep/federation/builds2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", 478: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_0.SiFive_VexPipe_assert_0: at time 2812162500 ps{noformat}

*SHA:*[+9d7b938+|https://simscope.internal.sifive.com/models/undefined--master--9d7b9389a1bd7abf853f6e8618c7c23b963ca4ec]

*config:*coreip_u8_minimal_vector

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""torture"",
  ""raw_plusargs"": [
    ""+clock_periph=3"",
    ""+clock_div0=3"",
    ""+clock_div1=3"",
    ""+clock_div2=3"",
    ""+clock_div3=3"",
    ""+clock_div4=3"",
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+axi_mem_latency_cycles=10"",
    ""+axi_mem_dither_cycles=10"",
    ""+enable_spike_cosim"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    """",
    ""+cosim_scoreboard_stall_cycle_count=500000""
  ],
  ""subdir"": ""torture_cflush_T_5963"",
  ""subtest"": ""cflush"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 378203026
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""torture_inbound"": true,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_inbound,8000f400:8000f800%20000800:20000c00"",
      ""uvm_test_top,torture_read_inbound,20000000:20000548%8000d1c0:8000f108""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath*

{{gamma25:/scratch/ishitashah/tgv_regression/sign_92_assertion_vexpipep/federation/builds2/coreip_u8_minimal_vector/sim/rerundir1/rerun.outline/torture_cflush_T_5963/torture/cflush}}",Ishita Shah,Nicolas Brunie,,,,,,,,,,,,,,607e26355431a500701f5aed,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,MAL-1945,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,19/May/22 6:13 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220520-011255.png;https://sifive.atlassian.net/secure/attachment/72211/image-20220520-011255.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Torture,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzd9r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,13:00.8,"19/May/22 6:13 PM;6065017e90e3950069cf01c5;I think the problem here is that we get an unsupported instruction in the execution pipeline, namely a {{vmsgtu}} or a {{vmnor}} ({{funct7=3d)}}. As this instruction is not implemented the VexPipe has no unit to select result from and we arrive at result WB without a valid result.

This instruction is part of the mask instructions which should be implemented soon, following [~accountid:609d7e1f5998a6006800dcc5] on-going work on mask sourcing / writing.

!image-20220520-011255.png|width=1282,height=573!","19/May/22 8:23 PM;6065017e90e3950069cf01c5;These instructions does not seem to come from the test {{program.elf}}, so it is possible they correspond to an invalid section speculatively executed. We should check that the uarch is resistant to the execution of such section. I think the current issue will disappear when the mask unit will be implemented, but it may appear for other uops, you must ensure the machine stays in a valid state after executing and flushing an invalid section (will potentially unsupported / reserved instructions).","07/Jun/22 1:00 PM;6065017e90e3950069cf01c5;Issue seems to be fixed on master, setting this as resolved for now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] implement and test vrgather.vx support,,,,,,MAL-1952,115590,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/19/2022 8:44,7/12/2022 9:54,9/28/2022 0:51,6/1/2022 7:25,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-01T07:25:26.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/919ef66f7f7a93b2d3adffa2f6df1c52d6e62240,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzd9b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] implement and test vrgather.vi support,,,,,,MAL-1951,115589,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/19/2022 8:43,7/12/2022 9:54,9/28/2022 0:51,5/27/2022 8:40,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-27T08:40:44.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/c4e3d0b8a6e2b3ed2ac03d8e5f734d90a4cf1ff7,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzd93:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] sequencer update to generate vred(min/max)[u] uops sequence,,,,,,MAL-1950,115504,111462,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/18/2022 16:03,6/30/2022 19:55,9/28/2022 0:51,6/24/2022 12:06,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,,,,,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,MAL-1767,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1766,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-06-24T12:05:50.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/fe69821f786f08e68eb827e6f8d413c2910b8418,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzcqf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,111462,[TGV][RVV 14.3] Vector Single-Width Floating-Point Reduction,Done
[TGV] design Horizontal FP Reduction Unit,,,,,,MAL-1949,115503,111462,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/18/2022 16:03,8/5/2022 1:45,9/28/2022 0:51,7/26/2022 17:26,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Design an horizontal FP reduction unit which reduction VLEN vector + SEW scalar (SEW <= ELEN) into a SEW results and insert it into a VLEN tail input.

This {{VectorHorizontalFPRedUnit}} must support:

* single-width ordered sequence
* widening ordered sequence
* single-width unordered sequence (with at least same performance as ordered) 
* widening unordered sequence (with at least same performance as ordered) 

Unit should rely on at most of FP adder per supported formats. FP adder may be unified (single module supported various format).

Widening should be supported by separate input conversion before performing the addition.",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,MAL-1767,,,,,,,,,,,,,,,,,,,MAL-2262,,,,,,MAL-1766,,,MAL-2175,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-07-26T17:25:25.000-0700"",""stateCount"":3,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,3,0,,,,100,,,,,,,,,,,,,,,2|hzzcq7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,111462,[TGV][RVV 14.3] Vector Single-Width Floating-Point Reduction,Done
[TGV] sequencer update for integer v[w]red(sum[u]|and|or|xor).vs,,,,,,MAL-1948,115502,111460,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/18/2022 15:58,7/11/2022 21:30,9/28/2022 0:51,6/4/2022 15:37,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,Modify TGV’s sequencer to generate uops sequence to implement any simple integer reduction operations.,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1765,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1764,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-04T15:36:49.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/b26ca34f4e71453769d7f6de93215dd72004d98f,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzcpz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,111460,[TGV][RVV 14.1] Vector Single-Width Integer Reduction,Done
[TGV] factorizing SEW masking in utils / MicroOp across TGV,,,,,,MAL-1947,115500,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/18/2022 15:38,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"building and selecting a mask based on SEW config ({{vsew}}) seems to be used numerous times across the TGV codebase.

[https://github.com/sifive/federation/pull/22341#pullrequestreview-977358194|https://github.com/sifive/federation/pull/22341#pullrequestreview-977358194]



The idea would be to factorize this kind of constructs:
(e.g. in VectorIntRedUnit.scala)

{noformat}  // scalar
  val scalarMask   = MuxLookup(
    io.cmd.bits.vsew + io.cmd.bits.uop.wide_if_red,
    0.U,
    tp.validEltWidths.zipWithIndex.map({ case (ew, i) => (i.U -> Fill(ew, 1.U(1.W)).pad(tp.eLen)) }),
  ){noformat}

(it seems we may have a similar construct in {{VectorFPHRWRedUnit}}, worth checking if they can be simplified.or in general look at all the uses of {{vsew}} , {{validEltWidths}} , {{validEWIndex}} and see if there are some patterns we are using again and again and again and which could be factorize in either {{TGVParams}}  or {{TGVVecCmd}}  or elsewhere.",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,MAL-2623,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzcpj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] Add ROB ID to LTB entries,,,,,,MAL-1946,115383,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,5/17/2022 16:50,5/17/2022 17:18,9/28/2022 0:51,5/17/2022 17:18,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,,,,"LTB (and STB) entries need to have the ROB ID (and uop number, eventually) so that the receiving side can CAM against what the sending side has loaded.",David Kravitz,,,,,,,,,,,,,,,5fd15143b4a74900763834e0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzbz3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,17/May/22 5:18 PM;5fd15143b4a74900763834e0;Was looking at stale code and hadn't seen Yohann had already put this in. Jumped the gun on creating a ticket for it.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Enable masked instructions in test outlines,,,,,,MAL-1945,115352,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,5/17/2022 11:45,8/29/2022 5:14,9/28/2022 0:51,8/29/2022 5:14,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Support for masked instructions is implemented in RTL, but enabling masked instructions in test outlines right now results in a fair amount of cosim mismatches when TGV writes a completely mask-undisturbed / tail-undisturbed result to a new physical register but spike-cosim has no register update. Once a solution to this is determined, we should be able to enable masked instructions.",Andrew Hanselman,Nicolas Brunie,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,MAL-1943,,,,MAL-1954,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1843,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=DECLINED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-29T05:12:10.000-0700"",""stateCount"":1,""state"":""DECLINED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,2|hzzbsn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,29/Aug/22 5:14 AM;609d7e1f5998a6006800dcc5;Tracking has been occurring in[https://sifive.atlassian.net/browse/MAL-2071|https://sifive.atlassian.net/browse/MAL-2071|smart-link] and will cover test outline updates when ready completed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] refactor TGVVecCmd and have it take TGVParams as argument,,,,,,MAL-1944,115342,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/17/2022 10:50,7/14/2022 18:45,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzbrj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
"[TGV] Suppress the undisturbed writes on masked operations, when mask does not allow any reg updates",,,,,,MAL-1943,115334,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Lowest,,Andrew Hanselman,609d7e1f5998a6006800dcc5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,5/17/2022 9:05,7/14/2022 18:45,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"On a masked operation, when the mask bits for the elements are set to 0, no write is supposed to happen. In TGV, we see it makes an undisturbed write to the vector reg file. 

COSIM doesn't update the vector register for vcompress.vm instruction causing a mismatch with RTL while register data comparison.

{noformat}core   0: 0x0000000080000ac6 (0x5e55aa57) vcompress.vm v20, v5, v11
core   0: 3 0x0000000080000ac6 (0x5e55aa57) e16 mf2 l2
core   0: 0x0000000080000aca (0xc21023f3) csrr    t2, vtype
core   0: 3 0x0000000080000aca (0xc21023f3) x 7 0x000000000000000f{noformat}

Error:

{noformat}[COSIM-ERROR][0] COSIM VS RTL WRDATA MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [14707] InstInfo: VLD=1 | PC=0x0000000080000b04 | INSN=0x5e000a57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r20=0x7c0915e1aa40a2867b58479f880db869 mask=ffff | READY=1 | CSR_TIMER=14707 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080001d98 | MCAUSE=0x0000000000000002 | VSTART=0 | VL=0 | SEW=0 | LMUL=0 | VSEGELT=0
[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000080000b04 | INSN=0x5e000a57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r20=0x00007c0915e1aa40a2867b58479f880d mask=ffff{noformat}

Config: coreip_u8_minimal_vector
SHA: 6b23a529dcc

rerun.outline

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+verbose""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vcompress.vm"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vcompress.vm_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-50_LMUL-1_TGV-1_IMM-1_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 3764004031
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Run Area:

{noformat}gamma28 /scratch/verif/anils/tgv/tgv-86/federation/builds3/coreip_u8_minimal_vector/sim/run_wrdata/rerun.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vcompress.vm{noformat}",David Kravitz,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,MAL-1945,,,,,,,VI-7114,,,,,,,,,,,,,,,,,,VI-6535,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzbq7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,41:35.7,"07/Jul/22 1:55 PM;5a938e9c0913194d2d262658;[~accountid:609d7e1f5998a6006800dcc5] [~accountid:5fd15143b4a74900763834e0] We just merged in a cosim fix, so we might not need this anymore. ","07/Jul/22 2:41 PM;5fd15143b4a74900763834e0;This is also a deep-backlog performance optimization. In the future, we can store in the mapper whether a {{v0}} register is all-0 (or potentially split out by “chunks-per-uop”). It could be tricky to update the mapper with the new destination mapping plus drop/complete the appropriate uops during the dispatch stage, but it could be worth thinking about when we have time.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[HB] LSU: return two LoadQs per cycle,,,,,,MAL-1942,115333,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Binayak Tiwari,60a963ed8cbda700681b40c1,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,5/17/2022 8:45,9/26/2022 16:15,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"Currently, our Load bandwidth is higher from the LSTPipes (2x) than from the LoadQ (1x).

It will be difficult to pick-two from a large number of LoadQ entries (48 in P650, or 64+ in Healdsburg), so we may need to bank this slightly differently than [https://sifive.atlassian.net/browse/MAL-1432|https://sifive.atlassian.net/browse/MAL-1432|smart-link].",John Ingalls,Nicolas Brunie,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1432,,,,MAL-2706,MAL-2716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,CIP-3958,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzzbpz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,40,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
LSU: TileLink HintAck when no pl2Present,LSU: TileLink HintAck,,,,,MAL-1941,114107,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Bandan Bhoi,6137eb8f7eb35f00692df12a,Bandan Bhoi,6137eb8f7eb35f00692df12a,5/1/2022 5:24,5/26/2022 4:11,9/28/2022 0:51,5/16/2022 12:42,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"*Description*:

This is a timeout issue of L2HwpfQ Hangcounter due to limited hardware resources of ultra minimal cores.

**Config*:*  coreip_u8mc_ultra_minimal.vcs

**Commit*:*  826d027

**Regression** : fed/master/nightly-mallard/301

---------------------------------------------------------------------------------
**rerun.outline*:*
\{noformat}

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
\{
""name"": ""sting"",
""raw_plusargs"": \[
""+enable_irritation"",
""+axi_mem_latency_cycles=40"",
""+axi_mem_dither_cycles=20"",
""+amba_vip_select=2"",
""+gdi_amba_test_enable=1"",
""+gdi_tlc_test_enable=1"",
""""
],
""subdir"": ""sting_StingCacheOpsTuple_T_0087"",
""subtest"": ""sifive/ComposableCache/CCache.conf"",
""enable_postsim_py_check"": false,
""seed"": \{
""value"": 3195535626
},
""sim"": \{
""vendor"": ""vcs""
},
""tilelink"": \{
""timeout"": ""100000000000""
},
""program"": \{
""reset_vector_scheme"": ""first_mem_periph_sys""
},
""uvm"": \{
""set_config_string"": \[
""uvm_test_top,torture_read_inbound,10101010:80808080"",
""uvm_test_top,torture_inbound,10101010:80808080""
],
""testname"": ""torture_test""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
\{noformat}
---------------------------------------------------------------------------------

**Run Directory*:* [https://simscope.internal.sifive.com/sigs/4020/cjn1ijt02qka|https://simscope.internal.sifive.com/sigs/4020/cjn1ijt02qka]

*Simulator:* vcs

*Sting Test Name:* sting_StingCacheOpsTuple_T_0087/sting/sifive/ComposableCache/CCache.conf

*Error:*
\{noformat}

\[COSIM-WARNING]\[0] COSIM VS RTL LOAD_INFO size mismatch. COSIM: 0 vs DUT: 1
Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/301/builds/coreip_u8mc_ultra_minimal/verilog/design/assertions/SiFive_L2HwpfQ_assert.sv"", 156: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.l2hwpfQ.SiFive_L2HwpfQ_assert_0: at time 13393142500 ps
Assertion failed (verification library): L2HwpfQ Hang  @\[L2HwpfQ.scala 138:14]

Fatal: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/301/builds/coreip_u8mc_ultra_minimal/verilog/design/assertions/SiFive_L2HwpfQ_assert.sv"", 165: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.l2hwpfQ.SiFive_L2HwpfQ_assert_0: at time 13393142500 ps

$finish called from file ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/301/builds/coreip_u8mc_ultra_minimal/verilog/design/assertions/SiFive_L2HwpfQ_assert.sv"", line 165.

*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 2678628 simulation cycles (in TestDriver.report_phase_actions)
_Verdi_ WARNING: fsdbDumpflush - The FSDB file has not been created.

_Verdi_ WARNING: fsdbDumpFinish - The FSDB file has not been created.
""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/301/vsrc/sim/common/../TestDriver.sv"", 520: TestDriver.assert_final_phase.final_error: started at 13393142500ps failed at 13393142500ps
Offending '(current_phase === shutdown_e)'

*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 2678628 simulation cycles (in TestDriver.report_phase_actions)
\{noformat}",Bandan Bhoi,John Ingalls,Rick Chen,Wei-Shan Wu,,,,,,,,,,,,6137eb8f7eb35f00692df12a,5bb6808b9ba2930990f81895,5fc1b965d670b8006eda0fde,5d7bfadab2698f0da4580dc5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1827,,,,,,,,,,,,,,,,,,03/May/22 10:59 AM;ug:004d42dd-0155-4b41-a5e6-cb45649086fe;core.scala file.jpg;https://sifive.atlassian.net/secure/attachment/71403/core.scala+file.jpg,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-05-17T21:03:40.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/22542,,,,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz4rz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,53:43.2,"03/May/22 10:59 AM;6137eb8f7eb35f00692df12a;!core.scala file.jpg|width=1223,height=623!

Due to pl2 memory limitation of ultra minimal config, here the  hwpf_hangThreshold value is increased to 91200 U from 90000 U.  After this new threshold value, this test is passing.  Hi [~accountid:5bb6808b9ba2930990f81895] is this justified to increase this value.","03/May/22 5:53 PM;5bb6808b9ba2930990f81895;I looked in the waves, and I hesitate to just increase the hang catcher.  I’m surprised by how long it takes for the CL2 to respond HintAck, while other requests still make progress.

[~accountid:5fc1b965d670b8006eda0fde] can you or someone on your team please take a look at why the HintAcks take so long to come back from the CL2 (that’s right, that’s CCache, not PL2) while other requests do still receive responses in a timely manner?",04/May/22 9:59 PM;5fc1b965d670b8006eda0fde;Which gamma is this? I don’t have access to simscope,"04/May/22 10:44 PM;6137eb8f7eb35f00692df12a;Hi [~accountid:5fc1b965d670b8006eda0fde]  the host name is :sigma26.internal.sifive.com , The job path on this machine is 	/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/301/builds/coreip_u8mc_ultra_minimal/sim/sim/moaoRIT-nightly.outline/sting_StingCacheOpsTuple_T_0087/sting/sifive/ComposableCache/CCache.conf

The dump path is 

bandanb@gamma27:/scratch/bandanb/masterregr301/federation/builds/coreip_u8mc_ultra_minimal/sim/sim/rerun.outline/sting_StingCacheOpsTuple_T_0087/sting/sifive/ComposableCache/CCache.conf","16/May/22 6:24 AM;5d7bfadab2698f0da4580dc5;Hi [~accountid:5bb6808b9ba2930990f81895] , I checked 

the outward of tile1 LSU: {{TestDriver.testHarness.system.subsystem.tile_prci_domain_1.tile.core.auto_lsu_master_out_*}} 

and 

2 inwards of dual-bank CL2 : :{{TestDriver.testHarness.system.subsystem.subsystem_l2_wrapper.ccacheGatedClockDomainWrapper.ccache.auto_in_0_*}} and {{TestDriver.testHarness.system.subsystem.subsystem_l2_wrapper.ccacheGatedClockDomainWrapper.ccache.auto_in_1_*}}

both of that have sent response {{HintAck}} to all the {{Hint}} request, but the {{l2hwpfE_hangCounter}} in tile1 LSU keeps count up.

And an interesting observation is the case only sends out total 10 {{Hint}} requests from tile1, I didn’t check why, but 10 is the number of total HWPF ID. So I would take a look at the IDPool block.



The signals I checked save in {{gamma27@/scratch/weishanw/vi_7006_signal.rc}}",16/May/22 6:44 AM;5d7bfadab2698f0da4580dc5;Should we also check {{HintAck}} here?[https://github.com/sifive/federation/blob/da3563f032bd9c4d0edfe9f4f440fff069d9947e/mallard/src/main/scala/core/mallard/MSHR_Mallard.scala#L177|https://github.com/sifive/federation/blob/da3563f032bd9c4d0edfe9f4f440fff069d9947e/mallard/src/main/scala/core/mallard/MSHR_Mallard.scala#L177],"16/May/22 12:21 PM;5bb6808b9ba2930990f81895;Yes, that’s it\!  Nice find [~accountid:5d7bfadab2698f0da4580dc5] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] ROB retire Hang assertion ,[TGV] ROB,instrcution decode and dispatch ,,,,MAL-1940,115164,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,5/13/2022 14:03,9/7/2022 17:43,9/28/2022 0:51,5/19/2022 20:11,,,,,,,,,,,,,RTL/RDU,,,,,,,,,0,TGV,,,"During a sting test, i see the rob hanging and not retiring with any instructions. 

I see the instructions with PC 

{noformat} 89600738:	4aa09657          	vfcvt.x.f.v	v12,v10

 89600740:	c01636d3          	fcvt.wu.s	a3,fa2,rup{noformat}

 sent to the rob, but i donot see them retire. And the assertion fires , as the counter value is reached. 



The fired assertion is 

{noformat}Error: ""/scratch/verif/srivatsa/sting_release_check_2/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", 2222: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert_0: at time 5602842500 ps
Assertion failed (verification library): ROB Retire Hang around entry 11   @[ROB.scala 699:9]
Fatal: ""/scratch/verif/srivatsa/sting_release_check_2/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", 2231: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert_0: at time 5602842500 ps
$finish called from file ""/scratch/verif/srivatsa/sting_release_check_2/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", line 2231.{noformat}



To recreate this failure, 

# clone federation and checkout the commit a4f532f73223074825cef3624dfb164405ecadd5
# build coreip_u8_minimal_vector design and run the test using the outline
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_stall_cycle_count=500000"",
    ""+cosim_scoreboard_trap_epc_count=30"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0209"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3653554458
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}



The waves generated are at {{gamma22:/scratch/verif/srivatsa/sting_release_check_2/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0209/sting/sifive/vector/vector_tgv_dev.conf}}",Alexandre Solomatnikov,Josh Smith,Kira Tsao,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5acffeafaa802f2a797a955c,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,16/May/22 6:08 PM;sols;MAL-1940.png;https://sifive.atlassian.net/secure/attachment/71949/MAL-1940.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-24T16:49:27.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/a18f34b4a21c3f87ce2958bc3109c774c2000bf6,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzzaqv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,08:54.8,"16/May/22 6:08 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;{{waitForFlush_REN}} is asserted b/c of {{illegal_REN_0}}:

!MAL-1940.png|width=952,height=948!

on:

{noformat}    89600740:	c01636d3          	fcvt.wu.s	a3,fa2,rup{noformat}

but flush never happens.

Maybe, because one of 2 previous instructions in the same ROB group:

{noformat}    89600738:	4aa09657          	vfcvt.x.f.v	v12,v10
    8960073c:	0b38d3d7          	vfsub.vf	v7,v19,fa7{noformat}

doesn’t complete.","17/May/22 8:00 AM;6065017e90e3950069cf01c5;Looks like one of the two insn from GID d’62' / x’3e', the {{vfsub}} is stuck in entry 5 of VexPipe issue queue.",17/May/22 8:32 AM;6065017e90e3950069cf01c5;From what I can tell the issue queue entry is waiting on a {{v2f}} tranfers to x2y entry {{(1)0a}} which never happens.,"17/May/22 8:41 AM;6065017e90e3950069cf01c5;It looks like the scalar uop to carry the scalar fp source for this instruction ({{vfsub}}) never reaches a FEX pipeline.

It looks like it is stuck ({{io_state_valid=1}}, {{io_state_ready=0}}) in entry 0 of {{issueQueues_1}} in FEX","17/May/22 10:28 AM;6065017e90e3950069cf01c5;{{gamma25:/scratch/nicolasb/federation_bis/builds_mfc/coreip_u8_minimal_vector/sim/sha_report/MAL-1940.outline/sting_StingSiFiveTuple_T_0209/sting/sifive/vector/vector_tgv_dev.conf}}
Around time 3'377' 212'500 the entry 0 in issueQueues_1 get stuck, waiting for src2 I think.
This seems to be the scalar uop for the {{vfsub.vf v7, v19, fa7 }}  at {{pc 0x89600734}}



It seems the prf source 12 gets set to ready in fexPRA -a few- 3 cycles after the entry is written into the issQ, maybe a tag broadcast is missed somewhere ?

Passing the ball to [~accountid:609d7e1f5998a6006800dcc5] ","17/May/22 3:46 PM;6065017e90e3950069cf01c5;[~accountid:5a938e9c0913194d2d262658] , [https://github.com/sifive/federation/pull/22591|https://github.com/sifive/federation/pull/22591|smart-link]  (on master) should fix this issue (“it passes on my machine (TM)”)",17/May/22 4:19 PM;6065017e90e3950069cf01c5;[~accountid:5a938e9c0913194d2d262658] I also pushed a branch with the patch from the commit indicated in the report (although I don’t intend to open a PR with it): [https://github.com/sifive/federation/tree/ROB_Retire_hang_issue_report_MAL-1940-fix|https://github.com/sifive/federation/tree/ROB_Retire_hang_issue_report_MAL-1940-fix|smart-link] ,"17/May/22 4:21 PM;5a938e9c0913194d2d262658;Ooh thanks. I’ll wait for the PR #22591 to merge, before running the next regression. All the other changes are already in master.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P550 MC4 Timing Roundtrip from/to Tile and L3 with RSink/Rsource within Tile,,,,,,MAL-1939,115139,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Known Error,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/13/2022 10:08,9/13/2022 13:39,9/28/2022 0:51,9/8/2022 8:27,,,,,,,,,,,,,RTL/Tile,Timing,,,,,,,,0,,,,"I continue to work on tightening the Tile level constraints to recover time but this four cycle loop looks very tight if not impossible.  Currently failing by ~500 ps across 4 cycle loop to/from Tile.  Only logic inside Tile is launch/capture flop so all improvement will come from clock skew.  Should I tighten constraints to force borrowing from Tile input/output flops (set input/output requirement to 90% SysClk or greater)?

Path from: tile_prci_domain_1/tlMasterClockXing_sink/bundleOut_0_a_sink/deq_gated_q/elts_0_address_reg\[*]

       to: subsystem_l3_wrapper/ccacheGatedClockDomainWrapper/ccache/mods_2/abc_mshrs_8/s_acquire_reg

Manhattan (X/Y): 906.282/459.6

Slack:=  -0.1100  ( may recover 0.250 with tighter constraints )

!image-20220513-170539.png|width=736,height=584!

Path from: subsystem_l3_wrapper/ccacheGatedClockDomainWrapper/ccache/mods_2/abc_mshrs_8/s_acquire_reg

       to: subsystem_l3_wrapper/ccacheGatedClockDomainWrapper/ccache/mods_2/bankedStore/cc_banks_1/cc_banks_0_ext/sram_0_0/CEB

Manhattan (X/Y): 1216.71/946.67

Slack:=  -0.1110

!image-20220513-170644.png|width=726,height=582!

Path from: subsystem_l3_wrapper/ccacheGatedClockDomainWrapper/ccache/mods_2/bankedStore/cc_banks_1/cc_banks_0_ext/sram_0_0/CLK

       to: subsystem_l3_wrapper/ccacheGatedClockDomainWrapper/ccache/mods_2/bankedStore/regout_r_1_reg\[32]

Manhattan (X/Y): 611.333/109.325

Slack:=  -0.2031

!image-20220513-170730.png|width=727,height=587!

Path from: subsystem_l3_wrapper/ccacheGatedClockDomainWrapper/ccache/mods_2/bankedStore/regout_r_1_reg\[32]

       to: tile_prci_domain_1/tlMasterClockXing_sink/bundleIn_0_d_source/enq_q/elts_0_data_reg\[79]

Manhattan (X/Y): 1534.32/1201.12

Slack:=  -0.0961 ( unclear if push possible )

!image-20220513-170757.png|width=729,height=582!",Andrew Gouldey,Arjun Pal Chowdhury,Cody Croxton,Dave Parry,John Ingalls,Josh Smith,Kevin Heuer,Michael White,Richard Van,Rick Chen,Robbie Adler,Ryan Macdonald,Susheel Sharma,,,60305bf52a42cc0069a4397f,5fb59104d670b8006e7569d6,5e1371930242870e996efde2,5cc37f384573b30ffbeb88b0,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,5e137473cbf1830daa9cf1ab,60f1ea6c6491110069392f8f,61fd7408f51e8500708a377d,5fc1b965d670b8006eda0fde,5dcc1b25bb355b0ddbd19f53,5a938e9d8608e14f22ece174,6064f88fb30f0d00703824c8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2112,MAL-2113,,,,,,08/Jun/22 12:28 PM;2a142ca0-9074-4e74-9c50-9663c8a5d487;Screen Shot 2022-06-08 at 2.56.32 PM.png;https://sifive.atlassian.net/secure/attachment/73003/Screen+Shot+2022-06-08+at+2.56.32+PM.png,13/May/22 10:08 AM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220513-170539.png;https://sifive.atlassian.net/secure/attachment/71866/image-20220513-170539.png,13/May/22 10:08 AM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220513-170644.png;https://sifive.atlassian.net/secure/attachment/71867/image-20220513-170644.png,13/May/22 10:08 AM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220513-170730.png;https://sifive.atlassian.net/secure/attachment/71869/image-20220513-170730.png,13/May/22 10:08 AM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220513-170757.png;https://sifive.atlassian.net/secure/attachment/71868/image-20220513-170757.png,,,,,,,,,,,,032b6a88c1c658dcfbaf9dde3e0e031f76e1e8be,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-07T17:08:09.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,"post RSINK change only used in Orca so no P550.

Close this now but probably we should have a buffer in EC based implementation in between SBUS and L3",,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,,,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,2|hzzalj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,56:48.0,"13/May/22 10:11 AM;60f1ea6c6491110069392f8f;The inner buffers  (there are 2 in different places) always exists.  However by default, one of them (innerInterior) only buffers the C channel signals and nothing else while the other (innerExterior) is a set of “flow buffers”  on A and D channels so it will not break the path.  Thus the default case will not break the timing path on any A channel or D channel signals.  Your path below is an A channel signal.

 

This can be changed from the design spec.  You are correct that we do this for mc8/mc16 configs:

 

https://github.com/sifive/federation/blob/8c0318c90685d8536ff53d1888f58bbfa9fb09a7/specs/design/standard/x280mc8.json#L297-L298

 

Specifically, we turn off the inner interior and make the innerExterior a full buffer on all channels.

 

-Robbie",13/May/22 10:12 AM;60f1ea6c6491110069392f8f;Adding others,"18/May/22 9:56 PM;5fb59104d670b8006e7569d6;Hi [~accountid:5cc37f384573b30ffbeb88b0] , [~accountid:5acffeafaa802f2a797a955c] [~accountid:5fc1b965d670b8006eda0fde] 

Continuing the mail chain discussion here in this ticket.

Based on observation, in non-cluster configuration we have direct timing path from Tile-Master-Sink node to Composable Cache MSHR. While we meet timing for single core config, in multi core configs [~accountid:60f1ea6c6491110069392f8f] has highlighted some possible/future issue. In multi cluster we have enabled an existing Inner Buffer in between. Can we enable the same (for P550MC JSON )  to ease timing ? How to make sure that the performance impact is acceptable ?

[~accountid:60f1ea6c6491110069392f8f] 

If I understand correctly, the other option is to tighten Tile’s timing budget. Is there any other proposal ?  ","19/May/22 7:10 AM;60f1ea6c6491110069392f8f;Not that I know of with current design.  These paths have always been tight and now we moved the start/end flops further from the L3 ( into the Tile ).  When we discussed this change I mentioned my concern on these paths.  If we switch to faster memories from other vendors like Synopsys the path would improve accordingly.

Another possibility has been to floorplan the Tile more vertically to better match the MC4 L3 height.  This should reduce the X dimension of this path but I haven’t wanted to spend the multiple weeks it will take….",27/May/22 8:54 AM;5e1371930242870e996efde2;[~accountid:5fb59104d670b8006e7569d6] How can we get resolution on what to do here?,"27/May/22 5:18 PM;5a938e9d8608e14f22ece174;Created [https://github.com/sifive/federation/pull/22966|https://github.com/sifive/federation/pull/22966|smart-link]  to update p550mc’s ComposableCache inner buffer config to match what was done in p550mc8. Do we need to mirror the outer buffer config as well? I don’t have historical context for why the outer buffer config was changed. See here:

[https://github.com/sifive/federation/blob/3ff5e73ff903f614f6e2166a80e6fbba83cca173/specs/design/standard/p550mc8.json#L249|https://github.com/sifive/federation/blob/3ff5e73ff903f614f6e2166a80e6fbba83cca173/specs/design/standard/p550mc8.json#L249]",27/May/22 5:21 PM;5acffeafaa802f2a797a955c;Maybe [~accountid:5e137473cbf1830daa9cf1ab] should comment on the performance impact of the extra latency.,"31/May/22 1:24 PM;5e137473cbf1830daa9cf1ab;Exactly how much extra latency added to the L3 load-use latency (and I presume also added to DRAM load-use latency)? And how much does the latency change at different frequencies? If non-zero change, is knowing the impact at one specific frequency sufficient? I’m not familiar with exactly how the {{bufInner*}} ComposableCache parameters impact the design.","31/May/22 1:30 PM;5dcc1b25bb355b0ddbd19f53;I believe that the change Ryan has proposed would add 1 uncore clock in each direction.   1 uncore clock == 2 core clocks, so I’d expect a 4 core clock adder.  Of course, this should be measured/confirmed in sim.  ",03/Jun/22 1:11 PM;5e137473cbf1830daa9cf1ab;p550mc is mentioned in this ticket. Are the (yet-to-be-confirmed-in-sim) 4 additional core clocks applicable to all Mallard core complexes? E.g. will p650mc also have these 4 additional core clocks for L3 load-use latency and DRAM load-use latency?,03/Jun/22 1:17 PM;5dcc1b25bb355b0ddbd19f53;I would expect so,"03/Jun/22 1:40 PM;5e137473cbf1830daa9cf1ab;OK, cool. Thanks, [~accountid:5dcc1b25bb355b0ddbd19f53]. And do we expect the 4 additional core clocks regardless of which L3 Cache is being used (Composable or Extensible)? I know ComposableCache parameters are being changed in the PR related to this ticket, but are the parameters controlling anything specifically related to ComposableCache? Or do we expect any L3 Cache to need these type of inner buffers for P550MC and P650MC?","03/Jun/22 1:48 PM;5dcc1b25bb355b0ddbd19f53;You can consider the parameters we’re talking about here as a uarch feature of the CC.  You can think of it as configuring whether the interface to each cache bank is flopped at the bank boundary or not.   The EC has a different uarch, but I would expect it to have to flop these signals.   However, I don’t know whether the delay projections you’ve seen already take this into account.  My guess is that they already do, but [~accountid:61fd7408f51e8500708a377d] will know authoritatively vs my speculation ;o)","03/Jun/22 2:33 PM;61fd7408f51e8500708a377d;In EC, we can configure the receiving/sending flops to be inside or outside EC boundary.","07/Jun/22 6:42 PM;5e137473cbf1830daa9cf1ab;[~accountid:61fd7408f51e8500708a377d], does the projection of 32 core cycles L3 load-use latency for MC4 2:1 configuration in the [EC Multi-Cluster Configurations table|https://docs.google.com/document/d/1naTETNvDdDRXgKrFg5xKkl7nIGaK5k42XwMyF5q5LZg/edit#heading=h.nm35ajjfiwyt] include the same cycles for flopping signals at each cache bank/slice boundary like CC is having to do here for MC4 configuration?",07/Jun/22 7:22 PM;61fd7408f51e8500708a377d;[~accountid:5e137473cbf1830daa9cf1ab] . Yes.,"08/Jun/22 12:28 PM;5e137473cbf1830daa9cf1ab;!Screen Shot 2022-06-08 at 2.56.32 PM.png|width=1421,height=424!

Here is a dissection of the latency beyond pL2 for CC L3 hit for p650.json federation SHA 72f572e81d3 (Date: Mon Jun 6 21:02:03 2022 -0400).

It’s 16 core cycles from pL2 outer CCL RD-channel valid to pL2 outer CCL DR-channel valid (for 1st beat). These 16 core cycles are from:

* 1 core cycle on TL A-channel tile_prci_domain/tile_clock_domain_buffer
* 2 core cycles on TL A-channel tile_prci_domain/tlMasterClockXing_sink
* 10 core cycles CC L3 hit (inner TL A-channel valid to inner TL D-channel valid)
* 2 core cycles on TL D-channel tile_prci_domain/tlMasterClockXing_sink
* 1 core cycle on TL D-channel tile_prci_domain/tile_clock_domain_buffer

Assuming p650mc is currently the same as p650, total L3 load-use latency for p650mc is currently 30 core cycles.

I assume p650mc will be updated such that it will be 20 core cycles from pL2 outer CCL RD-channel valid to pL2 outer CCL DR-channel valid (for 1st beat); 4 total additional core cycles (16+4=20), i.e. 2 additional core cycles on each side of CC L3 hit from flopping TL A-channel signals (1 uncore cycle) and flopping TL D-channel signals (1 uncore cycle) at the boundary of each CC L3 bank.

So total L3 load-use for p650mc will be 34 core cycles.","13/Jun/22 8:29 AM;5e137473cbf1830daa9cf1ab;[~accountid:5a938e9d8608e14f22ece174] and/or [~accountid:60305bf52a42cc0069a4397f], in the waveform in my previous comment, you can see {{tile/pl2_wrapper/pl2/auto_out_rd_valid}}, {{tile/pl2_wrapper/outer_totl/auto_out_a_valid}}, {{tile_clock_domain_buffer/auto_in_a_valid}} all assert on the “same” cycle. Same is true for signals coming back on D/DR-channel.

So conversion from CCL to TL and TL to CCL is happening in “zero” cycles. Does the conversion between CCL and TL stress timing and require {{tile_clock_domain_buffer}}? Or is {{tile_clock_domain_buffer}} required independent of the CCLToTL bridge?",13/Jun/22 8:56 AM;5a938e9d8608e14f22ece174;[~accountid:5e137473cbf1830daa9cf1ab] I don’t know anything about our CCL ↔︎ TL bridge and whether we’ve needed buffering on the outer side of the pL2. To my knowledge we always instantiate a rational crossing but your comment above is the first I’ve learned about any buffering between that and the pL2. [~accountid:5fc1b965d670b8006eda0fde] would know more,"14/Jun/22 11:04 AM;5e137473cbf1830daa9cf1ab;Many thanks, [~accountid:5a938e9d8608e14f22ece174]. I’ve now discussed with [~accountid:5fc1b965d670b8006eda0fde] and he also doesn’t know what {{tile_prci_domain/tile_clock_domain_buffer}} was added for.

Does *_anyone_* on this ticket know why {{tile_prci_domain/tile_clock_domain_buffer}} exists between pL2 and RationalCrossing for p650.json (and I presume for p550.json and mc variants of the jsons)? Is it _effectively_ part of the RationalCrossing?

If {{tile_prci_domain/tile_clock_domain_buffer}} isn’t actually needed, that would be a nice 2 core cycles savings for L3 and beyond latency to partially offset the 4 core cycles addition from this ticket.","14/Jun/22 2:09 PM;5e1371930242870e996efde2;[~accountid:5e137473cbf1830daa9cf1ab] It was always in 550/650.  For x280/p270, we ended up adding it because there was too much timing pressure between the PL2/core and the interface, particularly after they added the PL2 bypass.","21/Jun/22 6:29 AM;5fb59104d670b8006e7569d6;Hi [~accountid:5e137473cbf1830daa9cf1ab] [~accountid:5a938e9d8608e14f22ece174] 

Are we all in agreement to add the timing buffer for P550MC and P650MC configurations ?

Shall we merge the PR [https://github.com/sifive/federation/pull/22966|https://github.com/sifive/federation/pull/22966|smart-link]  ?","21/Jun/22 6:38 AM;5e137473cbf1830daa9cf1ab;Just highlighting portions of [~accountid:5e1371705361330daaeaf389]'s comment ([https://github.com/sifive/federation/pull/22966#issuecomment-1149259995|https://github.com/sifive/federation/pull/22966#issuecomment-1149259995]):

{quote}So just so everyone knows, this will be about a 1% hit to performance overall. \[context: for single-core SPECint06]
\[…]
If we HAVE to do this, how much slack will there be in those two core cycles each way? Is there any other logic we should squeeze into those hopefully-lightly-utilized cycles to ease other timing paths?{quote}","21/Jun/22 3:29 PM;5a938e9d8608e14f22ece174;[~accountid:60f1ea6c6491110069392f8f]  in your most recent comment on the GitHub thread you mention a [new, cleaner run|https://github.com/sifive/federation/pull/22966#issuecomment-1149275857]. Do you have results from that more recent PD run and if so is this path still a problem?","22/Jun/22 2:55 PM;60f1ea6c6491110069392f8f;Regrettably I have no real results.  The flow died during route_opt.  Timing is improved but still fails by ~400ps.  From route timing WNS generally continues to improve.



Path from: tile_prci_domain_1/tlMasterClockXing_sink/bundleOut_0_a_sink/deq_gated_q/elts_0_address_reg\[*]

       to: subsystem_l3_wrapper/ccacheGatedClockDomainWrapper/ccache/mods_2/abc_mshrs_8/s_acquire_reg

Slack:=  -0.0750  ( may recover 0.150 with tighter constraints )

Path from: subsystem_l3_wrapper/ccacheGatedClockDomainWrapper/ccache/mods_2/abc_mshrs_8/s_acquire_reg

       to: subsystem_l3_wrapper/ccacheGatedClockDomainWrapper/ccache/mods_2/bankedStore/cc_banks_1/cc_banks_0_ext/sram_0_0/CEB

Slack:=  -0.1110

Path from: subsystem_l3_wrapper/ccacheGatedClockDomainWrapper/ccache/mods_2/bankedStore/cc_banks_1/cc_banks_0_ext/sram_0_0/CLK

       to: subsystem_l3_wrapper/ccacheGatedClockDomainWrapper/ccache/mods_2/bankedStore/regout_r_1_reg\[32]

Slack:=  -0.1780

Path from: subsystem_l3_wrapper/ccacheGatedClockDomainWrapper/ccache/mods_2/bankedStore/regout_r_1_reg\[32]

       to: tile_prci_domain_1/tlMasterClockXing_sink/bundleIn_0_d_source/enq_q/elts_0_data_reg\[79]

Manhattan (X/Y): 1534.32/1201.12

Slack:=  -0.0973 ( unclear if push possible )


I’ve put more pressure on the Tile I/O flops and hope this continues to bring down the timing.  I’m still doubtful this will reach 2GHz/2.5GHz.
Also PD is slowly moving to MFC compiled RTL.  No idea of effect on these paths.","03/Sep/22 10:33 AM;5fb59104d670b8006e7569d6;Hi [~accountid:60f1ea6c6491110069392f8f] 

Panda is going to have EC cache with TL2 protocol interface which is completely different than existing TL1.

We need to re analyze the paths on new TL2 interface. In that case I don't see this as a valid issue for Panda. 

If you agree, we can close the ticket and make sure we put correct and required buffers in EC interface","03/Sep/22 11:34 AM;60f1ea6c6491110069392f8f;I have not been able to close timing on these paths.  If P550, post-rsink change pre-TL2 change, is going to any customers a flop is most likely required.  Recent customer feedback (Eswin) supports needing additional cycles.",07/Sep/22 3:13 PM;5e1371930242870e996efde2;[~accountid:5fb59104d670b8006e7569d6] [~accountid:60f1ea6c6491110069392f8f] I think it’s fine if we close this but the EC needs to take this into account.  It won’t be possible to hold this number of cycles to the EC and back.,"07/Sep/22 7:10 PM;5fb59104d670b8006e7569d6;[~accountid:60f1ea6c6491110069392f8f] , post RSINK change only used in Orca so no P550.

I agree with [~accountid:5e1371930242870e996efde2] , we can close this now but probably we should have a buffer in EC based implementation in between SBUS and L3","13/Sep/22 1:39 PM;5e137473cbf1830daa9cf1ab;Do we need these cycles for flopping signals at each cache bank/slice boundary if we’re using {{AsynchronousCrossing}}? E.g. do we need the {{p650mc.json}} changes from [https://github.com/sifive/federation/pull/22966|https://github.com/sifive/federation/pull/22966|smart-link] if we already have the {{AsynchronousCrossing}} added in {{p650mc.json}} from [https://github.com/sifive/federation/pull/25356|https://github.com/sifive/federation/pull/25356|smart-link]?

I think [~accountid:61fd7408f51e8500708a377d]'s P650 EC L3 load-use latency estimates with {{RationalCrossing}} already included these cycles for flopping signals at each cache bank/slice boundary. So the answer to the questions in my previous paragraph will impact the P650 EC L3 load-use latency estimates with {{AsynchronousCrossing}}.

For [https://sifive.atlassian.net/wiki/spaces/CIP/pages/2283044920/SPARTA-1874+Panda+P650+L3+latency+sensitivity|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2283044920/SPARTA-1874+Panda+P650+L3+latency+sensitivity|smart-link], I assumed these cycles for flopping signals at each cache bank/slice boundary _are indeed still there_ when {{AsynchronousCrossing}} is used.

I assume the answer for a ComposableCache-based P650 will likely apply to an EC-based P650.",,,,,,,,,,,,,,,,,,,,,Done
[TGV] cleanup VexPipe tag broadcast mechanism and assertions,,,,,,MAL-1937,115056,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/12/2022 18:37,7/12/2022 9:54,9/28/2022 0:51,6/7/2022 13:03,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"clean broadcast mechanism in {{VexPipe}} + add assertion to ensure there is at most one source trying to broadcast at any time (in {{VexPipe.scala)}}

_originally listed in_ [_MAL-1819_|https://sifive.atlassian.net/browse/MAL-1819]",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2019,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-07T13:02:57.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/8bcf0a094b81130ed95732c9c32abcb64f2e3da2,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzza5b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] add u8_3w_vector_2x128 configuration to test-tgv.yml test plan,,,,,,MAL-1936,115050,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/12/2022 15:54,6/15/2022 7:50,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/Top,Verification,,,,,,,,0,,,,The {{p572}}-like configuration {{u8_3w_vector_2x128}} should be added to TGV standard test plan for integration into automatic settings.,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1924,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1978,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1924,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzza4f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
disable hang catcher assertion with instTraceStall,disable hang catcher assertion,,,,,MAL-1935,114738,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Bandan Bhoi,6137eb8f7eb35f00692df12a,Bandan Bhoi,6137eb8f7eb35f00692df12a,5/9/2022 21:26,7/1/2022 13:03,9/28/2022 0:51,5/12/2022 14:31,mongoose.00.00,mongoose.01.00,mongoose.02.00,narwhal.00.00,narwhal.01.00,narwhal.02.00,narwhal.03.00,narwhal.04.00,,,,,RTL/Tile,Verification,,,,,,,,0,,,,"*Here MSHR entry valid hang counter is getting time out. If this counter is changed from 60000 to 70000 then test is passing. The errror is Error: ""/scratch/jenkins/archived-builds/fed/master/weekly-DIT-Mallard-coreip_mallard-test-weekly/15/builds/coreip_p650/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", 2483: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.mshrEntries_11.SiFive_MSHREntry_assert_0: at time 3698002500 ps*
*Assertion failed (verification library): MSHR Entry Valid Non-Reusable Hang @\[MSHR_Mallard.scala 4175:14]*

**Config*:*  coreip_p650.vcs

**Commit*:* 17c8596

*Regression* :  fed/master/weekly-DIT-Mallard/15

---------------------------------------------------------------------------------
*rerun.outline:*
\{noformat}

override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline(\[])
require 'json'
opts = <<'JSON'
\{
""name"": ""trace_encoder_bpWatch"",
""raw_plusargs"": \[
""+verbose"",
""+ts_toggle_cov""
],
""subdir"": ""14"",
""enable_postsim_py_check"": false,
""seed"": \{
""value"": 2908871469
},
""sim"": \{
""vendor"": ""vcs""
},
""program"": \{
""env"": ""abi"",
""reset_vector_scheme"": ""first_periph_sys_mem""
}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
\{noformat}
---------------------------------------------------------------------------------

*Link:* [https://simscope.internal.sifive.com/sigs/743/cjtjc8zta4aj|https://simscope.internal.sifive.com/sigs/743/cjtjc8zta4aj]

*Sting Test Name:* 14/trace_encoder_bpWatch

*Error:*
\{noformat}

Reset m_pl2_mmc_inner_agents  d9
Error: ""/scratch/jenkins/archived-builds/fed/master/weekly-DIT-Mallard-coreip_mallard-test-weekly/15/builds/coreip_p650/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", 2483: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.mshrEntries_11.SiFive_MSHREntry_assert_0: at time 3698002500 ps
Assertion failed (verification library): MSHR Entry Valid Non-Reusable Hang  @\[MSHR_Mallard.scala 4175:14]

Fatal: ""/scratch/jenkins/archived-builds/fed/master/weekly-DIT-Mallard-coreip_mallard-test-weekly/15/builds/coreip_p650/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", 2492: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.MSHRq.mshrEntries_11.SiFive_MSHREntry_assert_0: at time 3698002500 ps

$finish called from file ""/scratch/jenkins/archived-builds/fed/master/weekly-DIT-Mallard-coreip_mallard-test-weekly/15/builds/coreip_p650/verilog/design/assertions/SiFive_MSHREntry_assert.sv"", line 2492.

*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 739600 simulation cycles (in TestDriver.report_phase_actions)
_Verdi_ WARNING: fsdbDumpflush - The FSDB file has not been created.

_Verdi_ WARNING: fsdbDumpFinish - The FSDB file has not been created.
""/scratch/jenkins/archived-builds/fed/master/weekly-DIT-Mallard-coreip_mallard-test-weekly/15/vsrc/sim/common/../TestDriver.sv"", 520: TestDriver.assert_final_phase.final_error: started at 3698002500ps failed at 3698002500ps
Offending '(current_phase === shutdown_e)'

* *** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 739600 simulation cycles (in TestDriver.report_phase_actions)
\{noformat}",Bandan Bhoi,John Ingalls,Megan Wachs,,,,,,,,,,,,,6137eb8f7eb35f00692df12a,5bb6808b9ba2930990f81895,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-17T11:55:33.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,CAT-D,,Non-RTL,Simulation assertion.,Low,,P500,,LSU MSHR Hang Catcher can be triggered by instTrace.traceStall,Disable this assertion.,1. BRC: Should not Publish,,,,,,,,,,https://github.com/sifive/federation/pull/22457,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,100,,,No,,,,,,,,,,,,2|hzz8hz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,34:39.4,"11/May/22 7:30 PM;6137eb8f7eb35f00692df12a;Hi [~accountid:5bb6808b9ba2930990f81895]could you kindly look once into this issue?

 The dump path is 

bandanb@gamma27:/scratch/bandanb/mshrentry/federation/builds/coreip_p650/sim/sim/rerun.outline/14/trace_encoder_bpWatch$","12/May/22 2:34 PM;5bb6808b9ba2930990f81895;Thanks for bringing this to my attention [~accountid:6137eb8f7eb35f00692df12a].  This is a simulation-only assertion issue, where {{traceStall}} should also disable the hang catcher assertions, rather than us increasing the thresholds.","12/May/22 7:54 PM;6137eb8f7eb35f00692df12a;Thank you [~accountid:5bb6808b9ba2930990f81895] After this modification , now test is passing.",17/May/22 11:23 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;[~accountid:5bb6808b9ba2930990f81895] should there be backports opened to Mongoose for this? What versions of our generator does this affect?,"17/May/22 11:26 AM;5bb6808b9ba2930990f81895;* Narhwal: sure, I’ll open a back-port, since that’s fairly recent.
* Mongoose: would we back-port a CAT-D simulation-only tweak that far?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion firing in the VEX Pipe,[TGV] Assertion firing in the VEX Pipe,Execution Unit ,Vex pipe,,,MAL-1934,115035,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,5/12/2022 13:11,9/7/2022 17:43,9/28/2022 0:51,5/14/2022 10:29,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"We see the assertion firing on most of the sting tests.

{noformat}Error: ""/scratch/verif/srivatsa/zq_ta_spike/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", 446: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_0.SiFive_VexPipe_assert_0: at time 2712462500 ps
Assertion failed

    at VexPipe.scala:1177 assert(PopCount(outputs.map(o => o._1).asUInt) <= 1.U)


Fatal: ""/scratch/verif/srivatsa/zq_ta_spike/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", 455: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vex.exPipes_0.SiFive_VexPipe_assert_0: at time 2712462500 ps
$finish called from file ""/scratch/verif/srivatsa/zq_ta_spike/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", line 455.{noformat}



To recreate this failure : 

# clone federation and checkout the commit c93116b07d4cdbfe9887c7e33b72fe7ce9671632
# build coreip_u8_minimal_vector and run the simulation using the outline
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_stall_cycle_count=500000"",
    ""+cosim_scoreboard_trap_epc_count=30"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+pl2_randomBlockGlobalArbEnable=1"",
    """",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0105"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1812110952
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}



the waves are at {{gamma22:/scratch/verif/srivatsa/zq_ta_spike/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0105/sting/sifive/vector/vector_tgv_dev.conf}}",Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-14T10:29:10.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/22c0ccdeebd1da2785d3d03edcd7691fc3dc0c90,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzza1r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,32:46.8,12/May/22 1:11 PM;5a938e9c0913194d2d262658;cc [~accountid:5fd15143b4a74900763834e0] ,12/May/22 2:32 PM;6065017e90e3950069cf01c5;It looks like both the min/max unit and the divider are trying to commit a result at the same time.,"12/May/22 4:50 PM;6065017e90e3950069cf01c5;I think I managed to push that back to a cosim issue after an on-going fix: 

Failure was around 136’045 and test is now failing around 138’691



{noformat}           V C S   S i m u l a t i o n   R e p o r t
Time: 2853582500 ps
CPU Time:    364.910 seconds;       Data structure size:  33.1Mb
Thu May 12 14:57:59 2022
=== sitest found errors in test sim/MAL-1934.outline/sting_StingSiFiveTuple_T_0105/sting/sifive/vector/vector_tgv_dev.conf:
[CheckAndOverrideCSR][0] MSTATUS override: [138691] InstInfo: VLD=1 | PC=0x00000000442009d0 | INSN=0xcb0f6c57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r24=0x00000200000002000000020000000200 mask=ffff r25=0xffffffffffffb59fffffffffffffb59f mask=ffff | READY=1 | CSR_TIMER=138691 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080000400 | MCAUSE=0x000000000000000b | VSTART=0 | VL=0 | SEW=0 | LMUL=0 | VSEGELT=0
[COSIM-ERROR][0] COSIM VS RTL WRDATA MISMATCH
[DoCheck][0] m_dut_inst_item: [138691] InstInfo: VLD=1 | PC=0x00000000442009d0 | INSN=0xcb0f6c57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r24=0x00000200000002000000020000000200 mask=ffff r25=0xffffffffffffb59fffffffffffffb59f mask=ffff | READY=1 | CSR_TIMER=138691 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080000400 | MCAUSE=0x000000000000000b | VSTART=0 | VL=0 | SEW=0 | LMUL=0 | VSEGELT=0

[COSIM-ERROR][0] m_dut_inst_item: [138691] InstInfo: VLD=1 | PC=0x00000000442009d0 | INSN=0xcb0f6c57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r24=0x00000200000002000000020000000200 mask=ffff r25=0xffffffffffffb59fffffffffffffb59f mask=ffff | READY=1 | CSR_TIMER=138691 | PRV=3 | MSTATUS=0x8000000a00006680
| MTVEC=0x0000000080000400 | MCAUSE=0x000000000000000b | VSTART=0 | VL=0 | SEW=0 | LMUL=0 | VSEGELT=0
[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x00000000442009d0 | INSN=0xcb0f6c57 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r24=0x00000000ffffb59300000000ffffb59e mask=f3f3 r25=0xffffffffffffb59fffffffffffffb59f mask=ff13

[PutDutInstInfo][0]

sifive_test_results_pkg::report_status.unnamed$$_0@(t=2853583000): Test Result Checking Registered Name [TestDriver.testHarness.PL2Scb] Index ID [2] Done [0] Success [0] Exit Code [0]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=2853583000): FAILED: Test Result Registered Name [TestDriver.testHarness.cosim] Index ID [3] Done [1] Success [0] Exit Code [13107]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=2853583000): FAILED: Test Result Registered Name [TestDriver.testHarness.i_TF] Index ID [4] Done [1] Success [0] Exit Code [0]

sifive_test_results_pkg::report_status.unnamed$$_0@(t=2853583000): Test Result Checking Registered Name [TestDriver.testHarness.axi4MasterAgent.dpi] Index ID [5] Done [1] Success [1] Exit Code [21845]


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 570717 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 2,853,582,500 ps.

C                   0:     138690 vrf[25]=[00007fc00000000000007fc000000000][ffff]
Error: Instruction-by-Instruction check failed
C                   0:     138691 [1] pc=[00000000442009cc] W[r 2=0000000080c09e48][1] R[r 2=0000000080c09e40] R[r 0=0000000000000000] inst=[00810113] DASM(00810113)

C                   0:     142525 [1] pc=[000000002010067a] W[r10=0000000020100698][1] R[r10=0000000020100688] R[r 0=0000000000000000] inst=[00053503] DASM(00053503)
Error: Instruction-by-Instruction check failed


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 570717 simulation cycles (in TestDriver.report_phase_actions)
Error: simulation sim/MAL-1934.outline/sting_StingSiFiveTuple_T_0105/sting/sifive/vector/vector_tgv_dev.conf failed
Error: some simulations failed{noformat}","12/May/22 5:17 PM;5a938e9c0913194d2d262658;i took a look with [~accountid:6065017e90e3950069cf01c5] , seems like the new issue is same as [https://sifive.atlassian.net/browse/VI-7050|https://sifive.atlassian.net/browse/VI-7050|smart-link]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU assert: FP load destination PRN msb set,,,,,,MAL-1933,115029,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,5/12/2022 11:17,5/12/2022 13:38,9/28/2022 0:51,5/12/2022 11:21,,,,,,,,,,,,,RTL/LSU,Verification,,,,,,,,0,,,,[~accountid:600f59061959540115a2836d] found in the LSU Unit-Level TB that it is necessary for us to set {{destInfo.prIdx(msb)}} to 1 for floating-point loads to write the FEX PRF instead of the IEX PRF.  We should have this as an assertion in the design.,John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-05-31T17:14:43.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/22453,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzza0f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vfrec7.v producing wrong values,[TGV] vfrec7.v ,Execution Unit ,Vector,,,MAL-1932,115028,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,5/12/2022 11:16,9/7/2022 17:43,9/28/2022 0:51,5/18/2022 11:30,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"Similar to [https://sifive.atlassian.net/browse/MAL-1928|https://sifive.atlassian.net/browse/MAL-1928|smart-link] , i see another -reduction- reciprocal approximation operation instruction, producing wrong values in the RTL. 

{noformat}core   0: 0x0000000042060904 (0x4e929557) vfrec7.v v10, v9
core   0: 3 0x0000000042060904 (0x4e929557) e32 m1 l4 v10 0x4eff00007f8000006eff00007f800000

But in RTL i see the update to the reg
C0:     134440 vrf[10]=[4eff00007fff00006eff00007fff0000][ffff]{noformat}



to recreate this failure : 

# clone federation and checkout the commit c93116b07d4cdbfe9887c7e33b72fe7ce9671632
# build coreip_u8_minimal_vector and run the test using the outline 
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_stall_cycle_count=500000"",
    ""+cosim_scoreboard_trap_epc_count=30"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0244"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3093243289
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}



The waves are at {{gamma22:/scratch/verif/srivatsa/zq_ta_spike/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0244/sting/sifive/vector/vector_tgv_dev.conf}}",Kira Tsao,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1928,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,ca2716ddd23f3ee2c5443d74625b9308bc8a2bda,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzza07:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,15:06.3,"18/May/22 11:15 AM;5e1a4f5ec578120daca5ff8e;Verified with the [https://github.com/sifive/federation/pull/22546|https://github.com/sifive/federation/pull/22546|smart-link] , {{vfrec7}} having the correct results.

But for fully passed this test, we still need [https://github.com/sifive/federation/pull/22591|https://github.com/sifive/federation/pull/22591|smart-link] to fix ROB hang issue.

I’ve verified cherry-pick the [https://github.com/sifive/federation/pull/22591/commits/24d0781857653368cbd0762464bbd3ea00492e4b|https://github.com/sifive/federation/pull/22591/commits/24d0781857653368cbd0762464bbd3ea00492e4b|smart-link] can fix this issue successfully.",18/May/22 11:16 AM;5a938e9c0913194d2d262658;Awesome. That sounds great.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
IFU unit does not correctly identify call and return instructions,IFU unit,,,,,MAL-1931,115018,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Adam George,61b2a458657a0500706b9c39,Adam George,61b2a458657a0500706b9c39,Adam George,61b2a458657a0500706b9c39,5/12/2022 9:40,5/31/2022 11:29,9/28/2022 0:51,5/24/2022 23:23,,,,,,,,,,,Panda DR,,RTL/Frontend,,,,,,,,,0,,,,"According the to microarchitecture spec(mallard_mas.adoc), only specific JAR or JALR instructions should be considered call instructions by the return address stack.

{quote}When a JAL or JALR instruction with rd=x1/x5 is encountered, the link value (PC+2/4) is pushed onto the RAS. When a JALR instruction with rs1=x1/x5 is encountered, the value on the top of the stack is used as the predicted target, and the value is popped off the top of the stack{quote}

The RTL currently detects any odd register in the _rd_ field as indicating ‘link’. This allows any odd value of _rd_ to be decoded as a call. Additionally this will prevent decoding some cases of return instructions.

 

{code:scala}// RVI detection
...
val ijr     = x(6,0) === 0x67.U
val rd_ra   = x(7) // Detects all odd values for field rd
val iret    = ijr && !rd_ra && x(15) && (x(19,16) === BitPat(""b00?0""))
val ijump   = (x(6,0) & 0x7b.U) === 0x6b.U
val ilink   = (ijump | ijr) & rd_ra
...
info.call   := !rviOnly.B && clink    || ilink{code}",Adam George,Brian Grayson,Chia-I Chen,Dave Parry,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Megan Wachs,,,,,,,,61b2a458657a0500706b9c39,5e1371705361330daaeaf389,61aaafab977c5b007241043c,5cc37f384573b30ffbeb88b0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,a43adf4bf8c18087c391ec8101fe73412bda31c6,Yes,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,n/a,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-05-25T13:24:39.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,"This is a perf bug, with minuscule perf impact, as such wont be published. ",,,,,,,,,,,1. BRC: Should not Publish,,,,,,,,,,addcaa7294faae24d7895587f98b377977f79340,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz9xz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,21:32.9,"12/May/22 9:23 PM;61b2a458657a0500706b9c39;It looks like decode does the following(from MicroOp.scala):
{{  def call: Bool                          = (jal || jalr) && rd(0)
  def ret: Bool                           = jalr && rs1 === BitPat(""b00?01"") && !(rd(0) && rs1(2) === rd(2))}}

Fetch and decode should use the same expression otherwise the BRQ will send unexpected updates to the RAS module. The call seems to be the same but the return is different as fetch does not check if rs1 and rd are equivalent(only bits 0 and 2 for the MallardMicroOp class). ","16/May/22 9:53 PM;61b2a458657a0500706b9c39;Looks like updating the RTL to match the arch spec doesn’t significantly impact WNS but adds ~1% TNS.


{noformat}                8c0318c9    MAL-1931(1b563356)
WNS             
----------------------------------------------
OVERALL         -0.120      -0.123
REG2REG         -0.115      -0.123
CLK_GATING      -0.120      -0.123
FEEDTHROUGH     -0.028      -0.029
INPUT            0.000       0.0  
MEM2REG         -0.001      -0.003
OUTPUT          -0.074      -0.072
REG2MEM         -0.012      -0.016

TNS
----------------------------------------------
OVERALL         -3115.0     -3145.0                
REG2REG         -3007.0     -3042.0                
CLK_GATING        -72.0       -67.0                
FEEDTHROUGH        -2.0        -2.0                
INPUT               0.0         0.0                
MEM2REG            -0.0        -0.0                
OUTPUT            -33.0       -31.0                
REG2MEM            -1.0        -2.0   {noformat}",17/May/22 11:21 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;[~accountid:61b2a458657a0500706b9c39] when you say “According the to microarchitecture spec” do you mean “The RISC-V Instruction Set Manual”? Or are you referring to some internal spec?,17/May/22 11:22 AM;5cc37f384573b30ffbeb88b0;[~accountid:61b2a458657a0500706b9c39] is this a functional issue or just a performance one?,17/May/22 11:22 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;Also is this  a functionally observable issue or is this just performance?,"17/May/22 12:07 PM;61b2a458657a0500706b9c39;The microarchitecture spec referenced is mallard_mas.adoc in the arch-specs repository.

I don’t believe this is a functional issue, but depending on compiler output it may impact return address stack performance.","24/May/22 11:26 AM;5cc37f384573b30ffbeb88b0;[~accountid:61b2a458657a0500706b9c39] does this issue go all the way back to initial Mongoose release, or was it introduced by some more recent PR?

[~accountid:5acffeafaa802f2a797a955c] / [~accountid:61b2a458657a0500706b9c39]  is the performance impact of this issue significant enough that we should report this as an erratum in your opinion? From my perspective, this would be the case if either:

* The performance change in some standard benchmark that we report is more than 1-2%
* The bug exposes a glass-jaw such that _some_ workload could see a significant performance delta (>10%)","24/May/22 11:06 PM;61b2a458657a0500706b9c39;It appears the Mallard code is based on Bullet, which contains similar optimizations. 

The push/pop detection code has been there since the initial check-in in 2019:

{code:scala}    // RVI detection
    val ibranch = (x(6,0) & 0x77.U) === 0x63.U                                // really x(6,0) === 0x63, but 0x6b is reserved
    val ijr     = x(6,0) === 0x67.U
    val rd_ra   = x(7)
    val iret    = ijr && !rd_ra && x(15) && (x(19,16) === BitPat(""b00?0""))
    val ijump   = (x(6,0) & 0x7b.U) === 0x6b.U                                // really x(6,0) === 0x6f, but 0x6b is reserved
    val ilink   = (ijump | ijr) & rd_ra{code}


This will only have a perf impact if the compiler generates encodings which the non-compliant RTL interprets as return stack operations.  [~accountid:5d169476912da30c6347497f] has indicated the compiler will not emit such code:


{quote}`-msave-restore`* will use t0 as rd, and PLT* will us t1 as rd.
and indirect jump/function call will use any of general purpose register for rs1{quote}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Create benchmark_clockgate.outline for easier clock-gate performance difference analysis,,,,,,MAL-1930,114947,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brian Grayson,5e1371705361330daaeaf389,Brian Grayson,5e1371705361330daaeaf389,Brian Grayson,5e1371705361330daaeaf389,5/11/2022 20:03,5/12/2022 9:19,9/28/2022 0:51,5/12/2022 9:19,,,,,,,,,,,,,Verification,,,,,,,,,0,,,,"The new benchmark_clockgate.outline loops over many clock-gate modes for Mallard, adding in one new feature as it goes, and runs Dhrystone and CoreMark for a reduced number of iterations, putting all the results in different directories.

It does all its runs in +verbose mode, so that the logs are there for easier perusal.",Brian Grayson,,,,,,,,,,,,,,,5e1371705361330daaeaf389,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-12T09:18:55.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz9jz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Baler Issue Queue,,,,,,MAL-1929,114931,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,Warren Menezes,600773dcee80bd006f750bba,Warren Menezes,600773dcee80bd006f750bba,5/11/2022 16:19,6/1/2022 12:20,9/28/2022 0:51,5/26/2022 9:43,,,,,,,,,,,,,RTL/LSU,TGV_RTL/BAL,,,,,,,,0,,,,Generate the Baler Issue queue between Dispatch and the Baler,Warren Menezes,,,,,,,,,,,,,,,600773dcee80bd006f750bba,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-24T22:31:18.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz9gv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vfrsqrt7.v producing wrong values,[TGV] vfrsqrt7.v ,Execution Unit ,Vector ,,,MAL-1928,114925,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,5/11/2022 15:48,9/7/2022 17:43,9/28/2022 0:51,5/17/2022 8:43,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"I see the wrong value generated by RTL for the vector reg update, for some of the vector floating point arithmetic instructions {{vfrsqrt7.v}} and {{vfnmacc.vv}}

for {{vfrsqrt7.v}} cosim generates: 

{noformat}core   0: 0x000000008a3c0020 (0x4e921557) vfrsqrt7.v v10, v9
core   0: 3 0x000000008a3c0020 (0x4e921557) e32 m1 l4 v10 0x7f8000007fc00000303700007fc00000

But In RTL writes i see
C0:     136653 vrf[10]=[7f7f00007fc00000303700007fc00000][ffff]{noformat}



And for the {{vfnmacc.vv}} inst, cosim generates:

{noformat}core   0: 0x000000008a3c0028 (0xb6951657) vfnmacc.vv v12, v9, v10
core   0: 3 0x000000008a3c0028 (0xb6951657) e32 m1 l4 v12 0x7fc000007fc000006eb539257fc00000

But in RTL i see 
C0:     136660 vrf[12]=[7400097f7fc000006eb539257fc00000][ffff]{noformat}

I’m guessing this is because of the wrong value in v10 from the previous instruction. 



To recreate the failure: 

# clone federation and checkout 14ad780c66f62f1ee79184431e5e8fe8d2898294
# build coreip_u8_minimal_vector and run the test using the outline
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_stall_cycle_count=500000"",
    ""+cosim_scoreboard_trap_epc_count=30"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+pl2_randomBlockDirWrFifoEnable=1"",
    """",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0026"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1616109332
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}



The waves are at {{gamma22:/scratch/verif/srivatsa/zq_ta_spike/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0026/sting/sifive/vector/vector_tgv_dev.conf}}",Kira Tsao,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1932,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{repository={count=3, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":3,""lastUpdated"":""2022-05-31T20:33:28.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,ca2716ddd23f3ee2c5443d74625b9308bc8a2bda,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz9fz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,54:26.4,"11/May/22 3:54 PM;6065017e90e3950069cf01c5;This looks like a case when cosim is expecting an infinity and RTL is returning the largest value it can.

If the trace can be trusted, this may be an issue in the reciprocal module.

[~accountid:5e1a4f5ec578120daca5ff8e] as you implemented this operation can you take a look ?

This is another proof that we need a unit test / formal for this new module.","13/May/22 8:37 AM;5e1a4f5ec578120daca5ff8e;[~accountid:5a938e9c0913194d2d262658] , I’m not able to reproduce this issue. The simulation looks hang for a long time and got killed in the end. The command I did after check out the commit is:

{noformat}BUILD_DIR=builds ./generate-build coreip_u8_minimal_vector
make sim
create rerun.outline, content from this page
./sitest @rerun.outline -j4{noformat}

And I’ll get have this:

{noformat}kirat@gamma25:/scratch/kirat/nagoya/federation/builds/coreip_u8_minimal_vector/sim$ ./sitest @rerun.outline -j4
Loading module for ruby 2.7.2.
Running test sim/rerun.outline/sting_StingSiFiveTuple_T_0026/sting/sifive/vector/vector_tgv_dev.conf
=== sitest found errors in test sim/rerun.outline/sting_StingSiFiveTuple_T_0026/sting/sifive/vector/vector_tgv_dev.conf:
Error: never saw expected PASSED message
Error: subprocess vcs.sim. exited with signal 9 (KILL)
Error: simulation sim/rerun.outline/sting_StingSiFiveTuple_T_0026/sting/sifive/vector/vector_tgv_dev.conf failed
Error: some simulations failed{noformat}

Is there anything I missed?","13/May/22 10:01 AM;5a938e9c0913194d2d262658;ooh thts weird, i’ll take a look","13/May/22 10:59 AM;5a938e9c0913194d2d262658;Hi [~accountid:5e1a4f5ec578120daca5ff8e] , im able to reproduce on a fresh clone using the commit id provided above and the rerun.outline. ","13/May/22 11:03 AM;5e1a4f5ec578120daca5ff8e;Got it, let me try clone a fresh federation and try again.",16/May/22 2:53 PM;5e1a4f5ec578120daca5ff8e;PR that fixed this issue: [https://github.com/sifive/federation/pull/22546|https://github.com/sifive/federation/pull/22546|smart-link] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] enable and fix 4 sequencing lanes for P572 configuration,,,,,,MAL-1927,114924,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/11/2022 15:03,5/12/2022 15:54,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1924,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1924,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz9fr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/May/22 3:04 PM;6065017e90e3950069cf01c5;Logging target version as “Panda DR” because this is the furthest away, but as there is no official product req, this task may not be required before after Panda.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
add Zfhmin support to Mallard generator,,,,,,MAL-1926,114919,114915,Sub-task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Shaka Kao,5f94696c29bd8a006f94f0e1,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/11/2022 14:39,9/27/2022 19:53,9/28/2022 0:51,,,,,,,,,,,,,,RTL/FEX,,,,,,,,,0,,,,"* Implement {{Zfhmin}} support ISA / OM / JSON configuration 
* Implement proper configuration of LSU and FexPipe datapath when {{Zfhmin}} is enabled





From RISC-V Zfh and Zfhmin spec 

This extension enables:

* moves from integer RF to FPRF for half precision,
* conversions to/from any other supported FP format and half precision
* FP load and store for half precision

Excerpt of the spec ([https://drive.google.com/file/d/1z3tQQLm5ALsAD77PM0l0CHnapxWCeVzP/view?usp=sharing|https://drive.google.com/file/d/1z3tQQLm5ALsAD77PM0l0CHnapxWCeVzP/view?usp=sharing|smart-link] )

{quote}The Zfhmin extension includes the following instructions from the Zfh extension: FLH, FSH, FMV.X.H, FMV.H.X, FCVT.S.H, and FCVT.H.S. If the D extension is present, the FCVT.D.H and FCVT.H.D instructions are also included. If the Q{quote}

Support for conversion from/to Q format should not be necessary for Mallard.",John Ingalls,Josh Smith,Kira Tsao,Nicolas Brunie,Shaka Kao,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-8301,,,,,,,,MAL-1925,MAL-2606,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-26T22:57:10.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,,,,,,,,,,,,,,,,,,,2|hzz9en:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,37:17.1,"19/May/22 8:37 PM;5f94696c29bd8a006f94f0e1;# \[Done] Implement {{Zfhmin}} support ISA / OM / JSON configuration
## Add a JSON knob for Zfhmin: {{floatingPointHalfPrecisionMinimalPresent}}
### always open for naming decision 🙂 
## Enable FLH, FSH, FMV.X.H, FMV.H.X, FCVT\[.S.H/.H.S/.D.H/.H.D] for {{Zfhmin}}
## modify designJSON to test Zfh and Zfhmin in JSON/OM/DTS: {{u8_minimal.json}}
# \[Ongoing] Implement proper configuration of LSU and FexPipe datapath when {{Zfhmin}} is enabled
## {{Zfhmin}} verification (discuss with DV)
## \[TODO] Checking LSU/FexPipe modifications for {{Zfhmin}}



File modified:

{noformat}mallard/src/main/scala/config/TileMaker.scala
mallard/src/main/scala/diplomaticobjectmodel/model/mallard/OMMallardISA.scala
rocket-chip/src/main/scala/diplomaticobjectmodel/model/ISASpecifications.scala
rocket-chip/src/main/scala/diplomaticobjectmodel/model/OMISA.scala
rocket-chip/src/main/scala/tile/BaseTile.scala
rocket-chip/src/main/scala/tile/Core.scala
rocket-chip/src/main/scala/tile/FPU.scala
specs/design/spanning/u8_minimal.json
src/main/scala/api/json/UnitParams.scala
src/main/scala/core/bullet/MicroOp.scala{noformat}",01/Aug/22 3:28 PM;5acffeafaa802f2a797a955c;[~accountid:5f94696c29bd8a006f94f0e1] is there any update on this?,"01/Aug/22 4:12 PM;5f94696c29bd8a006f94f0e1;Hi [~accountid:5acffeafaa802f2a797a955c], currently no new progress for this task.

Switch to TGV previously, and might switch back to this task next week. I will discuss the task priority with Nicolas.","01/Aug/22 4:22 PM;5acffeafaa802f2a797a955c;TGV is the higher priority, I just don’t want to forget about this task until the day before RTL freeze for Panda.  If the amount of effort for this ticket is low, can we try to make some progress on this?","02/Aug/22 12:14 AM;6065017e90e3950069cf01c5;To be honest, I have factored in this ticket into TGV VEX/MU schedule as it seems critical.","09/Aug/22 1:51 AM;5f94696c29bd8a006f94f0e1;PR under review.

Thanks for [~accountid:6065017e90e3950069cf01c5]'s suggestion, and I copy/paste the comments here as the TODO items.



\[ ] Test P550

\[ ] Test P650

\[ ] Test new u8_minimal_zfhmin

\[ ] Check for the above configurations that their Verilog has half-precision load/store/moves/convert but no half-precision ALU hardware

\[ ] Check for the later RAT/STING generate half-precision load/store/moves/convert instructions","25/Sep/22 3:38 PM;6065017e90e3950069cf01c5;for the latest PR I am seeing some sting and rat failures which seems unrelated to the modification. Under investigation.

See [https://sifive.atlassian.net/wiki/spaces/~298351870/pages/2372501848/Zfhmin+validation|https://sifive.atlassian.net/wiki/spaces/~298351870/pages/2372501848/Zfhmin+validation|smart-link]","25/Sep/22 11:52 PM;5f94696c29bd8a006f94f0e1;We also run the Sting tests on different configs/branches.

Failed occurred even on the {{master}} branch for {{u8_minimal}}, {{p550}}, and {{p650}}

h3. 1) coreip_u8_minimal (master)

Encounter the same failed bucket ({{Instruction queue oldest entry stalled}})

git hash: {{94dfe64cd33 2022-09-26 Jimmy Hung (HEAD -> master, origin/master, origin/HEAD)}}

*Triage for u8_minimal; STING#20; git branch: master*

{noformat}|                                                                            name   |            config   |   bucket |
|-----------------------------------------------------------------------------------|---------------------|----------|
| sim/sting.outline/sting_StingTopMoreTuple_T_0041/sting/valtrix/more_fences.conf   | coreip_u8_minimal   |   1      |


  Bucket  Failure                                          Count
--------  ---------------------------------------------  -------
       1  Error: Instruction queue oldest entry stalled        1

Summary:
      |   Total Verilog Compiles |   Total Verilog Sims |   Incomplete/Skipped |   Build Fails |   Sim Failures |   Total Failed
------+--------------------------+----------------------+----------------------+---------------+----------------+----------------
 Jobs |                        1 |                   20 |                    0 |             0 |              1 |              1{noformat}



h3. 2) p550 (master)

Encounter the same failed bucket ({{Instruction queue oldest entry stalled}})

git hash: {{9c2839b4da0 2022-09-26 Hsinyi Lee (HEAD -> p550, origin/master, origin/HEAD, master)}}

*Triage for p550; STING#20; git branch: master*

{noformat}|                                                                                                                            name   |      config   |   bucket |
|-----------------------------------------------------------------------------------------------------------------------------------|---------------|----------|
| sting1/sting.outline/sting_StingFpOpsTuple_T_0445/sting/valtrix/fp_ops_frm_rmm.conf                                               | coreip_p550   |   1      |
| sting1/sting.outline/sting_StingPipelineTuple_T_0014/sting/valtrix/algorithms/pipeline/sfp_threereg_compute_to_mov_x2f_dep.conf   | coreip_p550   |   1      |
| sting1/sting.outline/sting_StingFpOpsTuple_T_0102/sting/valtrix/fp_ops_fpv_poszero.conf                                           | coreip_p550   |   2      |


  Bucket  Failure                                                                 Count
--------  --------------------------------------------------------------------  -------
       1  Error: Instruction queue oldest entry stalled                               2
       2  Error: Test Ended but Instructions still present in Cosim Scoreboard        1

Summary:
      |   Total Verilog Compiles |   Total Verilog Sims |   Incomplete/Skipped |   Build Fails |   Sim Failures |   Total Failed
------+--------------------------+----------------------+----------------------+---------------+----------------+----------------
 Jobs |                        1 |                   20 |                    0 |             0 |              3 |              3{noformat}



h3. 3) p650 (master)

Encounter the same failed bucket ({{Instruction queue oldest entry stalled}})

git hash: {{9c2839b4da0 2022-09-26 Hsinyi Lee (HEAD -> p650_regr, origin/master, origin/HEAD, master)}}

*Triage for p650; STING#30; git branch: master*

{noformat}  Bucket  Failure                                                                 Count
--------  --------------------------------------------------------------------  -------
       1  Error: Instruction queue oldest entry stalled                              14
       2  Error: Test Ended but Instructions still present in Cosim Scoreboard        6
       3  Test Timelimit EXCEEDED                                                     2
       4  FAILED: Test Result Registered Name TestDriver.testHarness.i_TF             1

Summary:
      |   Total Verilog Compiles |   Total Verilog Sims |   Incomplete/Skipped |   Build Fails |   Sim Failures |   Total Failed
------+--------------------------+----------------------+----------------------+---------------+----------------+----------------
 Jobs |                        1 |                   30 |                    0 |             0 |             23 |             23

|                                                                                                                           name   |      config   |   bucket |
|----------------------------------------------------------------------------------------------------------------------------------|---------------|----------|
| sting1/sting.outline/sting_StingInstMemTuple_T_0007/sting/valtrix/algorithms/branches/branch_backward.conf                       | coreip_p650   |   1      |
| sting1/sting.outline/sting_StingInstMemTuple_T_0084/sting/valtrix/algorithms/coderdwr/smc_v2.conf                                | coreip_p650   |   1      |
| sting1/sting.outline/sting_StingISATuple_T_0021/sting/valtrix/rv32b/more_fp_ldst_crc32c.h.conf                                   | coreip_p650   |   1      |
| sting1/sting.outline/sting_StingMemorySubsystemTuple_T_0173/sting/valtrix/algorithms/atomics/atomic_ops.conf                     | coreip_p650   |   1      |
| sting1/sting.outline/sting_StingMiscTuple_T_0007/sting/valtrix/algorithms/misc/stack_mngmnt_ops.conf                             | coreip_p650   |   1      |
| sting1/sting.outline/sting_StingPipelineTuple_T_0059/sting/valtrix/algorithms/pipeline/dfp_mov_x2f_to_conv_f2x_dep.conf          | coreip_p650   |   1      |
| sting1/sting.outline/sting_StingPipelineTuple_T_0258/sting/valtrix/algorithms/pipeline/csrreg_to_csrreg_dep.conf                 | coreip_p650   |   1      |
| sting1/sting.outline/sting_StingPipelineTuple_T_0293/sting/valtrix/algorithms/pipeline/jal_to_itype_dep.conf                     | coreip_p650   |   1      |
| sting1/sting.outline/sting_StingTopMoreTuple_T_0025/sting/valtrix/more_c_fp_ldst.conf                                            | coreip_p650   |   1      |
| sting1/sting.outline/sting_StingTuple_T_0214/sting/valtrix/regress_base                                                          | coreip_p650   |   1      |
| sting1/sting.outline/sting_StingVMTuple_T_0066/sting/valtrix/supervisor/page_flt_misformed_va.conf                               | coreip_p650   |   1      |
| sting1/sting.outline/sting_StingVMTuple_T_0114/sting/valtrix/supervisor/rand_pte_rsw.conf                                        | coreip_p650   |   1      |
| sting1/sting.outline/sting_StingVMTuple_T_0219/sting/valtrix/supervisor/load_page_flt_rd_xgyxywyrxu.conf                         | coreip_p650   |   1      |
| sting1/sting.outline/sting_StingVMTuple_T_0448/sting/valtrix/supervisor/storeamo_page_flt_amo_xgxxnwnr.conf                      | coreip_p650   |   1      |
| sting1/sting.outline/sting_StingCSRTuple_T_0009/sting/valtrix/csrs/hypervisor/vsatp/vsatp_uacc_illegal.conf                      | coreip_p650   |   2      |
| sting1/sting.outline/sting_StingCSRTuple_T_0045/sting/valtrix/csrs/machine/mstatus/mstatus_clear_sie.conf                        | coreip_p650   |   2      |
| sting1/sting.outline/sting_StingFpOpsTuple_T_0115/sting/valtrix/fp_ops_fpv_possubn.conf                                          | coreip_p650   |   2      |
| sting1/sting.outline/sting_StingFpOpsTuple_T_0118/sting/valtrix/fp_ops_fpv_possubn.conf                                          | coreip_p650   |   2      |
| sting1/sting.outline/sting_StingMiscTuple_T_0047/sting/valtrix/algorithms/misc/stack_mngmnt_ops.conf                             | coreip_p650   |   2      |
| sting1/sting.outline/sting_StingTuple_T_0271/sting/valtrix/regress_base                                                          | coreip_p650   |   2      |
| sting1/sting.outline/sting_StingCSRTuple_T_0083/sting/valtrix/csrs/machine/mepc/mepc_macc_before_excp.conf                       | coreip_p650   |   3      |
| sting1/sting.outline/sting_StingPipelineTuple_T_0002/sting/valtrix/algorithms/pipeline/dfp_conv_f2x_to_tworeg_compute_dep.conf   | coreip_p650   |   3      |
| sting1/sting.outline/sting_StingTuple_T_0047/sting/valtrix/regress_base                                                          | coreip_p650   |   4      |{noformat}



h3. 4) coreip_u8_minimal (Zfhmin development branch)

Use {{MAL-1926_mallard-zfhmin-support}} branch (with h/w modifications for Zfhmin), and build {{coreip_u8_minimal}}

Note: Has rebased to master ({{3de8437ca5b 2022-09-26 vithursons (origin/master, origin/HEAD, master) [EFT-474] Implement RAS modules and diplomatic nodes (#25915)}})

*Triage for u8_minimal; STING#20; git branch: MAL-1926_mallard-zfhmin-support-StingModified*

{noformat}|                                                                               name   |            config   |   bucket |
|--------------------------------------------------------------------------------------|---------------------|----------|
| sting1/sting.outline/sting_StingTopMoreTuple_T_0041/sting/valtrix/more_fences.conf   | coreip_u8_minimal   |   1      |


  Bucket  Failure                                          Count
--------  ---------------------------------------------  -------
       1  Error: Instruction queue oldest entry stalled        1

Summary:
      |   Total Verilog Compiles |   Total Verilog Sims |   Incomplete/Skipped |   Build Fails |   Sim Failures |   Total Failed
------+--------------------------+----------------------+----------------------+---------------+----------------+----------------
 Jobs |                        1 |                   20 |                    0 |             0 |              1 |              1{noformat}



h3. 5) coreip_u8_minimal_zfhmin (Zfhmin development branch)

Use {{MAL-1926_mallard-zfhmin-support}} branch (with h/w modifications for Zfhmin), and build {{coreip_u8_minimal_zfhmin}}

*Triage for u8_minimal_zfhmin; STING#20; git branch: MAL-1926_mallard-zfhmin-support-StingModified*

{noformat}|                                                                                name   |                   config   |   bucket |
|---------------------------------------------------------------------------------------|----------------------------|----------|
| sting1/sting.outline/sting_StingFpOpsTuple_T_0393/sting/valtrix/fp_ops_frm_rne.conf   | coreip_u8_minimal_zfhmin   |   1      |
| sting1/sting.outline/sting_StingTuple_T_0047/sting/valtrix/regress_base               | coreip_u8_minimal_zfhmin   |   2      |


  Bucket  Failure                                                                 Count
--------  --------------------------------------------------------------------  -------
       1  Error: Instruction queue oldest entry stalled                               1
       2  Error: Test Ended but Instructions still present in Cosim Scoreboard        1

Summary:
      |   Total Verilog Compiles |   Total Verilog Sims |   Incomplete/Skipped |   Build Fails |   Sim Failures |   Total Failed
------+--------------------------+----------------------+----------------------+---------------+----------------+----------------
 Jobs |                        1 |                   20 |                    0 |             0 |              2 |              2{noformat}","26/Sep/22 7:44 AM;6065017e90e3950069cf01c5;[~accountid:5f94696c29bd8a006f94f0e1] , thank you for the run, {{| sting1/sting.outline/sting_StingFpOpsTuple_T_0393/sting/valtrix/fp_ops_frm_rne.conf}}` failure on {{coreip_u8_minimal_zfhmin}} looks a bit suspicious.","27/Sep/22 7:47 PM;5f94696c29bd8a006f94f0e1;[~accountid:6065017e90e3950069cf01c5] we rerun the test on P550/P650 over {{master}} branch and also encounter simulation failure due to

{{[MMC_ERROR]: [receiveMemTrans] AMO was illegal}}

After checking with DV, it’s a known issue: [https://sifive.atlassian.net/browse/VI-6657|https://sifive.atlassian.net/browse/VI-6657|smart-link]","27/Sep/22 7:53 PM;6065017e90e3950069cf01c5;Thank you for checking this [~accountid:5f94696c29bd8a006f94f0e1] . The issue dates back from May, and does not seem to have seen much change.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,114915,Enable zfhmin support in P650,In Progress
Enable zfhmin support in P650,,,,,,MAL-1925,114915,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/11/2022 13:59,9/21/2022 10:58,9/28/2022 0:51,,,,,,,,,,,,,,RTL/FEX,,,,,,,,,0,,,,"RISC-V Zfhmin extension (load/store/conversion to/from half precision) may be a requirement for P650 (as part of RVIA (TBD?) profile).

* Check if this extension is supported => ⚠️  NO
** we only have {{floatingPointHalfPrecisionPresent}}
* *TODO:* Implement it + ISA / OM / JSON configuration: [https://sifive.atlassian.net/browse/MAL-1925|https://sifive.atlassian.net/browse/MAL-1925|smart-link] ",Erdinc Ozturk,Josh Smith,Kira Tsao,Nicolas Brunie,Shaka Kao,,,,,,,,,,,61ccb01d90cfd20071b96af2,5acffeafaa802f2a797a955c,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1926,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz9dz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,17:49.4,01/Aug/22 1:17 PM;5acffeafaa802f2a797a955c;Do we still need to do anything for this?,"01/Aug/22 1:45 PM;6065017e90e3950069cf01c5;Yes, sub-task has not been completed (and not merged in yet).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] post phase 1 design tasks related to execution pipeline,,,,,,MAL-1924,114879,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/11/2022 9:07,6/15/2022 9:18,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1927,MAL-1936,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,ghx-label-9,,[TGV] post phase 1 design tasks related to execution pipelines,To Do,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,,,,orange,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz97b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Enable cross issue for VEX Pipes,,,,,,MAL-1923,114769,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,5/10/2022 9:41,8/5/2022 7:15,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/ISS,TGV_RTL/VEX,,,,,,,,0,,,,"The modeling team found a nice improvement in {{libquantum}} when cross-issue is enabled. The only negative outliers were due to LSU flushes, which is a more global problem, and shouldn’t affect this decision.

Need to enable this in the various JSON configurations and run the various outlines plus some Sting tests to make sure nothing is broken.",Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Knute Lingaard,,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1374fb7a22c90da0c60495,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz8of:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,43:15.0,10/May/22 11:43 AM;5e1374fb7a22c90da0c60495;Performance analysis shows up to 57% uplift in {{libquantum}} LMUL=1 with cross issue enabled.  ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
LsIssQ timing: multiple pick to PRF read,,,,,,MAL-1922,114757,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Warren Menezes,600773dcee80bd006f750bba,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/10/2022 7:14,7/21/2022 7:57,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/LSU,,,,,,,,0,,,,"Startpoint: tile/core/lsu/lsIssQ/entries_6/ready_q_reg/CP 
Endpoint:  tile/core/iex/prf/readData_9_bankReadData_r_entIdx_2_reg\[4]/D
*Slack:            -0.0675*
Skew:               0.0473
Stages:                   27
BufINVs:                   8
Manhattan (X/Y):  306.115/146.66
Corner:                  func_0p675v_0c_cworst_CCworst

Path in red:


!image-20220510-141400.png|width=625,height=634!

See: /project/tsmc/cln7ff/P5_ppa_runs/michaelw/P650/timing_reports/MAL-1922",Cody Croxton,Edward Brekelbaum,John Ingalls,Josh Smith,Michael White,Tom Mickelson,,,,,,,,,,5e1371930242870e996efde2,5e1372d362aed90daa48f7b1,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1921,,,,,,,,,,,10/May/22 7:14 AM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220510-141400.png;https://sifive.atlassian.net/secure/attachment/71699/image-20220510-141400.png,10/May/22 10:41 AM;jsmith;mal-1922.txt;https://sifive.atlassian.net/secure/attachment/71712/mal-1922.txt,,,,,,,,,,,,,,,77aabeb8a204ea1e5d078532c5089dae36b2245d,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz8lr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,25:35.7,"22/May/22 2:25 PM;5acffeafaa802f2a797a955c;This path is bad because the LS Issue Queue will pick the oldest ready entry, mask that out, and then pick the second oldest ready entry.  I think the way we should fix this is by banking the issue queue.  Such that the first issue port can only pick from even numbered entries, and the second issue port can only pick from odd-numbered entries.  

I think [~accountid:5e1372d362aed90daa48f7b1] did some modeling of this, but probably for Healdsburg and not P650.  I’m not sure what the performance impact would be.","27/May/22 5:49 AM;5e1372d362aed90daa48f7b1;Sorry for the delay, it is [https://sifive.atlassian.net/browse/SPARTA-1831|https://sifive.atlassian.net/browse/SPARTA-1831|smart-link]. I should have data by Tuesday.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
P650 Timing IEX: From prf/prfReg_121_reg[16] To exPipes_3/instSrcs_EX_0_reg[16],,,,,,MAL-1921,114756,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Julian Bailey,629ab2a89bc7150068d00cdf,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/10/2022 7:05,9/8/2022 8:52,9/28/2022 0:51,9/8/2022 8:52,,,,,,,,,,,,,RTL/IEX,Timing,,,,,,,,0,,,,"Startpoint: tile/core/iex/prf/prfReg_121_reg\[16]/CP
Endpoint:  tile/core/iex/exPipes_3/instSrcs_EX_0_reg\[16]/D
*Slack:           -0.0813*
Skew:              0.1173
Stages:                  17
BufINVs:                  6
Manhattan (X/Y): 357.297/460.12
Corner:                 func_0p675v_0c_cworst_CCworst 

Path in red:


!image-20220510-140534.png|width=626,height=641!

See: /project/tsmc/cln7ff/P5_ppa_runs/michaelw/P650/timing_reports/MAL-1921",Cody Croxton,Josh Smith,Julian Bailey,Michael Ruff,Michael White,Tom Mickelson,,,,,,,,,,5e1371930242870e996efde2,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,623cfe9501f8660070b78884,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2190,,,,MAL-1922,,,,,,,10/May/22 7:05 AM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220510-140534.png;https://sifive.atlassian.net/secure/attachment/71697/image-20220510-140534.png,10/May/22 10:44 AM;jsmith;mal-1921.txt;https://sifive.atlassian.net/secure/attachment/71713/mal-1921.txt,,,,,,,,,,,,,,,77aabeb8a204ea1e5d078532c5089dae36b2245d,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=DECLINED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-09T00:34:34.000-0700"",""stateCount"":1,""state"":""DECLINED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,100,,,,,,,,,,,,,,,2|hzz8lj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,24:20.7,23/May/22 11:24 AM;5acffeafaa802f2a797a955c;[~accountid:5e137757f65a6b0e9bf1636f] seemed to get better QOR by hacking the PRF to use the mux4 cells.  We should probably try to see if we can alter the design to get the tool to use those cells.  Or use something like verilog blackboxes like we do with the ICG cells.,"24/Jun/22 2:57 PM;5acffeafaa802f2a797a955c;[~accountid:623cfe9501f8660070b78884] This is the ticket we had open for the Mallard PRF read mux optimizations.  Since you seem to be tracking the MFC work that’s going on, can you update this ticket with the outcome of that stuff?",08/Jul/22 1:31 PM;5acffeafaa802f2a797a955c;[~accountid:617c6593f485cd0068e692ce] indicated that the MFC work should be done by next Friday’s release. So we can look at this again after that.,"13/Jul/22 1:15 PM;623cfe9501f8660070b78884;The MUX inference feature has landed in CIRCT, now just waiting for the release… [https://sifive.atlassian.net/browse/PEHD-845|https://sifive.atlassian.net/browse/PEHD-845|smart-link] ",01/Aug/22 12:21 PM;5acffeafaa802f2a797a955c;I’m linking the [https://sifive.atlassian.net/browse/MAL-2190|https://sifive.atlassian.net/browse/MAL-2190|smart-link] ticket because a lot of work related to this ticket is happening there.,01/Aug/22 12:46 PM;5acffeafaa802f2a797a955c;Re-assigning to [~accountid:629ab2a89bc7150068d00cdf] because he took over [https://sifive.atlassian.net/browse/MAL-2190|https://sifive.atlassian.net/browse/MAL-2190|smart-link] as well.,"23/Aug/22 3:40 AM;629ab2a89bc7150068d00cdf;Just waiting for [https://sifive.atlassian.net/browse/MAL-2190|https://sifive.atlassian.net/browse/MAL-2190|smart-link] PR to complete, I will then cut a branch and we can make the configuration change for the P650 & P670 so you can try ou the same changes on these cores.



Julian","24/Aug/22 1:11 PM;629ab2a89bc7150068d00cdf;I have created a branch: MAL-1921_P650_IEX_Timing

This includes a config change for the P650 which enables banking of the PRF registers in the IEX and FEX. We also have the ability to break the PRF registers into more then 4 banks if you wish (needs to be a power of 2) by the configuration switches iexPrfBanks and fexPrfBanks.

The commit hash on the branch is: 8a829e7dc9c9674ee5f482785385b214b1dccda2

We believe these changes will help resolve your timing issues, partly as you can place bounds around the registerfile banks if you wish.



Julian","08/Sep/22 12:54 AM;629ab2a89bc7150068d00cdf;[~accountid:60f1ea6c6491110069392f8f] have you managed to take a look at this at all?

The new prfBanking mechnism is enabled int he configuration JSON using:

{noformat} ""useChiselExplicitBankedPRF"": true{noformat}

Further to this the number of Prf banks can be tuned using these config parameters in the JSON:

{noformat}""iexPrfBanks"": 4
""fexPrfBanks"": 4{noformat}

The *iexPrfBanks*  & *fexPrfBanks* must be a power of 2, and should be greater than 4, for Healdsburg the implementation team used 16 so the routing between registers and PRF outputs was shorter…
As the number of banks defaults to 4, you will not see these two config params int he json yet…","08/Sep/22 8:20 AM;60f1ea6c6491110069392f8f;Sorry, I missed that this was a request for me to run P650.  Tom’s latest run with RTL from 09/02 is not reporting any issue with PRF read.  The closest path is meeting timing by 1ps between:

   Startpoint: (R) tile/core/iex/prf/readData_7_prfBankMux/entryIndex_reg\[1]/CP

   Endpoint: (R) tile/core/iex/exPipes_3/instSrcs_EX_1_reg\[0]/D

See: /project/tsmc/cln5ff/tomm/p650/p650_tile_220902/iter1/pnr/signoffopt/rpts/SiFive_TilePRCIDomain_func.tt-0p750v-85c.typical_detailed.late



Do we still wish to test this branch?",08/Sep/22 8:30 AM;60f1ea6c6491110069392f8f;[~accountid:5e137757f65a6b0e9bf1636f] Is the path I included below at -2ps in your tempus data?,"08/Sep/22 8:32 AM;629ab2a89bc7150068d00cdf;[~accountid:60f1ea6c6491110069392f8f] It is up to you, if you are happy with how things are then you can leave things as they are. If in the future you are seeing paths around the PRF (IEX or FEX) then we can enable this and you guys can try again.

The options were added for Healdsburg and can be used for P650 if required…","08/Sep/22 8:42 AM;5e137757f65a6b0e9bf1636f;Yes, this path is at -2ps in the latest P650 N5 run",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650 Timing: IEX From issueQueues ready_reg To issueQueues ready_reg/crossReady_reg,,,,,,MAL-1919,114752,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/10/2022 6:26,6/7/2022 10:40,9/28/2022 0:51,5/24/2022 15:54,,,,,,,,,,,,,Implementation,RTL/IEX,,,,,,,,0,,,,"Startpoint: tile/core/iex/issueQueues_1/entries_5/ready_reg/CP 
Endpoint:  tile/core/iex/issueQueues_2/entries_0/ready_reg/D
*Slack:             -0.0837*
Skew:                0.0346
Stages:                    31
BufINVs:                    6
Manhattan (X/Y):  226.965/84.98
Corner:                  func_0p675v_0c_cworst_CCworst 



Path in red:


!image-20220510-132601.png|width=621,height=633!

See: /project/tsmc/cln7ff/P5_ppa_runs/michaelw/P650/timing_reports/MAL-1919",Cody Croxton,John Ingalls,Josh Smith,Michael White,Tom Mickelson,,,,,,,,,,,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1914,,,,,,,,,,,10/May/22 6:26 AM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220510-132601.png;https://sifive.atlassian.net/secure/attachment/71696/image-20220510-132601.png,10/May/22 10:45 AM;jsmith;mal-1919.txt;https://sifive.atlassian.net/secure/attachment/71714/mal-1919.txt,,,,,,,,,,,,,,,77aabeb8a204ea1e5d078532c5089dae36b2245d,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-24T15:53:32.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,361aaa89510bf3c38a51610037c028e01faf2e9f,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz8kv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,06:49.6,"22/May/22 7:06 PM;5acffeafaa802f2a797a955c;I think there are a few things we can try here:

# Generally the most critical information coming out of the picker is the destination PR tag.  We can duplicate the {{ready}} bits in the issue queue entry, and drive the destination information from the duplicated flops so there’s less buffering.
# Inline the picker submodule so that the design hierarchy doesn’t prevent the tool from optimizing the logic
# For P650 (or any configuration with a power-of-two number of issue queue entries), there is essentially the 16:1 age-ordered picker, then a 2:1 mux with the injected instruction, then a 2:1 mux with the incomin cross-issued instruction.  We should probably mux between the injected and cross-issued instruction first, then have a final 2:1 mux with the 16:1 result.",24/May/22 3:54 PM;5acffeafaa802f2a797a955c;[~accountid:60f1ea6c6491110069392f8f] I made the three changes that I mentioned above.  I'm hoping this can save the equivalent of a few gates.,24/May/22 4:01 PM;60f1ea6c6491110069392f8f;[~accountid:5acffeafaa802f2a797a955c] Is this going to master or testable on branch?,24/May/22 4:07 PM;5acffeafaa802f2a797a955c;[~accountid:60f1ea6c6491110069392f8f] This went onto master.  I think the only change that _might_ end up being worse (but I kind of doubt it) is the 3rd thing I mentioned.,"07/Jun/22 10:40 AM;60f1ea6c6491110069392f8f;Run tomm_iter_220523_S21 has this path at:

SHA: c17f5bc5e0e772ce34bd45950e0cfd8c5cde8803

Startpoint :            tile/core/iex/issueQueues_1/entries_15/ready_reg/CP 
Endpoint:              tile/core/iex/issueQueues_0/entries_8/ready_reg/D
*Slack:                       -0.0135 ( @526 ps)*
Skew:                        0.0412
Stages:                   29
BufInvs:                    5
Manhattan (X/Y):  140.865/132.04
Corner:                  func_0p675v_0c_cworst_CCworst 

We should get another run at full frequency soon.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: SiFive_FEU_assert,Assertion Failure: SiFive_FEU_assert,,,,,MAL-1918,114749,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Josh Smith,5acffeafaa802f2a797a955c,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,5/10/2022 3:46,6/17/2022 14:31,9/28/2022 0:51,5/11/2022 17:26,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,,,,"The assertion is getting fired up from FEU block .

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_83_assertion_ifu/federation/builds2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_FEU_assert.sv"", 160: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.SiFive_FEU_assert_0: at time 909962500 ps
Assertion failed (verification library): IFU Flush Request Livelock  @[Core.scala 738:16]{noformat}

*SHA*:[+b3cc34f+|https://simscope.internal.sifive.com/models/undefined--master--b3cc34fc0de5027a235b9117ee90c4e11013b1b5]

*config*:coreip_u8_minimal_vector

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rv64ua-amomaxu_w"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+memzero""
  ],
  ""subdir"": ""vs-mode-g1-vs0-hart0"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3751085850
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""v"",
    ""cppmacros"": [
      ""ENABLE_HYPERVISOR_CHANGES=1"",
      ""TEST_STARTUP_PRV=1"",
      ""TEST_STARTUP_V=1"",
      ""ENABLE_GSTAGE_TRANSLATION=1"",
      ""ENABLE_VSSTAGE_TRANSLATION=0""
    ]
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Dumppath:

{{gamma25:/scratch/ishitashah/tgv_regression/sign_83_assertion_ifu/federation/builds2/coreip_u8_minimal_vector/sim/rerundir1/rerun.outline/vs-mode-g1-vs0-hart0/rv64ua-amomaxu_w}}",Ishita Shah,Josh Smith,Srivatsa Yogendra,,,,,,,,,,,,,607e26355431a500701f5aed,5acffeafaa802f2a797a955c,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1899,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz8k7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,09:40.1,"10/May/22 10:09 AM;5acffeafaa802f2a797a955c;The core encounters a fetch guest page fault at PC 0x502, and then traps to the exception vector at 0x3ff_ffe0_064c.  Then we get a fetch page fault at that address and keep trapping to 0x3ff_ffe0_064c.  I’m not sure what the test is supposed to be doing, but it seems like maybe the software wasn’t initialized properly.","11/May/22 5:25 PM;5a938e9c0913194d2d262658;I see whats happening, [~accountid:5acffeafaa802f2a797a955c] correct, The core gets a guest page fault. This page fault is not expected, as we have setup the page tables perviously. 



During the PTW, i see a read to one of the PTE’s being responded with a wrong value, which is controlled by the same signal as reported in [https://sifive.atlassian.net/browse/MAL-1899|https://sifive.atlassian.net/browse/MAL-1899|smart-link] 



With the fix to [https://sifive.atlassian.net/browse/MAL-1899|https://sifive.atlassian.net/browse/MAL-1899|smart-link], we see this test also passing in nightly. We can close this as a duplicate.",11/May/22 5:26 PM;5a938e9c0913194d2d262658;https://sifive.atlassian.net/browse/MAL-1899,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650: NLP Array to icWayPredArray,,,,,,MAL-1917,114715,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Josh Smith,5acffeafaa802f2a797a955c,Tom Mickelson,5e137757f65a6b0e9bf1636f,Tom Mickelson,5e137757f65a6b0e9bf1636f,5/9/2022 17:01,9/3/2022 7:43,9/28/2022 0:51,5/23/2022 17:39,,,,,,,,,,,,,Implementation,RTL/Frontend,Timing,,,,,,,0,,,,"Another top path from NLP Arrays

Path 1: VIOLATED (-0.085 ns) Setup Check with Pin tile/core/frontend/icWayPredArray/icWayPredArray_ext/sram_0_0/CLK->A\[3]
View: func_0p675v_0c_cworst_CCworst
Group: mem2mem
Startpoint: (R) tile/core/frontend/nlp/nlpArray_0/nlpArray_0_ext/sram_0_0/CLK
Clock: (R) core_clk
Endpoint: (F) tile/core/frontend/icWayPredArray/icWayPredArray_ext/sram_0_0/A\[3]
Clock: (R) core_clk
N-Sigma: 3.000

{noformat}                   Capture       Launch
     Clock Edge:+    0.500        0.000
    Src Latency:+   -0.521       -0.521
    Net Latency:+    0.493 (P)    0.498 (P)
        Arrival:=    0.472       -0.023{noformat}

Full path here:

/project/tsmc/cln7ff/P6_ppa_runs/tomm/tile/design/SiFive_TilePRCIDomain/tomm_iter_220419_FP/nlpArray_to_PredArray_path1.rpt

!image-20220510-000006.png|width=286,height=546!",Cody Croxton,John Ingalls,Josh Smith,Michael White,Tom Mickelson,,,,,,,,,,,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1916,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,09/May/22 5:01 PM;e6f627bd-82df-43d2-a775-e108801e4606;image-20220510-000006.png;https://sifive.atlassian.net/secure/attachment/71678/image-20220510-000006.png,10/May/22 10:48 AM;jsmith;mal-1917.txt;https://sifive.atlassian.net/secure/attachment/71715/mal-1917.txt,,,,,,,,,,,,,,,77aabeb8a204ea1e5d078532c5089dae36b2245d,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz8dz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,29:03.5,09/May/22 5:29 PM;5bb6808b9ba2930990f81895;Both this and [https://sifive.atlassian.net/browse/MAL-1916|https://sifive.atlassian.net/browse/MAL-1916|smart-link] go through the signal {{nlpTarget_F1}}.,23/May/22 5:39 PM;5acffeafaa802f2a797a955c;I'm just going to close this since it's essentially the same path as MAL-1916,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
NLP Array to pcVA_F1_reg* speedpath,,,,,,MAL-1916,114712,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Tom Mickelson,5e137757f65a6b0e9bf1636f,Tom Mickelson,5e137757f65a6b0e9bf1636f,Tom Mickelson,5e137757f65a6b0e9bf1636f,5/9/2022 16:38,5/26/2022 8:29,9/28/2022 0:51,5/25/2022 19:34,,,,,,,,,,,,,Implementation,RTL/Frontend,,,,,,,,0,,,,"Another top path related to the NLP array:

Path 1: VIOLATED (-0.086 ns) Setup Check with Pin tile/core/frontend/pcVA_F1_reg\[30]/CP->D
View: func_0p675v_0c_cworst_CCworst
Group: mem2reg
Startpoint: (R) tile/core/frontend/nlp/nlpArray_0/nlpArray_0_ext/sram_0_0/CLK
Clock: (R) core_clk
Endpoint: (F) tile/core/frontend/pcVA_F1_reg\[30]/D
Clock: (R) core_clk
N-Sigma: 3.000

{noformat}                   Capture       Launch
     Clock Edge:+    0.500        0.000
    Src Latency:+   -0.521       -0.521
    Net Latency:+    0.476 (P)    0.498 (P)
        Arrival:=    0.455       -0.023{noformat}

Full timing path here:

/project/tsmc/cln7ff/P6_ppa_runs/tomm/tile/design/SiFive_TilePRCIDomain/tomm_iter_220419_FP/nlpArray_to_pcVA_path1.rpt

!image-20220509-233757.png|width=350,height=534!",Cody Croxton,John Ingalls,Josh Smith,Michael White,Tom Mickelson,,,,,,,,,,,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,MAL-1654,,,,,,,,,,,,MAL-1917,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1913,,,,,,,,,,,09/May/22 4:38 PM;e6f627bd-82df-43d2-a775-e108801e4606;image-20220509-233757.png;https://sifive.atlassian.net/secure/attachment/71675/image-20220509-233757.png,10/May/22 10:40 AM;jsmith;mal-1916.txt;https://sifive.atlassian.net/secure/attachment/71711/mal-1916.txt,25/May/22 7:58 AM;e6f627bd-82df-43d2-a775-e108801e4606;pcVA_to_nlpArrary-20220524-202926.jpg;https://sifive.atlassian.net/secure/attachment/72456/pcVA_to_nlpArrary-20220524-202926.jpg,,,,,,,,,,,,,,77aabeb8a204ea1e5d078532c5089dae36b2245d,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-25T19:32:37.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,051efbc4735ba7ab2384fdf32e05e9062d2e7c65,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz8db:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,29:15.3,09/May/22 5:29 PM;5bb6808b9ba2930990f81895;Both this and [https://sifive.atlassian.net/browse/MAL-1917|https://sifive.atlassian.net/browse/MAL-1917|smart-link] go through the signal {{nlpTarget_F1}}.,"09/May/22 6:00 PM;5acffeafaa802f2a797a955c;I think the easiest thing to try first would be to use different physical macros for the NLP entries.  I see that it’s using a 128x88 macro (it’s 2-way set associative, each entry is 44 bits).  I would expect the most critical part of the NLP entry to be the tag field, which is about 10 bits.  So we could move the tag fields into a separate 128x20-something bit macro which I would expect to be faster.",09/May/22 6:51 PM;5bb6808b9ba2930990f81895;And throw ULVT at that smaller macro\!,"10/May/22 1:07 PM;5acffeafaa802f2a797a955c;Unless I’m misreading the data sheet, the 128x20 memory appears to be about 20ps faster than the 128x88 memory.  So I think it’s worth a shot moving the tags out to a separate smaller memory.",10/May/22 4:06 PM;5e137757f65a6b0e9bf1636f;Could you implement the tag field with flops?,"10/May/22 4:08 PM;5acffeafaa802f2a797a955c;Yeah, that’s also a possibility.  But for P650 that’s about 5k flops, and we are considering increasing it by 2x or 4x for Healdsburg.","25/May/22 7:58 AM;5e137757f65a6b0e9bf1636f;There is also a path into the nlpArray from the pcVA_F1_regs.

Path 1: VIOLATED (-0.069 ns) Setup Check with Pin tile/core/feu/ifu/nlp/nlpArray_0/nlpArray_0_ext/sram_0_0/CLK->A\[5]
View: func_0p675v_0c_cworst_CCworst
Group: reg2mem
Startpoint: (R) tile/core/feu/ifu/pcVA_F1_reg\[27]/CP
Clock: (R) core_clk
Endpoint: (F) tile/core/feu/ifu/nlp/nlpArray_0/nlpArray_0_ext/sram_0_0/A\[5]
Clock: (R) core_clk
N-Sigma: 3.000

{noformat}                   Capture       Launch
     Clock Edge:+    0.500        0.000
    Src Latency:+   -0.578       -0.578
    Net Latency:+    0.532 (P)    0.613 (P)
        Arrival:=    0.453        0.034

          Setup:-    0.046
    Uncertainty:-    0.045
    Cppr Adjust:+    0.010
  Required Time:=    0.366
   Launch Clock:=    0.034
      Data Path:+    0.417
          Slack:=   -0.069{noformat}

#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

h1. Timing Point                                                             Flags     Arc     Edge  Cell                           Fanout   Trans   Delay  Arrival   Load              Pin

h1. (ns)    (ns)     (ns)   (pf)         Location

#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

tile/core/feu/ifu/pcVA_F1_reg\[27]/CP                                     <<< C1C2  CP      R     (arrival)                          38   0.025       -    0.034  0.030  (653.68,399.74)
tile/core/feu/ifu/pcVA_F1_reg\[27]/Q                                       C1C2     CP->Q   F     DFQD2BWP240H8P57PDULVT              1   0.010   0.051    0.081  0.002  (653.62,400.56)
tile/core/feu/ifu/prects_FE_OFC1073384_pcVA_F1_27/Z                       C1C2     I->Z    F     BUFFD16BWP240H8P57PDULVT            5   0.014   0.021    0.101  0.016  (719.11,410.82)
tile/core/feu/ifu/nlp/prects_FE_OCPC1473872_FE_OFN1933467_pcVA_F1_27/ZN   C1C2     I->ZN   R     INVD3BWP240H8P57PDLVT               1   0.008   0.011    0.110  0.001  (719.62,410.82)
tile/core/feu/ifu/nlp/g265112/ZN                                          C1C2     A2->ZN  F     ND2D2BWP240H8P57PDULVT              2   0.012   0.011    0.120  0.002  (721.39,408.90)
tile/core/feu/ifu/nlp/g265115/ZN                                          C1C2     A1->ZN  R     ND3OPTPAD1BWP240H8P57PDULVT         1   0.019   0.015    0.133  0.001  (721.22,410.74)
tile/core/feu/ifu/nlp/prects_FE_RC_210599_0/Z                             C1C2     A2->Z   R     CKAN2D4BWP240H8P57PDULVT            1   0.010   0.022    0.153  0.003  (721.05,409.50)
tile/core/feu/ifu/nlp/prects_FE_RC_210600_0/ZN                            C1C2     I->ZN   F     INVD10BWP240H8P57PDULVT             3   0.016   0.013    0.165  0.014  (769.33,408.72)
tile/core/feu/ifu/nlp/prects_FE_OFC1002453_n_40035/Z                      C1C2     I->Z    F     BUFFD16BWP240H8P57PDULVT           17   0.011   0.022    0.186  0.014  (775.37,409.02)
tile/core/feu/ifu/nlp/g265317/ZN                                          C1C2     A2->ZN  F     IAOI21D1BWP240H8P57PDULVT           1   0.018   0.025    0.208  0.001  (776.11,410.74)
tile/core/feu/ifu/nlp/g265315/ZN                                          C1C2     B->ZN   R     OAI21D1BWP240H8P57PDULVT            1   0.021   0.014    0.219  0.001  (776.28,410.34)
tile/core/feu/ifu/nlp/g265311/ZN                                          C1C2     A2->ZN  F     NR2D2BWP240H8P57PDULVT              1   0.011   0.013    0.230  0.001  (776.34,409.92)
tile/core/feu/ifu/nlp/prects_FE_RC_226420_0/ZN                            C1C2     A2->ZN  R     ND3OPTPAD4BWP240H8P57PDULVT         3   0.015   0.013    0.242  0.005  (773.55,405.74)
tile/core/feu/ifu/nlp/cts_FE_RC_27949_0/ZN                                C1C2     A3->ZN  F     ND3D6BWP240H8P57PDULVT              1   0.012   0.013    0.254  0.002  (774.86,405.06)
tile/core/feu/ifu/nlp/g264697/ZN                                          C1C2     A1->ZN  R     NR2D4BWP240H8P57PDULVT              1   0.011   0.011    0.264  0.002  (774.63,404.78)
tile/core/feu/ifu/nlp/g523/ZN                                             C1C2     A1->ZN  F     ND2D6BWP240H8P57PDULVT              1   0.017   0.014    0.277  0.005  (777.37,404.26)
tile/core/feu/ifu/nlp/g520/ZN                                             C1C2     A2->ZN  R     NR2D16BWP240H8P57PDULVT             4   0.024   0.020    0.296  0.017  (715.75,405.54)
tile/core/feu/ifu/nlp/cts_FE_RC_27966_0/ZN                                C1C2     A2->ZN  F     AOI21D6BWP240H8P57PDULVT            1   0.014   0.015    0.310  0.002  (716.43,405.22)
tile/core/feu/ifu/nlp/g264692/ZN                                          C1C2     A1->ZN  R     NR2OPTPAD8BWP240H8P57PDULVT         2   0.019   0.015    0.325  0.008  (715.81,402.82)
tile/core/feu/ifu/nlp/cts_FE_RC_5937_0/ZN                                 C1C2     A1->ZN  F     ND2D12BWP240H8P57PDULVT             2   0.017   0.018    0.342  0.009  (699.33,392.22)
tile/core/feu/ifu/prects_FE_RC_329262_0/ZN                                C1C2     A1->ZN  F     INR2D8BWP240H8P57PDULVT             1   0.008   0.021    0.361  0.004  (702.30,391.78)
tile/core/feu/ifu/g19268/ZN                                               C1C2     A2->ZN  R     ND2OPTPAD8BWP240H8P57PDULVT         1   0.013   0.011    0.371  0.005  (698.93,393.18)
tile/core/feu/ifu/g19255/ZN                                               C1C2     A2->ZN  F     ND2D16BWP240H8P57PDULVT             9   0.035   0.021    0.392  0.023  (701.44,392.40)
tile/core/feu/ifu/nlp/cts_FE_OCPC356455_n_85898/ZN                        C1C2     I->ZN   R     INVD18BWP240H8P57PDULVT             5   0.022   0.018    0.410  0.014  (691.52,387.50)
tile/core/feu/ifu/nlp/cts_FE_RC_6093_0_dup/ZN                             C1C2     A1->ZN  F     OAI21OPTPAD8BWP240H8P57PDULVT       2   0.027   0.015    0.424  0.006  (694.43,387.42)
tile/core/feu/ifu/nlp/prects_FE_RC_422687_0/ZN                            C1C2     B1->ZN  R     IND2OPTPAD8BWP240H8P57PDULVT        1   0.012   0.012    0.434  0.003  (688.96,386.50)
tile/core/feu/ifu/nlp/prects_FE_RC_422686_0/ZN                            C1C2     A1->ZN  F     ND2D8BWP240H8P57PDULVT              1   0.011   0.011    0.444  0.006  (680.81,384.78)
tile/core/feu/ifu/nlp/nlpArray_0/nlpArray_0_ext/sram_0_0/A\[5]             C1C2     A\[5]    F     TS5N711ULVTA128X88M2W               1   0.011   0.000    0.444  0.006  (680.81,384.78)
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

!pcVA_to_nlpArrary-20220524-202926.jpg|width=694,height=428!","25/May/22 7:34 PM;5acffeafaa802f2a797a955c;[~accountid:5e137757f65a6b0e9bf1636f] I moved some things around on this path so that a 3:1 mux should come before the NLP hit instead of after it.

I’m going to assign the ticket back to you, and if it looks good in the next run we can close this.",26/May/22 8:29 AM;5e137757f65a6b0e9bf1636f;Thanks..  I will kick off a run today.  Takes about 8 days for the run to complete.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650: LSU timing: from sdfp_srcInfo_q_0_fwdCtl_pipeSel to lsto_ldfSearchDataNotReady_q,,,,,,MAL-1915,114708,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/9/2022 15:46,9/6/2022 9:15,9/28/2022 0:51,5/12/2022 11:30,,,,,,,,,,,,,RTL/LSU,Timing,,,,,,,,0,,,,"Startpoint: tile/core/lsu/SDPipes_0/sdfp_srcInfo_q_0_fwdCtl_pipeSel_reg\[1]/CP 
Endpoint:  tile/core/lsu/LSTPipes_0/lsto_ldfSearchDataNotReady_q_reg/D
*Slack:            -0.0762*
Skew:               0.0623
Stages:                   26
BufINVs:                   5
Manhattan (X/Y):  267.588/195.9
Corner:                  func_0p675v_0c_cworst_CCworst

Throughpoints:
tile/core/lsu/LDPipes/LDPipes_1/io_sdfpVec_stMetaData_0_lateCancel
tile/core/lsu/LDPipes/io_ldrVec_lstmVecHit_1_0_bits_stldfStqDcd\[12]



FYI: prior cycle empty from tile/core/lsu/SDPipes_0/sdrr_srcInfo_q_0_fwdCtl_pipeSel_reg\[1]
Next cycle to tile/pl2_wrapper/pl2/missQ/ents_41/RC_CG_HIER_INST434/RC_CGIC_INST/E


Timing path in red:

!image-20220509-224505.png|width=625,height=637!",Cody Croxton,John Ingalls,Michael White,Tom Mickelson,,,,,,,,,,,,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-715,,,,,,,,,,,,,,,,,,09/May/22 3:46 PM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220509-224505.png;https://sifive.atlassian.net/secure/attachment/71668/image-20220509-224505.png,,,,,,,,,,,,,,,,77aabeb8a204ea1e5d078532c5089dae36b2245d,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-16T12:14:05.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/22431,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz8cn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,2,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,39:33.8,"09/May/22 6:39 PM;5bb6808b9ba2930990f81895;Yes, we can move some of this logic from LDPipe to LSTPipe after {{val ldr_lstmHit = ValidMux1H(new LdrLstmCompareInfo, io.ldrVec_lstmHit)}}.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650: IEX to LSU Timing: tile/core/iex/issueQueues_2/entries_10/ready_reg To tile/core/lsu/lsIssQ/entries_7/ready_q_reg,,,,,,MAL-1914,114707,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/9/2022 15:35,6/7/2022 10:44,9/28/2022 0:51,5/25/2022 6:07,,,,,,,,,,,,,Implementation,RTL/IEX,,,,,,,,0,,,,"Startpoint: tile/core/iex/issueQueues_2/entries_10/ready_reg/CP
Endpoint:  tile/core/lsu/lsIssQ/entries_7/ready_q_reg/D
*Slack:               -0.0791*
Skew:                  0.0269
Stages:                       31
BufINVs:                       9
Manhattan (X/Y):  193.8/234.08
Corner:                  func_0p675v_0c_cworst_CCworst 

Throughpoints:
tile/core/iex/issueQueues_2/issMux/FE_OFN50465_entries_10_io_state_ready
tile/core/iex/issueQueues_2/issMux/io_payOut_destInfo_0_prIdx\[3]
tile/core/iex/issueQueues_2/io_issReq_ISS_bits_destInfo_0_prIdx\[3] 
tile/core/lsu/lsIssQ/entries_7/io_exPipeTag_2_0_0_bits_prIdx\[3]


Timing path is red line:

!image-20220509-223216.png|width=625,height=630!",Cody Croxton,John Ingalls,Josh Smith,Michael White,Tom Mickelson,,,,,,,,,,,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1901,MAL-1919,,,,,,10/May/22 4:42 PM;John.Ingalls;MAL-1914.rpt.txt;https://sifive.atlassian.net/secure/attachment/71745/MAL-1914.rpt.txt,09/May/22 3:35 PM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220509-223216.png;https://sifive.atlassian.net/secure/attachment/71666/image-20220509-223216.png,,,,,,,,,,,,,,,77aabeb8a204ea1e5d078532c5089dae36b2245d,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,361aaa89510bf3c38a51610037c028e01faf2e9f,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz8cf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,52:22.7,"09/May/22 5:52 PM;5bb6808b9ba2930990f81895;This is a key micro-architectural timing path, from the Issue Queues back to themselves, and is part of our fast (very-next-cycle) execution dependency forwarding latency.","09/May/22 5:57 PM;5acffeafaa802f2a797a955c;One possibility for the LSU is to read the PRF at dispatch time instead of issue time, and have the LSU Issue Queue be data-full.  This would increase area and fanout on the forwarding network.  But if the LSU issue pipeline was one stage shorter, then single-cycle integer instructions could wake up loads/stores from the RR stage instead of the ISS stage.  This would mean that it wouldn’t be a single cycle pick-> wakeup path from integer to the LSU issue queue.",10/May/22 6:16 AM;60f1ea6c6491110069392f8f;See: /project/tsmc/cln7ff/P5_ppa_runs/michaelw/P650/timing_reports/MAL-1914,25/May/22 6:07 AM;5acffeafaa802f2a797a955c;I’m kind of hoping that the changes I made for [https://sifive.atlassian.net/browse/MAL-1919|https://sifive.atlassian.net/browse/MAL-1919|smart-link] (commit 361aaa89510bf3c38a51610037c028e01faf2e9f) should help improve this path as well. Since it’s essentially the same fundamental path of picking an integer instruction from the issue queue and broadcasting the destination tag.,"07/Jun/22 10:27 AM;60f1ea6c6491110069392f8f;Tom’s run tomm_iter_220523_S21 has this path at:

SHA: c17f5bc5e0e772ce34bd45950e0cfd8c5cde8803

Startpoint:            tile/core/iex/issueQueues_1/entries_15/ready_reg/CP 
Endpoint:              tile/core/lsu/lsIssQ/entries_17/ready_q_reg/D
*Slack:                       -0.0084 ( @ 526ps )*
Skew:                         0.0059
Stages:                     29
BufInvs:                      5
Manhattan (X/Y):   178.453/147.96
Corner:                   func_0p675v_0c_cworst_CCworst",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650: NLP Array timing path: output to its input,,,,,,MAL-1913,114706,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Josh Smith,5acffeafaa802f2a797a955c,Tom Mickelson,5e137757f65a6b0e9bf1636f,Tom Mickelson,5e137757f65a6b0e9bf1636f,5/9/2022 15:27,9/3/2022 7:43,9/28/2022 0:51,8/1/2022 12:58,,,,,,,,,,,,,Implementation,RTL/Frontend,Timing,,,,,,,0,,,,"One of the top speedpaths in P650 is from/to the NLP arrays.

Path 1: VIOLATED (-0.089 ns) Setup Check with Pin tile/core/frontend/nlp/nlpArray_1/nlpArray_0_ext/sram_0_0/CLK->A\[4]
View: func_0p675v_0c_cworst_CCworst
Group: mem2mem

Startpoint: (R) tile/core/frontend/nlp/nlpArray_0/nlpArray_0_ext/sram_0_0/CLK
Clock: (R) core_clk
Endpoint: (R) tile/core/frontend/nlp/nlpArray_1/nlpArray_0_ext/sram_0_0/A\[4]
Clock: (R) core_clk
N-Sigma: 3.000

{noformat}                   Capture       Launch
     Clock Edge:+    0.500        0.000
    Src Latency:+   -0.521       -0.521
    Net Latency:+    0.465 (P)    0.498 (P)
        Arrival:=    0.444       -0.023{noformat}

 Full path found here:
/project/tsmc/cln7ff/P6_ppa_runs/tomm/tile/design/SiFive_TilePRCIDomain/tomm_iter_220419_FP/nlpArray_path1.rpt",Cody Croxton,John Ingalls,Josh Smith,Michael White,Tom Mickelson,,,,,,,,,,,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1654,,,,MAL-1916,,,,,,,18/May/22 1:10 PM;jsmith;MAL-1913.txt;https://sifive.atlassian.net/secure/attachment/72067/MAL-1913.txt,09/May/22 3:29 PM;e6f627bd-82df-43d2-a775-e108801e4606;image-20220509-222935.png;https://sifive.atlassian.net/secure/attachment/71665/image-20220509-222935.png,,,,,,,,,,,,,,,77aabeb8a204ea1e5d078532c5089dae36b2245d,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz8c7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,48:46.4,"09/May/22 3:29 PM;5e137757f65a6b0e9bf1636f;!image-20220509-222935.png|width=342,height=530!",25/May/22 8:48 AM;5acffeafaa802f2a797a955c;The change from [https://sifive.atlassian.net/browse/MAL-1654|https://sifive.atlassian.net/browse/MAL-1654|smart-link] to split the tag and valid bits to a different SRAM (commit {{e1518165df0a6a03777afcf0c00ffb557314cbfb}}) should help with this.,01/Aug/22 12:58 PM;5acffeafaa802f2a797a955c;I’m going to close this ticket since [https://sifive.atlassian.net/browse/MAL-1654|https://sifive.atlassian.net/browse/MAL-1654|smart-link] already kind of catches the need for NLP timing improvements.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650: RDU to LSU timing: from robFlushGid_E2_reg to ldqWbReq_valid_q,,,,,,MAL-1912,114705,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/9/2022 15:27,9/3/2022 7:43,9/28/2022 0:51,5/24/2022 6:09,,,,,,,,,,,,,Implementation,RTL/RDU,Timing,,,,,,,0,,,,"Startpoint: tile/core/rdu/rob/robFlushGid_E2_reg\[5]/CP
Endpoint:  tile/core/lsu/LdQ/ldqWbReq_valid_q_reg/D
*Slack:            -0.0411* 
Skew:               0.0436
Stages:                   26 
BufINVs:                 10
Manhattan (X/Y):  356.663/383.94 
Corner:                  func_0p675v_0c_cworst_CCworst

Throughpoints:
tile/core/lsu/io_robFlushReq_bits_gid\[5]
tile/core/lsu/LdQ/ldqEntries_29/io_ldqEntry_ldqRobArbReq_lateCancel



Floorplan attachment:

!image-20220509-222356.png|width=645,height=638!

Red points are all statepoints from rdu/rob/robFlushGid_E2_reg\[5]
Red line is path to selected endpoint.

FYI: 3 logic gates in prior stage from tile/core/rdu/rob/robExcBefore_E1_reg",Cody Croxton,John Ingalls,Josh Smith,Michael White,Tom Mickelson,,,,,,,,,,,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,MAL-294,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10/May/22 4:41 PM;John.Ingalls;MAL-1912.rpt.txt;https://sifive.atlassian.net/secure/attachment/71744/MAL-1912.rpt.txt,09/May/22 3:27 PM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220509-222356.png;https://sifive.atlassian.net/secure/attachment/71663/image-20220509-222356.png,,,,,,,,,,,,,,,77aabeb8a204ea1e5d078532c5089dae36b2245d,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-06-10T07:35:19.000-0700"",""stateCount"":3,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,f41f12b1a5683b96fc021bc2d30981eb2deaf5ef,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz8bz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,30:42.0,09/May/22 6:30 PM;5bb6808b9ba2930990f81895;It’s the distance that’s getting us on this path.  There are a _lot_ of uses of {{robFlushGid_E2_reg}} throughout the whole core.  Could we distribute it better to each unit?,"09/May/22 6:37 PM;5acffeafaa802f2a797a955c;Yeah, we may need to add a cycle to flush all the units from the ROB also.  Currently the {{GenerateUnitFlush}} method only adds a stage to the branch unit flush, not  the ROB flush.  Obviously this might open up some corner cases that we have to deal with.",10/May/22 6:14 AM;60f1ea6c6491110069392f8f;See: /project/tsmc/cln7ff/P5_ppa_runs/michaelw/P650/timing_reports/MAL-1912,"23/May/22 5:34 PM;5acffeafaa802f2a797a955c;I think I’m just going to give each unit a set of dedicated flops for the flush valid and gid fields.  These flops will all still live in the ROB, but they should be able to be dragged around to different pins in the FEU.",24/May/22 6:09 AM;5acffeafaa802f2a797a955c;[~accountid:60f1ea6c6491110069392f8f] I just merged in a change that John made which should replicate the Gid flops inside each major unit.  Hopefully this helps.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU timing: LoadQ entriesReqValidAndNotWon,,,,,,MAL-1910,114702,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/9/2022 15:11,9/6/2022 9:15,9/28/2022 0:51,6/6/2022 14:11,,,,,,,,,,,,,RTL/LSU,Timing,,,,,,,,0,,,,"Startpoint: tile/core/lsu/LdQ/ldqWbReq_valid_q_reg/CP 
Endpoint:  tile/core/lsu/LdQ/ldqRetAW_metaInfo_q_prn_bits_reg\[2]/D
*Slack:             -0.0529*
Skew:                 -0.017
Stages:                     29
BufINVs:                    6
Manhattan (X/Y):  247.245/182.0
Corner:                  func_0p675v_0c_cworst_CCworst

!image-20220509-221133.png|width=628,height=631!",Brian Grayson,Cody Croxton,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Josh Smith,Michael White,Tom Mickelson,,,,,,,5e1371705361330daaeaf389,5e1371930242870e996efde2,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1902,MAL-1904,,,,,,,,,,10/May/22 4:24 PM;John.Ingalls;MAL-1910.rpt.txt;https://sifive.atlassian.net/secure/attachment/71736/MAL-1910.rpt.txt,09/May/22 3:12 PM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220509-221133.png;https://sifive.atlassian.net/secure/attachment/71660/image-20220509-221133.png,,,,,,,,,,,,,,,77aabeb8a204ea1e5d078532c5089dae36b2245d,,,Load/Store,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=5}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":5,""lastUpdated"":""2022-06-12T02:20:48.000-0700"",""stateCount"":5,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":5,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/23151,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz8bj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,10,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,27:03.9,"09/May/22 6:27 PM;5bb6808b9ba2930990f81895;Can you please share the full path for this one?  I believe that this is different from [https://sifive.atlassian.net/browse/MAL-1902|https://sifive.atlassian.net/browse/MAL-1902|smart-link], even though they are from the same startpoint.",10/May/22 6:00 AM;60f1ea6c6491110069392f8f;See: /project/tsmc/cln7ff/P5_ppa_runs/michaelw/P650/timing_reports/MAL-1910,24/May/22 1:21 PM;5acffeafaa802f2a797a955c;[~accountid:5bb6808b9ba2930990f81895] Do you have an idea of what this path is?,24/May/22 1:25 PM;5bb6808b9ba2930990f81895;I’m guessing it’s going through {{ldqRetArb_entriesLsuReqValidAndNotWon}} at [https://github.com/sifive/federation/blob/77aabeb8a204ea1e5d078532c5089dae36b2245d/mallard/src/main/scala/core/mallard/LoadQ.scala#L362|https://github.com/sifive/federation/blob/77aabeb8a204ea1e5d078532c5089dae36b2245d/mallard/src/main/scala/core/mallard/LoadQ.scala#L362],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650: LSU timing: from lsto_mshrReuseNdx_q_bits to tile/pl2_wrapper/pl2/dirBanks_1/matchMissQ_T1_sMatchWayVec_reg,,,,,,MAL-1909,114701,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,John Ingalls,5bb6808b9ba2930990f81895,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/9/2022 14:56,9/6/2022 9:15,9/28/2022 0:51,5/9/2022 17:46,,,,,,,,,,,,,RTL/LSU,Timing,,,,,,,,0,,,,"Startpoint: tile/core/lsu/LSTPipes_0/lsto_mshrReuseNdx_q_bits_reg\[3]/CP 
Endpoint:  tile/pl2_wrapper/pl2/dirBanks_1/matchMissQ_T1_sMatchWayVec_reg\[6]/D 
*Slack:            -0.0726* 
Skew:              -0.0326 
Stages:                    39 
BufINVs:                  11
Manhattan (X/Y):  262.656/452.38
Corner:                 func_0p675v_0c_cworst_CCworst



Throughpoints:

tile/core/lsu/LSTPipes_0/io_lstThisPipe_replayWait_4_valid
tile/core/lsu/MSHRq/io_lstoVec_l2ReqFast_1_lateCancel
tile/core/auto_lsu_master_out_rd_lateCancel
tile/pl2_wrapper/pl2/sad/io_specReqConfirm
tile/pl2_wrapper/pl2/missQ/io_bReq_T0_1_valid
tile/pl2_wrapper/pl2/missQ/ents_26/io_bReq_T0_1_valid
tile/pl2_wrapper/pl2/missQ/ents_26/io_bReq_match_T0_1_sMatchWayVec\[6]
tile/pl2_wrapper/pl2/dirBanks_1/io_matchMissQ_T0_sMatchWayVec\[6]

!image-20220509-215822.png|width=622,height=633!",Cody Croxton,John Ingalls,Michael White,Tom Mickelson,,,,,,,,,,,,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1905,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,09/May/22 2:58 PM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220509-215822.png;https://sifive.atlassian.net/secure/attachment/71659/image-20220509-215822.png,,,,,,,,,,,,,,,,77aabeb8a204ea1e5d078532c5089dae36b2245d,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz8bb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,46:40.9,"09/May/22 5:46 PM;5bb6808b9ba2930990f81895;I’m pretty confident this is the same path as [https://sifive.atlassian.net/browse/MAL-1905|https://sifive.atlassian.net/browse/MAL-1905|smart-link], so closing this as a duplicate to just track that one.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650: LSU timing: from lstm_mmioIfMemSearch_q to lsto_prevMshrWaitForDependency_q,,,,,,MAL-1908,114700,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/9/2022 14:49,9/6/2022 9:15,9/28/2022 0:51,5/26/2022 16:56,,,,,,,,,,,,,RTL/LSU,Timing,,,,,,,,0,,,,"Startpoint: tile/core/lsu/LSTPipes_1/lstm_mmioIfMemSearch_q_reg/CP 
Endpoint:  tile/core/lsu/LSTPipes_1/lsto_prevMshrWaitForDependency_q_reg/D
*Slack:                   -0.0816*
Skew:                      0.0736
Stages:                          31
BufINVs:                          4
Manhattan (X/Y):  152.685/193.94
Corner:                  func_0p675v_0c_cworst_CCworst",Cody Croxton,John Ingalls,Michael White,Tom Mickelson,Vaibhav Gupta,,,,,,,,,,,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,623e4830b75ca80070580145,,,,,,,,,,,,,,,,,,MAL-1309,MAL-885,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1905,,,,MAL-2118,,,,,,,10/May/22 4:25 PM;John.Ingalls;MAL-1908.rpt.txt;https://sifive.atlassian.net/secure/attachment/71737/MAL-1908.rpt.txt,,,,,,,,,,,,,,,,77aabeb8a204ea1e5d078532c5089dae36b2245d,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/22916,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz8b3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,5,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,26:09.7,"09/May/22 6:26 PM;5bb6808b9ba2930990f81895;Can you please share the full timing on this one?  Any breadcrumbs would help, even which logic gates the path goes through.  We did a _lot_ in this area in the past.",10/May/22 6:02 AM;60f1ea6c6491110069392f8f;See: /project/tsmc/cln7ff/P5_ppa_runs/michaelw/P650/timing_reports/MAL-1908,"26/May/22 4:55 PM;5bb6808b9ba2930990f81895;We have worked on this path a good amount in the past, as in [https://sifive.atlassian.net/browse/MAL-1309|https://sifive.atlassian.net/browse/MAL-1309|smart-link].

We improved this startpoint recently by a gate in [https://sifive.atlassian.net/browse/MAL-1958|https://sifive.atlassian.net/browse/MAL-1958|smart-link].

If this path resurfaces (which it might) then we can re-open this Jira ticket.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: HWPF Virtual Address should sign extend in LSTA stage,,,,,,MAL-1907,114699,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,5/9/2022 14:45,5/16/2022 5:23,9/28/2022 0:51,5/9/2022 15:07,,,,,,,,,,,,,RTL/HWPF,RTL/LSU,,,,,,,,0,,,,"This Chisel code: [https://github.com/sifive/federation/blob/eda2ff745a2f4c3581f0e38b35475766e10031b6/mallard/src/main/scala/core/mallard/LSTPipe.scala#L837-L841|https://github.com/sifive/federation/blob/eda2ff745a2f4c3581f0e38b35475766e10031b6/mallard/src/main/scala/core/mallard/LSTPipe.scala#L837-L841]

{noformat}lsta_vAddrOrPtwPAddrOrHwpfVAddr :=
  Mux(lsta_valid_q,
      lsta_vAddr,
      Mux(io.ptwMem.req.valid,
          io.ptwMem.req.bits.addr,
          io.hwpfIssQ_lstaReq.bits.addr)){noformat}

generates this Verilog:

{noformat}assign lsta_vAddrOrPtwPAddrOrHwpfVAddr[63:0] =
  lsta_valid_q
  ? lsta_vAddr[63:0]
  : {22'd0,
     io.ptwMem.req.valid
     ? io.ptwMem.req.bits.addr[41:0]
     : io.hwpfIssQ_lstaReq.bits.addr[41:0]};{noformat}

but I would prefer to be more explicit with {{io.ptwMem.req.bits.addr.padTo(xLen)}}, {{io.hwpfIssQ_lstaReq.bits.addr.sextTo(xLen)}} to generate this Verilog:

{noformat}assign lsta_vAddrOrPtwPAddrOrHwpfVAddr[63:0] =
  lsta_valid_q
  ? lsta_vAddr[63:0]
  : (io.ptwMem.req.valid
     ? {22'd0, io.ptwMem.req.bits.addr[41:0]}
     : {{22{io.hwpfIssQ_lstaReq.bits.addr[41]}}, io.hwpfIssQ_lstaReq.bits.addr[41:0]});{noformat}

I think the current RTL still works because of {{encodeVirtualAddress}} in the LSTR stage: [https://github.com/sifive/federation/blob/eda2ff745a2f4c3581f0e38b35475766e10031b6/mallard/src/main/scala/core/mallard/LSTPipe.scala#L1157|https://github.com/sifive/federation/blob/eda2ff745a2f4c3581f0e38b35475766e10031b6/mallard/src/main/scala/core/mallard/LSTPipe.scala#L1157]",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-7105,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-09T16:37:39.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/22368,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz8av:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650: LSU timing: from ldf_pipeDataRow_q to lstr_vAddr_q,,,,,,MAL-1906,114698,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/9/2022 14:42,9/6/2022 9:15,9/28/2022 0:51,6/7/2022 17:00,,,,,,,,,,,,,RTL/LSU,Timing,,,,,,,,0,,,,"Startpoint: tile/core/lsu/LDPipes/LDPipes_1/ldf_pipeDataRow_q_3_reg\[63]/CP 
Endpoint:  tile/core/lsu/LSTPipes_0/lstr_vAddr_q_reg\[55]/D
*Slack:                -0.0812*
Slew:                     0.1105
Stages:                        27
BufINVs:                        6
Manhattan (X/Y):  270.75/62.02
Corner:                  func_0p675v_0c_cworst_CCworst

Throughpoint:
tile/core/lsu/LDPipes/io_ldfVec_iexFwdWordData_1_pipeData\[*]",Brian Grayson,Cody Croxton,Edward Brekelbaum,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Josh Smith,Michael White,Nicolas Brunie,Tom Mickelson,Vaibhav Gupta,,,,5e1371705361330daaeaf389,5e1371930242870e996efde2,5e1372d362aed90daa48f7b1,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,6065017e90e3950069cf01c5,5e137757f65a6b0e9bf1636f,623e4830b75ca80070580145,,,,,,,,,,,MAL-1507,,,,MAL-2545,,,,,,,,,,,MAL-1130,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-56,,MAL-2044,,,,,MAL-1900,,,,,,,,,,,10/May/22 4:27 PM;John.Ingalls;MAL-1906.rpt.txt;https://sifive.atlassian.net/secure/attachment/71738/MAL-1906.rpt.txt,,,,,,,,,,,,,,,,77aabeb8a204ea1e5d078532c5089dae36b2245d,,,Load/Store,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-06-28T12:34:00.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/23314,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz8an:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,37:06.1,"09/May/22 5:37 PM;5bb6808b9ba2930990f81895;Can you please share the full path for this one?  This is a key micro-architectural timing path, from the LDF stage back to address generation, and is part of our fast (3-cycle) load-to-load latency.",10/May/22 6:05 AM;60f1ea6c6491110069392f8f;See: /project/tsmc/cln7ff/P5_ppa_runs/michaelw/P650/timing_reports/MAL-1906,"26/May/22 4:48 PM;5bb6808b9ba2930990f81895;We have worked on this path a good amount in the past, as in [https://sifive.atlassian.net/browse/MAL-1507|https://sifive.atlassian.net/browse/MAL-1507|smart-link].

[~accountid:623e4830b75ca80070580145] may I please ask for some help in analyzing this path and coming up with new solutions (custom, duplication?)?","27/May/22 11:55 AM;623e4830b75ca80070580145;I think the RTL path is well optimized, cant see scope of improvement. Couple of comments:

# If possible, we should look in custom adder implementation. Currently it is taking ~13 gates for 64 bit adder. Possibly we can build a fast adder.
# In the report attached, there is a long path of buffer/inverters travelling ~250um. [~accountid:60f1ea6c6491110069392f8f] you might want to see why the tool is spreading this logic. It should have been relatively closer. If we can cut the distance down we can save ~50ps. That will improve slack but not solve the issue. 

{{tile/core/lsu/LDPipes/LDPipes_1/prects_FE_OFC1082651_n_69359/I C1C2 - F INVD16BWP240H8P57PDULVT 1 0.0167 0.0006 0.1455 0.005 (194.14,280.08) 48 tile/core/lsu/LDPipes/LDPipes_1/prects_FE_OFC1082651_n_69359/ZN C1C2 I->ZN R INVD16BWP240H8P57PDULVT - 0.0120 0.0095 0.1544 0.019 (194.14,279.98) 49 tile/core/lsu/LDPipes/LDPipes_1/prects_FE_OCPC1178737_n_56996/I C1C2 - R INVD18BWP240H8P57PDULVT 1 0.0192 0.0074 0.1618 0.019 (252.85,280.56) 50 tile/core/lsu/LDPipes/LDPipes_1/prects_FE_OCPC1178737_n_56996/ZN C1C2 I->ZN F INVD18BWP240H8P57PDULVT - 0.0144 0.0115 0.1725 0.029 (252.91,280.46) 51 tile/core/lsu/LDPipes/LDPipes_1/prects_FE_OCPC1178738_n_56996/I C1C2 - F INVD18BWP240H8P57PDULVT 1 0.0296 0.0146 0.1871 0.029 (346.67,291.60) 52 tile/core/lsu/LDPipes/LDPipes_1/prects_FE_OCPC1178738_n_56996/ZN C1C2 I->ZN R INVD18BWP240H8P57PDULVT - 0.0189 0.0145 0.2007 0.026 (346.73,291.50) 53 tile/core/lsu/LDPipes/LDPipes_1/prects_FE_OFC1082655_n_69359_dup/I C1C2 - R BUFFD18BWP240H8P57PDULVT 3 0.0271 0.0094 0.2101 0.026 (417.64,310.32) 54 tile/core/lsu/LDPipes/LDPipes_1/prects_FE_OFC1082655_n_69359_dup/Z C1C2 I->Z R BUFFD18BWP240H8P57PDULVT - 0.0077 0.0210 0.2294 0.028 (418.04,310.22) 55}}","07/Jun/22 10:20 AM;5bb6808b9ba2930990f81895;[~accountid:5e1371705361330daaeaf389] [~accountid:5e1372d362aed90daa48f7b1] this path is from load-word sign extension through the 64-bit adder.  Trying to squeeze every last gate out: do we need to do fast 3-cycle load-to-load forward for pointer-chasing from load-word?  If not, then we could create a simpler {{LoadGen.doublewordData}} with a correspondingly more restrictive {{fastFwdableToLsta}} {{doublewordSize}} check.","07/Jun/22 12:20 PM;5e1371705361330daaeaf389;I think since we expect Mallard to mostly be used for 64b addressing, 32b being used for a subsequent load isn’t going to be common. So I think it is safe to say that the 3-cyce load-to-load only needs to be for 64b loads.

[~accountid:5e1372d362aed90daa48f7b1] can you add a quick check in Dabble to make sure I’m not forgetting anything?","07/Jun/22 12:36 PM;5e1372d362aed90daa48f7b1;That makes sense, since we don’t have the case of reg+reg. The base register needs to be 64 bit…","07/Jun/22 2:22 PM;5bb6808b9ba2930990f81895;Okay, I’ll wait for the check from Dabble.  Looking in Dhrystone and Coremark, I do see some {{lw}} for address pointers, but they usually seem to be followed by some ALU ops, versus I see more {{ld}} for address pointers directly used in a subsequent address.","07/Jun/22 4:19 PM;5e1371705361330daaeaf389;Yep, since we can’t do reg-reg addressing (IMO one of the biggest failings of RISC-V ISA), any {{lw}} that is being used for an index is going to have to be added to a base register before it can be used for agen by a load.


If we ever add reg-reg loads to the architecture, this +1-cycle-for-{{lw}}-to-load-agen would need to be rethought….","17/Jun/22 12:34 PM;5e1372d362aed90daa48f7b1;The dabble ticket is [https://sifive.atlassian.net/browse/SPARTA-1859|https://sifive.atlassian.net/browse/SPARTA-1859|smart-link]

| |no lw cascade|
|400.perl|-0.04%|
|401.bzip2|-0.04%|
|403.gcc|-0.01%|
|429.mcf|0.00%|
|445.gobmk|-0.02%|
|456.hmmer|0.00%|
|458.sjeng|-0.02%|
|462.libquantum|0.00%|
|464.h264|0.00%|
|471.omnetpp|-0.02%|
|473.astar|0.00%|
|483.xalancbmk|0.02%|
|specint2k6|-0.01%|",17/Jun/22 12:35 PM;5e1372d362aed90daa48f7b1;The performance change is probably lw feeding store data.,"17/Jun/22 2:20 PM;5bb6808b9ba2930990f81895;{quote}lw feeding store data{quote}

We do still support that, just not lw feeding address.

Anyway, looks like the change is small, confirming your and Brian’s intuition and experience.  Thank you\!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650: LSU timing: from lsto_mshrReuseNdx_q_bits to tile/pl2_wrapper/pl2/missQ,,,,,,MAL-1905,114697,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Joseph Huang,61579e1f78e5e400703c17e0,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/9/2022 14:36,6/1/2022 15:26,9/28/2022 0:51,5/16/2022 5:20,,,,,,,,,,,,,Implementation,RTL/LSU,,,,,,,,0,,,,"LSU to PL2 MissQ long distance

Startpoint: tile/core/lsu/LSTPipes_0/lsto_mshrReuseNdx_q_bits_reg\[3]/CP
Endpoint: tile/pl2_wrapper/pl2/missQ/ents_41/RC_CG_HIER_INST434/RC_CGIC_INST/E
*Slack:                  -0.0766*
Skew:                     0.0247
Stages:                         32
BufINVs:                         7
Manhattan (X/Y)  213.198/471.52
Corner:                 func_0p675v_0c_cworst_CCworst

Throughpoints:
tile/core/lsu/LSTPipes_0/io_lstThisPipe_replayWait_4_valid
tile/core/lsu/LSTPipes_1/io_lsto_mshrEstablish_lateCancel
tile/core/auto_lsu_master_out_rd_lateCancel
tile/cclMasterXbar_WithCancel/auto_in_1_rd_lateCancel
tile/pl2_wrapper/pl2/auto_in_rd_lateCancel
tile/pl2_wrapper/pl2/sad/io_specReqConfirm
tile/pl2_wrapper/pl2/globalArb/io_bReq_T0_1_valid
tile/pl2_wrapper/pl2/missQ/ents_41/FE_OFN60978_globalArb_io_bReq_T0_1_valid

!image-20220509-213615.png|width=625,height=631!

tile/pl2_wrapper/pl2/missQ/ents* in green
tile/pl2_wrapper/pl2/missQ/fdb* in blue",Alexandre Solomatnikov,Cody Croxton,John Ingalls,Joseph Huang,Michael White,Susheel Sharma,Tom Mickelson,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,61579e1f78e5e400703c17e0,60f1ea6c6491110069392f8f,6064f88fb30f0d00703824c8,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,MAL-1999,,,,,,,,MAL-1909,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1908,MAL-1958,,,,,,10/May/22 4:28 PM;John.Ingalls;MAL-1905.rpt.txt;https://sifive.atlassian.net/secure/attachment/71739/MAL-1905.rpt.txt,09/May/22 2:36 PM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220509-213615.png;https://sifive.atlassian.net/secure/attachment/71658/image-20220509-213615.png,,,,,,,,,,,,,,,77aabeb8a204ea1e5d078532c5089dae36b2245d,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-16T03:41:34.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/22405,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz8af:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,20:28.0,"09/May/22 6:20 PM;5bb6808b9ba2930990f81895;Can you please share the full path for this one?  It would help to know what time each of the intermediate through points is reached.

Can you please also share the Federation git commit SHA?  [~accountid:61579e1f78e5e400703c17e0] did some work on PL2 timing paths semi-recently.",10/May/22 6:07 AM;60f1ea6c6491110069392f8f;See: /project/tsmc/cln7ff/P5_ppa_runs/michaelw/P650/timing_reports/MAL-1905,"10/May/22 5:56 PM;61579e1f78e5e400703c17e0;I didn’t notice the timing fix for {{LSU lateCancel}} PR is not successfully merged back to {{master}}. It has been a while, so there are so conflicts to be resolve for merging now. I'd create another PR to re-do this timing fix to make it more clearly reviewed, and would inform you once it's done. Sorry for causing this inconvenience. ",11/May/22 8:49 AM;5bb6808b9ba2930990f81895;Thanks [~accountid:61579e1f78e5e400703c17e0]\!  I see [https://github.com/sifive/federation/pull/21481|https://github.com/sifive/federation/pull/21481|smart-link] and [https://github.com/sifive/federation/pull/22405|https://github.com/sifive/federation/pull/22405|smart-link].,"15/May/22 10:35 AM;5bb6808b9ba2930990f81895;The Orca branch has been created, so any PR to fix this ticket’s timing path is clear to merge to main/master without touching Orca release branch.","15/May/22 3:57 PM;61579e1f78e5e400703c17e0;Got it, I’ll merge these two PRs today after internal review. ","16/May/22 3:43 AM;61579e1f78e5e400703c17e0;The timing fix for lateCancel is merged back to master now. Please have a trial.
[https://github.com/sifive/federation/pull/22405|https://github.com/sifive/federation/pull/22405|smart-link] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650: LSU timing: circular loop on stqMAVec_merge_q,,,,,,MAL-1904,114695,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/9/2022 14:21,9/6/2022 9:15,9/28/2022 0:51,6/6/2022 14:10,,,,,,,,,,,,,RTL/LSU,Timing,,,,,,,,0,,,,"Startpoint: tile/core/lsu/StQ/stqMAVec_merge_q_1_reg/CP
Endpoint:  tile/core/lsu/StQ/stqMAVec_merge_q_1_reg/D
*Slack:            -0.0836*
Skew:               0.0002 
Stages:                    34 
BufINV:                     5 
Manhattan (W/Y): 178.56/163.26



!image-20220509-212039.png|width=622,height=632!",Brian Grayson,Cody Croxton,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Michael White,Tom Mickelson,Yohann Rabefarihy,,,,,,,5e1371705361330daaeaf389,5e1371930242870e996efde2,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,MAL-2081,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1432,,MAL-2110,,,,,MAL-1903,,,,MAL-1910,,,,,,,10/May/22 4:36 PM;John.Ingalls;MAL-1904.rpt.txt;https://sifive.atlassian.net/secure/attachment/71740/MAL-1904.rpt.txt,09/May/22 2:21 PM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220509-212039.png;https://sifive.atlassian.net/secure/attachment/71656/image-20220509-212039.png,,,,,,,,,,,,,,,77aabeb8a204ea1e5d078532c5089dae36b2245d,,,Load/Store,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=7}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":7,""lastUpdated"":""2022-07-13T08:42:45.000-0700"",""stateCount"":7,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":7,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/23266,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,7,0,,,,100,,,,,,,,,,,,,,,2|hzz89z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,10,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,16:36.9,09/May/22 6:16 PM;5bb6808b9ba2930990f81895;Can you please share the full path for this one?  I suspect this may be a duplicate of [https://sifive.atlassian.net/browse/MAL-1903|https://sifive.atlassian.net/browse/MAL-1903|smart-link].,10/May/22 6:08 AM;60f1ea6c6491110069392f8f;See: /project/tsmc/cln7ff/P5_ppa_runs/michaelw/P650/timing_reports/MAL-1904,"10/May/22 4:39 PM;5bb6808b9ba2930990f81895;This is a unique path, not a duplicate of [https://sifive.atlassian.net/browse/MAL-1903|https://sifive.atlassian.net/browse/MAL-1903|smart-link].  This path and that path only share their last logic gate.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650: LSU timing: From stqEntries_*/stqE_retireReq_q to stqMAVec_merge_q,,,,,,MAL-1903,114694,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/9/2022 14:17,9/6/2022 9:15,9/28/2022 0:51,6/5/2022 21:21,,,,,,,,,,,,,RTL/LSU,Timing,,,,,,,,0,,,,"Startpoint: tile/core/lsu/StQ/stqEntries_9/stqE_retireReq_q_reg/CP
Endpoint:  tile/core/lsu/StQ/stqMAVec_merge_q_1_reg/D
*Slack:           -0.0854*
Skew:              0.0375
Levels:                   35
BufINV:                    3
Manhattan (X/Y):  190.701/224.36

Through points:
tile/core/lsu/StQ/stqEntries_9/io_stqEntry_retireReq_valid


!image-20220509-211728.png|width=625,height=630!",Cody Croxton,John Ingalls,Michael White,Tom Mickelson,Vaibhav Gupta,Yohann Rabefarihy,,,,,,,,,,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,623e4830b75ca80070580145,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,,,,MAL-2081,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1432,,,,,,,,,,,MAL-1904,,,,,,,10/May/22 4:37 PM;John.Ingalls;MAL-1903.rpt.txt;https://sifive.atlassian.net/secure/attachment/71741/MAL-1903.rpt.txt,09/May/22 2:17 PM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220509-211728.png;https://sifive.atlassian.net/secure/attachment/71655/image-20220509-211728.png,,,,,,,,,,,,,,,77aabeb8a204ea1e5d078532c5089dae36b2245d,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-06T09:04:44.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/23240,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz89r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,16:19.8,"09/May/22 6:16 PM;5bb6808b9ba2930990f81895;Can you please share the full path for this one?  Even if there are no intermediate through points named signals, we can still deduce clues from which logic gates are used.",10/May/22 6:10 AM;60f1ea6c6491110069392f8f;See: /project/tsmc/cln7ff/P5_ppa_runs/michaelw/P650/timing_reports/MAL-1903,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU timing: hoist ldqWbReq_validToLdArb onto a register,,,,,,MAL-1902,114693,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Swarnashri Chandrashekar,6287f376f0302e0068bff30c,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/9/2022 14:12,6/23/2022 10:21,9/28/2022 0:51,6/23/2022 10:20,,,,,,,,,,,,,Implementation,RTL/LSU,,,,,,,,0,,,,"Startpoint: tile/core/lsu/LdQ/ldqWbReq_valid_q_reg/CP
Endpoint:  tile/core/iex/issueQueues_1/entries_14/ready_reg/D
Slack:              -0.0885
Slew:                0.0364
Stages:                    28
BufINV:                   13
Manhattan (X/Y):  592.563/203.9

Through points:
tile/core/lsu/LdQ/io_ldqWbReq_ldArbReq_earlyValid
tile/core/lsu/LDPipes/LDPipes_0/LDPipes_io_lstrVec_ldArbReq_0_ready
tile/core/lsu/LDPipes/io_ldIexPipesTag_0_0_0_valid
tile/core/iex/issueQueues_1/FE_OFN63453_lsu_io_lsuIexPipeTag_0_0_0_valid
",Cody Croxton,John Ingalls,Khondakar Mujtaba,Michael White,Tom Mickelson,,,,,,,,,,,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,622a930149c900007023d105,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,MAL-343,,,,,,,,,,,,MAL-1901,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1510,MAL-438,MAL-508,,MAL-1910,,,,,,,,,,,,,,,,,,,,,,,77aabeb8a204ea1e5d078532c5089dae36b2245d,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-23T10:18:57.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/23753,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz89j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,5,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,07:59.9,"26/May/22 5:07 PM;5bb6808b9ba2930990f81895;Similar to what was done for other inputs to LDPipe Arbitration in [https://sifive.atlassian.net/browse/MAL-508|https://sifive.atlassian.net/browse/MAL-508|smart-link] and [https://sifive.atlassian.net/browse/MAL-438|https://sifive.atlassian.net/browse/MAL-438|smart-link],
we should hoist {{io.ldqWbReq_ldArbReq.earlyValid}} onto a register {{ldqWbReq_validToLdArb_q}}.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650: LSU timing from stqWG_validThisCycleToL1dcData_q to iex/issueQueues_*/entries_*/ready_reg/D,,,,,,MAL-1901,114692,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,John Ingalls,5bb6808b9ba2930990f81895,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/9/2022 14:03,9/6/2022 9:16,9/28/2022 0:51,5/9/2022 18:07,,,,,,,,,,,,,RTL/LSU,Timing,,,,,,,,0,,,,"Startpoint: tile/core/lsu/StQ/stqWG_validThisCycleToL1dcData_q_reg/CP 
Endpoint:  tile/core/iex/issueQueues_1/entries_14/ready_reg/D
Slack:               -0.0885
Slew:                 0.0364
Stages:                    32
BufINV:                   15
Manhattan (X/Y):  599.955/229.24

Through points:
tile/core/lsu/LDPipes/LDPipes_0/LDPipes_io_lstrVec_ldArbReq_0_ready
tile/core/lsu/LDPipes/io_ldIexPipesTag_0_0_0_valid
tile/core/iex/FE_OFN548_FE_OFN179300_lsu_io_lsuIexPipeTag_0_0_0_valid
tile/core/iex/issueQueues_1/FE_OFN63453_lsu_io_lsuIexPipeTag_0_0_0_valid",Cody Croxton,John Ingalls,Michael White,Tom Mickelson,,,,,,,,,,,,5e1371930242870e996efde2,5bb6808b9ba2930990f81895,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1902,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1914,,,,MAL-1900,,,,,,,,,,,,,,,,,,,,,,,77aabeb8a204ea1e5d078532c5089dae36b2245d,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz89b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,07:50.7,"09/May/22 6:07 PM;5bb6808b9ba2930990f81895;I’m pretty confident this is the same path as [https://sifive.atlassian.net/browse/MAL-1902|https://sifive.atlassian.net/browse/MAL-1902|smart-link], so closing this as a duplicate to just track that one.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
P650: LSU timing: from ldf_pipeDataRow to stqWG_validThisCycleToL1dcData_q,,,,,,MAL-1900,114690,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Gopi Neela,62196460708417006bca686e,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/9/2022 13:58,6/14/2022 9:05,9/28/2022 0:51,5/23/2022 19:07,,,,,,,,,,,,,Implementation,RTL/LSU,,,,,,,,0,,,,"Startpoint: tile/core/lsu/LDPipes/LDPipes_1/ldf_pipeDataRow_q_3_reg\[63]/CP
Endpoint: tile/core/lsu/StQ/stqWG_validThisCycleToL1dcData_q_reg/D
*Slack: -0.0926*
Skew: 0.0819
Levels: 26
BufINV: 6
Manhattan (X/Y): 461.121/161.68


Through points:
tile/core/lsu/LDPipes/io_ldfVec_iexFwdWordData_1_pipeData\[44] 
tile/core/lsu/StQ/io_lstaVec_ldArbReqNextCycle_1_lateCancel

!image-20220509-205407.png|width=620,height=640!

Attachment: Floorplan pic showing red line path from start to endpoint.  Possibly pulled to upper right by paths from:
   tile/core/ptw/count_reg\[0]/CP and
   tile/core/iex/exPipes_1/instSrcInfo_EX_0_fwdCtl_pipeSel_reg\[*]



FYI:  There are no gates in prior stage between:
   tile/core/iex/exPipes_1/instSrcInfo_RR_0_fwdCtl_pipeSel_reg\[*] and
   tile/core/iex/exPipes_1/instSrcInfo_EX_0_fwdCtl_pipeSel_reg\[*]
Can any logic be moved?",Brian Grayson,Cody Croxton,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Michael White,Tom Mickelson,,,,,,,,5e1371705361330daaeaf389,5e1371930242870e996efde2,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,60f1ea6c6491110069392f8f,5e137757f65a6b0e9bf1636f,,,,,,,,,,,,,,,MAL-1452,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1157,,,,,,,MAL-1901,,,,MAL-1906,,,,,,,09/May/22 1:58 PM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220509-205407.png;https://sifive.atlassian.net/secure/attachment/71654/image-20220509-205407.png,,,,,,,,,,,,,,,,77aabeb8a204ea1e5d078532c5089dae36b2245d,,,Load/Store,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-23T19:06:39.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/22713,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz88v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,02:48.6,"09/May/22 6:02 PM;5bb6808b9ba2930990f81895;Yes, we can (re)move some logic from this timing path.  In LSTPipe.scala: [https://github.com/sifive/federation/blob/8306cdac4b5d1a764bcc7ac3a51877ad0e270a03/mallard/src/main/scala/core/mallard/LSTPipe.scala#L933-L939|https://github.com/sifive/federation/blob/8306cdac4b5d1a764bcc7ac3a51877ad0e270a03/mallard/src/main/scala/core/mallard/LSTPipe.scala#L933-L939]

{noformat}    //MAL-427: generate bubble in LDArb for LSTR to win next cycle
    io.lsta_ldArbReqNextCycle.earlyValid := io.lsta_l1dcWayPredRead.fire
-   io.lsta_ldArbReqNextCycle.lateCancel := lsta_srcReplay || lsta_predictBlockLdArbReq
+   io.lsta_ldArbReqNextCycle.lateCancel := lsta_srcReplay
    io.lsta_ldArbReqNextCycle.index      := io.lsta_l1dcWayPredRead.bits.addrL1dcDataBank
    io.lsta_ldArbReqNextCycle.bits.valid := lsta_valid_q  // neither ptw nor hwpf
    io.lsta_ldArbReqNextCycle.bits.bits  := lsta_payload.cmn.gid

    //IO Predictor
-   lsta_predictBlockLdArbReq := lsta_valid_q && io.ioPredictor_vAddr.valid && !((lsta_srcRegOrLdf ^ io.ioPredictor_vAddr.bits)(vaddrBits-1, pgIdxBits + pgLevelBits))
+   lsta_predictBlockLdArbReq := lsta_valid_q && io.ioPredictor_vAddr.valid && !(lsta_srcReg ^ io.ioPredictor_vAddr.bits)(vaddrBits-1, pgIdxBits + pgLevelBits).orR) && !(lsp.fastLoadForwardToLdStAddress.B && lsta_srcLdfSeq.map(_._1).orR){noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LSU returning the wrong data to core,[TGV] LSU returning,LSU (Load Store Unit),,,,MAL-1899,114686,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,5/9/2022 11:49,9/7/2022 17:43,9/28/2022 0:51,5/9/2022 14:32,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,TGV,,,"I see on RTL for a load access to address {{0x80026508}}, made by the core, the correct data is obtained from the main memory, but in the rtl, the wrong value is selected by the mux. 

in verilog, i see the 


{noformat}wire [127:0] _ldwb_data_in_T_72 = ldf_notL1Data_q ? _ldwb_data_in_T_35 : _ldwb_data_in_T_71; // @[LDPipe.scala 1337:25]
{noformat}

here the ldf_notL1Data_q gets set to 1, and wrong value is sent to the register. 

the chisel code is [https://github.com/sifive/federation/blob/b1688bcf360aa8a6d5319f8bfd0cef6081abefb2/mallard/src/main/scala/core/mallard/LDPipe.scala#L1337|https://github.com/sifive/federation/blob/b1688bcf360aa8a6d5319f8bfd0cef6081abefb2/mallard/src/main/scala/core/mallard/LDPipe.scala#L1337]



To recreate the failure 

# clone federation, checkout the commit 12ab4e19efd441e0fcaa7c278692110b48ddcc62 and build the design coreip_u8_minimal_vector
# rerun the test using the outline
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_stall_cycle_count=500000"",
    ""+cosim_scoreboard_trap_epc_count=30"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+MEM_ERROR_INJECT=.*\\.icWayPredArray.*ext,1,0,25:.*\\.RamBank.*ext,1,0,32:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4"",
    ""+cosim_mmc_verbosity=5""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0000"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1282441092
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}



the waves are located at {{gamma22:/scratch/verif/srivatsa/sting_release_check_3/builds/coreip_u8_minimal_vector/sim/sim2/rerun.outline/sting_StingSiFiveTuple_T_0000/sting/sifive/vector/vector_tgv_dev.conf}}",John Ingalls,Srivatsa Yogendra,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1918,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1549,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-10T09:12:46.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/22366,,,n/a,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz87z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Conditional moves cause excessive predictor updates reducing performance,Conditional moves cause,,,,,MAL-1898,114628,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Adam George,61b2a458657a0500706b9c39,Adam George,61b2a458657a0500706b9c39,Adam George,61b2a458657a0500706b9c39,5/8/2022 12:24,6/23/2022 13:53,9/28/2022 0:51,5/9/2022 20:59,mongoose.00.00,mongoose.01.00,mongoose.02.00,narwhal.00.00,narwhal.01.00,narwhal.02.00,narwhal.03.00,narwhal.04.00,orca.00.00,,,,RTL/Frontend,,,,,,,,,0,,,,"If a conditional branch jumps over a following move instruction the core may execute both of these as a conditional move where the move becomes a predicated instruction. For this to work the branch must never predict taken, otherwise the following instruction will not be seen by the core and the optimization will not occur.
The current logic in the BRQ achieves this by forcing the update ‘taken’ field to be false for all branches that are marked ‘predicate’. However an update is always generated if a branch is reported as mispredicting. The effect is any conditional move where the predicate is executed as false(branch is taken to skip the move) will always generate an update because the predictor will always predict not-taken. In a tight loop this can saturate the update pipeline causing unneeded stalls.",Adam George,Brian Grayson,Chia-I Chen,Dave Parry,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,Megan Wachs,,,,,,,61b2a458657a0500706b9c39,5e1371705361330daaeaf389,61aaafab977c5b007241043c,5cc37f384573b30ffbeb88b0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0a9ddccbd059abc45f4ee122c75989e97fe61799,Yes,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-09T18:42:58.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,"Not an errata, this is performance enhancement, as such not to be published. ",,,,,,,,,,,1. BRC: Should not Publish,,,,,,,,,,c00911f36b427210342abcc9d59624cdae56d412,,,n/a,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz7vz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,41:11.4,08/May/22 6:24 PM;61b2a458657a0500706b9c39;Pushed a fix to branch MAL-1898. This fix blocks BDP updates if the branch is a predicate and is saturated.,"08/May/22 10:41 PM;61aaafab977c5b007241043c;compare the baseline: {{0a9ddcc}} and the fix: {{8f2bd99}} on MAL-1898

the IPC (of 0075/050) improves from *1.0768* to *2.2737*, much closer to dabble’s *2.357* (on {{2022-04-29.19307333}})

more snippets are running, but the results may depend on how many cmov patterns are in each snippet","09/May/22 8:49 PM;61aaafab977c5b007241043c;compared IPC with dabble (on {{2022-05-06.b8423e7b}})

the number with over-10%-miscorrelation on workload 0074 (specint) improved from *51* → *50*
the number with over-10%-miscorrelation on workload 0075 (specfp) improved from *71* → *70*

the fix gets improvement but on limited snippets (as expected)","09/May/22 8:56 PM;61b2a458657a0500706b9c39;This has been fixed by blocking predictor updates if the predicate bit is set and the prediction is not saturated. Checking the saturation should allow some level of recovery in the event a taken branch gets installed.


Performance tests with the fix:
Calculated Dhrystone score is 7.957 DMIPS
Calculated Useries_coremark_tuned score is 8.753 CoreMarks/MHz","17/May/22 11:15 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;[~accountid:61b2a458657a0500706b9c39] , [~accountid:5bb6808b9ba2930990f81895] , [~accountid:5acffeafaa802f2a797a955c] is this somethign that was introduced recently?","17/May/22 11:50 AM;5acffeafaa802f2a797a955c;[~accountid:557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66] No, this would have been the case since we added the conditional move conversion stuff originally.  I’m pretty sure that was before Mongoose","24/May/22 11:19 AM;5cc37f384573b30ffbeb88b0;[~accountid:5acffeafaa802f2a797a955c] / [~accountid:61b2a458657a0500706b9c39] / [~accountid:61aaafab977c5b007241043c] is the performance impact of this issue significant enough that we should report this as an erratum in your opinion? From my perspective, this would be the case if either:

* The performance change in some standard benchmark that we report is more than 1-2%
* The bug exposes a glass-jaw such that _some_ workload could see a significant performance delta (>10%)","24/May/22 7:19 PM;61aaafab977c5b007241043c;the improvements on the BogoMark project scores (200K warmup plus 200K ROI) are:

# 0074 (SPECint): *8.71* → *8.71*
# 0075 (SPECfp): *10.05* → *10.06*

the improvement of _calculix_ (where we found this issue, which is one of workloads in SPECfp snippets) is *2.38%*

based on BogoMark project scores, the performance impact is not significant enough for an erratum I think

[~accountid:5e137307c578120daca51d52] , do you have any comments on using 200K+200K BogoMark scores to give suggestions on an erratum?","23/Jun/22 1:32 PM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;[~accountid:5cc37f384573b30ffbeb88b0] , [~accountid:6258a58313c2c8006a372228] what do you think how to handle whether this “affects” orca.00.00 or not? It may be difficult to write filters with knowledge of what product lines actually apply to what cores in terms of the fixed/affects (liek I want to write one filter that makes sure we cleanly say whether something was fixed or affected in the next release). Or, we can just leave it blank and for MAL project we know that we should only look for those fixed in panda.00.00 …?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: SiFive_RAS_assert,Assertion Failure: SiFive_RAS_assert,IFU (Instruction Fetch Unit),RAS (Return Address Stack),,Refer https://github.com/sifive/arch-specs/blob/master/core/mallard_mas.adoc#544-return-address-stack-ras,MAL-1897,114625,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Adam George,61b2a458657a0500706b9c39,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,5/8/2022 10:33,6/13/2022 13:19,9/28/2022 0:51,5/10/2022 11:58,,,,,,,,,,,Panda DR,,RTL/Frontend,,,,,,,,,0,,,,"*Error:*

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-xprop-coreip_mallard-test-nightly-xprop/89/builds/coreip_p650/verilog/design/assertions/SiFive_RAS_assert.sv"", 45: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.ifu.ras.SiFive_RAS_assert_0: at time 177262500 ps
Assertion failed: RAS trying to allocate valid entry

    at RAS.scala:179 assert(!(rasValid_F3 & rasValidSet_F3).orR, ""RAS trying to allocate valid entry"")
{noformat}

Above assertion fails due to xx propagation. This comes from {{tile.core.feu.ifu.ras.SiFive_RAS_assert_0.rasValidSet_F3[31:0]}} & {{tile.core.feu.ifu.ras.rasValidNxt_F3[31:0]}} transitioning to xx. Tracing back for the source of the xprop, following registers are seen to be uninitialized:
{{tile.core.feu.ifu.ras.rasAgeArray_2[5:0]}}
{{tile.core.feu.rdu.brq.brqEntry_BR1_b_1_prediction_ras_age[5:0]}}

Steps to reproduce:

* Checkout ba9f6b8
* Build coreip_p650
* rerun.outline:
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.tag_array_.*ext,1,0,32:.*\\.data_arrays_0_.*ext,1,0,32:.*\\.syssram.*ext,1,0,32:.*\\.island.*\\.lim\\.syssram.*ext,1,0,32:.*\\.tagged_tables_0_.*ext,1,0,32:.*\\.base_table_0_.*ext,1,032""
  ],
  ""subdir"": ""rat_default_T_0229"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2667721501
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Adam George,Anhdung Ngo,Brian Grayson,Chia-I Chen,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Megan Wachs,Saurabh Singh,,,,,,,61b2a458657a0500706b9c39,5e13709185a8c90ecac9beb2,5e1371705361330daaeaf389,61aaafab977c5b007241043c,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1842,,,,,,,,,,,,,,,,,,,,,,,,,,,,Requires further investigation,,Branch Prediction,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-10T11:36:59.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,1. BRC: Should not Publish,,,,,,,,,,3b159d387b6c580c927b02e0dc9d8a45f7d219c4,,,n/a,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz7uf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,51:55.3,08/May/22 10:36 AM;607e26f781e7b900681be48c;[~accountid:61b2a458657a0500706b9c39] Looks like this was introduced with [PR-22216|https://github.com/sifive/federation/pull/22216]. Please re-assign this to the concerned person elsewise.,"08/May/22 1:51 PM;61b2a458657a0500706b9c39;The BRQ chisel essentially assigns the ptr as following:
{{if (flush & EX(0).call)}}
{{  ifu.ptr = EX(0).ptrNxt}}
{{else if(pipeSel_BR1.call)}}
{{  ifu.ptr = pipeSel_BR1.ptrNxt}}
{{else}}
{{  ifu.ptr = pipeSel_BR1.ptr}}

In this test the first else clause is selected since the first flush is not a call. However branch pipe 1 is selected which does not have a valid age. The unexpected behavior here is io_brFlush1H_BR1\[1] is high despite not having valid branch data.","08/May/22 10:04 PM;61b2a458657a0500706b9c39;This has been fixed by forcing the EX 0 pipe to be used for the RAS ptr and age, even if the branch is not a call. The old logic expected _io.brFlush1H_BR1\[1]_ to be low if no active branch in the that pipe but this doesn’t seem to be the case.","10/May/22 12:17 AM;607e26f781e7b900681be48c;Following two assertion failures were seen in the same commit. The cause looked similar. Reran these failures with the fix for this issue and the failures are no longer seen.

* {noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-xprop-coreip_mallard-test-nightly-xprop/90/builds/coreip_p650mc/verilog/design/assertions/SiFive_NLP_assert.sv"", 131: TestDriver.testHarness.system.subsystem.tile_prci_domain_3.tile.core.feu.ifu.nlp.SiFive_NLP_assert_0: at time 62782500 ps
Assertion failed
    at NLP.scala:279 (0 until params.nNLPuBuf).foreach { i => assert(!uBufValids(i) || uBufValids(i,0).andR) }{noformat}
[https://simscope.internal.sifive.com/sigs/1468/cju8ygv13sx0|https://simscope.internal.sifive.com/sigs/1468/cju8ygv13sx0]
* {noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-xprop-coreip_mallard-test-nightly-xprop/90/builds/coreip_p650mc/verilog/design/assertions/SiFive_IFU_assert.sv"", 503: TestDriver.testHarness.system.subsystem.tile_prci_domain_3.tile.core.feu.ifu.SiFive_IFU_assert_0: at time 50482500 ps
Assertion failed: ICache Way Predictor index is inconsistent with pcVA_F0

    at IFU.scala:822 assert(icWayPredWrEn || (pcVA_F0(idxBits+offBits-1,offBits) === icWayPredIdx_F0), ""ICache Way Predictor index is inconsistent with pcVA_F0""){noformat}
[https://simscope.internal.sifive.com/sigs/1367/cju8az42ws5q|https://simscope.internal.sifive.com/sigs/1367/cju8az42ws5q]
 ","17/May/22 11:13 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;Looks like this did not impact Mongoose, correct? SO I will change to affectsPreviously = No",17/May/22 12:15 PM;61b2a458657a0500706b9c39;Correct. This was introduced by the fix for [\[MAL-1842] BRQ drives incorrect RAS ptr/age when two branches execute - JIRA (atlassian.net)|https://sifive.atlassian.net/browse/MAL-1842].,"13/Jun/22 12:58 PM;5e13709185a8c90ecac9beb2;[~accountid:61b2a458657a0500706b9c39] It looks like the fix conforms to the expected arch spec behavior.  No changes needed in Dabble, correct?",13/Jun/22 1:08 PM;61b2a458657a0500706b9c39;No Dabble changes are needed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Dhrystone Power improvement in TGV,,,,,,MAL-1896,114616,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Cristóbal Ramirez Lazo,62632262d7f1b80069c030b8,Mehul Thakkar,622a8208db58c100687dd15a,Mehul Thakkar,622a8208db58c100687dd15a,5/7/2022 15:46,9/8/2022 10:22,9/28/2022 0:51,,,,,,,,,,,,,,Power,TGV_RTL/Top,,,,,,,,0,,,,"+*Goal:*+ overall >99% clock gating efficiency in TGV for Dhrystone. 

+*Suggestion:*+ We need a regional clock gate to makes sure vector unit is clock gated in WFI, Dhrystone and other idle scenarios.

+*Results:*+

* TGV power during WFI: 
* TGV power d",Cristóbal Ramirez Lazo,Josh Smith,Mehul Thakkar,Nicolas Brunie,,,,,,,,,,,,62632262d7f1b80069c030b8,5acffeafaa802f2a797a955c,622a8208db58c100687dd15a,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,02/Sep/22 7:25 PM;ug:0b24fe9c-e6cb-459c-8913-16efe143c42c;p670_dhrystone.PNG;https://sifive.atlassian.net/secure/attachment/77013/p670_dhrystone.PNG,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{repository={count=1, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-09T07:45:29.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2192,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz7sn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,56:31.5,07/May/22 3:56 PM;5acffeafaa802f2a797a955c;[~accountid:622a8208db58c100687dd15a] Do you have a database or report that you can link to?  Just to save Nicolas and others from having to run PowerArtist themselves first,"07/May/22 3:59 PM;622a8208db58c100687dd15a;We do not have any runs from P670 but these are the items from x280. There was a discussion in power meeting to add a regional clock gate for WFI, Dhrystone/ any other idle scenario when vector units should be clock gated. 

I understand x280 is different than p670 but some of the blocks could be re-use. 

iota92: /scratch/tsmc/cln7ff/pdtech/pa_runs/fed_20220504_x280/builds_make/coreip_x280_7nm_H240/power_analysis_dhrystone ","07/May/22 4:36 PM;5acffeafaa802f2a797a955c;Okay, we should probably update the description then because I think most of the modules you pointed out are probably x280-specific.  We can repurpose this as a general power reduction ticket for TGV, but I don’t think much of the x280 data will be useful for TGV/P570/P670.","07/May/22 5:19 PM;6065017e90e3950069cf01c5;[~accountid:5acffeafaa802f2a797a955c] is right, the arith sequencer is a specific Bullet vector module, as is the vector command queue ({{vcq}}).

TGV has an LLP as Bullet does ({{snm1_llp_out_mod}}), but the hierarchy (and the clock schemes) is very different.

The list of items to be optimize being Bullet specific, this task should be renamed.","07/May/22 5:25 PM;622a8208db58c100687dd15a;[~accountid:5acffeafaa802f2a797a955c] [~accountid:6065017e90e3950069cf01c5] changing the description to repurpose this ticket for regional clock gating for TGV, we can look at details once P670 simulations are available. ","07/May/22 6:13 PM;6065017e90e3950069cf01c5;If we use the dhrystone version compiled for P650 (I am not sure dhrystone can exploit vector or not, I think it is the later), we should be able to have first results pretty quickly as the only goal is to ensure clock gating efficiency. TGV design is still on going (in particular the Baler part) so results would be partial.",08/May/22 4:39 PM;622a8208db58c100687dd15a;[~accountid:6065017e90e3950069cf01c5] Dhrystone doesn’t use vectors ,01/Sep/22 8:31 PM;62632262d7f1b80069c030b8;Should we close this ticket ? I think it is duplicated [https://sifive.atlassian.net/browse/MAL-2192|https://sifive.atlassian.net/browse/MAL-2192|smart-link] ,"02/Sep/22 1:10 AM;6065017e90e3950069cf01c5;[~accountid:62632262d7f1b80069c030b8] I think this ticket was intended only for dhrystone while [https://sifive.atlassian.net/browse/MAL-2192|https://sifive.atlassian.net/browse/MAL-2192|smart-link] is a larger epic for power eval and optimization for TGV.

If we are happy with the clock gating efficiency in TGV for Dhrystone you can publish here the result and we can close the task.","02/Sep/22 7:44 AM;62632262d7f1b80069c030b8;After working on different tasks listed on[https://sifive.atlassian.net/browse/MAL-2192|https://sifive.atlassian.net/browse/MAL-2192|smart-link]

P670 Power Artist results (09/01/2022) for Dhrystone are the following :

{adf:display=block}
{""type"":""table"",""attrs"":{""isNumberColumnEnabled"":false,""layout"":""default"",""localId"":""dbb6fef5-64b3-46e6-8dba-204aba7df38b""},""content"":[{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Instance: /SiFive_CoreIPSubsystem""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Power Unit: mW""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Category                         ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Internal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Switching""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Leakage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Total""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""register""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""31.609""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""2.488""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""10.062""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""44.159""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""logic                             ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""32.448""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""49.776""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""11.063""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""93.287""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""memory""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""34.556""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.066""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""31.732""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""66.354""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""clock""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""6.628""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""19.591""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.384""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""26.603""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Subtotal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""105.241""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""71.921""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""53.241""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""230.403""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Percentage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""45.68%""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""31.22%""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""23.11%""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""100.00%""}]}]}]}]}
{adf}

{adf:display=block}
{""type"":""table"",""attrs"":{""isNumberColumnEnabled"":false,""layout"":""default"",""localId"":""f91e5c01-1dfa-4049-94e1-aea22c3b18cf""},""content"":[{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Power Unit: mW""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Category                         ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Internal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Switching""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Leakage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Total""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""register""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.104""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.000""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""1.592""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""1.696""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""logic                             ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.094""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.156""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""3.054""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""3.304""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""clock""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.026""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.099""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.060""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.185""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Subtotal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.224""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.255""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""4.706""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""5.185""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Percentage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""4.32%""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""4.92%""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""90.76%""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""100.00%""}]}]}]}]}
{adf}","02/Sep/22 7:25 PM;62632262d7f1b80069c030b8;The figure below shows the generated waves when running Dhrystone on p670.

{{./sitest --waves=fsdb --sim=vcs @../../../test-outlines/dhrystone.outline}}

There are shown the main TGV clocks (vrdu, vex, x2y, and baler). At the beginning of the simulation all the clocks are enabled since {{chickenBits.disableVPUClockGate}} is enabled. Once chickenBits are  configured, the signal {{chickenBits.disableVPUClockGate}} is disabled, and consequently, all clocks are disabled during the whole program execution since Dhrystone does not includes vector code.

!p670_dhrystone.PNG|width=1709,height=357!","08/Sep/22 10:22 AM;62632262d7f1b80069c030b8;On 09/08/2022 power results for Dhrystone are the following:

{adf:display=block}
{""type"":""table"",""attrs"":{""isNumberColumnEnabled"":false,""layout"":""default"",""localId"":""dbb6fef5-64b3-46e6-8dba-204aba7df38b""},""content"":[{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Instance: /SiFive_CoreIPSubsystem""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Power Unit: mW""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Category                         ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Internal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Switching""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Leakage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Total""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""register""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""31.606""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""2.488""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""10.066""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""44.160""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""logic                             ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""32.483""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""49.794""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""11.072""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""93.349""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""memory""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""34.555""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.066""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""31.732""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""66.353""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""clock""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""6.671""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""19.553""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.386""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""26.610""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Subtotal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""105.315""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""71.901""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""53.256""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""230.472""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Percentage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""45.70%""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""31.20%""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""23.11%""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""100.00%""}]}]}]}]}
{adf}

{adf:display=block}
{""type"":""table"",""attrs"":{""isNumberColumnEnabled"":false,""layout"":""default"",""localId"":""8774ec39-33e1-4887-aa87-e93fd0bf28d2""},""content"":[{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Instance: /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/tgv""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{""colspan"":5},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Power Unit: mW""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Category                         ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Internal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Switching""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Leakage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Total""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""register""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.093""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.000""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""1.594""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""1.687""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""logic                             ""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.093""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.157""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""3.057""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""3.307""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""clock""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.022""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.085""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.060""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.167""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Subtotal""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.208""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""0.242""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""4.711""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""5.161""}]}]}]},{""type"":""tableRow"",""content"":[{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""Percentage""}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""4.03%"",""marks"":[{""type"":""strong""}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""4.69%%"",""marks"":[{""type"":""strong""}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""91.28%"",""marks"":[{""type"":""strong""}]}]}]},{""type"":""tableCell"",""attrs"":{},""content"":[{""type"":""paragraph"",""content"":[{""type"":""text"",""text"":""100.00%"",""marks"":[{""type"":""strong""}]}]}]}]}]}
{adf}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[Power] IFU: SRAM clock gating improvements ,,,,,,MAL-1892,114612,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,Mehul Thakkar,622a8208db58c100687dd15a,Mehul Thakkar,622a8208db58c100687dd15a,5/7/2022 14:28,7/29/2022 9:03,9/28/2022 0:51,,,,,,,,,,,,,,Power,RTL/Frontend,,,,,,,,0,,,,"Adding this task to track SRAM power/clock gating in frontend. All SRAM instances could benefit by a clock gate outside based on Rd/wr and utilizing CEB when not in use. Clock gate output staging flops using rd enable if applicable. 

Will add further power details if needed. 

NLP, Branch Predictors, ICTag Waypred, ICData",John Ingalls,Mehul Thakkar,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,622a8208db58c100687dd15a,,,,,,,,,,,,,,,,,,,,,MAL-926,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz7rr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,55:26.1,07/May/22 5:55 PM;5bb6808b9ba2930990f81895;This was done to good effect for the L1dcTag/WayPred in [https://github.com/sifive/federation/pull/16844|https://github.com/sifive/federation/pull/16844|smart-link] and L1dcData in [https://github.com/sifive/federation/pull/16709|https://github.com/sifive/federation/pull/16709|smart-link] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[Power] BRQ clock gating improvements,,,,,,MAL-1891,114611,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,François Donati,624f6b22f813eb00692ee29a,Mehul Thakkar,622a8208db58c100687dd15a,Mehul Thakkar,622a8208db58c100687dd15a,5/7/2022 14:26,9/13/2022 8:56,9/28/2022 0:51,9/13/2022 8:56,,,,,,,,,,,,,Power,RTL/RDU,,,,,,,,0,,,,"Please split and improve clock gates for following, similar changes has been requested for Rob. 

\{/SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/rdu/brq/brqForceUpdVec /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/rdu/brq/brqIsBrVec  /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/rdu/brq/brqMispredVec  /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/rdu/brq/brqRslvVec}",François Donati,Josh Smith,Mehul Thakkar,,,,,,,,,,,,,624f6b22f813eb00692ee29a,5acffeafaa802f2a797a955c,622a8208db58c100687dd15a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1890,,,,,,,,,,,26/Jun/22 12:41 PM;ug:2705f964-33ce-446a-be5d-9a27412f841d;Screen Shot 2022-06-26 at 12.40.31 PM.png;https://sifive.atlassian.net/secure/attachment/73706/Screen+Shot+2022-06-26+at+12.40.31+PM.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-23T02:08:48.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,034eba4c1ceb4d1212c5d144d22649d274ff08dd,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz7rj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,38:21.2,07/May/22 2:38 PM;5acffeafaa802f2a797a955c;What might be more worthwhile is to break the {{brqPayloadClock}} into banks.  The “payload” is the information that is written once during allocation.  Right now there’s a single clock gate for the payload of all BRQ entries.  This should be split into multiple regions.,07/May/22 3:16 PM;622a8208db58c100687dd15a;[~accountid:5acffeafaa802f2a797a955c] You mean the brqFifo or all above as part of payload ? ,07/May/22 3:29 PM;5acffeafaa802f2a797a955c;Yes I mean the {{brqFifo}}.  Right now the entire FIFO has a single clock gate.,"23/Jun/22 9:06 AM;624f6b22f813eb00692ee29a;I merged the following change: https://github.com/sifive/federation/pull/23696
It divides {{brqFifo}} into 4 regions each with its own clock.
Registers listed in description are also divided in 4 regions that are enabled independently only when doing an update in them.

Using powerArtist flow, power estimation for {{brq}} goes down from 2.384 mW to 2.036 mW (~15% reduction).","26/Jun/22 12:33 PM;622a8208db58c100687dd15a;[~accountid:624f6b22f813eb00692ee29a] We need to clock gate the originally listed flops in this ticket, 

!Screen Shot 2022-06-26 at 12.40.31 PM.png|width=706,height=340!

 it again, can you please look at this hierarchy in PA and fix all big flop structures to about 90+DACGCE ? ","27/Jun/22 2:06 AM;624f6b22f813eb00692ee29a;The flops listed in the description and that are visible in your screenshot should now be split to have one enable for each of the 4 regions.

The way the code is generated causes {{brqRslvVec}}, which was previously a single signal with a size of number of BRQ entries, is replaced by multiple single bit registers {{brqRslvVec_r_*}} (the same applies for the other listed flops).

So based on your screenshot I believe you are missing that change: 034eba4c1ceb4d1212c5d144d22649d274ff08dd.

And if you do have it can you point me to the revision and config you are using to get that result ?",27/Jun/22 8:03 AM;622a8208db58c100687dd15a;Can you send me your PA run area please ,"27/Jun/22 8:08 AM;5acffeafaa802f2a797a955c;I don’t think it makes sense to add explicit clock gating for things like {{brqRslvVec}}.  That vector can have random bits set during any cycle as branches execute in IEX.  And it’s only going to be like less than 100 bits.  Other flop bit-vectors will have the same issue, like {{brqMispredVec}}.","27/Jun/22 8:30 AM;624f6b22f813eb00692ee29a;[~accountid:622a8208db58c100687dd15a] You can find a run with change I was refering to (cherry picked on older revision for comparison) on {{iota06}} at
{{/scratch/tsmc/cln7ff/fdonati/test_final/builds_make/coreip_p650_7nm_H240}}",13/Sep/22 8:56 AM;624f6b22f813eb00692ee29a;There is no remaining significant gain identified in BRQ.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[Power] ROB clock gating improvement ,,,,,,MAL-1890,114610,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,François Donati,624f6b22f813eb00692ee29a,Mehul Thakkar,622a8208db58c100687dd15a,Mehul Thakkar,622a8208db58c100687dd15a,5/7/2022 14:24,8/11/2022 9:39,9/28/2022 0:51,,,,,,,,,,,,,,Power,RTL/RDU,,,,,,,,0,,,,"Hi, 

As discussed in power meeting, can we do clock gating improvements in Rob ?



ob - split the bits in below items logically and add separate gaters. That will help reduce Rob level clock tree power. 

\{/SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/rdu/rob/robCommitPtrVec  /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/rdu/rob/robRetirePtrVec  /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/rdu/rob/robVec_cmpl /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/rdu/rob/robVec_grouped /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/rdu/rob/robVec_hasMem /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/rdu/rob/robVec_predFalse /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/rdu/rob/robVec_rslv. /SiFive_CoreIPSubsystem/tile_prci_domain/tile/core/rdu/rob/robVec_valid} ",Josh Smith,Mehul Thakkar,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,622a8208db58c100687dd15a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1891,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-08-04T09:40:09.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,,,,,,,,,,,,,,,,2|hzz7rb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,35:17.0,"07/May/22 2:35 PM;5acffeafaa802f2a797a955c;Some of those should be more straightforward because they either only get updated at dispatch, or they are one-hot pointers which can only move a few places per cycle: {{robCommitVec}}, {{robRetirePtrVec}}, {{robVec_grouped}}, {{robVec_hasMem}}.

The others can be updated at pretty much any cycle at random (at least for valid entries), and so adding logic to determine the enable would probably eat into a lot of the benefit.",07/May/22 2:44 PM;622a8208db58c100687dd15a;We can start with straight forward fixes first and evaluate power benefit. {{The list above is sorted based on power}} robVec_predFalse etc we can discuss as next steps. ,"31/May/22 7:43 AM;5acffeafaa802f2a797a955c;It was also pointed out that for P670, we add more fields to the ROB that are only useful when we are executing vector instructions.  So we could consider moving those fields under a different clock gate which is off when we are not execution vector instructions.",29/Jun/22 10:13 PM;622a8208db58c100687dd15a;on 06/28 PA runs Rob power has gone up further by 5mW. its about 3% increase in power. Looks like bunch of new logic is getting added. ,"30/Jun/22 4:44 AM;5acffeafaa802f2a797a955c;[~accountid:622a8208db58c100687dd15a] I think this may have something to do with MFC being made the default firrtl compiler a little less than 2 weeks ago in this PR: [https://github.com/sifive/federation/pull/23568|https://github.com/sifive/federation/pull/23568|smart-link] 

The verilog generation can be quite different now.  And I’m noticing that the clock gating efficiency seems to be worse.  The way that the verilog is generated for some flops now which have load enables does not use {{if()}} blocks.  Instead, the ternary operator is used to feed the old data back to the input of the flop.  For example:

Old:

{noformat}always @(poswedge clock) begin
    if (reset) begin // @[Reg.scala 35:20]
      io_instTrace_iType_0_r <= 4'h0; // @[Reg.scala 35:20]
    end else if (instTraceLoadEn) begin // @[Reg.scala 36:18]
      if (iTraceEn) begin // @[ROB.scala 1532:21]
        if (robExcValid_E2 & robExcTrap_E2 & excMonState_cause[63]) begin // @[ROB.scala 1533:89]
          io_instTrace_iType_0_r <= 4'h2; // @[ROB.scala 1534:13]
        end else begin
          io_instTrace_iType_0_r <= _GEN_10510;
        end
      end else begin
        io_instTrace_iType_0_r <= 4'h0; // @[ROB.scala 1531:9]
      end
    end
end{noformat}



New:

{noformat}always @(posedge clock) begin
    if (reset) begin
      io_instTrace_iType_0_r <= 4'h0;	// @[ROB.scala:464:85, Reg.scala:35:20]
    end else begin
      io_instTrace_iType_0_r <= instTraceLoadEn ? tmp : io_instTrace_iType_0_r;	// @[ROB.scala:1528:34, Reg.scala:35:20, :36:{18,22}]
    end
end{noformat}",07/Jul/22 1:27 PM;5acffeafaa802f2a797a955c;The first set of improvements were merged in with this commit {{01ee2096ab2363659e2c4a4b83debad272aea742}},07/Jul/22 7:06 PM;622a8208db58c100687dd15a;[~accountid:5acffeafaa802f2a797a955c] thanks my today’s runs are showing ~0.5% improvement with first set of improvements.,04/Aug/22 9:41 AM;5acffeafaa802f2a797a955c;Another set of improvements was just merged into master with commit {{ff1e296fb11b57d8f1e7070c24bd0e588607d326}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
LSU: separate ML2AW hold for weakly ordered reads and writes,,,,,,MAL-1889,114596,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Sanjay Gandham,6275860c66ad530069d5d1d8,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,5/6/2022 23:03,8/27/2022 9:34,9/28/2022 0:51,6/16/2022 3:02,,,,,,,,,,,,,Performance,RTL/LSU,,,,,,,,0,,,,"In TileLink V1, both writes and reads requests are made on the A-Channel, so we kept older writes ahead of younger reads by the term {{mdPipe_validToL2}} in {{ml2aw_hold}} at [https://github.com/sifive/federation/blob/17c8596e92e5e4c82c694aa3bfb83f7b1006b889/mallard/src/main/scala/core/mallard/MSHR_Mallard.scala#L654|https://github.com/sifive/federation/blob/17c8596e92e5e4c82c694aa3bfb83f7b1006b889/mallard/src/main/scala/core/mallard/MSHR_Mallard.scala#L654].

In CCL and TileLink2, there are _separate_ channels for writes and reads, so we can improve performance by parallelizing writes and reads requests to non-mmio weakly-ordered memory by qualifying this term with {{(ml2aw_mmio && mdPipe_validToL2) || mdPipe_validMmioToL2}}.

[~accountid:5e1371705361330daaeaf389] found that P650 (APv0) {{memcpy}} performance is negatively impacted by this: L1HWPF requests are stuck in the ML2AW stage while the CCL-RD channel is ready.",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,MAL-71,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-175,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Load/Store,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-15T17:30:00.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/23587,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz7o7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,2,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jun/22 5:43 PM;5bb6808b9ba2930990f81895;These are the specific changes to start by making:

# Create the signal {{mdPipe_validMmioToL2}}.  This signal does not exist yet, but should follow the same structure as {{mdPipe_validToL2}}, with additional use of terms {{mdr/mdf_metaInfo_q.mmio}} in their respective MDR and MDF pipe stages.
# Use this new signal to replace the use of {{mdPipe_validToL2}} in the CCL portion of the equation for {{ml2aw_hold}}:
{noformat}   ml2aw_hold :=
-    (  (ml2aw_metaInfo_q.getOrAcquire && (!io.tl_out_a.map(_.ready).getOrElse(io.ccl_out_rd.get.ready) || mdPipe_validToL2))  // l2ReqArb_ml2aw.io.in(0).ready
+    (  (ml2aw_metaInfo_q.getOrAcquire && (!io.tl_out_a.map(_.ready && !mdPipe_validToL2).getOrElse(io.ccl_out_rd.get.ready && !mdPipe_validMmioToL2)))  // l2ReqArb_ml2aw.io.in(0).ready{noformat}
# Use this new signal to replace the use of {{mdPipe_validToL2}} in the CCL RD channel request arbitration:
{noformat}   (io.ccl_out_rd zip cclRdArb_ml2aw).foreach { case (cclRd, rdArb) =>
     cclRd <> rdArb.io.out
-    when (mdPipe_validToL2) {
+    when (mdPipe_validMmioToL2) {{noformat}



After making these changes, then test it with the normal {{test-ci-post-merge.yml}} regressions like the Mallard directions say, then we’ll ask Brian Grayson about reproducing this performance test to see if this improvement works\!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Benchmark Scores test with and without disable*ClockGate chicken bits,,,,,,MAL-1888,114587,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,5/6/2022 16:33,5/10/2022 12:51,9/28/2022 0:51,5/6/2022 21:58,,,,,,,,,,,,,Verification,,,,,,,,,0,,,,"Idea from [~accountid:5e1371705361330daaeaf389] to find bugs like [https://sifive.atlassian.net/browse/MAL-1832|https://sifive.atlassian.net/browse/MAL-1832|smart-link] faster:

{quote}Has anyone tried running Dhrystone and CoreMark with all clock-gating disabled vs. enabled? In theory, should the perf be identical, after these latest fixes? That might tease out other situations where the clock gaters are impairing things unexpectedly.{quote}",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,MAL-1887,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1832,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-10T12:44:47.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/22337,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz7m7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Chicken CSR: OR-on bits from PlusArg,,,,,,MAL-1887,114586,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,5/6/2022 16:31,5/6/2022 23:34,9/28/2022 0:51,5/6/2022 17:17,,,,,,,,,,,,,RTL/Tile,,,,,,,,,0,,,,We noticed in [https://sifive.atlassian.net/browse/MAL-1886|https://sifive.atlassian.net/browse/MAL-1886|smart-link] that the {{+chickenCSR_setVal}} added way back when in [https://sifive.atlassian.net/browse/MAL-564|https://sifive.atlassian.net/browse/MAL-564|smart-link] does not take effect on the {{disable*ClockGate}} inputs to all the units.,John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,MAL-564,MAL-1886,,,MAL-1888,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-06T18:28:21.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/22332,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz7lz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Chicken CSR: connect disableClockGate to all ClockGates,Chicken CSR: connect disableClockGate,,,,,MAL-1886,114583,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Won't Do,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,5/6/2022 15:35,5/17/2022 23:01,9/28/2022 0:51,5/6/2022 16:20,mongoose.00.00,mongoose.01.00,mongoose.02.00,narwhal.00.00,narwhal.01.00,narwhal.02.00,narwhal.03.00,narwhal.04.00,,,,,RTL/Frontend,,,,,,,,,0,,,,Each {{ClockGate}} module should be enabled by their respective {{disable*ClockGate}} chicken bit.,John Ingalls,Josh Smith,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1868,MAL-1887,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-567,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-06T23:27:58.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,"This issue does not manifest in customer deliverables, as such not a customer facing errata. ",,,Minor,,Low,,P500,,,,1. BRC: Should not Publish,,,,,,,,,,https://github.com/sifive/federation/pull/22327,,,n/a,,,,,,,,,Inspection,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,,,,,,,2|hzz7lb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,03:30.7,06/May/22 3:36 PM;5bb6808b9ba2930990f81895;This would have helped as a work-around for [https://sifive.atlassian.net/browse/MAL-1868|https://sifive.atlassian.net/browse/MAL-1868|smart-link] ,06/May/22 4:03 PM;5acffeafaa802f2a797a955c;[~accountid:5bb6808b9ba2930990f81895] which clock gates are _not_ correctly controlled by the disable bits?  The IFU clock gate should be controlled by the {{disableICacheClockGate}} bit.,"06/May/22 4:20 PM;5bb6808b9ba2930990f81895;Ohh nevermind, I traced through, and yes, the ClockGates are disabled by the chicken bits, but not by the PlusArg.  I'll open a new Jira ticket for OR'ing from the PlusArg.","06/May/22 4:25 PM;5acffeafaa802f2a797a955c;Although looking at it now, {{tgvDispBufClockEn_q}} is always true.  We should probably fix that.","06/May/22 4:25 PM;5bb6808b9ba2930990f81895;{quote}Although looking at it now, {{tgvDispBufClockEn_q}} is always true. We should probably fix that.{quote}

I added a TODO comment for it at least in [https://github.com/sifive/federation/pull/22329|https://github.com/sifive/federation/pull/22329|smart-link] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Long path from Rsink to trace encoder ICG,,,,,,MAL-1885,114579,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Ernie Edgar,5b9050cdf58aee2b8d67281e,Michael White,60f1ea6c6491110069392f8f,Michael White,60f1ea6c6491110069392f8f,5/6/2022 14:43,5/8/2022 5:56,9/28/2022 0:51,5/8/2022 5:55,,,,,,,,,,,Orca DR,,Implementation,RTL/Tile,,,,,,,,0,,,,"I am seeing P550 4MC paths over 60 stages to traceEncoder ICG.  This is probably pushing what we want, especially if we plan to increase frequency.

Startpoint: sbus_junction/coupler_from_tile1/rsink/bundleOut_0_a_sink/deq_gated_q/elts_0_address_reg\[29]/CP
sbus_junction/coupler_from_tile1/auto_tl_out_a_bits_address\[29]
sbus_junction/fixer/auto_in_2_a_bits_address\[29]
sbus_junction/fixer/auto_out_2_a_valid
sbus_junction/jbar/auto_out_2_a_valid
subsystem_private_sbus/fixer/auto_in_2_a_valid
subsystem_private_sbus/system_bus_xbar/auto_in_2_a_valid
subsystem_private_sbus/system_bus_xbar/auto_out_1_a_bits_opcode\[2] 
subsystem_private_sbus/coupler_to_port_named_axi4_sys_port/bridge_for_axi4_sys_port/widget/repeated_repeater/io_enq_bits_opcode\[2]
subsystem_private_sbus/coupler_to_port_named_axi4_sys_port/bridge_for_axi4_sys_port/tl2axi4/auto_in_a_bits_opcode\[2] 
subsystem_private_sbus/coupler_to_port_named_axi4_sys_port/bridge_for_axi4_sys_port/widget/auto_out_a_ready
subsystem_private_sbus/coupler_to_port_named_axi4_sys_port/bridge_for_axi4_sys_port/widget/repeated_repeater/place_opt_design_FE_OFN250097_tl2axi4_auto_in_a_ready
subsystem_private_sbus/coupler_to_port_named_axi4_sys_port/bridge_for_axi4_sys_port/widget/auto_in_a_ready
subsystem_private_sbus/coupler_to_port_named_axi4_sys_port/bus_blocker/auto_node_out_out_a_ready
subsystem_private_sbus/coupler_to_port_named_axi4_sys_port/bus_blocker/blockADBar/auto_in_a_ready
subsystem_private_sbus/system_bus_xbar/auto_out_1_a_ready
subsystem_private_sbus/fixer/auto_out_5_a_ready
sbus_junction/auto_coupler_to_bus_named_subsystem_private_sbus_widget_out_5_a_ready
sbus_junction/fixer/auto_out_5_a_ready
sbus_junction/coupler_from_trace_sba/auto_tl_out_a_ready
traceFunnel/auto_traceSink_sba_out_a_ready
traceFunnel/traceGapper/io_streamOut_ready
traceFunnel/tracePacker/io_stream_ready
traceFunnel/sinkArbiter/io_out_ready
traceEncoder_1/place_opt_design_FE_OCPN7689_traceFunnel_auto_sink_in_1_a_ready
traceEncoder_1/tracePacker/io_btm_ready
traceEncoder_1/traceFrontend/traceInBlock/inner_/io_btmEvent_ready
traceEncoder_1/traceFrontend/traceInBlock/inner_/io_btmEvent_sink/deq_gated_q/CLKGATE_RC_CG_HIER_INST61/enable",Ernie Edgar,John Ingalls,Josh Smith,Michael White,,,,,,,,,,,,5b9050cdf58aee2b8d67281e,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,60f1ea6c6491110069392f8f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,06/May/22 2:55 PM;ug:1ac7ef4a-770f-4228-8d67-cce0b8e5c808;image-20220506-215514.png;https://sifive.atlassian.net/secure/attachment/71575/image-20220506-215514.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-08T05:54:33.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,N/A,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/a70def504f2f0cad202ca2ea3161487bd91dd168,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz7kf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,04:14.1,"06/May/22 2:55 PM;60f1ea6c6491110069392f8f;!image-20220506-215514.png|width=732,height=576!",06/May/22 4:04 PM;5acffeafaa802f2a797a955c;This is probably more appropriate for [~accountid:5b9050cdf58aee2b8d67281e] to look at.,"06/May/22 4:35 PM;5b9050cdf58aee2b8d67281e;[~accountid:5acffeafaa802f2a797a955c] [~accountid:60f1ea6c6491110069392f8f] The simplest solution is to change the config to add a TLBuffer between the Trace Encoder and Trace Funnel, same as multi-cluster designs.  This will break the combinatorial path at that point.  Just add lines 4,5,6 below to p550mc.json.

{noformat}{
  ""definitionName"": ""traceEncoder"",
  ""ref"": ""path:trace/trace_encoder_mallard.json"",
  ""paramsOverride"": {
    ""funnelTimingStages"": 1
  }
},{noformat}",08/May/22 5:56 AM;5b9050cdf58aee2b8d67281e;Master: [a70def5|https://github.com/sifive/federation/commit/a70def504f2f0cad202ca2ea3161487bd91dd168],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] propagate globalID through TGV to WB (for cosim use),,,,,,MAL-1884,114570,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/6/2022 14:00,5/10/2022 13:52,9/28/2022 0:51,5/10/2022 13:52,,,,,,,,,,,Panda DR,,TGV_RTL/Top,TGV_RTL/VEX,Verification,,,,,,,0,,,,globalID may not be properly propagated during TGV DISpatch and as you noted [~accountid:609d7e1f5998a6006800dcc5] we may need to stage it a couple/three of cycles to propagate it from tag broadcast to WB (such that it can be tapped by cosim).,Abhinay Kayastha,Andrew Hanselman,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,5e13703feb2ae70ea1dfe6b2,609d7e1f5998a6006800dcc5,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-10T13:36:17.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,118853e8ba378b7f95585f69821cb64013483617,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz7if:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,02:13.5,06/May/22 2:02 PM;609d7e1f5998a6006800dcc5;FYI [~accountid:5e13703feb2ae70ea1dfe6b2] [~accountid:5a938e9c0913194d2d262658] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] LSU: Perf: Vector cache allocation policy,,,,,,MAL-1883,114497,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Sanjay Gandham,6275860c66ad530069d5d1d8,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,5/5/2022 14:26,9/13/2022 8:53,9/28/2022 0:51,7/29/2022 9:45,,,,,,,,,,,,,Performance,RTL/LSU,TGV_RTL/Top,,,,,,,0,,,,"In the current Mallard design, Loads allocate into the L1 Data Cache, not Stores.  I.e., the L1 Data Cache is “Read-Allocate and no-Write-Allocate”.

There are CSR bits for whether to allocate Stores into the L1 Data Cache from [https://sifive.atlassian.net/browse/MAL-63?focusedCommentId=205304|https://sifive.atlassian.net/browse/MAL-63?focusedCommentId=205304|smart-link].

We could add more CSR bits and heuristics about / predictors for when to allocate Vector Loads (and Stores?) into the L1 Data Cache, and whether to not update the L1DC PLRU Replacement Policy after allocating them.

This mechanism relates to the hooks that we will put in place for [https://sifive.atlassian.net/browse/MAL-1591|https://sifive.atlassian.net/browse/MAL-1591|smart-link].",Alexandre Solomatnikov,Benoy Alexander,Binayak Tiwari,Brian Grayson,Edward Brekelbaum,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Knute Lingaard,Nicolas Brunie,York Ma,Zhen Wei,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5e1370feefa19b0e976b5c24,60a963ed8cbda700681b40c1,5e1371705361330daaeaf389,5e1372d362aed90daa48f7b1,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,5e1374fb7a22c90da0c60495,6065017e90e3950069cf01c5,610ff6b6fc68c1006924d7bd,5e49f622a17f930c9b94b6cd,,,,,,,,,,MAL-63,MAL-818,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1591,MAL-1522,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Load/Store,Vector,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=7}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":7,""lastUpdated"":""2022-07-28T15:16:14.000-0700"",""stateCount"":7,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":7,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24849,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,7,0,,,,100,,,,,,,,,,,,,,,2|hzz72v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,10,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,48:23.6,"07/Jun/22 6:34 PM;5bb6808b9ba2930990f81895;Initial micro-architecture of FSM and CSR bits we should start by adding (and I welcome feedback on this draft):

# Control bits in the {{LSUChickenCSR}} (find two adjacent unused bits)
## {{loadL1NoAllocVec}}: L1 No-Allocate for Vector Load
## {{ntlL1Vec}}: Non-Temporal L1 Vector (if L1 Allocate)
# one FSM bit {{mshrE_l1Temporal}} similar to the existing bit {{mshrE_l1Allocate}} inside each L1MSHR Entry.  Vector memory accesses with {{ntlL1Vec}}, Hardware Prefetches (HWPF) for scalar with {{hwpfCSR.ntlL1}} or vector with {{hwpfCSR.ntlL1}} or {{ntlL1Vec}}, should establishing a L1MSHR Entry with this bit cleared.  Operations that reuse a L1MSHR Entry should update (or-on) this bit if they would have set it themselves.
# use that bit {{mshrE_l1Temporal}} to allow updating the PLRU when establishing in the L1 Data Cache by and-ing into {{mdf_mruSetWay.valid}}.
# HWPF Engines should remember whether they were used by a Scalar or Vector Load, similar to in the Bullet SPF.  If a HWPF Engine is only used by a Vector load, then it should send only L2 prefetches when {{loadL1NoAllocVec}}.
# And while we’re at it, another control bit {{ntlL1}} in a HWPF CSR for L1HWPFs to set the {{mshrE_l1Temporal}} FSM bit.



Further enhancement is very much possible with more advanced predictors to set these hooks.","10/Jun/22 2:48 AM;610ff6b6fc68c1006924d7bd;[~accountid:5bb6808b9ba2930990f81895]  I got a question on the prefetch policies for NTL. When {{ntlL1}} in HWPF CSR is set, what should the MSHR do?
- Option 1. Treat all PFL1s (both scalar and vector) as NTL? or
- Option 2. Only treat PFL1s for vectors as NTL?

cc. [~accountid:5e49f622a17f930c9b94b6cd] ","10/Jun/22 3:53 AM;5bb6808b9ba2930990f81895;Let’s go with Option 1: {{hwpfCSR.ntlL1}} should send all L1HWPFs (both scalar and vector) to the L1MSHRs treat as NTL.

If L1 Allocate for Vector Load ({{not loadL1NoAllocVec}}) then {{LSUChickenCSR.ntlL1Vec}} should send both Vector Loads and L1HWPFs-for-Vector to the L1MSHRs treat as NTL.","10/Jun/22 7:01 AM;5e1371705361330daaeaf389;Are you saying that we want *all* HWPF to be kept as LRU (bullet 2) regardless of CSR settings? If we are in high confidence, that seems risky, as we could have multiple prefetches to the same set, and thus allow a future prefetch to kick out an older-but-not-yet-consumed prefetch. We ran into this previously….","11/Jun/22 4:59 PM;5bb6808b9ba2930990f81895;{quote}(bullet 2) regardless of CSR settings{quote}

No, bullet 2 in my original comment uses the CSR settings from bullet 1.  I’ll edit the comment to actually say that, sorry for the confusion.","24/Jun/22 3:00 AM;610ff6b6fc68c1006924d7bd;[~accountid:5bb6808b9ba2930990f81895] I am to confirm my understanding on how vector accesses update the cache replacement states. When  {{ntlL1Vec}} enabled,
1. MSHR Fill will place the cache line in the LRU way (blocking updates to the PLRU states), and
2. A read hit will touch the accessed line as the MRU way.
Am I correct?
Cc. [~accountid:5e49f622a17f930c9b94b6cd]  ","07/Jul/22 2:08 PM;5bb6808b9ba2930990f81895;Two additional interactions with the HWPF:

# Vector loads that _hit_ on entries in the L1 D-Cache _that were established by HWPF_ should not update PLRU either if {{ntlL1Vec=true}}.  This is because when the HWPF is working well on behalf of a vector loads, the HWPF should allocate, then the vector loads are expected to hit _once_ in the L1 D-Cache.  This will require an additional blocking term in {{lstc_mruSetWay.valid}} (but not in the other uses of that equation for the L1dcWayPred) using the bit(s) in the L1 D-Cache Tag Array from [https://sifive.atlassian.net/browse/MAL-818|https://sifive.atlassian.net/browse/MAL-818|smart-link].
# [https://sifive.atlassian.net/browse/MAL-1522|https://sifive.atlassian.net/browse/MAL-1522|smart-link] that map into fewer sets will need more ways associativity versus short prefetch strides.  Therefore, large stride prefetches should ignore the {{ntlL1Vec}} CSR bit and still update the PLRU if allocating the L1 D-Cache.",13/Sep/22 1:10 AM;5e49f622a17f930c9b94b6cd;[~accountid:5bb6808b9ba2930990f81895] Is {{loadL1NoAllocVec}} enabled by default in {{LSUChickenCSR}}?,"13/Sep/22 8:53 AM;5bb6808b9ba2930990f81895;No.  If we want that for vector workloads, then we’ll have to set that bit via boot software or plusarg, similar to the HWPF tuning CSRs.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][RVV 14.1 part1] vred(min|max)[u].vs,,,,,,MAL-1882,114495,111460,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/5/2022 14:22,7/11/2022 21:30,9/28/2022 0:51,6/24/2022 13:35,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,Add oldData bypass for 1st stage uOP of min/max reduction: [https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2277179947/TGV+Min+Max+reduction+prototype+in+VexPipe|https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2277179947/TGV+Min+Max+reduction+prototype+in+VexPipe|smart-link] ,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1764,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-24T13:34:54.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/39891fac937821ad7f8f164064707225242886c6,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,100,,,,,,,,,,,,,,,2|hzz72f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,111460,[TGV][RVV 14.1] Vector Single-Width Integer Reduction,Done
[TGV][RVV 14.1 part0] unit to support vred(sum|and|or|xor),,,,,,MAL-1881,114493,111460,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/5/2022 14:13,7/11/2022 21:30,9/28/2022 0:51,6/1/2022 14:48,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1764,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-05-20T15:49:08.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/22341,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz71z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,111460,[TGV][RVV 14.1] Vector Single-Width Integer Reduction,Done
[TGV] [Mask Unit] PRF Byte Readable,,,,,,MAL-1880,114487,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,5/5/2022 13:51,5/6/2022 10:03,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Optimization for mask source reads: Make v0 PRF byte readable. Normal source reads will enable all bytes, mask source reads will only read relevant mask bytes based on uop index and SEW.",Andrew Hanselman,,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz70n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV/backlog] implement unique id for uop sequence in TGV sequencer,,,,,,MAL-1879,114483,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/5/2022 13:49,7/26/2022 13:21,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,,,,"Currently complex operations are identified based on their GID (e.g. permute, maybe some reduction)

This implies that each ROB group is limited to one instruction/uop-sequence of each type ([https://sifive.atlassian.net/browse/MAL-1730|https://sifive.atlassian.net/browse/MAL-1730|smart-link] ). This constraint can be removed if we can differentiate several uop-sequences.

One way we could do that is used both the GID and an extra identifier generated by the {{VectorSequencer}}.

This sub-identifier {{subId}}could be a N-bit wide counter where {{N=log2(ROB group size)}}, the counter is incremented for each complex operation sequence, and wraps. Because of the counter range not two sequences with the same GID can have the same sub counter.

If sequences originate from insn in different ROB groups, they will be differentiated by their GID.

({{gid}}, {{subId}}) is enough to differentiate any complex instructions.",Brad Wu,Kathlene Magnus,Nicolas Brunie,,,,,,,,,,,,,62103777eb2978006893b778,5e137458efa19b0e976b5c7a,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz6zr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,25:09.6,"11/Jul/22 5:25 AM;62103777eb2978006893b778;This could benefit {{viota}} too, since it is also identified by GID like complex instruction.

I could work on this after [https://sifive.atlassian.net/browse/MAL-2126|https://sifive.atlassian.net/browse/MAL-2126|smart-link] is merged.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] [Mask Unit] Accumulator Result Writeback,,,,,,MAL-1878,114473,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,5/5/2022 13:23,7/1/2022 6:56,9/28/2022 0:51,6/28/2022 12:53,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,Accumulators are used to collect the results of vector instructions which only write partial VLEN values per uop. The final uop in a sequence enables a full accumulator writeback to the relevant PRF. All-1s are written back to the PRF for bits not driven/updated by the mask result.,Andrew Hanselman,Kira Tsao,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,5e1a4f5ec578120daca5ff8e,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2056,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-28T13:37:05.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3e8e1337688a1655b7e9394b34f63d1baccdd373,,,n/a,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz6xj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] [Mask Unit] Accumulator Allocation / Tracking,,,,,,MAL-1877,114465,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,5/5/2022 13:13,5/12/2022 16:46,9/28/2022 0:51,5/9/2022 8:20,,,,,,,,,,,Panda DR,,TGV_RTL/RDU,,,,,,,,,0,,,,Mask unit accumulators are allocated in scalar rename. This is very similar to X2Y pointer tracking and can be managed in the same way.,Andrew Hanselman,,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-09T08:19:51.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1fa6c2b7ea6fd2213bb49d823ac56d460ca1f6c7,,,,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz6vr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
RDU Pipe Assignment Improvements,,,,,,MAL-1876,114446,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,5/5/2022 9:00,9/6/2022 8:11,9/28/2022 0:51,,,,,,,,,,,,,,RTL/RDU,,,,,,,,,0,,,,"Based on some poor behavior corner case scenarios of the existing RDU pipe assignment ([https://sifive.atlassian.net/browse/MAL-1621|https://sifive.atlassian.net/browse/MAL-1621|smart-link] ). There are some small improvements that can be made, but some studies likely required to find optimal solution.",Andrew Hanselman,,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1621,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-06T08:01:04.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,2|hzz6rz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Aug/22 1:33 PM;609d7e1f5998a6006800dcc5;Pipe binding / greedy bypass study: [https://sifive.atlassian.net/wiki/spaces/CIP/pages/2338193409/SPARTA-505+Improve+Dispatch+Policy+and+Issue+Queue+Assignment|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2338193409/SPARTA-505+Improve+Dispatch+Policy+and+Issue+Queue+Assignment|smart-link] 

Dabble modeling: [https://sifive.atlassian.net/browse/SPARTA-2149|https://sifive.atlassian.net/browse/SPARTA-2149|smart-link] ","01/Sep/22 9:27 AM;609d7e1f5998a6006800dcc5;RTL is implemented, waiting on dabble model to detail potential performance benefit.","06/Sep/22 8:11 AM;609d7e1f5998a6006800dcc5;Datapoints below are for RTL with improved wrap behavior (any integer, not truncated)

Any pipe assignment overlap

* Coremark: 8.534
* Dhrystone: 7.953

Exact pipe assignment (alias for ""same type of instruction"" / ""using the same execution resource"")

* Coremark: 8.633
* Dhrystone: 7.966",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
FPMulAddRecFNCombined dedup issue in p650mc,FPMulAddRecFNCombined ,,,,,MAL-1874,114369,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,5/4/2022 13:15,5/5/2022 9:48,9/28/2022 0:51,5/5/2022 9:48,,,,,,,,,,,,,RTL/FEX,,,,,,,,,0,,,,"cmd to generate

{noformat}wake -vx 'deliver (HAPS,Nil) VCS Nil largeFIRRTL withoutIPXACT enableFPGA  (scdJSON _ ""specs/design/standard/p650mc.json"")'{noformat}

Error message:

{noformat}===== 'MallardTile', 'MallardTile_1', 'MallardTile_2', 'MallardTile_3' are marked as ""must deduplicate"", but did not deduplicate. =====
TileResetDomain
??? (MallardTile)
    ??? MallardCore
        ??? FEX
            ??? FexPipe
            ?   ??? FexPipe_Anon
            ?   ?   ??? FPMulAddRecFNCombined
            ?   ?       ??? FPMulAddRecFNCombined_Anon [16]
            ?   ?       ??? FPMulAddRecFNCombined_Anon_1 [17]
            ?   ??? FexPipe_Anon_1
            ?       ??? FPMulAddRecFNCombined_1
            ?           ??? FPMulAddRecFNCombined_Anon_2 [18]
            ?           ??? FPMulAddRecFNCombined_Anon_3 [19]
            ??? FexPipe_1
                ??? FexPipe_Anon_2
                ?   ??? FPMulAddRecFNCombined_2
                ?       ??? FPMulAddRecFNCombined_Anon_4 [20]
                ?       ??? FPMulAddRecFNCombined_Anon_5 [21]
                ??? FexPipe_Anon_3
                    ??? FPMulAddRecFNCombined_3
                        ??? FPMulAddRecFNCombined_Anon_6 [22]
                        ??? FPMulAddRecFNCombined_Anon_7 [23]
TileResetDomain_1
??? (MallardTile_1)
    ??? MallardCore_1
        ??? FEX_1
            ??? FexPipe_2
            ?   ??? FexPipe_Anon_4
            ?   ?   ??? FPMulAddRecFNCombined_4
            ?   ?       ??? FPMulAddRecFNCombined_Anon_8 [0]
            ?   ?       ??? FPMulAddRecFNCombined_Anon_9 [1]
            ?   ??? FexPipe_Anon_5
            ?       ??? FPMulAddRecFNCombined_5
            ?           ??? FPMulAddRecFNCombined_Anon_10 [2]
            ?           ??? FPMulAddRecFNCombined_Anon_11 [3]
            ??? FexPipe_3
                ??? FexPipe_Anon_6
                ?   ??? FPMulAddRecFNCombined_6
                ?       ??? FPMulAddRecFNCombined_Anon_12 [4]
                ?       ??? FPMulAddRecFNCombined_Anon_13 [5]
                ??? FexPipe_Anon_7
                    ??? FPMulAddRecFNCombined_7
                        ??? FPMulAddRecFNCombined_Anon_14 [6]
                        ??? FPMulAddRecFNCombined_Anon_15 [7]
...
Failure candidates:
 - [0] Modules 'FPMulAddRecFNCombined_Anon' and 'FPMulAddRecFNCombined_Anon_8' likely should dedup but do not.
 - [1] Modules 'FPMulAddRecFNCombined_Anon_1' and 'FPMulAddRecFNCombined_Anon_9' likely should dedup but do not.
 - [2] Modules 'FPMulAddRecFNCombined_Anon_2' and 'FPMulAddRecFNCombined_Anon_10' likely should dedup but do not.
 - [3] Modules 'FPMulAddRecFNCombined_Anon_3' and 'FPMulAddRecFNCombined_Anon_11' likely should dedup but do not.
 - [4] Modules 'FPMulAddRecFNCombined_Anon_4' and 'FPMulAddRecFNCombined_Anon_12' likely should dedup but do not.
 - [5] Modules 'FPMulAddRecFNCombined_Anon_5' and 'FPMulAddRecFNCombined_Anon_13' likely should dedup but do not.
 - [6] Modules 'FPMulAddRecFNCombined_Anon_6' and 'FPMulAddRecFNCombined_Anon_14' likely should dedup but do not.
 - [7] Modules 'FPMulAddRecFNCombined_Anon_7' and 'FPMulAddRecFNCombined_Anon_15' likely should dedup but do not.
 - [8] Modules 'FPMulAddRecFNCombined_Anon' and 'FPMulAddRecFNCombined_Anon_16' likely should dedup but do not.
 - [9] Modules 'FPMulAddRecFNCombined_Anon_1' and 'FPMulAddRecFNCombined_Anon_17' likely should dedup but do not.
 - [10] Modules 'FPMulAddRecFNCombined_Anon_2' and 'FPMulAddRecFNCombined_Anon_18' likely should dedup but do not.
 - [11] Modules 'FPMulAddRecFNCombined_Anon_3' and 'FPMulAddRecFNCombined_Anon_19' likely should dedup but do not.
 - [12] Modules 'FPMulAddRecFNCombined_Anon_4' and 'FPMulAddRecFNCombined_Anon_20' likely should dedup but do not.
 - [13] Modules 'FPMulAddRecFNCombined_Anon_5' and 'FPMulAddRecFNCombined_Anon_21' likely should dedup but do not.
 - [14] Modules 'FPMulAddRecFNCombined_Anon_6' and 'FPMulAddRecFNCombined_Anon_22' likely should dedup but do not.
 - [15] Modules 'FPMulAddRecFNCombined_Anon_7' and 'FPMulAddRecFNCombined_Anon_23' likely should dedup but do not.
 - [16] Modules 'FPMulAddRecFNCombined_Anon' and 'FPMulAddRecFNCombined_Anon_24' likely should dedup but do not.
 - [17] Modules 'FPMulAddRecFNCombined_Anon_1' and 'FPMulAddRecFNCombined_Anon_25' likely should dedup but do not.
 - [18] Modules 'FPMulAddRecFNCombined_Anon_2' and 'FPMulAddRecFNCombined_Anon_26' likely should dedup but do not.
 - [19] Modules 'FPMulAddRecFNCombined_Anon_3' and 'FPMulAddRecFNCombined_Anon_27' likely should dedup but do not.
 - [20] Modules 'FPMulAddRecFNCombined_Anon_4' and 'FPMulAddRecFNCombined_Anon_28' likely should dedup but do not.
 - [21] Modules 'FPMulAddRecFNCombined_Anon_5' and 'FPMulAddRecFNCombined_Anon_29' likely should dedup but do not.
 - [22] Modules 'FPMulAddRecFNCombined_Anon_6' and 'FPMulAddRecFNCombined_Anon_30' likely should dedup but do not.
 - [23] Modules 'FPMulAddRecFNCombined_Anon_7' and 'FPMulAddRecFNCombined_Anon_31' likely should dedup but do not.

Writing error report(s) to /workspace/build/product-coreip-sifive/p650mc/verilog/design/dedup_failures...
Writing /workspace/build/product-coreip-sifive/p650mc/verilog/design/dedup_failures/report_0.rpt...
Writing relevant modules to /workspace/build/product-coreip-sifive/p650mc/verilog/design/dedup_failures/modules...
Exception in thread ""main"" firrtl.transforms.MustDeduplicateTransform$DeduplicationFailureException: Modules marked 'must deduplicate' failed to deduplicate! See error reports in build/product-coreip-sifive/p650mc/verilog/design/dedup_failures
===== DELIVERY RESULTS =====
Fail (Error ""p650mc: Non-zero exit status (Exited 1) for 'java -Xmx92G -Xss32M -cp build/java/com.sifive/federation_2.13-0.1.jar:build/java/org.json4s/json4s-jackson_2.13-3.6.12.jar:build/java/org.scala-lang/scala-library-
...{noformat}",Eric Tai,Erik Danie,Kira Tsao,Nicolas Brunie,,,,,,,,,,,,6147af577a3c8800671c7e9f,5bb24c781767377761ba6913,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1831,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0007c5373525cb6f11af29e3b92b0254e55887e7,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,"wake -vx 'deliver (HAPS,Nil) VCS Nil largeFIRRTL withoutIPXACT enableFPGA  (scdJSON _ ""specs/design/standard/p650mc.json"")'",,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-05T09:48:08.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Other -- Put in description,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz6bz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/May/22 1:17 PM;5e1a4f5ec578120daca5ff8e;Thanks to the investigation from [~accountid:6065017e90e3950069cf01c5] , we are able to fix by changing {{import chisel3.util.experimental.InlineInstance}} to {{import sifive.enterprise.util.InlineInstance}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] fix timing issue in VectorShiftUnit (shift/convert),,,,,,MAL-1873,114351,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/4/2022 9:13,8/1/2022 4:05,9/28/2022 0:51,7/25/2022 19:30,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"The {{VectorShiftUnit}} is not meeting timing by a wide margin (around {{-450ps}} slack). It needs to be retimed over more than one cycle to fit into the target frequency.

{noformat}group REG2REG with 1 path(s)
group: REG2REG
-----------------------------------------------------------------------------------------------------------------------------------
group      #minI  #maxI   path_start             path_end                  num     min     max   level fanout drive  min;max ulvt %
-----------------------------------------------------------------------------------------------------------------------------------
REG2REG    #0     #999    core/tgv/vex/exPipes_* core/tgv/vex/exPipes_*    579    -0.447  -0.446 60-73   3.78  3.42   95.4;100.0
-----------------------------------------------------------------------------------------------------------------------------------
1/1 path families displayed for group REG2REG{noformat}",Alexandre Solomatnikov,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Kira Tsao,Nicolas Brunie,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,04/May/22 12:49 PM;sols;path.txt;https://sifive.atlassian.net/secure/attachment/71480/path.txt,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-18T11:57:00.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR4.00 (SHA d6bae60),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz67z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,49:36.1,04/May/22 9:17 AM;6065017e90e3950069cf01c5;Beware that the bucket script does not go deep enough in the paths hierarchical levels to display meaningful details.,"04/May/22 12:49 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;[^path.txt]

","04/May/22 1:09 PM;5e1a4f5ec578120daca5ff8e;This is because we put {{VectorFcvtUnit}} under {{VectorShiftUnit}} and make it inlineinstance from this [PR|https://github.com/sifive/federation/pull/21777]. The path it shown are coming out from {{VectorFcvtUnit}}, we should move it out and make it pipelined.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: unroll wait for L1dcTagWr,,,,,,MAL-1872,114314,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,5/3/2022 21:53,7/12/2022 17:27,9/28/2022 0:51,,,,,,,,,,,,,,Performance,RTL/LSU,,,,,,,,0,,,,"The initial implementation in [https://sifive.atlassian.net/browse/MAL-70|https://sifive.atlassian.net/browse/MAL-70|smart-link] is conservative and blocking: unrolling pieces from LSTR blocks L1dcTagWrite through [https://github.com/sifive/federation/blob/2e4c833f7f363139820d3546ecb1141c6f7e004c/mallard/src/main/scala/core/mallard/LSU.scala#L923-L930|https://github.com/sifive/federation/blob/2e4c833f7f363139820d3546ecb1141c6f7e004c/mallard/src/main/scala/core/mallard/LSU.scala#L923-L930] from [https://sifive.atlassian.net/browse/MAL-1099|https://sifive.atlassian.net/browse/MAL-1099|smart-link].

We can speed this up, and more generally take advantage of the ability to hold-or-unroll instructions in the LSTPipe, by re-prioritizing L1dcTagWrites (TSW, MDF) above L1dcTagReads (LSTA, LSTR).

This will change the _assertion_ that unrolled pieces are back-to-back to _coverage_ that they are _not_ back-to-back.",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,MAL-1099,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-70,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz60v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,10,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
LSU: misaligned load out-of-order data return,,,,,,MAL-1871,114309,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,5/3/2022 21:42,8/29/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,Performance,RTL/LSU,,,,,,,,0,,,,"The initial implementation in [https://sifive.atlassian.net/browse/MAL-70|https://sifive.atlassian.net/browse/MAL-70|smart-link] and [https://sifive.atlassian.net/browse/MAL-1870|https://sifive.atlassian.net/browse/MAL-1870|smart-link] is conservative and in-order: unrolled Misaligned LoadQ entries (both first and second pieces) return in-order through the structural hazard on LDWB data re-combining stage regardless of address hazards.

We can speed this up by adding more register bits to each LoadQ entry: a {{linkedLdqNdx}} for each LoadQ entry to know when to return misaligned load data out-of-order, instead of serializing all misaligned loads in-order.

There is more micro-architecture specification to write, and a lot more coverage to add here, for this feature.  Add a chicken bit {{forceMisalignedLoadDataReturnInOrder}} to back off if necessary.",Alexandre Solomatnikov,John Ingalls,Josh Smith,Naveen Rathore,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,6235105a3eacc50071ff07ec,,,,,,,,,,,,,,,,,,,MAL-1870,MAL-2513,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-70,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz5zr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,20,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,42:30.8,14/Jul/22 5:42 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;{noformat}Assertion failed (verification library): unrolled load should return blocking in-order from MAL-70 until MAL-1871  @[LDPipe.scala 1868:18]{noformat},"29/Aug/22 1:49 AM;6235105a3eacc50071ff07ec;Hi [~accountid:5acffeafaa802f2a797a955c] 
We are seeing following assertion with  8 Byte aligned  Vector load::
  assert failed (verification library): unrolled load tail should follow first through LDWB loop-back in-order until MAL-1871  @\[LDPipe.scala 1908:18]

Is Memory access other than 128Bit(16Byte) for vector loads we are supporting now?,.

*Config:*: coreip_u8_minimal_vector 
*Waves::* gamma26:: /scratch/naveenr/aug-29/federation/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline_ld_assert/sting_StingSiFiveTuple_T_0236/sting/sifive/vector/vector_tgv_dev.conf/waves.fsdb
*SHA1::  bbecbd8ab31df2d814ca0e435350cca33d62c6a2*
","29/Aug/22 9:05 AM;5bb6808b9ba2930990f81895;[~accountid:6235105a3eacc50071ff07ec] can you please open a new Jira ticket for that test?  That assertion message is that this scenario should not occur _until_ this Jira, so if we encounter it beforehand, then we should open new Jira tickets to fix those.","29/Aug/22 10:08 AM;6235105a3eacc50071ff07ec;Hi [~accountid:5bb6808b9ba2930990f81895] 
Raised [https://sifive.atlassian.net/browse/MAL-2513|https://sifive.atlassian.net/browse/MAL-2513|smart-link]  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
LSU: misaligned load pipeline data return,,,,,,MAL-1870,114307,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,5/3/2022 21:36,9/20/2022 14:16,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"The initial implementation in [https://sifive.atlassian.net/browse/MAL-70|https://sifive.atlassian.net/browse/MAL-70|smart-link] is extremely conservative, in-order, and blocking: unrolled Misaligned LoadQ entries (both first and second pieces) wait for all older LoadQs to return data ({{LdqDataFsm.Idle}}), then transition one-at-a-time from {{LdqDataFsm.Needs}} to {{Request}}, all while blocking newer Loads in the {{LdqDataFsm.Needs}} state.

We can speed this up by pipelining, so that LoadQ entries (both Misaligned and after) can transition eagerly to the {{LdqDataFsm.Request}} state, then cancel back from LdqWbReq to the {{LdqDataFsm.Needs}} state if the structural hazard on LDWB data re-combining stage would be violated.",Alexandre Solomatnikov,David Kravitz,John Ingalls,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,MAL-1871,VI-7948,,,,,,,MAL-2311,,,,,,,,,,,,,,,MAL-70,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-09-17T09:54:19.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,,,,,,,,,,,,,,,,2|hzz5zb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,10,,,,,,,,Panda PR,,,,,,,,,,,,,[Doc|https://github.com/sifive/federation/pull/25173/files],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
HWPF: demand miss counter update,,,,,,MAL-1869,114293,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,5/3/2022 20:42,9/15/2022 8:13,9/28/2022 0:51,,,,,,,,,,,,,,Performance,RTL/HWPF,,,,,,,,0,,,,"On the engine allocation, look for 3 demand misses on the same subzone to find the first pattern. After the initial pattern, retrain counter will take over in finding the pattern.",Binayak Tiwari,John Ingalls,,,,,,,,,,,,,,60a963ed8cbda700681b40c1,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1747,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz5w7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Perf: IFU can drop BDP training event due to clock being gated off,Perf: IFU can drop BDP,,,,,MAL-1868,114287,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Adam George,61b2a458657a0500706b9c39,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,5/3/2022 19:57,6/7/2022 17:53,9/28/2022 0:51,5/10/2022 15:59,,,,,,,,,,,Panda DR,,Performance,RTL/Frontend,,,,,,,,0,,,,"During the investigation of [https://sifive.atlassian.net/browse/MAL-1832|https://sifive.atlassian.net/browse/MAL-1832|smart-link], I reviewed the IFU clock gating conditions and it appears that some wake up conditions are missing.  Specifically, BDP training events can be dropped because the IFU clock can be turned off when the BRQ is trying to send a training event to the IFU.  The IFU clock could be gated off because the backend of the core is stalled and the fetch queues are all full.

I tried adding an assertion that the IFU clock gate should be enabled when a BDP training event is generated by the BRQ, and it failed pretty quickly just on RAT tests.",Adam George,Alexandre Solomatnikov,Brian Grayson,Chia-I Chen,Fu-Ching Yang,I-Cheng Cheng,Jahoor Vohra,Jaksa Djordjevic,Josh Smith,Nicolas Brunie,,,,,,61b2a458657a0500706b9c39,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5e1371705361330daaeaf389,61aaafab977c5b007241043c,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5b7745bc793fa62ab2871f70,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,MAL-1886,,,,MAL-2029,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1832,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes,,Branch Prediction,Front End,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-10T15:53:48.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,"The root cause for this errata, an MAL-1832 is the same, as such we will publish 1832 & 1868 as one errata, ie. MAL-1868. And this errata will be marked as not to be published. ",,,,"This is a performance bug, not a functional bug",,,,,See MAL-1832,,1. BRC: Should not Publish,,,,,,,,,,3ba3e0448fd75032542302423c78708d1b4414e7,,,,,,,,,,,,Inspection,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz5uv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"Note: This is a performance bug, not a functional bug",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,09:49.6,06/May/22 5:09 PM;5b7745bc793fa62ab2871f70;[~accountid:61b2a458657a0500706b9c39] [~accountid:5acffeafaa802f2a797a955c] can you provide any color on performance impact? ,06/May/22 5:15 PM;5acffeafaa802f2a797a955c;[~accountid:5b7745bc793fa62ab2871f70] We’re still trying to figure that out with the performance team.,09/May/22 1:18 PM;61b2a458657a0500706b9c39;Pushed a fix to branch MAL-1868. This will open the clock gate when the BRQ writes to the BDP update queue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[P650] update P650 JSON config with 2-cycle FMUL latency,,,,,,MAL-1867,114244,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/3/2022 11:01,9/20/2022 8:30,9/28/2022 0:51,6/30/2022 4:12,,,,,,,,,,,,,RTL/FEX,,,,,,,,,0,,,,"currently {{P650}} configuration does not specifies standalone FMUL latency, this means the standalone FMUL latency default to the standalone FMA values (4, making it useless).

The configuration should be updated:

* {{singlePrecisionMulFullLatency: 2,}}
* {{doublePrecisionMulFullLatency: 2,}}

Timing/Power should be checked with a PD run",Brian Grayson,Erdinc Ozturk,Fu-Ching Yang,Ian Chuang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,Nicolas Brunie,,,,,,,,5e1371705361330daaeaf389,61ccb01d90cfd20071b96af2,5ca54304bb1ed00ac5e5e852,61aaae1d9615eb006f5ff922,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,18/Jul/22 1:35 PM;jsmith;MAL-1867.txt;https://sifive.atlassian.net/secure/attachment/74617/MAL-1867.txt,,,,,,,,,,,,,,,,,,,Floating Point,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-07-11T11:30:18.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,,,,,,,,,,,,,2|hzz5m7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,08:00.0,"29/Jun/22 6:56 AM;6065017e90e3950069cf01c5;[~accountid:61ccb01d90cfd20071b96af2] I would prefer if we distinguish both changes (latency and multiplier sharing).

In particular, one result of your on-going study should be: is unsharing multiplier mandatory if we want to meet timing for the panda release timeframce ?",29/Jun/22 7:07 AM;61ccb01d90cfd20071b96af2;done in [https://github.com/sifive/federation/pull/23965/commits/0102281491cf76acf9acfe96c87b8d04818d6812|https://github.com/sifive/federation/pull/23965/commits/0102281491cf76acf9acfe96c87b8d04818d6812|smart-link] ,"06/Jul/22 7:48 AM;61aaae1d9615eb006f5ff922;[~accountid:6065017e90e3950069cf01c5] [~accountid:61ccb01d90cfd20071b96af2] will this latency update be applied to P550 as well? We don’t discriminate between P550 and P650 in terms of instruction execution latency on the model side. So, if you won’t change P550, the model must have some changes accordingly. ","06/Jul/22 7:50 AM;6065017e90e3950069cf01c5;[~accountid:61aaae1d9615eb006f5ff922] , No, {{p550}} does not instantiate a standalone FP Mul so latency cannot be reduced without reducing the one of the FMA (which is infeasible). Model change may be required.",06/Jul/22 7:52 AM;61aaae1d9615eb006f5ff922;OK. The change sounds necessary. 😆 ,"18/Jul/22 1:36 PM;5acffeafaa802f2a797a955c;[~accountid:5e137757f65a6b0e9bf1636f] has new P650 tile-level PPA results at /project/tsmc/cln7ff/P6_ppa_runs/tomm/tile/design/SiFive_TilePRCIDomain/tomm_iter_220713/reports/opt_signoff.sta.

It appears that the worst path now is through the FMUL. I uploaded a text file with the path from the timing report.

[~accountid:61ccb01d90cfd20071b96af2] If we’re still working on timing improvements for the FMUL, can we back out the change to have a 2-cycle FMUL in P650 until the timing is fixed?  I don’t want this to be the limiting path for P650 on master as we’re trying to close on timing.","18/Jul/22 1:52 PM;61ccb01d90cfd20071b96af2;I have a potential fix, and going through a final run on my end, will ask for a PD study soon. I can create a PR to have a 3-cycle FMUL until the PD study is finished.","18/Jul/22 8:07 PM;61aaae1d9615eb006f5ff922;If we decide to have a 3-cycle FMUL on master for now, I will change Dabble to meet it and keep 3 cycles till the final decision so we can avoid some unnecessary correlation issues. So, just let me know if the latency change is merged to master. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Enable VEX Cross Issue,,,,,,MAL-1866,114232,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Warren Menezes,600773dcee80bd006f750bba,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,5/3/2022 9:07,9/27/2022 17:00,9/28/2022 0:51,9/27/2022 11:03,,,,,,,,,,,,,TGV_RTL/ISS,TGV_RTL/RDU,TGV_RTL/VEX,,,,,,,0,,,,"Cross issue is currently disabled for p670 and u8_minimal_vector configs. Update JSONs and logic copied over from IEX to VEX. It may need some small tweaks.



SPARTA Study: [https://sifive.atlassian.net/wiki/spaces/CIP/pages/2256896001/SPARTA-1659+Vector+Cross+Issue|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2256896001/SPARTA-1659+Vector+Cross+Issue|smart-link] ",Andrew Hanselman,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,Warren Menezes,,,,,,,,,609d7e1f5998a6006800dcc5,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,600773dcee80bd006f750bba,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2616,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Mid Core,Vector,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz5iv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,05:27.1,"03/May/22 9:08 AM;609d7e1f5998a6006800dcc5;[~accountid:5e1374fb7a22c90da0c60495] If you open a ticket to study/re-study this, could you add here?","03/May/22 3:05 PM;6065017e90e3950069cf01c5;{{u8_minimal_vector}} has a single execution pipeline, so I don’t think enabling cross-issue makes more sense for this configuration.",27/Sep/22 11:03 AM;600773dcee80bd006f750bba;Will be fixed by 2616,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vslide1down.vx tail agnostic behavior,[TGV] vslide1down.vx ,Execution Unit ,,,,MAL-1865,114183,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Zhiqiang Hao,5d02d411febd110bc78aabc3,Zhiqiang Hao,5d02d411febd110bc78aabc3,5/2/2022 15:29,9/7/2022 17:43,9/28/2022 0:51,5/3/2022 15:03,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"{noformat}vslide1down.vx v24, v24, s11{noformat}

For sew=16, vl=1, ta=1, lmul=8

The expected behavior is v24\[0]=s11, and the rest part in v24 will be filled with all 1s 

On RTL,

{noformat}C                   0:      14907 vrf[24]=[a6a58f988901cd950377dc01b7679530][ffff]
C                   0:      14909 [1] pc=[0000000080000a30] W[r 0=0000000000000000][0] R[r27=89c9034435ae9530] R[r 0=0000000000000000] inst=[3f8dec57] vslide1down.vx v24, v24, s11{noformat}

So RTL will leave the rest of v24 to be undisturbed.



This still meets the spec, but it’s the different behavior that other TGV vector insts, and it will cause a trouble in PR [https://github.com/sifive/federation/pull/21863|https://github.com/sifive/federation/pull/21863|smart-link] . Just want to confirm if this is expected",Nicolas Brunie,Zhiqiang Hao,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-03T14:34:05.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/308d8b886cc231d02c36cfcd112c073d69e27949,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz587:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,49:54.7,02/May/22 6:49 PM;6065017e90e3950069cf01c5;[~accountid:5d02d411febd110bc78aabc3]  I don’t think this is the expected behavior with ta=1. Do you have an outline so I can reproduce over PR21863 ?,"02/May/22 9:14 PM;5d02d411febd110bc78aabc3;Hi [~accountid:6065017e90e3950069cf01c5] , you could cherry-pick this test:

[https://github.com/sifive/federation/commit/8e21470e5c93ab814f93067cd1b85e777dfbbe6e|https://github.com/sifive/federation/commit/8e21470e5c93ab814f93067cd1b85e777dfbbe6e|smart-link] 

or branch {{zq_ta_spike_bug}}

run with 

{noformat}./sitest @../../../test-outlines/test.outline#1 --sim=vcs --nobuild +verbose --rundir=fail1 --wave=fsdb{noformat}



Main program is

{noformat}int main()
{
  vector_test_init();

  asm volatile(""vsetvli x0, %0, e32, m1, ta, mu"" :: ""r""(-1));
  asm volatile(""vxor.vv v24, v24, v24"");
  asm volatile(""vmv.v.x v24, %0"" :: ""r""(0xdeadbeef));
  // initialize v24 with 0xdeadbeef

  asm volatile(""vsetvli x0, %0, e16, m8, ta, mu"" :: ""r""(1));
  // so v24[0] = 0x5678, rest will be all 1
  asm volatile(""vslide1down.vx v24, v24, %0"" :: ""r""(0x12345678));

  return 0;
}{noformat}



In the log:

{noformat}C                   0:       9624 vrf[24]=[deadbeefdeadbeefdeadbeefdead5678][ffff]
C                   0:       9626 [1] pc=[000000008000062c] W[r 0=0000000000000000][0] R[r15=0000000012345678] R[r 0=0000000000000000] inst=[3f87ec57] vslide1down.vx v24, v24, a5{noformat}

Waveform:

gamma19: /scratch/verif/zhiqiangh/federation/builds5/coreip_u8_minimal_vector/sim/fail1/test.outline/vfslide1down



FYI [~accountid:5a938e9c0913194d2d262658] ",02/May/22 9:16 PM;6065017e90e3950069cf01c5;Thanks [~accountid:5d02d411febd110bc78aabc3] ,03/May/22 11:41 AM;6065017e90e3950069cf01c5;[~accountid:5d02d411febd110bc78aabc3] can you test with the fix from [https://github.com/sifive/federation/pull/22223|https://github.com/sifive/federation/pull/22223|smart-link]  (on master) ?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] block level functional/formal test bench for VectorRecipApproxUnit,,,,,,MAL-1864,114150,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,5/2/2022 8:36,7/22/2022 1:21,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Creating this as a Mallard design task, but this is more of a verification task

The unit implemented to support {{vfrec7.v}} and {{vfrsrt7.v}}  has been heavily modified compared to the original Bullet part of the LLP.

This unit should be properly validated with at least a functional block level test bench to check outputs against a golden model, and if possible formally checked for equivalence against the sub-part of the LLP performing the reciprocal approximations.",Kira Tsao,Nicolas Brunie,,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,CIP-3723,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz513:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,20:44.4,"22/Jul/22 1:20 AM;5e1a4f5ec578120daca5ff8e;Maybe we can reuse the c test from here.

[https://github.com/sifive/federation/commit/47b552914ff33a9b24731a669941c1444f5baf10#diff-8c9681abeef9a52d24803ae46c737a2cffb0700f2a6b20f89082b96ec79ffc47|https://github.com/sifive/federation/commit/47b552914ff33a9b24731a669941c1444f5baf10#diff-8c9681abeef9a52d24803ae46c737a2cffb0700f2a6b20f89082b96ec79ffc47|smart-link] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Assertion failed: Physical register 6 set as ready twice,[TGV] Assertion failed: Physical register,,,,,MAL-1863,114136,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Naveen Rathore,6235105a3eacc50071ff07ec,Naveen Rathore,6235105a3eacc50071ff07ec,5/2/2022 0:25,9/7/2022 17:43,9/28/2022 0:51,5/2/2022 14:15,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"Error: ""/scratch/naveenr/RAT/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_PRA_2_assert.sv"", 25: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.vsetPra.SiFive_PRA_2_assert_0: at time 575682500 ps
Assertion failed: Physical register 6 set as ready twice (only first conflicting id shown)
at PRF.scala:75 assert(\!(readyVec & setVec).orR, ""Physical register %d set as ready twice (only first conflicting id shown)"", firstRegSetTwice)

Fatal: ""/scratch/naveenr/RAT/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_PRA_2_assert.sv"", 34: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.vsetPra.SiFive_PRA_2_assert_0: at time 575682500 ps



Dump-path::
{{gamma26:/scratch/naveenr/RAT/federation/builds/coreip_u8_minimal_vector/sim/sim/rat.outline_fail/rat_default_T_0543/rat/default/waves.fsdb}}
*config:* coreip_u8_minimal_vector

Run-Command::
./scripts/quick-submodule-update
BUILD_DIR=builds ./generate-build coreip_u8_minimal_vector
cd builds/coreip_u8_minimal_vector/
make sim
cd -
source rc.d/riscv-tools.bashrc
cd -
source load-modules
cd sim/
./sitest @../../../test-outlines/rat.outline#1 +verbose --waves=fsdb",David Kravitz,Josh Smith,Naveen Rathore,Nicolas Brunie,,,,,,,,,,,,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,6235105a3eacc50071ff07ec,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,./sitest @../../../test-outlines/rat.outline#1 +verbose --waves=fsdb,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-02T14:14:37.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,36d2be80adfae44bfae5d6764031e74692d835df,,,,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz4y7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,./scripts/quick-submodule-updateBUILD_DIR=builds ./generate-build coreip_u8_minimal_vectorcd builds/coreip_u8_minimal_vector/make simcd -source rc.d/riscv-tools.bashrccd -source load-modulescd sim/./sitest @../../../test-outlines/rat.outline#1 +verbose --waves=fsdb,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,14:02.7,"02/May/22 10:14 AM;5fd15143b4a74900763834e0;This is a {{vset}} issue, so assigning to [~accountid:5acffeafaa802f2a797a955c] to examine.","02/May/22 10:23 AM;5acffeafaa802f2a797a955c;It looks like a {{vsetvli}} instruction issues down the integer pipe but has a source replay.  However, the VSRF write still happens even though the instruction replayed.  When the {{vsetvli}} issues again, the VSRF write happens for a second time and we hit this assertion.

I must have forgotten to qualify the VSRF write control signals with the instruction replay indications.",02/May/22 2:15 PM;5acffeafaa802f2a797a955c;[~accountid:6235105a3eacc50071ff07ec] I could not reproduce the failure in my workspace because it looks like you had a bunch of local changes.  Can you check that the failure goes away with my fix?  It's pretty simple.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[Power] LSU l1dcTagArrayPipe*Bank*,,,,,,MAL-1861,114120,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Khondakar Mujtaba,622a930149c900007023d105,Mehul Thakkar,622a8208db58c100687dd15a,Mehul Thakkar,622a8208db58c100687dd15a,5/1/2022 21:07,7/29/2022 17:53,9/28/2022 0:51,,,,,,,,,,,,,,Power,RTL/LSU,,,,,,,,0,,,,"For Dhrystone we are only using Read0 and Read1 and no writes in the power window. We do have clock gating outside based on RD_WR enabled. Can we further split the clock gate for each SRAM instance? Not sure if something can be done at xmem level.

Opening this task to investigate further. ",John Ingalls,Mehul Thakkar,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,622a8208db58c100687dd15a,,,,,,,,,,,,,,,,,,,,,MAL-926,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,20/Jun/22 3:47 PM;ug:2705f964-33ce-446a-be5d-9a27412f841d;Screen Shot 2022-06-20 at 3.47.19 PM.png;https://sifive.atlassian.net/secure/attachment/73416/Screen+Shot+2022-06-20+at+3.47.19+PM.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz4un:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,28:14.4,"02/May/22 2:28 PM;5bb6808b9ba2930990f81895;Yeah, this would be something to do in {{xmem}}.  I’m not sure there’s any more Clock Gating that we can add in the Chisel RTL beyond the {{l1dcTagBankClock}} added in [https://github.com/sifive/federation/pull/16844|https://github.com/sifive/federation/pull/16844|smart-link].","20/Jun/22 3:47 PM;622a8208db58c100687dd15a;[~accountid:5bb6808b9ba2930990f81895] I looked into this bit more and this is a wide spread issues. We need to define a logical clock gate per SRAM banks outside in Chisel. It results in huge high toggle clock tree and having a clock gate near to SRAM instances also not helping. 

Look at Schematic for example. will setup sometime to discuss in detail 

!Screen Shot 2022-06-20 at 3.47.19 PM.png|width=148,height=198!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[Power] AgeMatrix clock gating improvements ,,,,,,MAL-1860,114118,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Gopi Neela,62196460708417006bca686e,Mehul Thakkar,622a8208db58c100687dd15a,Mehul Thakkar,622a8208db58c100687dd15a,5/1/2022 20:51,7/29/2022 9:08,9/28/2022 0:51,7/17/2022 16:08,,,,,,,,,,,,,Power,RTL/LSU,,,,,,,,0,,,,"Hi, 

LDQ AgeMatrix is consuming ~2.5mW clock power in Dhrystone, breaking down the lowerOlderRow, and adding inferred clock gating could help recover. Opening this ticket to discuss and track clock gating improvements. ",Gopi Neela,John Ingalls,Mehul Thakkar,,,,,,,,,,,,,62196460708417006bca686e,5bb6808b9ba2930990f81895,622a8208db58c100687dd15a,,,,,,,,,,,,,,,,,,,,MAL-926,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,02/Jun/22 12:17 PM;John.Ingalls;20220602_115655.jpg;https://sifive.atlassian.net/secure/attachment/72816/20220602_115655.jpg,15/May/22 4:24 PM;ug:2705f964-33ce-446a-be5d-9a27412f841d;Screen Shot 2022-05-15 at 4.18.35 PM.png;https://sifive.atlassian.net/secure/attachment/71903/Screen+Shot+2022-05-15+at+4.18.35+PM.png,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-17T16:07:39.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/24255,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzz4u7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,23:47.2,01/May/22 9:30 PM;622a8208db58c100687dd15a;BTW same applies to StQ as well. ,"02/May/22 2:23 PM;5bb6808b9ba2930990f81895;Yeah, there are multiple instances of {{AgeMatrix}} in the design, and an improvement to the common {{AgeMatrix}} module would benefit all of them.

There is either a Regional Clock Gate (RCG, {{ClockGate}}) or a Local Clock Gate (LCG, {{RegEnable}}) in [https://github.com/sifive/federation/blob/master/rocket-chip/src/main/scala/util/AgeMatrix.scala|https://github.com/sifive/federation/blob/master/rocket-chip/src/main/scala/util/AgeMatrix.scala].  Are that RCG/LCG having the desired effect?

Which Federation commit SHA and config are these results from?  That will tell us whether it’s a RCG (P650) or LCG (P550).","15/May/22 4:24 PM;622a8208db58c100687dd15a;[~accountid:5bb6808b9ba2930990f81895] Yes there is clock gating but we need to strengthen the enable condition, Its about 41% per entry clock gating. Splitting the local clock gating across entries is better. I am looking P650. 

!Screen Shot 2022-05-15 at 4.18.35 PM.png|width=769,height=469!","02/Jun/22 12:17 PM;5bb6808b9ba2930990f81895;[~accountid:62196460708417006bca686e] and I talked today about two possible optimizations:

# Instantiate the explicit regional clock gate (RCG {{ClockGate}}) instead of the local clock gate (LCG {{RegEnable}}) in P550 by setting {{val writeSizeClockGate = clockGate && (size >= 16)}}, and see what effect that has on P550 power.
# We observe that entries are usually picked using {{FindAlternatingN}} at the bottom and top from free-lists, and less often in the middle.  This results in more and less active regions of the AgeMatrix for the rows+columns on the periphery versus the middle.  Sketched picture attached.
!20220602_115655.jpg|width=4032,height=3024!","14/Jun/22 2:56 AM;62196460708417006bca686e;We will be implementing clock gating as per proposal below. 
[https://docs.google.com/document/d/1vJWxdRCH4bM1SaEqT8TR4Q_OG4XdcPQ577uik4cjnfs/edit?usp=sharing|https://docs.google.com/document/d/1vJWxdRCH4bM1SaEqT8TR4Q_OG4XdcPQ577uik4cjnfs/edit?usp=sharing|smart-link] 

Once implemented will try some configurations to get best config.",14/Jun/22 10:05 AM;622a8208db58c100687dd15a;Thanks [~accountid:62196460708417006bca686e]  how many bits are in each element in Matrix ? ,14/Jun/22 11:42 AM;62196460708417006bca686e;One,14/Jun/22 5:06 PM;622a8208db58c100687dd15a;Thanks [~accountid:62196460708417006bca686e] Is this also applicable to mshrAgeMatrix ? ,15/Jun/22 3:44 AM;62196460708417006bca686e;All instances of AgeMatrix will benefit with this enhancement ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[Power] LST pipe clock power ,,,,,,MAL-1859,114117,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Shreyas Ravishankar,63096787998cd0d8cb392a85,Mehul Thakkar,622a8208db58c100687dd15a,Mehul Thakkar,622a8208db58c100687dd15a,5/1/2022 20:47,9/2/2022 11:17,9/28/2022 0:51,,,,,,,,,,,,,,Power,RTL/LSU,,,,,,,,0,,,,LST pipes instantiated clock gating doesn’t seem to be split per pipe and toggling all the time. There are ~2.1K flops each pipe and with free running clocks with minimal data activity.  Opening this ticket to track and discuss clock gating scheme. ,John Ingalls,Mehul Thakkar,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,622a8208db58c100687dd15a,,,,,,,,,,,,,,,,,,,,,MAL-2079,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-926,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,15/May/22 4:32 PM;ug:2705f964-33ce-446a-be5d-9a27412f841d;Screen Shot 2022-05-15 at 4.31.58 PM.png;https://sifive.atlassian.net/secure/attachment/71904/Screen+Shot+2022-05-15+at+4.31.58+PM.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz4tz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,17:47.8,"02/May/22 2:17 PM;5bb6808b9ba2930990f81895;# There is at least local clock gating {{RegEnable}} for each LSTPipe stage.
# For regional clock gating, do all of the register bits behind the {{ClockGate}} need to be reasonably close to each other in the floorplan?
# If the register bits need to be reasonably close to each other in the floorplan, are the LSTPipes concentrated enough to add a regional clock gate?","15/May/22 4:32 PM;622a8208db58c100687dd15a;[~accountid:5bb6808b9ba2930990f81895] Thanks, in that case we need to work on splitting the local instantiated clock gate.Can we push clock gating efficiency ? 

!Screen Shot 2022-05-15 at 4.31.58 PM.png|width=424,height=551!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
HWPF power: BPM entries clock gating ,,,,,,MAL-1858,114116,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Binayak Tiwari,60a963ed8cbda700681b40c1,Mehul Thakkar,622a8208db58c100687dd15a,Mehul Thakkar,622a8208db58c100687dd15a,5/1/2022 20:40,9/21/2022 9:24,9/28/2022 0:51,,,,,,,,,,,,,,Power,RTL/HWPF,,,,,,,,0,,,,"Hi, 

BPM is consuming ~5mW power in Dhrystone and every entry have ~1400 flops using free-running clocks . 

Instantiated clock gating needs to be strengthened. Filing this to start the discussions.",Binayak Tiwari,John Ingalls,Mehul Thakkar,,,,,,,,,,,,,60a963ed8cbda700681b40c1,5bb6808b9ba2930990f81895,622a8208db58c100687dd15a,,,,,,,,,,,,,,,,,,,,MAL-2134,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1520,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-01T11:00:16.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,,,,,,,,,,,,,2|hzz4tr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,55:28.6,"08/Jul/22 10:12 AM;622a8208db58c100687dd15a;[~accountid:60a963ed8cbda700681b40c1] looks like you made some changes to clock gating, can you please let me know what changes went in ? ",08/Jul/22 10:55 AM;60a963ed8cbda700681b40c1;[https://sifive.atlassian.net/browse/MAL-2009|https://sifive.atlassian.net/browse/MAL-2009|smart-link]  this is the only change that went in recently.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
LSU: Partition L1DCache out of LDPipe,,,,,,MAL-1857,114005,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Khondakar Mujtaba,622a930149c900007023d105,Khondakar Mujtaba,622a930149c900007023d105,Khondakar Mujtaba,622a930149c900007023d105,4/29/2022 9:58,6/28/2022 14:31,9/28/2022 0:51,5/31/2022 15:59,,,,,,,,,,,Healdsburg DR,,RTL/LSU,,,,,,,,,1,,,,L1DCache data path and array are embedded inside the LDPipe.  It should be out of LDPipe and have it own partition or  module. DCache include DataXBar and memory array.,John Ingalls,Khondakar Mujtaba,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,622a930149c900007023d105,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1510,MAL-1977,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29/Apr/22 10:08 AM;ug:5e8f21ca-9d22-4598-aab7-60f95b370ff0;LSU-LDPipe - DCache.pdf;https://sifive.atlassian.net/secure/attachment/71307/LSU-LDPipe+-+DCache.pdf,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=4}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":4,""lastUpdated"":""2022-06-27T12:15:25.000-0700"",""stateCount"":4,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":4,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz45j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,5,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Extending to optimize out the writes when lmul > 1 and elements < offset are unchanged,,,,,,MAL-1856,113922,113907,Sub-task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,4/28/2022 15:40,5/4/2022 8:20,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"When we have a [vslideup.vi|http://vslideup.vi/] inst with lmul = 2, sew = 8, and vl =32, and offset = 27, only elements in location 27-31 are updated. So elements 0-26 are effectively undisturbed according to the spec.I see TGV writing the undisturbed value to these elements, at-least for the elements 0-15, which form the 128 bits of the first reg, can we optimize out the write?

The problem here is, if spike doesnot update any reg, we can go ahead and drop the first vector destination reg specified in the instruction.But when lmul > 1, if only 1 of the regs is updated by spike as in this case, and as we have no information of which regs RTL updated, this writes just stays pending and mismatches with a different instruction. Maybe this goes away when we start taking values from RTL at retire time.",Srivatsa Yogendra,,,,,,,,,,,,,,,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1854,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz3mn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,113907,[TGV] Optimize out the undisturbed writes for vslideup instructions,To Do
[TGV] fix P570 configuration to match product description / performance modelled configuration,,,,,,MAL-1855,113913,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Won't Do,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,4/28/2022 12:55,7/25/2022 8:07,9/28/2022 0:51,7/25/2022 8:07,,,,,,,,,,,,,TGV_RTL/Top,,,,,,,,,0,,,,"Some product documents describe {{P570}} has instantiating only one vector execution pipeline.

Once this is settled, {{P570}}'s JSON configuration should be fixed appropriately.

!image-20220428-212748.png|width=1395,height=716!

Product Slides: [https://docs.google.com/presentation/d/1E-zCNjqI6JTrwQG2YVC3Ocm9m9XxwHV1G4J4SGQYadc/edit?usp=sharing|https://docs.google.com/presentation/d/1E-zCNjqI6JTrwQG2YVC3Ocm9m9XxwHV1G4J4SGQYadc/edit?usp=sharing|smart-link] 

SPARTA P570 study: [https://sifive.atlassian.net/browse/SPARTA-1761|https://sifive.atlassian.net/browse/SPARTA-1761|smart-link] ",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28/Apr/22 2:28 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220428-212748.png;https://sifive.atlassian.net/secure/attachment/71249/image-20220428-212748.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not determined,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz3kv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jul/22 8:06 AM;6065017e90e3950069cf01c5;As {{p570}} is not yet a well defined product, {{p570}} like configuration has been materialized as a spawning configuration: [https://github.com/sifive/federation/blob/master/specs/design/coreip/spanning/u8_3w_vector_2x128.json|https://github.com/sifive/federation/blob/master/specs/design/coreip/spanning/u8_3w_vector_2x128.json] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Optimize out the undisturbed writes for vslideup instructions,,,,,,MAL-1854,113907,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,4/28/2022 11:32,7/14/2022 18:45,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"The instruction is a [vslideup.vi|http://vslideup.vi/] instruction, where the vl < offset specified by the immediate value.  This is an OPIVI instruction, we said when vl = 0, we donot update any reg for this instruction type, im hoping we can extend this for the case when vl < offset as well.The test case is

{noformat}vslideup.vi v1, v27, 26
(0x3bbd30d7) e8 mf8 l1{noformat}

According to the spec

{noformat}Destination elements OFFSET through vl-1 are written if unmasked and if OFFSET < vl.{noformat}

We currently have a workaround in cosim for this as well. 

Based on the discussion with nicolas on slack 

{noformat}Nicolas Brunie  19 hours ago
This may put some timing pressure in the sequencer as we need to detect slide amount and compare it to vl/lmul in this early stage (not to emit uops in such cases) (edited) 
Nicolas Brunie  19 hours ago
for a case that looks like a software mishaps, and not something we would like to optimize dynamically (edited) 
{noformat}",Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,MAL-1856,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-03T10:01:37.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz3jj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Optimize out the undisturbed writes performed by RTL when VL=0,,,,,,MAL-1853,113906,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,4/28/2022 11:28,7/28/2022 23:59,9/28/2022 0:51,7/26/2022 12:00,,,,,,,,,,,Panda DR,,TGV_RTL/SEQ,,,,,,,,,0,,,,"When the instruction is of type, OPFVF, OPIVX and OPMVX, we see a single vector reg update with undisturbed values in that reg written by RTL. 

After discussion with RTL designers, this happens because of scalar operand consumption, which later get converted to a no operation uop. 

This write confuses cosim, as spike does not report a write. 

We currently have a workaround to drop these writes from cosim, if we can get RTL to not produce these writes, we can remove the workaround. ",Andrew Hanselman,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,609d7e1f5998a6006800dcc5,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-7774,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-07-26T11:57:48.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,785505c90e8fef3c2a839c821f820adb4e302691,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,,,,,,,,,,,,,2|hzz3jb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,58:22.2,"22/Jul/22 11:58 AM;609d7e1f5998a6006800dcc5;{{*.vf, *.vx}} have an integer/floating-point source, so uops are emitted to both the scalar and vector pipelines. The scalar uop currently produces a value into the S2V transfer buffer, but does not signal any completion request to the ROB. When vl=0: normally, the vector uop would be squashed. But because the scalar S2V producer uop does not signal a completion to the ROB, a vector NOP must be produced that does this. Currently, the NOP still acquires a physical register and performs a vl=0 TA/TU write to the new physical register. In TA specifically, this causes problems. TGV writes all 1’s, but Spike cosim expects no update (or at least the AR->PR mapping to have old TU data).

There are two possible solutions to this:

# Use an existing mechanism in the VRDU to not obtain a new physical register from the free list, wait for the S2V producer to produce data (ensuring it exits the scalar issue queue and execution pipe fully), then proceed down the pipeline with no destination, signaling completion with no PRF write occurring.
# Modify X2Y completion request scheme so that the producer uops also signal completion.

I am in favor of the second modification because it removes the need to ever stage a vector NOP down TGV at all. And I think simplifies some existing code in the VectorSequencer, and WB stages of Ex/Fex pipes.","22/Jul/22 12:26 PM;5acffeafaa802f2a797a955c;With scheme number 2, you still need to have the vector unit signal to the integer unit that no write should be performed.  This could happen well after the producer uop from the scalar side has executed.  What would you do in that case?","22/Jul/22 2:15 PM;609d7e1f5998a6006800dcc5;The completion count in the ROB would be incremented once when producer is dispatched, and for each consumer sequenced. So when decremented by uop completion, the ROB has correct tracking still. In the case of S2V when VL=0, the producer still dispatches, executes, and completes. The scalar uop is sequenced, emits no uops, and has no late completion count increment, so there is no requirement to do a consumer decrement. I’m not sure if I understood or answered your question well.","25/Jul/22 9:32 AM;609d7e1f5998a6006800dcc5;So my previous thought doesn’t end up working. At the point where the scalar/vector uops are generated in scalar dispatch, the scalar producer uop could complete before the vector consumer  uop has a chance to be sequenced. This would result in the ROB entry {{cmplCnt}} being zero temporarily until the sequencer did a {{tgvLateCmplUpdate}}. I think we can identify X2Y instructions in DIS, and increment the ROB completion counter by 2 during DIS for these instructions (1 for producer, 1 for consumer). Then, an S2V uop identified as vl=0 can use the sequencer {{cmplReq}} channel to signal a {{zeroUop}} completion count decrement.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
HWPF timing: bit pattern update address direction,,,,,,MAL-1852,113903,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,4/28/2022 10:43,9/3/2022 7:44,9/28/2022 0:51,6/2/2022 4:47,,,,,,,,,,,,,Implementation,RTL/HWPF,Timing,,,,,,,0,,,,"Attached timing path from {{up_prevAddr}} to {{up_directionCounter}} in {{HwpfBitPattern}}.

* branch: master
* commit SHA: 1259e232f13ab758a2e2454704c9915c5be550c6
* config: coreip_p650_7nm_H240_tile",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1520,,,,,,,,,,,,,,,,,,28/Apr/22 10:42 AM;John.Ingalls;SiFive_MallardTile_syn.max_timing.rpt;https://sifive.atlassian.net/secure/attachment/71240/SiFive_MallardTile_syn.max_timing.rpt,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-02T02:57:35.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz3in:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
HWPF timing: bit pattern ag_pfOffset,,,,,,MAL-1851,113902,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,4/28/2022 10:39,9/3/2022 7:44,9/28/2022 0:51,5/24/2022 10:07,,,,,,,,,,,,,Implementation,RTL/HWPF,Timing,,,,,,,0,,,,"Attached is an example timing path through {{ag_pfOffset}} in {{HwpfBitBattern}}.

* branch: master
* commit SHA: 1259e232f13ab758a2e2454704c9915c5be550c6
* config: coreip_p650_7nm_H240_tile",Binayak Tiwari,John Ingalls,Joseph Huang,Josh Smith,,,,,,,,,,,,60a963ed8cbda700681b40c1,5bb6808b9ba2930990f81895,61579e1f78e5e400703c17e0,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1520,,,,,,,,,,,,,,,,,,28/Apr/22 10:39 AM;John.Ingalls;SiFive_MallardTile_syn.max_timing.rpt;https://sifive.atlassian.net/secure/attachment/71239/SiFive_MallardTile_syn.max_timing.rpt,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-24T20:00:17.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/22805,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz3if:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,55:10.3,"28/Apr/22 10:55 AM;5acffeafaa802f2a797a955c;I took a quick look at this path last week, I think it was something like: adding or subtracting to some value, then comparing that result to some other address, and then some logic.  In MallardUtils we have a {{SumCompareEqual}} method which can efficiently computer whether a+b == c.  We could probably use something like that here.","18/May/22 5:01 PM;61579e1f78e5e400703c17e0;Hi [~accountid:60a963ed8cbda700681b40c1] , what’s the status of optimizing HWPF timing path? If there’s any progress, please let met know, I’d try to check the timing path related to PL2. Many thanks.",18/May/22 7:12 PM;60a963ed8cbda700681b40c1;[~accountid:61579e1f78e5e400703c17e0] working on this next.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Rename VectorCompareUnit to VectorMinmaxUnit,,,,,,MAL-1850,113882,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,4/28/2022 6:30,7/12/2022 9:54,9/28/2022 0:51,4/29/2022 8:49,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Since {{VectorCompareUnit}} only accept compared bit vector from {{VectorALU}} and produce min / max result, it is better renamed to {{VectorMinmaxUnit}} to avoid confusion.",Brad Wu,Nicolas Brunie,,,,,,,,,,,,,,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,MAL-1849,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-29T08:48:10.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz33b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] implement floating-point flags output in min-max unit (VectorCompareUnit),[TGV] implement floating-point flags ,Execution Unit ,Floating point,,,MAL-1849,113851,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,4/27/2022 19:01,9/7/2022 17:43,9/28/2022 0:51,4/28/2022 20:00,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"{{vfmin}}/ {{vfmax}} are expected to produce an invalid flag when at least one of the active input elements is a signaling NaN, it seems this is not the case yet:

outline to reproduce:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul8"",
  ""subtest"": ""vfmin.vf"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vfmin.vf_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-50_LMUL-8_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 3902387977
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

error:



{noformat}*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 75317 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 376,582,500 ps.
*Verdi* : Close all FSDB Files at 376,582,500 ps.
$finish at simulation time            376582500
           V C S   S i m u l a t i o n   R e p o r t
Time: 376582500 ps
CPU Time:    111.010 seconds;       Data structure size:  35.9Mb
Wed Apr 27 17:52:53 2022
=== sitest found errors in test sim/rerun.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfmin.vf:
Scoreboard config: xLen=64 | fLen=64 | vLen=128 | vaddrExtended=42 | vec_reg_count=32 | enable_check=1 | verbosity=0 | enable_wrdata_check=1 | error_count=1 | stall_cycle_count=30000 | enable_cosim_mmc=1
[COSIM-ERROR][0] COSIM VS RTL WRDATA MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [17824] InstInfo: VLD=1 | PC=0x000000008000123a | INSN=0x001022f3 | INST_DST=INT | REDUCTION = false | WR: en=true r5=0x0000000000000000 mask=ff | READY=1 | CSR_TIMER=17824 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080001c00 | MCAUSE=0x0000000000000002 | VSTART=71 | VL=0 | VSEGELT=0

[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x000000008000123a | INSN=0x001022f3 | INST_DST=INT | REDUCTION = false | WR: en=true r5=0x0000000000000010 mask=ff

sifive_test_results_pkg::set@(t=366533000): Test Result Setting for Index ID [3] Done [1] Success [0] Exit Code [13107]

sifive_test_results_pkg::report_status.unnamed$$_0@(t=376583000): Test Result Checking Registered Name [TestDriver.testHarness.PL2Scb] Index ID [2] Done [0] Success [0] Exit Code [0]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=376583000): FAILED: Test Result Registered Name [TestDriver.testHarness.cosim] Index ID [3] Done [1] Success [0] Exit Code [13107]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=376583000): FAILED: Test Result Registered Name [TestDriver.testHarness.i_TF] Index ID [4] Done [1] Success [0] Exit Code [0]

sifive_test_results_pkg::report_status@(t=376583000): done:          3, registered:          3, success:          1


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 75317 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 376,582,500 ps.

C                   0:      17817 [1] pc=[000000008000122c] W[r 0=0000000000000000][0] R[r 7=0000000000000017] R[r 6=0000000000000017] inst=[00638763] DASM(00638763)
Error: Instruction-by-Instruction check failed
C                   0:      17824 [1] pc=[000000008000123a] W[r 5=0000000000000000][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[001022f3] DASM(001022f3)

C                   0:      18326 [1] pc=[0000000080000724] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[0000bffd] DASM(0000bffd)
Error: Instruction-by-Instruction check failed


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 75317 simulation cycles (in TestDriver.report_phase_actions){noformat}",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1850,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-28T19:48:05.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz2wn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] syn characterization of VectorALU and min-max unit,,,,,,MAL-1848,113839,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,4/27/2022 17:37,7/12/2022 9:54,9/28/2022 0:51,6/1/2022 17:24,,,,,,,,,,,,,Implementation,TGV_RTL/VEX,,,,,,,,0,,,,Run block-level synthesis characterization on the block {{VectorALU}} + {{VectorCompareUnit}} (min-max module) as implemented by [~accountid:62103777eb2978006893b778] 's [https://github.com/sifive/federation/pull/21948|https://github.com/sifive/federation/pull/21948|smart-link]  layed down over 2 cycles (same configuration as in TGV’s {{P670}}) and result analysis.,Brad Wu,David Kravitz,Kira Tsao,Nicolas Brunie,,,,,,,,,,,,62103777eb2978006893b778,5fd15143b4a74900763834e0,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29/Apr/22 6:10 AM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220429-130911.png;https://sifive.atlassian.net/secure/attachment/71293/image-20220429-130911.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{branch={count=1, dataType=branch}, json={""cachedValue"":{""errors"":[],""summary"":{""branch"":{""overall"":{""count"":1,""lastUpdated"":null,""dataType"":""branch""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz2u7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,10:19.7,"29/Apr/22 6:10 AM;5e1a4f5ec578120daca5ff8e;I've a [commit|https://github.com/sifive/federation/commit/ab6cf4f8f78cec4a080775ec60cda56133e041eb] integrating VectorALU and MinMaxUnit into TGVSynBench. From synthesis results seems like it can meet clock period in 370ps, but that's without bypassing network.

!image-20220429-130911.png|width=1803,height=988!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] wrong masking of LLP exception flags for widening operation after 2nd dest optimization when vl is small,[TGV] wrong masking of LLP exception flags,,,,,MAL-1847,113789,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,4/27/2022 10:45,9/7/2022 17:43,9/28/2022 0:51,4/28/2022 17:11,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"because {{selLLPWide_EXN}} is used to build the flag mask we are building a mask too large for the actual output when the 2nd destination is disabled for widening operation.

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vfwadd.vv"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vfwadd.vv_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-50_LMUL-1_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 601149909
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,coreip_u8_minimal_vector build and outline in the task description,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-27T15:05:25.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/fd6b2ba2849c4519a9cd7c1ec8c240735237cccb,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz2hr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Convert instructions with I2V move from x0 into imm=0 ops,,,,,,MAL-1846,113788,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,4/27/2022 10:41,8/17/2022 11:21,9/28/2022 0:51,,,,,,,,,,,,,,RTL/Frontend,RTL/RDU,TGV_RTL/SEQ,,,,,,,0,,,,"If a vector {{vop.vx}} instruction wants to source x0, there’s no need to transfer the 0 value in x0 through the S2V buffer. It could be higher-performance, and will reduce pressure on the S2V pointer list.

There will need to be changes in the scalar RDU to recognize this situation and:
- don’t allocate an S2V pointer
- don’t send the instruction to the IEX dispatch/issue queues
- change funct3 from 3’h4 (OPIVX) → 3’h3 (OPIVI). (Maybe the {{rs1}}->imm0 doesn’t change anything?). This action could also take place inside TGV, but could simplify the dispatch steering if it’s done earlier. If it can be done in decode, does that mean the other stuff happens for free?",Brian Grayson,Craig Topper,David Kravitz,Fu-Ching Yang,Ian Chuang,I-Cheng Cheng,Jaksa Djordjevic,Zhen Wei,,,,,,,,5e1371705361330daaeaf389,5f90cc52461cc4007535f9e1,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,61aaae1d9615eb006f5ff922,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e49f622a17f930c9b94b6cd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Decode,Dispatch,Vector,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz2hj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,07:24.3,"16/Aug/22 1:07 PM;5f90cc52461cc4007535f9e1;I suppose this means the compiler should prefer the .vi 0 form over the .vx x0 form until this is implemented? Off the top of my head the only case I know we prefer x0 is {{vnsrl.wx vd,vs,x0,vm}} when we want to truncate a value. We chose x0 because it matches the {{vncvt.x.x.w vd,vs,vm}} pseudoinstruction defined in the spec.","16/Aug/22 2:35 PM;5fd15143b4a74900763834e0;That’s right. The .vx form will take one issue slot down an IEX pipe, but the .vi form will not.",17/Aug/22 10:15 AM;5f90cc52461cc4007535f9e1;Would TGV be able to optimize instructions that don’t have a defined {{.vi}} form like {{vmax.vx}}?,"17/Aug/22 11:21 AM;5fd15143b4a74900763834e0;Unclear. We could try it after taking care of all the ones with {{.vi}} flavors.

This entire effort is probably a post-Panda activity at this point.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
"[TGV] sting failure: stall after erroneous sequencing of vmv.x.s zero, v*","[TGV] sting failure vmv.x.s zero, v*",,,,,MAL-1845,113781,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,4/27/2022 9:36,9/7/2022 17:43,9/28/2022 0:51,6/8/2022 12:48,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,TGV,,,"Below  assertion is getting fired up 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/jenkns_assertion_rob/federation/builds2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", 2157: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert_0: at time 12927082500 ps
Assertion failed (verification library): ROB Retire Hang around entry  7   @[ROB.scala 682:9]
Fatal: ""/scratch/ishitashah/tgv_regression/jenkns_assertion_rob/federation/builds2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", 2166: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.feu.rdu.rob.SiFive_ROB_assert_0: at time 12927082500 ps{noformat}

*SHA*:5ae7acf2c

*config*: coreip_u8_minimal_vector

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_stall_cycle_count=500000"",
    ""+cosim_scoreboard_trap_epc_count=30"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+pl2_randomBlockDirWrFifoEnable=1"",
    ""+MEM_ERROR_INJECT=.*\\.cc_dir_ext,0,1,15:.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icDataArray.*ext,1,0,5:.*\\.RamBank.*ext,1,0,25:.*\\.TagRAM_ext,1,0,25:.*\\.l2_tlb_ram_ext,1,0,20:.*\\.l1dcTagArray.*ext,1,0,10:.*\\.cc_banks.*ext,1,0,25"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+verbose""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0072"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1795702606
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath*

{{gamma25:/scratch/ishitashah/tgv_regression/jenkns_assertion_rob/federation/builds2/coreip_u8_minimal_vector/sim/rerundir1/rerun.outline/sting_StingSiFiveTuple_T_0072/sting/sifive/vector/vector_tgv_dev.conf}}",Alexandre Solomatnikov,David Kravitz,Ishita Shah,Nicolas Brunie,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,607e26355431a500701f5aed,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29/Apr/22 2:08 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220429-210831.png;https://sifive.atlassian.net/secure/attachment/71317/image-20220429-210831.png,29/Apr/22 2:11 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220429-211126.png;https://sifive.atlassian.net/secure/attachment/71318/image-20220429-211126.png,29/Apr/22 2:16 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220429-211523.png;https://sifive.atlassian.net/secure/attachment/71319/image-20220429-211523.png,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-03T07:49:52.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/553e5336a1db2490cdbfdb828a881ea63ceafc3e,,,,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz2fz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,38:28.9,29/Apr/22 1:38 PM;5fd15143b4a74900763834e0;No test should be running any vector loads or stores through TGV at this time.,"29/Apr/22 1:43 PM;6065017e90e3950069cf01c5;I think this test is part of sting update and I did not set my branch properly.

I am rerunning it from the proper SHA1,  _mea maxima culpa_","29/Apr/22 2:08 PM;6065017e90e3950069cf01c5;Looks like we are waiting for a flush on the scalar side

!image-20220429-210831.png|width=1920,height=409!

and not on TGV side

!image-20220429-211126.png|width=1727,height=589!","29/Apr/22 2:16 PM;6065017e90e3950069cf01c5;Adding more relevant signals around flush , I may need [~accountid:5acffeafaa802f2a797a955c] 's help on this one.

!image-20220429-211523.png|width=2034,height=588!","29/Apr/22 3:49 PM;6065017e90e3950069cf01c5;it seems the sequencer is getting stuck on a {{vmv.x.s zero, ...}}

as the target xd is zero, this is not detected as a {{v2s}} operations leading it to sequence 8 uops.","29/Apr/22 5:54 PM;6065017e90e3950069cf01c5;[~accountid:607e26355431a500701f5aed] , tests seems to pass on federation {{5ae7acf2c}} with the fix from [https://github.com/sifive/federation/pull/22189|https://github.com/sifive/federation/pull/22189|smart-link]  cherry-picked.","05/May/22 2:06 PM;6065017e90e3950069cf01c5;On a recent master ({{c38bc32bd69745}}) the test seems to hang around the following time:

{noformat}C                   0:     264679 [1] pc=[0000000080013c28] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[14c0006f] DASM(14c0006f)
C                   0:     264686 [1] pc=[0000000080013d74] W[r 5=0000000080d8e748][1] R[r 5=0000000080d8e540] R[r 0=0000000000000000] inst=[20828293] DASM(20828293)
C                   0:     264686 [1] pc=[0000000080013d78] W[r 7=ffffffffffffffff][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[fff00393] DASM(fff00393)
C                   0:     264686 [1] pc=[0000000080013d7c] W[r 7=0000000000000004][1] R[r 7=ffffffffffffffff] R[r 0=0000000000000000] inst=[0103f3d7] DASM(0103f3d7)
C                   0:     265501 [1] pc=[0000000080013d80] W[r 0=0000000000000000][0] R[r 5=0000000080d8e748] R[r 0=0000000000000000] inst=[0202e007] DASM(0202e007)
C                   0:     265695 [1] pc=[0000000080013d84] W[r 5=0000000080d8e7c8][1] R[r 5=0000000080d8e748] R[r 0=0000000000000000] inst=[08028293] DASM(08028293)
C                   0:     265695 [1] pc=[0000000080013d88] W[r 0=0000000000000000][0] R[r 5=0000000080d8e7c8] R[r 0=0000000000000000] inst=[0202e087] DASM(0202e087)
C                   0:     265935 [1] pc=[0000000080013d8c] W[r 5=0000000080d8e848][1] R[r 5=0000000080d8e7c8] R[r 0=0000000000000000] inst=[08028293] DASM(08028293)
C                   0:     265935 [1] pc=[0000000080013d90] W[r 0=0000000000000000][0] R[r 5=0000000080d8e848] R[r 0=0000000000000000] inst=[0202e107] DASM(0202e107)
C                   0:     266213 [1] pc=[0000000080013d94] W[r 5=0000000080d8e8c8][1] R[r 5=0000000080d8e848] R[r 0=0000000000000000] inst=[08028293] DASM(08028293)
C                   0:     266213 [1] pc=[0000000080013d98] W[r 0=0000000000000000][0] R[r 5=0000000080d8e8c8] R[r 0=0000000000000000] inst=[0202e187] DASM(0202e187)
C                   0:     266495 [1] pc=[0000000080013d9c] W[r 5=0000000080d8e948][1] R[r 5=0000000080d8e8c8] R[r 0=0000000000000000] inst=[08028293] DASM(08028293)
C                   0:     266495 [1] pc=[0000000080013da0] W[r 0=0000000000000000][0] R[r 5=0000000080d8e948] R[r 0=0000000000000000] inst=[0202e207] DASM(0202e207)
C                   0:     266693 [1] pc=[0000000080013da4] W[r 5=0000000080d8e9c8][1] R[r 5=0000000080d8e948] R[r 0=0000000000000000] inst=[08028293] DASM(08028293)
C                   0:     266693 [1] pc=[0000000080013da8] W[r 0=0000000000000000][0] R[r 5=0000000080d8e9c8] R[r 0=0000000000000000] inst=[0202e287] DASM(0202e287){noformat}",08/Jun/22 12:48 PM;5fd15143b4a74900763834e0;We think this was connected to MAL-2025 and should be fixed by the same commit.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Fill upper register bits with all 1's when tail agnostic policy is enforced.,[TGV] Fill upper register,,,,,MAL-1844,113780,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Anil Sharma,607e26831417e2006abb3189,Anil Sharma,607e26831417e2006abb3189,4/27/2022 9:30,9/7/2022 17:43,9/28/2022 0:51,4/29/2022 8:09,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"The COSIM fills the upper half of the v0 register with all 1's but RTL doesn't change its value when tail agnostic policy is enforced.


{noformat}13560 [1] pc=[00000000800008b6] W[r 5=0000000000000001][1] R[r 5=0000000000000001] R[r 0=0000000000000000] inst=[0572f2d7] vsetvli t0, t0, e32, mf2, ta, mu
13600 vrf[ 0]=[d033592ba0cc3b22d85d3b534aa9a3a8][ffff]
13602 [1] pc=[00000000800008ba] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[4e001057] vfsqrt.v v0, v0{noformat}

For SEW=32, LMUL=1/2, tail agnostic and mask undisturbed as settings.
After execution of vfsqrt.v instruction
In COSIM
vrf\[0] = {{0xffffffffffffffffffffffff4aa9a3a8}}
In RTL
vrf\[0] = {{0xd033592ba0cc3b22d85d3b534aa9a3a8}}
RTL should have put all1s in \[127:32] i.e v0  = {{0xffffffffffffffffffffffff4aa9a3a8}}

rerun.outline


{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+verbose""
  ],
  ""subdir"": ""t0000_lmul8"",
  ""subtest"": ""vfsqrt.v"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vfsqrt.v_Masking-0_Exception-1_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-50_LMUL-8_TGV-1_IMM-1_LdStAccFault-1_TAILAgnostic-1"",
  ""seed"": {
    ""value"": 1692963362
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}


Run area:


{noformat}gamma28 /scratch/verif/anils/tgv/vi-6777-reg/federation/builds2/coreip_u8_minimal_vector/sim/rerun_wrdata_3/rerun.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfsqrt.v{noformat}

SHA: eeaffa64ece
Config: coreip_u8_minimal_vector",Anil Sharma,Nicolas Brunie,,,,,,,,,,,,,,607e26831417e2006abb3189,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-28T14:30:22.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/18e15b4b5809ec61c0aaae5294cc97f1a5bca4f9,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz2fr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,34:33.8,"27/Apr/22 11:34 AM;6065017e90e3950069cf01c5;[~accountid:607e26831417e2006abb3189] 

I am not sure I understand what the failing test is trying to do:



{noformat}  CLOSE_EXCEPTION()
  li TESTNUM, -1

  VSETVLI(4, e32, m1, ta, mu)
  LOAD_ADDR(in_127, 12)
  LOAD_SCALAR_AND_VSLIDE1UP_IMM(lw, v0, v1, -4, 4)
# -------------------- test instruction
  csrwi frm, 2
  VSETVLI(1, e32, mf2, ta, mu)
  vfsqrt.v v0, v0
# ------------------------- check vtype
  CHECK_VTYPE(87)
# -------------- check tail
  VSETVLI(4, e32, m1, ta, mu)
  LOAD_ADDR(dump, 0)
  STORE_SCALAR_AND_VSLIDE1DOWN_IMM(sw, v0, v1, 4, 4)
  CHECK_TAIL_MEMCMP(dump, 3, 4, lw, -1, in_127, 4)
# -------------- check vector registers
  VSETVLI(4, e32, m1, ta, mu)
  LOAD_ADDR(dump, 0)
  STORE_SCALAR_AND_VSLIDE1DOWN_IMM(sw, v0, v1, 4, 4)
  MEMCMP4b(check_129, dump, 4, 0)
test_445_end:
  li TESTNUM, 445{noformat}

it seems it is checking tail values first (line 14 to 17), but it is modifying v0 and v1 while doing so, and then it is looking to the non-tail value into v0, but it has already been modified while checking the tail (so the value is nowhere to be found). What am I missing ?","27/Apr/22 11:36 AM;6065017e90e3950069cf01c5;Also I am seeing the correct value in my simulation:

{noformat}C                   0:      13536 vrf[ 0]=[ffffffffffffffffffffffff4aa9a3a8][ffff]
C                   0:      13538 [1] pc=[00000000800008ba] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[4e001057] vfsqrt.v v0, v0{noformat}

so maybe I am doing something wrong.","28/Apr/22 4:07 AM;607e26831417e2006abb3189;The SHA that I have provided is of [https://github.com/sifive/federation/pull/21743|https://github.com/sifive/federation/pull/21743|smart-link]  PR branch which is not merged to master yet.
[~accountid:6065017e90e3950069cf01c5]  Can you point me to your run area where you saw the correct value?
I rebase the PR branch with latest master and re-ran the test.

I am seeing different data in v0 but not with 1’s.
{{vrf[ 0]=[00000000d033592ba0cc3b22d85d3b53][ffff]}}

my run area after rebasing

{noformat}gamma28 /scratch/verif/anils/tgv/vi-6777-branch/federation/builds1/coreip_u8_minimal_vector/sim/rerun/rerun.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfsqrt.v {noformat}","28/Apr/22 2:31 PM;6065017e90e3950069cf01c5;I have fixed an issue with the vector divider (inc. sqrt) and tail agnostic behavior in [https://github.com/sifive/federation/pull/22130|https://github.com/sifive/federation/pull/22130|smart-link] .

I need to run it on the test branch to see if it improves the outcome.","28/Apr/22 4:21 PM;6065017e90e3950069cf01c5;[~accountid:607e26831417e2006abb3189]  after rebasing the test branch {{VI-6777_0412}} on master (after merging PR22130)  the outline is passing.

Could you check that this is the case on your side ?","29/Apr/22 6:38 AM;607e26831417e2006abb3189;Hi [~accountid:6065017e90e3950069cf01c5] 
The test is passing for me after rebasing the branch with latest master.
I think we can go ahead and marked the ticket as resolved. ",29/Apr/22 8:09 AM;6065017e90e3950069cf01c5;Thank you [~accountid:607e26831417e2006abb3189] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] [Mask Unit] Mask Consume Hookup,,,,,,MAL-1843,113727,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,4/26/2022 10:22,5/20/2022 4:07,9/28/2022 0:51,5/17/2022 11:40,,,,,,,,,,,,,TGV_RTL/MU,TGV_RTL/VEX,,,,,,,,0,,,,Add connections/logic to properly read mask source from MU PRF and mux/expand mask properly.,Andrew Hanselman,Nicolas Brunie,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1945,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-05-18T10:30:09.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8479af12decb3a9a5ab1934ff1e29ea5c9522cfa,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz26v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/May/22 8:36 AM;609d7e1f5998a6006800dcc5;[https://github.com/sifive/federation/pull/22423|https://github.com/sifive/federation/pull/22423|smart-link] has been merged but does not enable masked instructions in any test outlines. Currently, some tests are failing cosim due to writes performed by TGV of all old register data (various element mask, vl, lmul combinations) that aren’t performed by Sting, resulting in a misaligned scoreboard. Still triaging other failing tests.",17/May/22 11:39 AM;609d7e1f5998a6006800dcc5;All sanity tests (with masks enabled) seem to be passing when co-sim is disabled. I’ve checked a few of them to make sure that there are non-trivial mask test cases occurring. Gonna close this and we can track enabling the tests / additional bugs separately.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
BRQ drives incorrect RAS ptr/age when two branches execute,BRQ drives incorrect RAS,,,,,MAL-1842,113726,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Adam George,61b2a458657a0500706b9c39,Adam George,61b2a458657a0500706b9c39,Adam George,61b2a458657a0500706b9c39,4/26/2022 10:17,6/14/2022 3:08,9/28/2022 0:51,5/4/2022 14:10,narwhal.00.00,narwhal.01.00,narwhal.02.00,narwhal.03.00,narwhal.04.00,,,,,,,,Performance,RTL/Frontend,,,,,,,,0,,,,"The test ELF contains the following code

{noformat}2000017c:	0176e263          	bltu  a3,s7,20000180 <pseg_23+0x4c>
20000180:	8d69                and   a0,a0,a0
20000182:	a039                j     20000190 <pseg_23+0x5c>
...
2000019c:	01ed6833          	or    a6,s10,t5
200001a0:	e90d5fe3          	bge   s10,a6,2000003e <pseg_24>

00000000200001a4 <pseg_20>:
200001a4:	f78e03a3          	sb    s8,-153(t3)
200001a8:	004fcfb3          	xor   t6,t6,tp
200001ac:	00068ce7          	jalr  s9,a3
200001b0:	105100bf  	0x3e080f13105100bf{noformat}

At time 2288922500 the BLTU at 0x17c is added the BRQ. Two cycles later the BGE at address 0x1a0 is added to BRQ entry 0xba, and the following cycle the JALR at address 0x1ac is added to BRQ entry 0xbb. 

|| ||*RAS Entry*||*BRQ Entry*||*BRQ Alloc Time*||*Lower PC*||
|BGE|n/a|0xba|2288962500|0x1a0|
|JALR|12|0xbb|2288982500|0x1ac|

The BGE instruction mispredicts to 0x2000_003e 4 cycles later when executing from EX 1. In the same cycle the EX 0 pipe also updates the BRQ with a mispredict for the JALR instruction. Since the BGE is the older instruction the BRQ should flush-next relative to the BGE instruction but instead it uses the younger(and actively flushed) JALR from EX 0. This results the incorrect recovery ptr/age passed to the RAS unit. It should see 0xb/0x6 but instead sees 0xc/0x7 and so the speculative JALR in entry 0xc of the RAS unit is never flushed.",Adam George,Brian Grayson,Chia-I Chen,Dave Parry,Fu-Ching Yang,I-Cheng Cheng,Jahoor Vohra,Jaksa Djordjevic,Josh Smith,,,,,,,61b2a458657a0500706b9c39,5e1371705361330daaeaf389,61aaafab977c5b007241043c,5cc37f384573b30ffbeb88b0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5b7745bc793fa62ab2871f70,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1832,,,,MAL-1897,,,,,,,,,,,,,,,,,,,,,,,88f42b730136931d83d3180eaba9de411cd40ac9,Requires further investigation,,Branch Prediction,Mid Core,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-04T14:05:55.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,"Perf bug, perf impact quantification (See CIP-1832) . Changed it to ""Do not publish"" on 5/10/22, as it only affects P650. ",CAT-B,,Medium,When multiple branches execute simultaneously the wrong entry may be deallocated from the return address predictor. This may cause reduced predictor performance either through an increased possibility of an overflow or incorrect return predictions. ,High,,P500,,Reduced return address predictor performance due to bad deallocations,None,1. BRC: Should not Publish,,,,,,,,,,4258ba672b84e699848de0042bf0b9141a85f767,,,,,,,,,,,,Other -- Put in description,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz26n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,00:09.7,26/Apr/22 11:00 AM;5acffeafaa802f2a797a955c;[~accountid:61b2a458657a0500706b9c39] so is it correct to say this problem only occurs when there are 2 branch execution pipes?  In that case this only affects P650 at the moment.,"26/Apr/22 11:16 AM;61b2a458657a0500706b9c39;It looks like the {{brFlushFromWb}} parameter, added last fall, _might_ interact with this bug. Otherwise it requires the two branch execution pipes.",26/Apr/22 11:37 AM;5acffeafaa802f2a797a955c;That parameter was only intended to be used when we had multiple branch pipes.  But good to know.,"28/Apr/22 7:40 AM;5acffeafaa802f2a797a955c;[~accountid:61b2a458657a0500706b9c39] if it’s easy enough, could you add a coverpoint for this scenario as well?",28/Apr/22 1:59 PM;61b2a458657a0500706b9c39;Precisely hitting this with a coverpoint(or assertion) is not feasible since it requires detecting if the top RAS call was not flushed when it should have been. However I can add limited coverage around flushes when the BRQ contains RAS operations. ,"28/Apr/22 3:44 PM;5e1371705361330daaeaf389;Two questions:

* is this a performance bug then, i.e. will there be future mispredicts once we try to pop to where this JALR is erroneously still on the stack? Seems like it.
* or is it more like the RAS “loses” an entry, and over time will fill up faster than it should? i.e. at least one potential cause of the [https://sifive.atlassian.net/browse/MAL-1832|https://sifive.atlassian.net/browse/MAL-1832|smart-link] situation? (I see this being talked about over there too.)

I think it’s probably both, right?","28/Apr/22 6:01 PM;61b2a458657a0500706b9c39;It is unknown if this corrupts the stack. The case described in SPARTA-1752 looks like it does but that is a post-overflow situation. An attempt was made to check stack operation after an overflow but this fails immediately due to current RTL behavior. No incorrect predictions(bad targets) were noticed during this debug, but the checker does not check the target address. ","28/Apr/22 7:27 PM;61aaafab977c5b007241043c;How about checking if the paired (rasCommitReqCall, rasCommitReqReturn) have the same pointer(ptr)? Remember the last rasCommitReqCall’s pointer and if rasCommitReqReturn comes next, the pointer should be the same.

The stored pointer is cleared by a flush or updated if rasCommitReqCall comes next.","03/May/22 12:08 AM;61b2a458657a0500706b9c39;It may be possible to check that returns are paired with the associated call using an assertion. I will look into this, but it will require some way of dealing with overflows.","04/May/22 2:17 PM;5cc37f384573b30ffbeb88b0;[~accountid:5acffeafaa802f2a797a955c] /  [~accountid:61b2a458657a0500706b9c39] is the takeaway from the above that this bug will not be expressed in any p550 configuration that we could/would have built/shipped? That is, is it safe to mark “*Affects previously released IP/Silicon”* as “No” (given that we don’t consider the P650 AP to be “released IP”)?","04/May/22 2:26 PM;61b2a458657a0500706b9c39;I believe the perf impact occurred with change bf290df42f91ac4a163f55a668d01a37822d0ef9(Sept 9th, 2021), which adds the second branch pipeline.",06/May/22 4:59 PM;5b7745bc793fa62ab2871f70;[~accountid:61b2a458657a0500706b9c39] - Please take a stab at the Errata fields. ,"06/May/22 5:13 PM;5acffeafaa802f2a797a955c;[~accountid:5b7745bc793fa62ab2871f70]  I don’t think this should be marked as affecting previous releases.  This performance bug should only manifest in P650, not P550.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU timing: LDWR bypass parallel muxes,,,,,,MAL-1841,113673,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Khondakar Mujtaba,622a930149c900007023d105,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,4/25/2022 16:17,9/3/2022 7:44,9/28/2022 0:51,4/27/2022 15:31,,,,,,,,,,,,,Implementation,RTL/LSU,Timing,,,,,,,0,,,,"[~accountid:623e4830b75ca80070580145] found that [https://github.com/sifive/federation/blob/99085cac660c551728a0094555cb368975b421ba/mallard/src/main/scala/core/mallard/LDPipe.scala#L1182-L1189|https://github.com/sifive/federation/blob/99085cac660c551728a0094555cb368975b421ba/mallard/src/main/scala/core/mallard/LDPipe.scala#L1182-L1189] ends up being synthesized as multiple back-to-back priority muxes:

!LSU critical paths - LDWR bypass.png|width=675,height=270!

We can do better using {{Mux1H}} and save some gates in this critical path.

# Use {{Mux1HDefault}} something like this (caveat: I have not tried to compile this\!):
{noformat}ldr_l1OrLdwrDataEncoded((d*numECCGranulesPerDatapathGranule)+e) :=
  Mux1HDefault(default = Mux1H(ldr_metaInfo_q.addrL1dcDataBankDcd, io.l1dcDataArray_readOut.map(_(d)(e))),
    in = (ldr_matchLdwrVecL1EccGrans.map(_((d*numECCGranulesPerDatapathGranule)+e)) zip io.ldwrVec_l1dcDataWrReq.map(_.bits.wrDataEncoded(d)(e)))){noformat}
# Add an assertion that {{ldr_matchLdwrVecL1EccGrans}} is one-hot-or-zero.",John Ingalls,Vaibhav Gupta,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,623e4830b75ca80070580145,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25/Apr/22 4:17 PM;John.Ingalls;LSU critical paths - LDWR bypass.png;https://sifive.atlassian.net/secure/attachment/71127/LSU+critical+paths+-+LDWR+bypass.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{repository={count=3, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":3,""lastUpdated"":""2022-05-18T18:36:52.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/22102,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz1wn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Optimize the reg writes for regs that are undisturbed,,,,,,MAL-1840,113672,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,4/25/2022 15:55,7/14/2022 11:32,9/28/2022 0:51,4/27/2022 8:44,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,"The instruction is

{noformat}0x00000000800009e0 (0xf7f8a857) vwmacc.vv v16, v31, v17
0x00000000800009e0 (0xf7f8a857) e16 mf2 l3

And RTL does 2 writes to reg 16 and 17.

0:      14239 vrf[16]=[df22874fdb772f81327d29d18318fbc5][ffff]
0:      14239 vrf[17]=[06d7778b0068786105664b5dfe96279c][ffff]
0:      14241 [1] pc=[00000000800009e0] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[f7f8a857] vwmacc.vv v16, v31, v17{noformat}

As cosim uses these reg writes in the order they are performed, And compares with the regs results changes in spike, there will be a dangling reg write made by RTL which wont be compared (even though its an undisturbed data). 
This causes failures later in the test.

I was able to put in a workaround for the vl=0 case, but i cant think of how we can drop the write for this scenario. 



To re create this failure, 

1. clone federation and checkout the commit 221d84094ede35cd9d418c0b89ea374ef246529a

2. build coreip_u8_minimal_vector and rerun using the outline

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+verbose"",
    ""+cosim_scoreboard_verbosity=4""
  ],
  ""subdir"": ""t0000_lmul8"",
  ""subtest"": ""vwmacc.vv"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vwmacc.vv_Masking-0_Exception-1_CheckFflags-1_CheckVxsat-1_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-50_LMUL-8_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 709023406
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}


The generated waves are at {{gamma22:/scratch/verif/srivatsa/Cosim_vreg_en_msk_skip/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vwmacc.vv}}",Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-27T08:43:39.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/983d76273a34aaf975406573fa8f1f26169a3cba,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz1wf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] rename VectorShiftUnit,,,,,,MAL-1839,113666,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,4/25/2022 14:52,7/14/2022 18:45,9/28/2022 0:51,5/18/2022 12:50,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"the {{VectorShiftUnit}} has been extended to support more than vector shifts. It now supports floating-point conversion.

the name does not seem to describe the unit actual role and should be revised (maybe {{ShortVectorPipeline}} ?)",Kira Tsao,Nicolas Brunie,,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,af88929a3028e57202ace6d70f8c056b63f3bb76,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz1v3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,49:13.9,"18/May/22 12:49 PM;5e1a4f5ec578120daca5ff8e;Renamed {{VectorShiftUnit}} to {{VectorIntNarrowUnit}} because it now only support vnsrl/vnclip series instructions.

Done in [https://github.com/sifive/federation/pull/22285/commits/09cda87a10d11409b52bd488722db189efd20fa1|https://github.com/sifive/federation/pull/22285/commits/09cda87a10d11409b52bd488722db189efd20fa1|smart-link] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] PMOD output validity assertion wrong on flush,[TGV] PMOD ,,,,,MAL-1838,113646,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,4/25/2022 9:42,9/7/2022 17:43,9/28/2022 0:51,4/28/2022 17:15,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"An assertion in {{VexPipe}} is checking that the pipe result get selected from the permute engine output only if the permute engine result is valid. This assert has not been constraint enough and only checks that the selection flag and the result validity flag are equal. In case of a flush this will not be the case: the flush only cancels the selection signal (through staged tag valid cancel), and not the internal result validity flag in the permutation engine. This is expected, but it fails the assert.",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,P570 configuration from MAL-1806 and tgv-sanity.outline,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-28T17:14:40.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/56bcaf4fc1e454d363c4bd00d23787ca1dc35745,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz1rb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Improve IP level synthesis bench,,,,,,MAL-1837,113617,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,4/24/2022 23:26,7/12/2022 9:54,9/28/2022 0:51,4/28/2022 23:44,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,Try to simply the usage of IP level synthesis bench in TGV.,Kira Tsao,Nicolas Brunie,,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1744,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-29T18:20:40.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz1m7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Mallard hierarchy: move BPU from Core to LSU,,,,,,MAL-1836,113604,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,4/24/2022 14:11,4/26/2022 10:07,9/28/2022 0:51,4/24/2022 18:08,,,,,,,,,,,,,Implementation,RTL/LSU,RTL/Tile,,,,,,,0,,,,"To help support hierarchical PD builds for P650 and beyond, we should move the BPU “Breakpoint Unit” from MallardCore down to the LSU hierarchy level.

This is also going to require changes to DV collateral and things like GrandCentral.",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,MAL-1774,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-25T14:05:59.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/22053,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz1jz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[FPU] Adapt mallard dispatch, issue and bypass to exploit cascading FMA",,,,,,MAL-1835,113594,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,4/23/2022 10:41,9/21/2022 10:58,9/28/2022 0:51,,,,,,,,,,,,,,RTL/FEX,TGV_RTL/ISS,,,,,,,,0,,,,"[https://sifive.atlassian.net/wiki/spaces/CIP/pages/2244182056/Cascading+FMA+integration|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2244182056/Cascading+FMA+integration|smart-link] 

{{FEX}} modification

* modify dispatch to steer dependent FMA to the same {{IssQ}} (support at least one FMA sequence) _\[this modification was discussed during brainstorming but was not part of the initial design plan]_
* tag network for FMA {{src3}}: tag broadcast only by FMA
* {{src3}} tag matching mechanism ({{IssQ}}, {{IssQEntry}}) which only matches tag sent from tag FMA {{src3}} network for FMA {{src3}} in entry (i.e. only for entry if it is an FMA and only for its 3rd source) (1)
* bypass network from  last FMA stage{{EXN}} (could be {{EX4}} or {{EX5}}) to {{EX2}} 
* \[Option / TBD] bypass network from  {{WB}} to {{EX2}} 
* \[Option / TBD] move 3rd source read from {{RR}} to {{EX2}}

Other options (in particular regarding dispatch are currently being discussed)



The bypass mechanism should adapt to the CFMA latency (bypass and outside bypass).



(1): to check FMA family may be the only one using a 3rd source in FEX, so all uops with a 3rd source may be an FMA (no need to check, although an assert would be nice)",Erdinc Ozturk,François Donati,John Ingalls,Nicolas Brunie,,,,,,,,,,,,61ccb01d90cfd20071b96af2,624f6b22f813eb00692ee29a,5bb6808b9ba2930990f81895,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz1hr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Modify PCMT to have fewer than nRename lookup ports,,,,,,MAL-1834,113579,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Eleni Maragkoudaki,62e422de0b4bf7ad924bc51a,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,4/22/2022 14:48,9/27/2022 11:19,9/28/2022 0:51,,,,,,,,,,,,,,Implementation,RTL/Frontend,RTL/RDU,,,,,,,0,,,,"Currently, the PCMT in Mallard has CAM lookup ports for every instruction in the REN stage.  For Healdsburg this will most likely be 8., which is definitely overkill.  We really only need PCMT lookup ports for cases where instructions in the same rename group are in different pages. And also for the case where a JALR instruction ends a rename group and the predicted target is in a different page.

I expect that 2 different page lookups plus the JALR case should be sufficient. This will put some restrictions on the fetch unit forming decode groups though.  In case we have some pathological case with a chain of JALR instructions to different pages.",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Josh Smith,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2075,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1650,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Rename,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzz1en:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,5,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,07:17.8,"25/Apr/22 10:07 AM;5e1371705361330daaeaf389;We can only sustain one JALR per cycle if the NLP can perfectly predict them, and otherwise only one JALR every 3 cycles, so having a “no more than one JALR in a rename group” seems fine. It may also be fine to limit to one page-crossing OR one JALR-and-destination, i.e., only two PCMT lookup ports all the time. Which is what I think you are saying. 🙂","16/Sep/22 10:16 AM;5e1371705361330daaeaf389;[~accountid:5acffeafaa802f2a797a955c] should work on this be deferred until after we figure out whether we are removing the InstQ? If we are, and only do two-FQ-forming, then we should only need at most two PCMT lookup ports (one per FQ entry), right?","16/Sep/22 10:25 AM;5acffeafaa802f2a797a955c;[~accountid:5e1371705361330daaeaf389] That doesn’t really make a difference to the changes that are required to the PCMT design.  That would just change the fact that IFU needs to constrain the decode group formation.

And technically a single FQ entry could require up to 2 PCMT lookup ports.  One for the starting address of the fetch group, and another one if a JALR instruction ended the fetch group (for the predicted target address of the JALR).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] Assertion Failure: SiFive_CSRFile_assert,[TGV] Assertion Failure: SiFive_CSRFile_assert,,,,,MAL-1833,113550,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,4/22/2022 6:41,9/7/2022 17:43,9/28/2022 0:51,4/25/2022 16:56,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"The following assertion is fired up 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_65_assertion_csr/federation/builds2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_CSRFile_assert.sv"", 131: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.csr.SiFive_CSRFile_assert_0: at time 31722500 ps
Assertion failed
    at CSR.scala:1648 assert(reg_mstatus.fs > 0)
Fatal: ""/scratch/ishitashah/tgv_regression/sign_65_assertion_csr/federation/builds2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_CSRFile_assert.sv"", 140: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.csr.SiFive_CSRFile_assert_0: at time 31722500 ps{noformat}

*SHA* : [+f9c008a+|https://simscope.internal.sifive.com/models/undefined--master--f9c008a5478d394f2f1590430f1bdce3ae547222]

*config:* coreip_u8_minimal_vector

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""torture"",
  ""raw_plusargs"": [
    ""+clock_periph=4"",
    ""+clock_div0=2"",
    ""+clock_div1=2"",
    ""+clock_div2=2"",
    ""+clock_div3=2"",
    ""+clock_div4=2"",
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+enable_spike_cosim"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    """",
    ""+cosim_scoreboard_stall_cycle_count=500000""
  ],
  ""subdir"": ""torture_cflush_T_5614"",
  ""subtest"": ""cflush"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1030051203
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""torture_inbound"": true,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_inbound,80005400:80005800%20002400:20002800"",
      ""uvm_test_top,torture_read_inbound,20000000:20002108%80004e60:800050a0""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath:* 

{{gamma25:/scratch/ishitashah/tgv_regression/sign_65_assertion_csr/federation/builds2/coreip_u8_minimal_vector/sim/rerundir1/rerun.outline/torture_cflush_T_5614/torture/cflush}}",Ishita Shah,Josh Smith,Nicolas Brunie,,,,,,,,,,,,,607e26355431a500701f5aed,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-04-25T16:13:40.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/50f26eec3ba1a02f7fb48081fa2f60ebf2d3ba3d,,,,,,,,,,,,Simulation-Torture,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz193:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,13:16.9,"22/Apr/22 7:13 AM;5acffeafaa802f2a797a955c;[~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] This assertion is firing because TGV is reporting fflags as valid to the ROB, then when the ROB entry retires it tries to set the FS dirty bit.  However {{mstatus.FS}} was never changed from 0 (meaning off).

I think the instructions which report valid fflags are {{vmv.v.x}} instructions.  So we probably shouldn’t be doing anything with fflags.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Uncorrelated RAS overflow in specInt snippet 0010/128,Uncorrelated RAS,,,,,MAL-1832,113535,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Adam George,61b2a458657a0500706b9c39,Chia-I Chen,61aaafab977c5b007241043c,Chia-I Chen,61aaafab977c5b007241043c,4/21/2022 23:50,9/6/2022 9:25,9/28/2022 0:51,5/4/2022 14:09,mongoose.00.00,mongoose.01.00,mongoose.02.00,narwhal.00.00,narwhal.01.00,narwhal.02.00,narwhal.03.00,narwhal.04.00,Orca DR,,orca.00.00,,RTL/Frontend,,,,,,,,,0,,,,"as described in [https://sifive.atlassian.net/browse/SPARTA-1752|https://sifive.atlassian.net/browse/SPARTA-1752|smart-link] , there are several RAS overflows in specInt 0010/128 when Dabble has none

the following figure shows the observation, where
x-axis: time in cycles
y-axis: counts
the orange dots show the counts of rasValid, i.e., how many entries in RAS are currently valid
the blue dots show the counts of rasCommit, i.e., how many entries are set to avoid being flushed (the functionCall has retired)
the yellow dots show the _golden_ stack status, i.e., parse the retired trace for functionCall and functionReturn, and then increment or decrement the counter respectively
the black arrows show RAS overflows and invalidations

!Snipaste_2022-04-22_15-01-32-ras.png|width=1754,height=496!

this figure gives a hint to check if the entry is properly unset or not when the functionReturn has retired (the maximum yellow dots is 11)

rerun command: {{/work/sparta/scripts/run_micro_benchmark.sh -p 0010/128 -c p65 -t rtlsim -w -v 2022-04-14.5369edd4c0d}}",Adam George,Anhdung Ngo,Brian Grayson,Chia-I Chen,Dave Parry,Fu-Ching Yang,I-Cheng Cheng,Jahoor Vohra,Jaksa Djordjevic,Josh Smith,Megan Wachs,Nicolas Brunie,,,,61b2a458657a0500706b9c39,5e13709185a8c90ecac9beb2,5e1371705361330daaeaf389,61aaafab977c5b007241043c,5cc37f384573b30ffbeb88b0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5b7745bc793fa62ab2871f70,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1888,,,,,,,,,MAL-1842,MAL-1868,,,,,,22/Apr/22 12:10 AM;ug:170a5ef7-9ab0-462c-9d9f-a7e6da38333b;Snipaste_2022-04-22_15-01-32-ras.png;https://sifive.atlassian.net/secure/attachment/71009/Snipaste_2022-04-22_15-01-32-ras.png,15/Jun/22 1:46 PM;ug:01650d64-a562-4979-b0d5-81324bf03bd0;get_ras_signals.bash;https://sifive.atlassian.net/secure/attachment/73281/get_ras_signals.bash,27/Apr/22 11:18 PM;ug:170a5ef7-9ab0-462c-9d9f-a7e6da38333b;image-20220428-061646.png;https://sifive.atlassian.net/secure/attachment/71221/image-20220428-061646.png,15/Jun/22 1:46 PM;ug:01650d64-a562-4979-b0d5-81324bf03bd0;ras_trace.py;https://sifive.atlassian.net/secure/attachment/73279/ras_trace.py,15/Jun/22 1:46 PM;ug:01650d64-a562-4979-b0d5-81324bf03bd0;raslib.py;https://sifive.atlassian.net/secure/attachment/73280/raslib.py,,,,,,,,,,,,,Requires further investigation,,Branch Prediction,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-04T14:05:55.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,"Its a performance bug that interacts with clock-gating feature, as such hard to measure perf impact on FPGAs (where clock gates dont exist). ",CAT-B,,Medium,"In certain circumstances the IFU may be idle when deallocations to the return address predictor occur. If this happens frequently enough the predictor may overflow causing all predictions to be lost, causing reduced performance for certain workloads.",High,,P500,,Reduced effective return address predictor size due to missed deallocations,Set the disableICacheClockGate bit in the Feature Disable CSR to ensure the I-Fetch Unit does not miss updates to the Return Address Stack,1. BRC: should Publish for all customers,,,,,,,,,,4258ba672b84e699848de0042bf0b9141a85f767,,,,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz15r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,37:02.9,22/Apr/22 12:37 AM;61b2a458657a0500706b9c39;I have a script that can detect the failure in an arbitrary FSDB. Currently trying to generate a testcase for debug.,"22/Apr/22 1:16 PM;61b2a458657a0500706b9c39;As of now it looks like there are at least two distinct issues:

# In certain cases the IFU clock gate is closed when a return is committed. This prevents updating _rasValid_F3_ resulting in a missed deallocation of the retired entry.
# If a flush occurs on the same cycle as an F3 speculative allocation, the allocation is not blocked even though F3 is flushed. No more events using this entry will be seen(except possibly an unpaired return) and so the entry remains in the stack.",22/Apr/22 2:16 PM;5acffeafaa802f2a797a955c;[~accountid:61b2a458657a0500706b9c39] Do you have an FSDB which shows some of the bad behavior?  Could you send a link to that?,"22/Apr/22 2:49 PM;61b2a458657a0500706b9c39;I ran 10 torture tests and it seems 9 of them have at least one of the cases below. I have some fixes in for both of them and my checker now hits a third issue which I’m currently debugging.

I’ve copied an example to /scratch/adamg/bug_data/MAL-1832/
The CSV file is the extracted FSDB data. The text file is post-processed with a RAS model that has some basic checks around selected RAS events. In this case the last commit pop operation at time 409142500 occurred with the clock gate closed so the RAS valid bits(ptr 3/bit 3) mis-compare with the model when they are checked the following cycle. 

I’ll attach the scripts later today after they are cleaned up a bit.
",25/Apr/22 1:17 AM;61b2a458657a0500706b9c39;[~accountid:61aaafab977c5b007241043c]  I pushed a branch MAL-1832 with the two issues described below fixed.  Can you check correlation using the branch?,25/Apr/22 2:26 AM;61aaafab977c5b007241043c;[~accountid:61b2a458657a0500706b9c39] I’m on it.,"25/Apr/22 8:22 PM;61aaafab977c5b007241043c;[~accountid:61b2a458657a0500706b9c39] , just to confirm. About the second issue: “_If a flush occurs on the same cycle as an F3 speculative allocation, the allocation is not blocked even though F3 is flushed. No more events using this entry will be seen(except possibly an unpaired return) and so the entry remains in the stack_.”

This speculative allocation will not have a commit, thus it can be invalided by some flush in the future. The entry remains in the stack but it won’t be forever (or until the RAS overflow and invalidate all). Is this correct?","25/Apr/22 9:41 PM;61b2a458657a0500706b9c39;I believe the age pointer will have to wrap at least once for it to be released by a flush. An overflow should clear it right away.

Additionally I think I found an issue with the BRQ. I’m still debugging but it seems there are conditions where it returns the wrong recovery pointer if two branches execute in the same cycle.","26/Apr/22 8:49 PM;61b2a458657a0500706b9c39;I’ve pushed an update to the MAL-1832 branch that addresses the issue described in [\[MAL-1842] BRQ drives incorrect RAS ptr/age when two branches execute - JIRA (atlassian.net)|https://sifive.atlassian.net/browse/MAL-1842]. The checker shows the RTL is working as expected for a 40 test regression(down from 90% failing), excluding cases where an overflow occurs. ","27/Apr/22 11:18 PM;61aaafab977c5b007241043c;compare the two commits in branch MAL-1832: 
before: {{88f42b73013}} (i.e., the version just checkout from master) and 
after: {{1932b5733b2}} (i.e., after applied fix in MAL-1842)

the number of RAS flowflow in 128 is zero now and the S-curve of snippets look good to me

!image-20220428-061646.png|width=1235,height=551!

the outlier with -12% ipc drop is {{bzip2-liberty 0010/011}}, which is a HWPF issue and expected to be fixed in [https://github.com/sifive/federation/pull/22048|https://github.com/sifive/federation/pull/22048|smart-link] (thanks to [~accountid:5d7bfdaa003e040c3e175060])",27/Apr/22 11:22 PM;5d7bfdaa003e040c3e175060;I think the result looks good.  Thx [~accountid:61b2a458657a0500706b9c39]  and [~accountid:61aaafab977c5b007241043c] . ,28/Apr/22 2:21 AM;5ca54304bb1ed00ac5e5e852;Excellent work\!,"28/Apr/22 7:40 AM;5acffeafaa802f2a797a955c;[~accountid:61b2a458657a0500706b9c39] if it’s easy enough, could you add a coverpoints for these scenarios also?","03/May/22 12:30 AM;61b2a458657a0500706b9c39;Synthesis looks okay. I will create one PR for both this and MAL-1842.


{noformat}                        Baseline                 MAL-1832
                        b8427b1762               eaae6c716e
----------------------------------------------------------------
OVERALL       WNS/TNS: -0.079  -1997.0           -0.066  -1616.0
REG2REG       WNS/TNS: -0.079  -1935.0           -0.066  -1561.0
CLK_GATING    WNS/TNS: -0.078    -39.0           -0.066    -30.0
FEEDTHROUGH   WNS/TNS: -0.029     -1.0           -0.023     -1.0
INPUT         WNS/TNS:    0.0      0.0              0.0      0.0
MEM2REG       WNS/TNS: -0.007     -0.0              0.0      0.0
OUTPUT        WNS/TNS: -0.063    -20.0           -0.062    -20.0
REG2MEM       WNS/TNS: -0.008     -0.0           -0.014     -2.0{noformat}


I added a cover for the bad allocation during a flush. ",03/May/22 11:32 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;So is this a bug related to IFU clock gating thus only impacting Narwhal? Does this impact Narwhal?,03/May/22 11:39 AM;5cc37f384573b30ffbeb88b0;[~accountid:5acffeafaa802f2a797a955c] [~accountid:61b2a458657a0500706b9c39] [~accountid:5bb6808b9ba2930990f81895] when was the IFU clock gating that seems to cause this bug (true?) added to Mallard?,"03/May/22 11:49 AM;5acffeafaa802f2a797a955c;Well the IFU clock gating was added way back in October of 2020.  But this is a performance bug, not a functional bug.  What happens is that RAS entries would not be freed up in some scenarios, leading to more frequent RAS overflows (at which point the entries become available again).","06/May/22 4:52 PM;5b7745bc793fa62ab2871f70;[~accountid:61b2a458657a0500706b9c39] - Can you please fill out the errata fields (Title, implications, workarounds, etc…) ","06/May/22 5:14 PM;5acffeafaa802f2a797a955c;[~accountid:5b7745bc793fa62ab2871f70] I’m updating the “Errata BRC discussion” to reflect that it’s a _performance_ bug, not a functional bug.",24/May/22 10:02 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;[~accountid:5cc37f384573b30ffbeb88b0] are you done with this errata writeup?,15/Jun/22 1:52 PM;61b2a458657a0500706b9c39;Added updated RAS model files used to discover the RTL bugs.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[FPU] Integrate dummy CFMA into P650,,,,,,MAL-1831,113433,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,4/20/2022 23:13,9/21/2022 10:58,9/28/2022 0:51,5/15/2022 13:53,,,,,,,,,,,,,RTL/FEX,,,,,,,,,0,,,,"Integrate dummy CFMA into FCOMB(fmuladd)/FMulAdd(fma) in P650, also ensure the synthesis result including the CFMA module.",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Kira Tsao,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1a4f5ec578120daca5ff8e,,,,,,,,,,,,,,,,,,CIP-3055,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1874,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Floating Point,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-05-02T19:44:42.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz0jr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: SiFive_NLP_assert (NLP read has more than one valid matching entry),Assertion Failure: SiFive_NLP_assert,NLP (Next Line Predictor),,,Refer https://github.com/sifive/arch-specs/blob/master/core/mallard_mas.adoc#541-next-line-predictor,MAL-1830,113436,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,4/20/2022 23:54,5/3/2022 10:17,9/28/2022 0:51,4/21/2022 9:39,,,,,,,,,,,,,RTL/Frontend,,,,,,,,,0,,,,"*Error:*

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/298/builds/coreip_p650_tiny_eaq/verilog/design/assertions/SiFive_NLP_assert.sv"", 200: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.frontend.nlp.SiFive_NLP_assert_0: at time 1224402500 ps
Assertion failed: NLP read has more than one valid matching entry

    at NLP.scala:380 assert(!(io.valid_F1 && PopCount(Cat(nlpHits_F1)) > 1.U) || io.nlpBankConflict_F1, ""NLP read has more than one valid matching entry""){noformat}

*Config:* coreip_p650_tiny_eaq

*Commit:* 442c711

*Regression:* master/nightly-mallard/298

*Simscope:* [https://simscope.internal.sifive.com/sigs/1468/cjeqwwgtr6jc|https://simscope.internal.sifive.com/sigs/1468/cjeqwwgtr6jc]

*rerun.outline:*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""flipper"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2593824717
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Josh Smith,Saurabh Singh,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1829,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz0kf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,09:44.6,"21/Apr/22 9:09 AM;5acffeafaa802f2a797a955c;This looks like this is caused by the same IFU clock gating bug as [https://sifive.atlassian.net/browse/MAL-1829|https://sifive.atlassian.net/browse/MAL-1829|smart-link].  It’s just a different failing signature.

I’m going to try out the same fix that was applied for 1829, and see if it fixes this failure also.",21/Apr/22 9:39 AM;5acffeafaa802f2a797a955c;This should be fixed already along with MAL-1829,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[COSIM-ERROR][#] COSIM VS RTL PC MISMATCH,COSIM-ERROR  COSIM VS RTL PC MISMATCH,IFU (Instruction Fetch Unit),Fetch Queue,,Refer https://github.com/sifive/arch-specs/blob/master/core/mallard_mas.adoc#511-fetch-queue,MAL-1829,113247,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,4/19/2022 0:34,4/27/2022 8:51,9/28/2022 0:51,4/20/2022 19:56,,,,,,,,,,,,,RTL/Frontend,,,,,,,,,0,,,,"*Error:*

{noformat}[COSIM-ERROR][0] m_dut_inst_item: [239965] InstInfo: VLD=1 | PC=0x0000000080000800 | INSN=0xfc810113 | INST_DST=INT | REDUCTION = false | WR: en=true r2=0x0000000040001038 mask=ff | READY=1 | CSR_TIMER=239965 | PRV=3 | MSTATUS=0x8000000a00006080 | MTVEC=0x0000000080000800 | MCAUSE=0x0000000000000001 | VSTART=0 | VL=0 | VSEGELT=0
[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000008000954 | INSN=0xfc810113 | INST_DST=INT | REDUCTION = false | WR: en=true r30=0x0000000000000000 mask=ff{noformat}

An exception in RTL causes the PC Mismatch.

RTL encounters an illegal instruction exception, {{mcause=0x1}}. Tracing back the exception, it comes due to {{fpIllegal }}getting asserted for the following fp instruction: {{Opcode:927660c3 fmadd.d	ft1,fa2,ft7,fs2,unknown.}} 

{{io_opcode[14:12] = 6 }}which asserts the {{fpIllegal}}.

*Config:* coreip_p550

*Commit:* 8eb20e4

*Regression:* master/RIT-mallard/275

*Simscope:* [https://simscope.internal.sifive.com/sigs/704/cjddrl4hxz37|https://simscope.internal.sifive.com/sigs/704/cjddrl4hxz37]

*rerun.outline:*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""torture"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+clock_periph=3"",
    ""+clock_div0=3"",
    ""+clock_div1=3"",
    ""+clock_div2=3"",
    ""+clock_div3=3"",
    ""+clock_div4=3"",
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+enable_spike_cosim"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    """",
    ""+cosim_scoreboard_stall_cycle_count=500000""
  ],
  ""subdir"": ""torture_mem_T_0079"",
  ""subtest"": ""mem"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2453760992
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""2000000""
  },
  ""program"": {
    ""torture_inbound"": true,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_inbound,80006800:80006c00%20000400:20000800"",
      ""uvm_test_top,torture_read_inbound,20000000:20000248%800063b8:800065f8""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",John Ingalls,Josh Smith,Saurabh Singh,Suraj Vellengar,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,607e26f781e7b900681be48c,5e1377323e586d0dafebf4e3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1830,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-20T19:55:32.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,64c7267a1c9353f2da90060776ab20ecfacffe6a,,,,,,,,,,,,Simulation-Torture,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyzjz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,25:03.2,"19/Apr/22 8:51 AM;607e26f781e7b900681be48c;Corresponding {{PC:0x80006bc}} for the fmadd.d instruction is seen to be prefetched at {{T:4800522500ps}}, after{{ io_req_bits_pc=0x8000944}} was executed. prefetch is seen to be asserted as a {{nlpHit}} & {{nlpRasHit_F1 (T:4800522500ps)}} is observed. 

Looks like we predicted this PC and did a prefetch. However, from the program.elf.dasm, I don’t see a branch or jump with target as {{PC=0x80006bc.}} 

[~accountid:5acffeafaa802f2a797a955c] Can you please help me out on debugging this further?

Wave dump and logs are present at {{gamma10: /scratch/saurabhs/mallard_RIT_275/federation/builds/coreip_p550/sim/sim/pc_mismatch.outline/torture_mem_T_0079/torture/mem}}","20/Apr/22 9:25 AM;5acffeafaa802f2a797a955c;[~accountid:607e26f781e7b900681be48c] Yeah, this looks like it may be a clock gating bug after my change for [https://sifive.atlassian.net/browse/MAL-1750|https://sifive.atlassian.net/browse/MAL-1750|smart-link] .  The IFU clock is off for one cycle shortly after a flush, and the ITLB returned the translation for the wrong PC. Because the TLB uses a duplicated {{valid_F1}} flop that happened to live in the IFU clock gated domain, so it wasn’t updated properly to choose the fetch VA instead of the prefetch VA for one cycle.","20/Apr/22 7:56 PM;5acffeafaa802f2a797a955c;When I re-ran the failing test, I didn’t hit the exact same scenario again because the fix will affect the fetch pipeline stalls a little bit, but I added a coverpoint which should be for the scenario which failed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Add 1 stage between vectorALU->comparemod ,,,,,,MAL-1828,113369,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,4/20/2022 2:58,7/12/2022 9:54,9/28/2022 0:51,4/28/2022 5:43,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"The PR [https://sifive.atlassian.net/browse/MAL-1707|https://sifive.atlassian.net/browse/MAL-1707|smart-link] supports min/max instruction, but it also introduces a critical path from vectorALU to comparemod.

After [~accountid:5e1a4f5ec578120daca5ff8e] investigated this path ([https://sifive.atlassian.net/browse/MAL-1707?focusedCommentId=346757|https://sifive.atlassian.net/browse/MAL-1707?focusedCommentId=346757|smart-link]), it turns out that we need an additional cycle for comparemod to solve this critical path. ",Brad Wu,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,,62103777eb2978006893b778,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1707,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-28T03:24:46.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz08v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: collapse ReleaseQ SourceIDs into L1MSHRs,,,,,,MAL-1827,113352,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,4/19/2022 19:55,5/16/2022 12:22,9/28/2022 0:51,4/19/2022 20:04,,,,,,,,,,,,,Implementation,RTL/LSU,,,,,,,,0,,,,"In [https://github.com/sifive/federation/commit/fc20fe50759636dc49306b1781b7a7c3284ccdff|https://github.com/sifive/federation/commit/fc20fe50759636dc49306b1781b7a7c3284ccdff|smart-link], I moved {{Release/ReleaseData}} requests to use separate TileLink {{source}} IDs, but now I can neither remember nor explain why that was necessary.  This has been unnecessarily complicating {{source}} math and potentially adding a {{source}} flop bit for years.",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1941,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-20T11:27:45.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/21940,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,"P1 (non-negotiable): 
P2 (nice-to-have): ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzz05r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,3,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: out-of-order claim flush avoidance predictor,,,,,,MAL-1826,113312,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,4/19/2022 12:42,9/16/2022 17:28,9/28/2022 0:51,,,,,,,,,,,,,,Performance,RTL/LSU,,,,,,,,0,,,,"When we run out of resources (LoadQ, StoreQ, MSHR entries), and the resources were established out-of-order, an older instruction may need to flush the newest one: {{lsto_flushNewer}} (we have performance monitor events with this name too).  This is functionally necessary to avoid deadlock, but this whole-CPU flush all the way back to re-fetch is bad for performance.

We could predict or recognize these scenarios and instead slow down to issuing in-order.

We could target these to specific instructions by using the same mechanism as the MDP [https://sifive.atlassian.net/browse/MAL-295|https://sifive.atlassian.net/browse/MAL-295|smart-link] ",Brian Grayson,Edward Brekelbaum,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,,5e1371705361330daaeaf389,5e1372d362aed90daa48f7b1,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,MAL-295,MAL-2641,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1153,MAL-1157,MAL-1638,MAL-646,,,,,,,,,,,,,,,,,,,,,,,,,,,Load/Store,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzyzx3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,10,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] extend large precision unit dividers to be unified and support/accelerate smaller format operations,,,,,,MAL-1825,113229,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Shaka Kao,5f94696c29bd8a006f94f0e1,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,4/18/2022 21:26,7/22/2022 9:44,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Initially TGV vector divider was instantiating two many dividers for the largest formats ([https://sifive.atlassian.net/browse/MAL-1729|https://sifive.atlassian.net/browse/MAL-1729|smart-link] , [https://sifive.atlassian.net/wiki/spaces/~247505244/pages/2244313703/nVDiv+for+TGV|https://sifive.atlassian.net/wiki/spaces/~247505244/pages/2244313703/nVDiv+for+TGV|smart-link] ), only a subset could be actually used.

[~accountid:5f94696c29bd8a006f94f0e1] and [~accountid:5e1a4f5ec578120daca5ff8e]  suggested to investigate the possibility of replacing large format dividers by unified dividers and use them to extend the number of small format divider available, providing throughput increase and trading for power efficiency and control complexity.",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzyzg7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] explore vector divider extension to improve throughput when LMUL > 1,,,,,,MAL-1824,113162,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Lowest,,Shaka Kao,5f94696c29bd8a006f94f0e1,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,4/18/2022 21:18,7/22/2022 9:43,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Initially TGV vector divider was instantiating two many dividers for the largest formats ([https://sifive.atlassian.net/browse/MAL-1729|https://sifive.atlassian.net/browse/MAL-1729|smart-link] , [https://sifive.atlassian.net/wiki/spaces/~247505244/pages/2244313703/nVDiv+for+TGV|https://sifive.atlassian.net/wiki/spaces/~247505244/pages/2244313703/nVDiv+for+TGV|smart-link] ), only a subset could be actually used.

We decided to limit the number of dividers and save some area. Another solution suggested by [~accountid:5f94696c29bd8a006f94f0e1] and [~accountid:5e1a4f5ec578120daca5ff8e] was to exploit those dividers when LMUL is sufficiently large to have more than DLEN / SEW division in flight. 

This would require issue queue and execution pipeline modifcations as currently the first division uop blocks the issue queue until the division is completed.

If this extension is only allowed for uops coming from the same macro-op or sharing GID then the control change should be minimal.

In its current form the vector divider will input entry from multiple uops in order and output them in the same order (FIFO), we may want to investigate releasing this constaint.",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzyz1b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,18/Apr/22 9:20 PM;6065017e90e3950069cf01c5;I listed “Panda DR' because the only choice further away was “Healdsburg DR” but this task is not targeted for Panda (but later).,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] optimize rounding mode forwarding for frequent rm switch,,,,,,MAL-1823,113080,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,4/18/2022 10:55,7/22/2022 9:43,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/Top,,,,,,,,0,,,,"Some code sequence in {{hpc-workloads}} may try to exploit fast switch between rounding modes:

{noformat}vuint16m2_t blur121_u16(vuint16m2_t a, vuint16m2_t b, vuint16m2_t c,
                        size_t vl)
{
    size_t temp_2 = __builtin_rvv_vgetvxrm();
    __builtin_rvv_vsetvxrm(VE_DOWNWARD);
    vuint16m2_t vtmp = vaaddu(a, c, vl);
    __builtin_rvv_vsetvxrm(VE_TONEARESTUP);
    vuint16m2_t vresult = vaaddu(vtmp, b, vl);
    __builtin_rvv_vsetvxrm(temp_2);
    return vresult;
}{noformat}

([https://github.com/sifive/hpc-workloads/blob/7d310d18e021cc0b7e04f43e72cfa195b95e80b8/src/video/mc2/denoise.cc#L31|https://github.com/sifive/hpc-workloads/blob/7d310d18e021cc0b7e04f43e72cfa195b95e80b8/src/video/mc2/denoise.cc#L31], [https://github.com/sifive/hpc-workloads/pull/4|https://github.com/sifive/hpc-workloads/pull/4|smart-link] )

Such switch are currently poorly supported by Mallard+TGV: any write to {{vxrm}} would trigger a pipeline flush.

[~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] suggested that this could be optimized by detecting the {{vxrm}} change in RDU and passing it over to subsequent instruction payloads, similar to what is done for {{vtype}}.

Perf impact and cost should be evaluated throroughly.

[https://sifive.slack.com/archives/G01ANG7M8KE/p1650300661101159|https://sifive.slack.com/archives/G01ANG7M8KE/p1650300661101159|smart-card]",Alexandre Solomatnikov,Josh Smith,Knute Lingaard,Nicolas Brunie,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5acffeafaa802f2a797a955c,5e1374fb7a22c90da0c60495,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzyygf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,04:29.9,"18/Apr/22 12:04 PM;5e1374fb7a22c90da0c60495;In dabble, {{csrw}} to this register are currently synchronized.   We can run a study to see how this impacts perf…",18/Apr/22 12:17 PM;6065017e90e3950069cf01c5;[~accountid:5e1374fb7a22c90da0c60495]  I don’t think this should be considered a priority. It would be interesting to understand if this scheme could be used widely (and if it appears in the benchmark we track already).,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] Misc list of optimizations not required for initial functional state,,,,,,MAL-1822,113079,,Epic,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,4/18/2022 10:54,9/26/2022 20:18,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/Top,TGV_RTL/VEX,,,,,,,0,,,,"Task to list improvements/optimization for TGV we intend to execute for Panda (initial TGV release).

Twin task is [https://sifive.atlassian.net/browse/MAL-2240|https://sifive.atlassian.net/browse/MAL-2240|smart-link]  (for post Panda).",Alexandre Solomatnikov,Nicolas Brunie,,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1616,MAL-1823,MAL-1824,MAL-1825,MAL-1839,MAL-1846,MAL-1853,MAL-1854,MAL-1879,MAL-1944,MAL-1947,MAL-1960,MAL-1966,MAL-1975,MAL-1997,MAL-2018,MAL-2020,MAL-2021,MAL-2022,MAL-2024,MAL-2031,MAL-2036,MAL-2037,MAL-1943,MAL-2073,MAL-2089,MAL-2100,MAL-2121,MAL-2130,MAL-2144,MAL-2150,MAL-2165,MAL-2170,MAL-2176,MAL-2178,MAL-2180,MAL-2183,MAL-2207,MAL-2220,MAL-2221,MAL-2231,MAL-2233,MAL-2234,MAL-2235,MAL-2243,MAL-2255,MAL-2256,MAL-2257,MAL-2260,MAL-2267,MAL-2278,MAL-2292,MAL-2320,MAL-2329,MAL-2344,MAL-2345,MAL-2357,MAL-2368,MAL-2498,MAL-2505,MAL-2380,MAL-2581,MAL-2588,MAL-2604,MAL-2670,MAL-2677,MAL-2678,MAL-2680,MAL-2701,MAL-2712,MAL-2718,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-26T11:57:48.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,ghx-label-12,,[TGV] non-functional tasks for Panda TGV,To Do,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,,,,grey,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,,,,,,,,,,,,,,,,2|hzyyg7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] vslidedown.vx rd not renamed properly when vl = 0 (leading to Assertion Physical register %d (5) set as ready twice),[TGV] vslidedown.vx,Execution Unit ,Vector ,,,MAL-1821,113046,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,4/18/2022 6:19,9/7/2022 17:43,9/28/2022 0:51,4/18/2022 13:39,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"An assertion is being fired from vexPRA block where the physical register is been set twice

the assertion we see is 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/pr_assert_sign_61/federation/builds2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_PRA_5_assert.sv"", 113: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.tgv.vexPra.SiFive_PRA_5_assert_0: at time 349002500 ps
Assertion failed: Physical register   5 set as ready twice (only first conflicting id shown)
    at PRF.scala:75 assert(!(readyVec & setVec).orR, ""Physical register %d set as ready twice (only first conflicting id shown)"", firstRegSetTwice){noformat}

*SHA:*[+72edded+|https://simscope.internal.sifive.com/models/undefined--master--72edded7772414dff7d61398fb18355b4477eb19]

*config*: coreip_u8_minimal_vector

*rerun.outline*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vslidedown.vx"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vslidedown.vx_Masking-0_Exception-1_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-50_LMUL-1_TGV-1_IMM-1_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 2923622776
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*Dumppath*

{{gamma25:/scratch/ishitashah/tgv_regression/pr_assert_sign_61/federation/builds2/coreip_u8_minimal_vector/sim/rerundir1/rerun.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vslidedown.vx}}",Ishita Shah,Nicolas Brunie,,,,,,,,,,,,,,607e26355431a500701f5aed,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1733,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-18T13:39:30.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/8382b8d520e5136a4a932ff7156b557856370dd5,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyyav:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,50:24.6,"18/Apr/22 10:50 AM;6065017e90e3950069cf01c5;The problem seems to be linked to the destination {{rd}} of a {{vslidedown.vx}} with LMUL=1 and {{vl=0}} not being renamed properly. 

The physical index is inherited from a previous value and triggers a PR set ready twice when reaching {{VexPipe}} {{WB}} stage.

A fix is in preparation: [https://github.com/sifive/federation/pull/21887|https://github.com/sifive/federation/pull/21887|smart-link] ",18/Apr/22 1:40 PM;6065017e90e3950069cf01c5;Should be fixed by [https://github.com/sifive/federation/commit/8382b8d520e5136a4a932ff7156b557856370dd5|https://github.com/sifive/federation/commit/8382b8d520e5136a4a932ff7156b557856370dd5|smart-link] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
p550mc needs more heap space to compile,,,,,,MAL-1820,112961,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Marshall Adrian,5ce47c334eeaaa0dd0b07b64,Brian Grayson,5e1371705361330daaeaf389,Brian Grayson,5e1371705361330daaeaf389,4/15/2022 13:13,4/18/2022 16:10,9/28/2022 0:51,4/18/2022 16:10,,,,,,,,,,,,,Verification,,,,,,,,,0,,,,"We’ve seen this crop up on both sitest builds and PCS builds, where sometimes we run out of Java heap memory. This bug is to bump up the coreip.wake file and coreip_p550mc.mk file so that it can successfully build on a gamma box.",Brian Grayson,Marshall Adrian,,,,,,,,,,,,,,5e1371705361330daaeaf389,5ce47c334eeaaa0dd0b07b64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-16T22:15:07.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyxtb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,09:58.7,"18/Apr/22 4:09 PM;5ce47c334eeaaa0dd0b07b64;I have updated for the Make land, however the PCS land is much uglier and you have to use an ENV var to set it for each run, {{FIRRTL_MAX_HEAP}} and it is in GBs... ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[TGV] cleanup VectorSequencer, VexPipe after permute sequence patchset",,,,,,MAL-1819,112891,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,4/14/2022 14:02,5/12/2022 18:40,9/28/2022 0:51,5/12/2022 18:40,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,"* \[ ] unify {{vrgatherei16Sew8}} and  {{is8bGatherei16}} in {{TGV.scala}}
** Addressed in [https://github.com/sifive/federation/pull/21706/commits/c1ab2188dff4f5a20fec038d89774d1c77f45ceb|https://github.com/sifive/federation/pull/21706/commits/c1ab2188dff4f5a20fec038d89774d1c77f45ceb|smart-link] 
* \[ ] unify  {{wideNoVS2Wide}} / {{isWideNotVS2Wide}} (define them as inst method) in {{TGV.scala}}
** Addressed in [https://github.com/sifive/federation/pull/21706/commits/1d0511d0a41eafd9a3ce7fcb9d8e11d45501b4e9|https://github.com/sifive/federation/pull/21706/commits/1d0511d0a41eafd9a3ce7fcb9d8e11d45501b4e9|smart-link] 
* \[  ] refactor {{VectorPermuteUnit}} decoding: ({{compress(c)}} vs {{c.vcompress}} direct call) in {{VectorPermuteUnit.scala}}
** Addressed in [https://github.com/sifive/federation/pull/21706/commits/15179621dbb7a51b3fb20cb2069ebe7303305776|https://github.com/sifive/federation/pull/21706/commits/15179621dbb7a51b3fb20cb2069ebe7303305776|smart-link] 
* \[  ] unify names of decoding methods ({{slide*}} → {{vslide*}}) in {{VectorPermuteUnit.scala}}
** Addressed in commit above
* \[  ] rename {{VectorPayloadCst}} to {{VectorPayloadConsts}} in {{VectorSequencer.scala}}
** Addressed in [https://github.com/sifive/federation/pull/21706/commits/74c1a0467a20ce9235cb2c1bce0a8d1218c962cd|https://github.com/sifive/federation/pull/21706/commits/74c1a0467a20ce9235cb2c1bce0a8d1218c962cd|smart-link] 
* \[  ] unify complex sequence id name to {{Csid}} (in particular in {{VectorSequencer.scala}})
** Addressed in [https://github.com/sifive/federation/pull/21706/commits/f60e6b2e6ecf7ca7af7e01c33ee578ec0d01c228|https://github.com/sifive/federation/pull/21706/commits/f60e6b2e6ecf7ca7af7e01c33ee578ec0d01c228|smart-link] 
* \[  ] improve doc comment for {{VslideUpSq}} in {{VectorSequencer.scala}}
** Addressed in [https://github.com/sifive/federation/pull/21706/commits/d62492ca75a1ed6086d9e64bd8e8841ea06c2f7d|https://github.com/sifive/federation/pull/21706/commits/d62492ca75a1ed6086d9e64bd8e8841ea06c2f7d|smart-link] 
* \[  ] clarify / simplify {{vlLimit}} equation in {{VectorSequencer.scala}}
** Addressed in [https://github.com/sifive/federation/pull/21706/commits/0fc6909482b4fda1d7ba1378b1fd0b1177024176|https://github.com/sifive/federation/pull/21706/commits/0fc6909482b4fda1d7ba1378b1fd0b1177024176|smart-link] 
* \[  ] clean broadcast mechanism in {{VexPipe}} + add assertion to ensure there is at most one source trying to broadcast at any time (in {{VexPipe.scala)}}
* \[  ] clean payload init with {{d.bits.payload.asInstanceOf[VectorDispPayload].vector := DontCare}} and in {{RDU.scala}}",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-05T15:54:54.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/53ff1f2fb78e9ab7a6b2f6343391e17e6f87f763,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyxhj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: LDWB local clock gating,,,,,,MAL-1818,112858,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Khondakar Mujtaba,622a930149c900007023d105,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,4/14/2022 8:32,7/29/2022 9:09,9/28/2022 0:51,4/20/2022 6:45,,,,,,,,,,,,,Power,RTL/LSU,,,,,,,,0,,,,"While going through the {{LDPipe.scala}} Chisel code working towards Misaligned Loads, I noticed that a hundred register bits or so are enabled always by {{ldf_valid_q}}.  We can make these RegEnables more precise to only toggle when an operation is actually returning data.  This should help Dhrystone power.

# Create a sub-term {{ldf_opLdwbReq}} at [https://github.com/sifive/federation/blob/f5cf44dccb31ac1a556d74131ccaac148f9f21ce/mallard/src/main/scala/core/mallard/LDPipe.scala#L1250|https://github.com/sifive/federation/blob/f5cf44dccb31ac1a556d74131ccaac148f9f21ce/mallard/src/main/scala/core/mallard/LDPipe.scala#L1250]
{noformat}val ldf_opLdwbReq       = LDArbReqType.ldwbReq(ldf_metaInfo_q.reqType){noformat}
# Use this new sub-term on these registers:
{noformat}  val ldwb_replayDependencies_q  = RegEnable(ldf_replayDependencies,  ldf_valid_q && ldf_opLdwbReq)
  val ldwb_notL1Data_q           = RegEnable(ldf_notL1Data_q,         ldf_valid_q && ldf_opLdwbReq)
  val ldwb_readyToResolveFlush_q = RegEnable(ldf_readyToResolveFlush, ldf_valid_q && ldf_opLdwbReq)
  val ldwb_flushSelf_q           = RegEnable(ldf_flushSelf,           ldf_valid_q && ldf_opLdwbReq)
  val ldwb_flushNewer_q          = RegEnable(ldf_flushNewer,          ldf_valid_q && ldf_opLdwbReq)
  val ldwb_rawHazardStqNdx_q     = RegEnable(ldf_rawHazardStqNdx,     ldf_valid_q && ldf_opLdwbReq)
  val ldwb_data_q                = RegEnable(ldwb_data_in,            ldf_valid_q && ldf_opLdwbReq){noformat}
leave {{ldwb_metaInfo_q}}, {{ldwb_l1DataError_q}}, and {{ldwb_l1DataErrorUncorrectableGrans_q}} as-is.
# and on this register
{noformat}val ldcf_metaInfo_q = RegEnable(ldcf_metaInfo_in, (ldf_valid_q && ldf_opLdwbReq) || ldwb_valid_q){noformat}
# Add an assertion that {{ldf_opLdwbReq}} is enabling all the necessary registers:
{noformat}when (ldf_valid_q && (ldf_metaInfo_q.robNdx.valid || ldf_metaInfo_q.ldqNdx.valid || ldf_metaInfo_q.prn.valid)) {
  lsuAssert(ldf_opLdwbReq, ""LDWB RegEnables should be set for Rob/Ldq/Prn valid"")
}{noformat}",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-926,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-20T06:45:34.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/21927,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyxav:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,2,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: SiFive_HwpfBitPattern_assert,Assertion Failure: SiFive_HwpfBitPattern_assert,LSU (Load Store Unit),HWPF (Hardware Prefetch),BPM (Bit Pattern Matching),Refer https://github.com/sifive/arch-specs/blob/master/core/hwpf_mas.adoc#4-bit-pattern-matching-bpm-hardware-prefetcher,MAL-1817,112854,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,4/14/2022 7:41,4/18/2022 15:54,9/28/2022 0:51,4/18/2022 15:54,,,,,,,,,,,,,RTL/HWPF,,,,,,,,,0,,,,"Following assertion failure is observed due to xx propagation:

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-xprop-coreip_mallard-test-nightly-xprop/80/builds/coreip_p650/verilog/design/assertions/SiFive_HwpfBitPattern_assert.sv"", 1326: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.hwpf.hwpfEntries_1.SiFive_HwpfBitPattern_assert_0: at time 296562500 ps
Assertion failed (verification library): HWPF Entry BPM: retrain counter should progress on demand mis confirmation  @[HwpfBitPattern.scala 510:17]

Fatal: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-xprop-coreip_mallard-test-nightly-xprop/80/builds/coreip_p650/verilog/design/assertions/SiFive_HwpfBitPattern_assert.sv"", 1335: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.hwpf.hwpfEntries_1.SiFive_HwpfBitPattern_assert_0: at time 296562500 ps{noformat}

Tracing back the source of xx, {{core.lsu.hwpf.hwpfEntries_1.up_demandMissCounter[1:0]}} is seen to be transitioning 1->xx at T:296502500ps, causing the xx propagation.

Dump for quick look available at {{gamma10:/scratch/saurabhs/mallard_master_295/federation/builds/coreip_p650/sim/sim/hwpfbitPattern.outline/hart0/error0/inject_ecc_error/ecc_amo_nmi}}

*Config:* coreip_p650

*Commit:* 15ae198

*rerun.outline:*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""inject_ecc_error/ecc_amo_nmi"",
  ""raw_plusargs"": [
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,2,0,32:.*\\.l1dcTagArray.*ext,0,0,8,0"",
    ""+disable_ecc_asserts=1"",
    ""+gdi_nmi_enable=1"",
    ""+gdi_testname=nmi_drive_vectors_seq"",
    ""+disable_cache_checker=0"",
    ""+hwpfCSR_setVal=3782319938979071"",
    ""+hwpf2CSR_setVal=18335"",
    ""+pl2_scb_enable_state_check=0"",
    ""+pl2_scb_enable_data_check=0"",
    ""+ecc_err_inject_mailbox=1""
  ],
  ""subdir"": ""hart0/error0"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1260053736
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""axi4_periph_port_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Saurabh Singh,,,,,,,,,,,,,,,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1520,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-15T00:11:03.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyx9z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
HWPF: BitPattern pipeline busy also AG stage,HWPF: BitPattern pipeline busy also AG stage,LSU (Load Store Unit),HWPF (Hardware Prefetch),BPM (Bit Pattern Matching),Refer https://github.com/sifive/arch-specs/blob/master/core/hwpf_mas.adoc#4-bit-pattern-matching-bpm-hardware-prefetcher,MAL-1816,112770,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,4/13/2022 6:36,4/25/2022 17:43,9/28/2022 0:51,4/19/2022 15:45,,,,,,,,,,,,,RTL/HWPF,,,,,,,,,0,,,,"Following assertion failure is observed:

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-xprop-coreip_mallard-test-nightly-xprop/78/builds/coreip_p650mc/verilog/design/assertions/SiFive_TileMC_assert.sv"", 19: TestDriver.testHarness.system.subsystem.tmc.SiFive_TileMC_assert_0: at time 4981802500 ps
Assertion failed: Tile is not idle when clock gate requested
    at TileMC.scala:345 assert({noformat}



At _T:4980942500ps_ {{tile.core_io_coreBusy}} is seen to be deasserted as lsuIdleNext goes high. At _T:4981662500ps_, {{tile.core.lsu.hwpf_io_busy}} is asserted, asserting {{core_io_coreBusy}} again. A clock gating request has arrived in meantime, triggering this assertion.



Wave Dump for quick look available at: 

{noformat}gamma10:/scratch/saurabhs/mallard_xprop_78/federation/builds/coreip_p650mc/sim/sim/TileMC_assert.outline/sting_StingCacheOpsTuple_T_0293/sting/sifive/ComposableCache/CCache.conf{noformat}


*Simscope:* [https://simscope.internal.sifive.com/sigs/3905/cj4jrpptxpvq|https://simscope.internal.sifive.com/sigs/3905/cj4jrpptxpvq]
*Config:* coreip_p650mc

*Commit:* 4f79f39

*rerun.outline:* 

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingCacheOpsTuple_T_0293"",
  ""subtest"": ""sifive/ComposableCache/CCache.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3227398866
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Binayak Tiwari,John Ingalls,Saurabh Singh,,,,,,,,,,,,,60a963ed8cbda700681b40c1,5bb6808b9ba2930990f81895,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1520,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-19T14:03:26.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzywsv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,07:58.8,13/Apr/22 8:07 AM;5bb6808b9ba2930990f81895;[~accountid:60a963ed8cbda700681b40c1] is there a cycles window that we need to cover more with {{io.state.bits.busy}} in HwpfBitPattern?,"13/Apr/22 8:22 AM;60a963ed8cbda700681b40c1;Yes, i think we need to go back one more cycle to {{AG}} stage which is the trained state. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: corrupt L1MSHR clear Reusable,,,,,,MAL-1815,112672,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Khondakar Mujtaba,622a930149c900007023d105,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,4/12/2022 9:43,4/19/2022 14:51,9/28/2022 0:51,4/13/2022 10:54,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"It would be cleaner for a MSHR with Corrupt data to finish and retire, rather than continue being reused for a long time.",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,MAL-291,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-16T09:36:10.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/21784,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyw9b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,1,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[Power] IJTP Hint less accurate than it could be,,,,,,MAL-1814,112537,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Jeffrey Huang,627586097de1ec00695bca96,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,4/11/2022 7:15,9/21/2022 12:26,9/28/2022 0:51,,,,,,,,,,,,,,Power,RTL/Frontend,,,,,,,,0,,,,"When we fill lines into the ICache, we try to determine if a JALR instruction exists in that line and set a hint bit in the way predictor.  If we fetch from a cacheline and the way predictor hint bit is zero, we will not access the IJTP, to save power.

Due to the compressed instructions, it’s possible for a JALR instruction to cross a cacheline. So Mallard has logic to try to detect, when we are filling a line, that the previous cacheline ended with the first half of a JALR instruction.  We cannot always get this correct depending on the order in which the cachelines were filled, so we have a correction mechanism.

When we start the get the beats back for a cacheline, we try to find instruction boundaries assuming two cases in parallel: that the first 2B of the line are the first half of an instruction, and that they are the last half of a 32bit instruction.  Then we find the instruction boundaries for both cases and check to see if it’s possible that a JALR instruction exists in the line.  However, there are some cases where we know for sure that the first 2B are the second half of an instruction which is not a JALR.  For example if we fetch sequentially from line A into line B, and B misses the cache, we can know whether line A ended with the first half of a JALR or not. Right now we don’t use this information about A to choose one of the two cases for B.  We can use this information when we fill line B to be more accurate about whether B has a JALR or not.",Chia-I Chen,,,,,,,,,,,,,,,61aaafab977c5b007241043c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Inspection,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzyvhr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] RTL taking vslide1up.vx as illegal instruction cause PC mismatch,[TGV] RTL  vslide1up.vx as illegal instruction cause PC mismatch,,,,,MAL-1813,112536,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Anil Sharma,607e26831417e2006abb3189,Anil Sharma,607e26831417e2006abb3189,4/11/2022 5:49,9/7/2022 17:43,9/28/2022 0:51,4/12/2022 16:48,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"Before the failing PC,  RTL is executing {{vslide1up.vx}} without any exception (i.e illegal instruction)
At PC {{0x00000000800016f2}} it first executes the {{vslide1up.vx}} followed by {{vmv.vv}} instruction.
But for the second iteration RTL takes illegal instruction exception while executing {{vslide1up.vx}} at cycle 22398 and moves forward to executes the handler code.

To recreate the failure.
1) Clone federation and checkout to [b053284|https://simscope.internal.sifive.com/models/undefined--master--b053284bcba0fbad9d415e8217fefc131abc2c18]
2) Build coreip_u8_minimal_vector
3) Run using rerun.outline

rerun.outline


{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0000_lmul2"",
  ""subtest"": ""vsaddu.vv"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vsaddu.vv_Masking-0_Exception-1_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-50_LMUL-2_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 468717657
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}


Run Area:

{noformat}gamma28 /scratch/verif/anils/tgv/56/federation/builds2/coreip_u8_minimal_vector/sim/run/rerun.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vsaddu.vv{noformat}

!image-20220411-125155.png|width=1525,height=402!",Alexandre Solomatnikov,Anil Sharma,Josh Smith,Nicolas Brunie,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,607e26831417e2006abb3189,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11/Apr/22 6:01 PM;sols;MAL-1813.png;https://sifive.atlassian.net/secure/attachment/70603/MAL-1813.png,11/Apr/22 5:52 AM;ug:19ff183d-5b79-4eee-aa26-e8e79a0ae23a;image-20220411-125155.png;https://sifive.atlassian.net/secure/attachment/70580/image-20220411-125155.png,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-12T16:46:34.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/6d1f69324570a059f7324ad6105eb0d79d98b1e6,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyvhj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,17:26.1,11/Apr/22 7:17 AM;6065017e90e3950069cf01c5;I think [~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] may have more insight in this exception related issue than I do.,"11/Apr/22 6:01 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;[~accountid:5acffeafaa802f2a797a955c] I see speculative execution of {{vsetvli}} in the ID stage, which changes {{vtype/vlmul}} value in ID and REN. Correct value is not restored and as a result incorrect exception is taken:

!MAL-1813.png|width=1745,height=913!

test code:

{noformat}    800016da:	0182f2d7          	vsetvli	t0,t0,e64,m1,tu,mu
  LOAD_ADDR(in_27, 24)
    800016de:	00002297          	auipc	t0,0x2
    800016e2:	eca28293          	addi	t0,t0,-310 # 800035a8 <in_27>
    800016e6:	4361                	c.li	t1,24
    800016e8:	929a                	c.add	t0,t1
  LOAD_SCALAR_AND_VSLIDE1UP(ld, v3, v0, -8, 2)
    800016ea:	4389                	c.li	t2,2
    800016ec:	0002b303          	ld	t1,0(t0)
    800016f0:	12e1                	c.addi	t0,-8
    800016f2:	3a0361d7          	vslide1up.vx	v3,v0,t1
    800016f6:	5e018057          	vmv.v.v	v0,v3
    800016fa:	13fd                	c.addi	t2,-1
    800016fc:	fe0398e3          	bne	t2,zero,800016ec <test_45_end+0x90>
# -------------------- test instruction
  VSETVLI(0, e64, m2, tu, mu)
    80001700:	4281                	c.li	t0,0
    80001702:	0192f2d7          	vsetvli	t0,t0,e64,m2,tu,mu{noformat}

How is {{vtype}} is supposed to be restored after branch mis-speculation?","12/Apr/22 9:00 AM;5acffeafaa802f2a797a955c;[~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] The intention was that after a pipeline flush, and we finish rewinding the vset colors that were speculative and squashed, we then wait for the youngest non-squashed vset to write to the VSRF and then the RDU will read that entry.  If that VSRF entry was already valid before the squash for example, then we don’t really stall.

I’ll take a look at the waveform to see what’s getting messed up.","12/Apr/22 11:44 AM;5acffeafaa802f2a797a955c;Yeah, the problem here is that some of the control logic for reading the VSRF after the color rewind is done missed a cycle.  So we didn’t properly recover the {{vl}} value.  I’m testing out a fix.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Power: Add better clock gating for FP-related structures in RDU,,,,,,MAL-1812,112535,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,4/11/2022 5:22,8/2/2022 18:44,9/28/2022 0:51,4/16/2022 16:35,,,,,,,,,,,,,Power,RTL/RDU,,,,,,,,0,,,,"In Dhrystone, and probably many real workloads, floating point instructions may not be used at all.  However currently, of the FP-related structures in the RDU, only the dispatch buffer has a separate clock gate.  We should add more clock gating for things like the Map Table and the Free List.",Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-16T16:35:09.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,aa9d7c8d0d284184ff7219d0f1c87541e672d243,,,,,,,,,,,,Inspection,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyvhb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Apr/22 11:41 AM;5acffeafaa802f2a797a955c;Another thing that I’m planning to do on this ticket is to add dedicated flops for the input architectural register indices for the Map Table reads.  Right now the Map Table read ports are just hooked up to the REN stage flops of the decoded instruction, which means that for an integer instruction, the FEX Map Table is still going to be toggling the read ports and such.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[TGV] VectorShiftUnit, VectorCompareUnit code clean up",,,,,,MAL-1811,112512,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,4/11/2022 1:11,7/12/2022 9:54,9/28/2022 0:51,4/15/2022 0:33,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Revise module code. Make valid bit generated from applicable() and pipe them out as selection bit.

Also remove MaskOutOp from VectorCompareUnit since the decision is to implement them inside VectorMaskUnit.",Brad Wu,Kira Tsao,Nicolas Brunie,Shaka Kao,,,,,,,,,,,,62103777eb2978006893b778,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-13T17:33:44.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,f6f6077f93eb3a43a733e1bf06abc58b12fbf1dd,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyvc7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: remove chicken bit disableTileLinkCorruptOrDeniedErrors,LSU: remove chicken,,,,,MAL-1810,112490,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,4/9/2022 9:19,5/9/2022 8:55,9/28/2022 0:51,4/9/2022 9:46,mongoose.00.00,mongoose.01.00,mongoose.02.00,narwhal.00.00,narwhal.01.00,narwhal.02.00,narwhal.03.00,narwhal.04.00,,,,,RTL/LSU,,,,,,,,,0,,,,"LSU chicken bit {{disableTileLinkCorruptOrDeniedErrors}} does not fix Grant Denied as a work-around to [https://sifive.atlassian.net/browse/MAL-1809|https://sifive.atlassian.net/browse/MAL-1809|smart-link] 

We could:

# add new function to manufacture data,
# change this bit to only apply to {{GrantData}}, or
# remove this bit as it is broken in its current form.",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1809,MAL-395,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-11T09:18:48.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,CAT-D,,Medium,"LSU chicken bit ""disableTileLinkCorruptOrDeniedErrors"" does not fix Grant Denied as a work-around to MAL-1809.",Low,,P500,,"chicken bit ""disableTileLinkCorruptOrDeniedErrors"" does not fix Grant Denied","Do not use LSU chicken bit ""disableTileLinkCorruptOrDeniedErrors"".",1. BRC: Should not Publish,,,,,,,,,,https://github.com/sifive/federation/pull/21703,,,,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyv7r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: denied load hang retrying until success,LSU: denied load,,,,,MAL-1809,112489,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,4/9/2022 9:02,7/1/2022 13:03,9/28/2022 0:51,4/9/2022 9:12,mongoose.00.00,mongoose.01.00,mongoose.02.00,narwhal.00.00,narwhal.01.00,narwhal.02.00,narwhal.03.00,Orca DR,,,narwhal.04.00,orca.00.00,RTL/LSU,,,,,,,,,0,,,,"*What happens:*
A load from the LSU that receives Grant & denied (not GrantData) will keep re-requesting until it receives GrantData, stalling the CPU until success.

*What should happen:*
Denied load should return data (zeroes) and complete so that an interrupt from the BEU (Bus Error Unit) can be taken.

*How it was found:*
[~accountid:5d521fb1ab24bf0d99414d4c] testing BusBlocker for Eswin.

*How it was introduced:*
I implemented similar “Load Data Ready to Return” calculation in two different places in slightly different structures for timing.  The tech debt here is the difference between {{LoadReadyToReturnData}} and {{LdqRetPipeStageCtrl}}.

*How it was missed:*

# I failed to write coverage for this scenario in Mallard.  I got close in LDPipe ""corrupt OR denied"", but close wasn't enough, we need to cover Denied specifically.
# We apparently had not exercised this with a BusBlocker/WorldGuard test yet until now.

*Work-around configuration:*
Require that Denied memory transactions must eventually succeed after retrying.

*Work-around chicken bits:* none.  😞 

* The chicken bit {{forceLoadResolveWaitDataReturn}} does not cause self-flush for Denied.
* The chicken bit {{disableTileLinkCorruptOrDeniedErrors}} does not manufacture data, so a denied Grant (as in this bug, not GrantData) is still broken.

*Steps to reproduce:*

# Branch: master
# Commit: 2677ea8b547d45f455b0fd8786e115851b582e20
# Config: coreip_eswin_p550mc_d2d
# Modified test: {{$federation/software/tests/eswin_bus_blocker_test/main.c}}
{noformat}@@ -184,6 +184,9 @@ int main(void){
   for (int i=0; i<count; i++) {
     *(mem_port_addr+(i*8)) = 0xDEADBEE0 + i;
   }
+  for (int i=0; i<count; i++) {
+    rd_data = *(mem_port_addr+(i*8));
+  }

   // Access interleaved region of memory port
   count = 8;
@@ -191,6 +194,9 @@ int main(void){
   for (int i=0; i<count; i++) {
     *(mem_port_addr+(i*8)) = 0xDEADBEE0 + i;
   }
+  for (int i=0; i<count; i++) {
+    rd_data = *(mem_port_addr+(i*8));
+  }
   if(interrupt_cnt < 20){
     exit(__LINE__);
   }{noformat}
# rerun.outline:
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""eswin_bus_blocker_test"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 4282876139
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Dave Parry,Gopinath Thiyagarajan,Jacob Chang,John Ingalls,,,,,,,,,,,,5cc37f384573b30ffbeb88b0,5d521fb1ab24bf0d99414d4c,557058:54863b55-2466-4338-8554-8cb56b90ab04,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,CIP-2226,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1810,VI-6841,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-11T10:31:59.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,"The only way to see this if the AXI slave returns a ""Decode"" Error. ",CAT-B,,Critical,"A load that receives AXI DECERR response will keep re-requesting until it receives AXI response OKAY or SLVERR, stalling the CPU until it does, and preventing taking a Bus Error Unit (BEU) Interrupt.",Medium,,P500,,"Load receiving AXI DECERR response will hang, retrying until success","Require that if the in-CPU-core Physical Memory Attributes (PMA) checker allows access to a memory location, then AXI memory reads to that location that receive DECERR responses must eventually succeed after retrying.",1. BRC: should Publish for all customers,,,,,,,,,,https://github.com/sifive/federation/pull/21702,,,,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,100,,,,,,,,,,,,,,,2|hzyv7j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,3,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,38:16.3,"11/Apr/22 7:38 AM;557058:54863b55-2466-4338-8554-8cb56b90ab04;Why was this a CAT-B.  It seems like a severe consequence with no workaround.  Shouldn’t it be CAT-A?  I guess it depends on whether the customer cares our ECC or Denied error response from port.

If the customer expects the denied error (AXI4 slave error) response eventually clear itself (after DRAM initialization), then it should be okay.",12/Apr/22 11:59 AM;5cc37f384573b30ffbeb88b0;[~accountid:5bb6808b9ba2930990f81895] is it the case that the _only_ way to encounter this bug is if an AXI read to one of the ports continuously receives a DECERR response (which is turned into TL Denied by the TL2AXI bridge)?,"12/Apr/22 12:01 PM;5cc37f384573b30ffbeb88b0;[~accountid:5bb6808b9ba2930990f81895] can you work on the Errata implication, workaround, etc. to make them more customer relevant? eg, workaround should be described in terms of AXI DECERR responses, not TileLink Denied resposnes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] add assertion to check vl value in VexPipe,,,,,,MAL-1808,112488,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Shaka Kao,5f94696c29bd8a006f94f0e1,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,4/9/2022 5:58,9/27/2022 10:31,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,"[https://sifive.atlassian.net/browse/MAL-1787|https://sifive.atlassian.net/browse/MAL-1787|smart-link]  has shown some issue around {{vl}} value overflowing in {{VexPipe}} for some operations (in that case a {{vmv.s.x}} getting {{vl=2*dBytes}} because it was sequenced from a {{LMUL=2}} context, associated with {{SEW=16b}} this lead to a vl shift amount overflow and an unexpected zero-ed {{vlMask}}). 

Assertions should be added in {{VexPipe}} to check proper values of {{vl}}

* most operations should see {{0 <= vl <= dBytes}}
* some complex uops see {{0 <= vl <= 2 *dBytes}}
* other values should be discarded (this may require sequencer change)",Kira Tsao,Nicolas Brunie,Shaka Kao,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,MAL-2623,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-09-27T16:15:48.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,2|hzyv7b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,13:29.2,"21/Sep/22 1:13 AM;5f94696c29bd8a006f94f0e1;Hi [~accountid:6065017e90e3950069cf01c5], we use {{perm}} to distinguish “non-permutation” (aka {{not so complex}}) and permutation ({{complex}}) instructions.

(MicroOp.scala)

{{def perm: Bool    = vcompress || vrgather || vrgatherei16 || vslidex}}



Do you think the checking conditions are enough for “most operations” and “some complex” uops to check valid {{vl}}?

{noformat}assert(!(instValid_EX && instPayload_EX.cmn.ctrl.perm) || vconfig_EX.vl <= (tp.dBytes.U << 1), s""vl(%d) should not exceed twice datapath limit(%d) for permutation instructions"", vconfig_EX.vl, tp.dBytes.U << 1)
assert(!(instValid_EX && !instPayload_EX.cmn.ctrl.perm) || vconfig_EX.vl <= tp.dBytes.U, s""vl(%d) should not exceed datapath limit(${tp.dBytes}) for vector normal (non-permutation) instructions"", vconfig_EX.vl){noformat}","21/Sep/22 7:32 AM;6065017e90e3950069cf01c5;I think it is a good start (I would prefer {{(tp.dBytes * 2).U}}  rather than {{(tp.dBytes.U << 1)}} (my reasoning is why use UInt operations when you can use Int).

I think you could refine this by putting perm with LMUL <=1 in the simple category. Other refinements are possible but they may complexify the expression a lot.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV] VMV.x.s moving16 bits instead of 32 bits of data,[TGV] VMV.x.s,Execution Unit ,Vector ,,,MAL-1807,112419,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,David Kravitz,5fd15143b4a74900763834e0,Anil Sharma,607e26831417e2006abb3189,Anil Sharma,607e26831417e2006abb3189,4/8/2022 8:27,9/7/2022 17:43,9/28/2022 0:51,4/10/2022 6:56,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"vmv.x.s moving only 16 bits of data to a scalar register (t1) but cosim moves 32 bits of data of the source vector register (v2). Hence, causing a WRDATA mismatch.
Before the failing instruction vsetvli setting is *vsetvli t0, t0, e32, m1, tu, mu*
This is the case where SEW is 32
Spec says: The {{vmv.x.s}} instruction copies a single SEW-wide element from index 0 of the source vector register to a destination integer register
Error Message: 

{noformat}[COSIM-ERROR][0] COSIM VS RTL WRDATA MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [28506] InstInfo: VLD=1 | PC=0x000000008000258a | INSN=0x42202357 | INST_DST=INT | REDUCTION = false | WR: en=true r6=0x0000000000000c00 mask=ff | READY=1 | CSR_TIMER=28506 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080002ea0 | MCAUSE=0x0000000000000000 | VSTART=18 | VL=0 | VSEGELT=0

[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x000000008000258a | INSN=0x42202357 | INST_DST=INT | REDUCTION = false | WR: en=true r6=0x0000000046f70c00 mask=ff{noformat}


To recreate this failure,

# git clone and checkout the commit 32bf1858fb8
# build coreip_u8_minimal_vector
# rerun the test using the rerun.outline

rerun.outline


{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim""
  ],
  ""subdir"": ""t0000_lmul8"",
  ""subtest"": ""vfwcvt.f.x.v"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vfwcvt.f.x.v_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-50_LMUL-8_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 1353290114
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}


Run Area:

{noformat}gamma28 /scratch/verif/anils/tgv/53/federation/builds1/coreip_u8_minimal_vector/sim/run/rerun.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfwcvt.f.x.v{noformat}",Anil Sharma,David Kravitz,,,,,,,,,,,,,,607e26831417e2006abb3189,5fd15143b4a74900763834e0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/d59e0a7cb82cbdd4ed7be57f3fc44f0f5e4fb38c,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzyurz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,07:16.9,08/Apr/22 2:07 PM;5fd15143b4a74900763834e0;There is a really good chance this is the same issue at [https://sifive.atlassian.net/browse/MAL-1798|https://sifive.atlassian.net/browse/MAL-1798|smart-link]. Can you re-run now that that’s been fixed?,"09/Apr/22 8:29 AM;607e26831417e2006abb3189;Hi [~accountid:5fd15143b4a74900763834e0] 
Yes, [https://sifive.atlassian.net/browse/MAL-1798|https://sifive.atlassian.net/browse/MAL-1798|smart-link] fix resolved this issue as well.
Please help me to close this issue.",10/Apr/22 6:56 AM;5fd15143b4a74900763834e0;Duplicate of MAL-1798,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] create a new spanning configuration P570/P572 like for synthesis purpose,,,,,,MAL-1806,112418,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,4/8/2022 8:27,5/5/2022 12:57,9/28/2022 0:51,4/29/2022 9:08,,,,,,,,,,,,,TGV_RTL/Top,,,,,,,,,0,,,,"Currently we use P670 as the synthesis configuration for TGV. P670 inherits from P650 critical paths. As P650 is not meeting timing yet at the target 2.55 Ghz (see John’s [https://sifive.atlassian.net/wiki/spaces/CIP/pages/523440549/Mallard+7FF+PPA+results|https://sifive.atlassian.net/wiki/spaces/CIP/pages/523440549/Mallard+7FF+PPA+results|smart-link] ) it is hard to mesure the detailed impact of TGV on timing.



To circumvent this, we suggest the creation of a P570 configuration: a modified P550 configuration integrating the vector configuration from P670 and the scalar part of P550. As P550 is meeting timing, it should allow us to find TGV related timing issue more rapidly.

* create new JSON config in spanning directory: [https://github.com/sifive/federation/tree/master/specs/design/spanning|https://github.com/sifive/federation/tree/master/specs/design/spanning|smart-link] 
* create a tile-only configuration similar to [https://github.com/sifive/federation/blob/master/mk/base_configs/coreip_p670_7nm_H240_tile.mk|https://github.com/sifive/federation/blob/master/mk/base_configs/coreip_p670_7nm_H240_tile.mk] 
* update unit of interest with the configuration: [https://github.com/sifive/federation/blob/master/mallard/scripts/synthesis/unit_of_interest.py|https://github.com/sifive/federation/blob/master/mallard/scripts/synthesis/unit_of_interest.py] ",David Kravitz,Nicolas Brunie,,,,,,,,,,,,,,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-04-29T09:03:33.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/4f515809c03a77d9f23ad1b5c3c1998438ed44b4,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyurr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,16/Apr/22 10:20 AM;6065017e90e3950069cf01c5;The {{sequencerWidth}} must be an even number because of cracking operation constraints (widening operations requiring cracking). So we cannot match p550 issue width without RTL modifications.,"17/Apr/22 8:22 PM;6065017e90e3950069cf01c5;Status: April 17th 

* All test of {{./sitest @../../../test-outlines/tgv-sanity.outline -j10}} are failing on [https://github.com/sifive/federation/pull/21865|https://github.com/sifive/federation/pull/21865|smart-link]
* require further investigations and debug (initial configuration draft may not be compatible with generators) ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
ICache Data Array is reading too many banks in some cases,,,,,,MAL-1805,112411,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,4/8/2022 7:09,8/2/2022 18:45,9/28/2022 0:51,4/9/2022 8:28,,,,,,,,,,,,,Power,RTL/Frontend,,,,,,,,0,,,,"The ICache Data Array is banked on an 8B granularity, in order to save power because we never need to read the entire cacheline all in one cycle.  There is some logic to detect which banks need to be read based on the starting fetch group PC in F1, and the address of the last byte to be read.  However, in the current RTL, if we read exactly up to the end of one bank, we actually end up enabling the next bank as well.  This just burns more power than necessary.",Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-09T08:27:38.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2288,,,,,,,,,,,,,,,,,,,,,,,,5abdf007d68337c25e4df2baaf647941409e7280,,,,,,,,,,,,Inspection,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyuq7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: SiFive_HwpfBitPattern_assert,Assertion Failure: SiFive_HwpfBitPattern_assert,LSU (Load Store Unit),HWPF (Hardware Prefetch),BPM (Bit Pattern Matching),Refer https://github.com/sifive/arch-specs/blob/master/core/hwpf_mas.adoc#4-bit-pattern-matching-bpm-hardware-prefetcher,MAL-1804,112410,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,4/8/2022 6:53,4/18/2022 12:10,9/28/2022 0:51,4/12/2022 14:16,,,,,,,,,,,,,RTL/HWPF,,,,,,,,,0,,,,"Following Assertion failure is observed:

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/292/builds/coreip_p650_tiny_mshr/verilog/design/assertions/SiFive_HwpfBitPattern_assert.sv"", 2025: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.hwpf.hwpfEntries_6.SiFive_HwpfBitPattern_assert_0: at time 32854922500 ps
Assertion failed (verification library): HWPF Entry BPM: pf address should have advanced  @[HwpfBitPattern.scala 549:16]{noformat}


Example Failures: [https://simscope.internal.sifive.com/rules/3836.2|https://simscope.internal.sifive.com/rules/3836.2]


Steps to reproduce:

*Config:* coreip_p650_tiny_mshr

*Commit:* 37c16f6

*rerun.outline:*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0216"",
  ""subtest"": ""sifive/branches/branch_mispred_stress.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 839150168
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Saurabh Singh,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1520,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,Prefetch,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-11T21:16:30.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyupz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
NLP Muxing Coverage,,,,,,MAL-1803,112409,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,4/8/2022 6:22,4/15/2022 7:07,9/28/2022 0:51,,,,,,,,,,,,,,Coverage,,,,,,,,,0,,,,"SRAM NLP has been bug prone. While fixes keep getting implemented, we need to make sure we are actually hitting all the different valid scenarios. Implement more robust coverage logic for the NLP muxing logic.",Andrew Hanselman,,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Inspection,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzyupr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] vslide1up.vx write to PRF when avl=0,,,,,,MAL-1802,112244,112162,Sub-task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Known Error,Nicolas Brunie,6065017e90e3950069cf01c5,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,4/7/2022 2:05,4/7/2022 11:51,9/28/2022 0:51,4/7/2022 9:58,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"[https://github.com/riscv/riscv-v-spec/blob/master/v-spec.adoc#161-integer-scalar-move-instructions|https://github.com/riscv/riscv-v-spec/blob/master/v-spec.adoc#161-integer-scalar-move-instructions|smart-link] 

*Analysis*:

When vl=0, {{vslide1up.vx}} cannot update vector register.

In the outline, {{vslide1up.vx}}(PC=0x80000f8c) updated vector register (but cosim did not råeport error because cmodel skipped vector register write).

{{v[f]slide1up}}, {{v[f]slide1down}} also suffered from this bug.

*Config*:

coreip_u8_minimal_vector

*Outline*:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul8"",
  ""subtest"": ""vslide1up.vx"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vslide1up.vx_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-10_LMUL-8_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 4164247848
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}

*Error*:

{noformat}=== sitest found errors in test sim/vslide1up.vx.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vslide1up.vx:
Scoreboard config: xLen=64 | fLen=64 | vLen=128 | vaddrExtended=42 | vec_reg_count=32 | enable_check=1 | verbosity=0 | enable_wrdata_check=1 | error_count=1 | stall_cycle_count=30000 | enable_cosim_mmc=1
[COSIM-ERROR][0] COSIM VS RTL WRDATA MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [18195] InstInfo: VLD=1 | PC=0x0000000080000fb8 | INSN=0x43402357 | INST_DST=INT | REDUCTION = false | WR: en=true r6=0x0000000000007ff5 mask=ff | READY=1 | CSR_TIMER=18195 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080001f10 | MCAUSE=0x0000000000000000 | VSTART=55 | VL=0 | VSEGELT=0

[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000080000fb8 | INSN=0x43402357 | INST_DST=INT | REDUCTION = false | WR: en=true r6=0x00000000000033f4 mask=ff

sifive_test_results_pkg::set@(t=373873000): Test Result Setting for Index ID [3] Done [1] Success [0] Exit Code [13107]
{noformat}",Brad Wu,Nicolas Brunie,,,,,,,,,,,,,,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1799,,,,,,,,,,,,,,MAL-1797,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/d2138c337dcc81d9c740bce07fb06ec54876c3e2,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzytlr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,37:15.4,07/Apr/22 7:37 AM;6065017e90e3950069cf01c5;I think this is a duplicate of [https://sifive.atlassian.net/browse/MAL-1799|https://sifive.atlassian.net/browse/MAL-1799|smart-link]  I am already working on,07/Apr/22 7:38 AM;6065017e90e3950069cf01c5;It should be fixed by [https://github.com/sifive/federation/pull/21649|https://github.com/sifive/federation/pull/21649|smart-link]  for LMUL=1. I am working on extending it for other LMULs and {{vslide1down}},"07/Apr/22 7:51 AM;62103777eb2978006893b778;I am working on it, too. I’ll try your patch to my failed cases and see if it is working.","07/Apr/22 7:56 AM;6065017e90e3950069cf01c5;I don’t think the patch fix the issue completely, it is still a work in progress. Please don’t work on the same issue, (as it is a duplicate of a known issue) except if you have something already ready. ","07/Apr/22 8:43 AM;62103777eb2978006893b778;[~accountid:6065017e90e3950069cf01c5] I’m not sure if it is related. Please try this outline if you fixed this issue.

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul2"",
  ""subtest"": ""vfslide1up.vf"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vfslide1up.vf_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-10_LMUL-2_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 2366304580
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}

The outline causes the following assertion

{noformat}=== sitest found errors in test sim/vfslide1up.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vfslide1up.vf:
Scoreboard config: xLen=64 | fLen=64 | vLen=128 | vaddrExtended=42 | vec_reg_count=32 | enable_check=1 | verbosity=0 | enable_wrdata_check=1 | error_count=1 | stall_cycle_count=30000 | enable_cosim_mmc=1
Error: ""/scratch/bradw/tgv/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_StQEntry_assert.sv"", 675: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.StQ.stqEntries_0.SiFive_StQEntry_assert_0: at time 2116702500 ps
Assertion failed (verification library): StQEntry FSM Hang  @[StoreQ.scala 1190:14]{noformat}",07/Apr/22 9:57 AM;6065017e90e3950069cf01c5;The full [https://github.com/sifive/federation/pull/21649|https://github.com/sifive/federation/pull/21649|smart-link]  did fix this issue. closing the task now.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,112162,[TGV] test random AVL in VTG outline,Done
[TGV] vmv.s.x write to PRF when avl=0,,,,,,MAL-1801,112242,112162,Sub-task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,4/7/2022 1:34,4/8/2022 14:34,9/28/2022 0:51,4/8/2022 14:34,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"[https://github.com/riscv/riscv-v-spec/blob/master/v-spec.adoc#161-integer-scalar-move-instructions|https://github.com/riscv/riscv-v-spec/blob/master/v-spec.adoc#161-integer-scalar-move-instructions|smart-link] 

*Analysis*:

When vl=0, {{vmv.s.x}} cannot update vector register.

In the outline, {{vmv.s.x}}(PC=0x800008be) updated vector register (but cosim did not råeport error because cmodel skipped vector register write).

{{vfmv.s.f}} also suffered from this bug.

*Config*:

coreip_u8_minimal_vector

*Outline*:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul8"",
  ""subtest"": ""vmv.s.x"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vmv.s.x_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-10_LMUL-8_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 3434321402
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}

*Error*:

{noformat}=== sitest found errors in test sim/vmv.s.x.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vmv.s.x:
Scoreboard config: xLen=64 | fLen=64 | vLen=128 | vaddrExtended=42 | vec_reg_count=32 | enable_check=1 | verbosity=0 | enable_wrdata_check=1 | error_count=1 | stall_cycle_count=30000 | enable_cosim_mmc=1
[COSIM-ERROR][0] COSIM VS RTL WRDATA MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [13387] InstInfo: VLD=1 | PC=0x00000000800008ea | INSN=0x43602357 | INST_DST=INT | REDUCTION = false | WR: en=true r6=0x0000000000002ceb mask=ff | READY=1 | CSR_TIMER=13387 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080000f50 | MCAUSE=0x0000000000000000 | VSTART=127 | VL=0 | VSEGELT=0

[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x00000000800008ea | INSN=0x43602357 | INST_DST=INT | REDUCTION = false | WR: en=true r6=0xffffffffffff8703 mask=ff

sifive_test_results_pkg::set@(t=272133000): Test Result Setting for Index ID [3] Done [1] Success [0] Exit Code [13107]

sifive_test_results_pkg::report_status.unnamed$$_0@(t=282183000): Test Result Checking Registered Name [TestDriver.testHarness.PL2Scb] Index ID [2] Done [0] Success [0] Exit Code [0]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=282183000): FAILED: Test Result Registered Name [TestDriver.testHarness.cosim] Index ID [3] Done [1] Success [0] Exit Code [13107]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=282183000): FAILED: Test Result Registered Name [TestDriver.testHarness.i_TF] Index ID [4] Done [1] Success [0] Exit Code [0]

sifive_test_results_pkg::report_status@(t=282183000): done:          3, registered:          3, success:          1
{noformat}",Brad Wu,David Kravitz,Nicolas Brunie,,,,,,,,,,,,,62103777eb2978006893b778,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1793,,,,,,,,,,,,,,MAL-1797,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=DECLINED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-07T08:39:55.000-0700"",""stateCount"":1,""state"":""DECLINED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/8eacf6e69345ecd187142064fe15283e83c7efc1,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzytlb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"Outline:
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul8"",
  ""subtest"": ""vmv.s.x"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vmv.s.x_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-10_LMUL-8_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 3434321402
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,54:31.3,"07/Apr/22 9:54 AM;6065017e90e3950069cf01c5;I checked the outline against [https://github.com/sifive/federation/pull/21621|https://github.com/sifive/federation/pull/21621|smart-link] , the test passes with this fix. I am closing this issue.",08/Apr/22 2:33 PM;5fd15143b4a74900763834e0;Reopening in order to close as duplicate of MAL-1793,08/Apr/22 2:34 PM;5fd15143b4a74900763834e0;Closing as duplicate of MAL-1793,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,112162,[TGV] test random AVL in VTG outline,Done
[TGV] implement support for vrgatherei16 for LMUL > 1,,,,,,MAL-1800,112193,109919,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,4/6/2022 15:39,5/5/2022 15:57,9/28/2022 0:51,5/5/2022 15:56,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,,,,,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1686,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{repository={count=12, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":12,""lastUpdated"":""2022-04-21T14:00:20.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":12,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/53ff1f2fb78e9ab7a6b2f6343391e17e6f87f763,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyt9b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,109919,[TGV] permutation support for LMUL > 1,Done
"[TGV] v(f)slide1(up/down) with vl == 0, updating destination RF ",[TGV] v(f)slide1(up/down),Execution Unit ,Vector PRf,,,MAL-1799,112190,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,4/6/2022 15:24,9/7/2022 17:43,9/28/2022 0:51,4/7/2022 11:51,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"For {{vslide1up}} instruction, with lmul = 1/4 , sew = 16, and vl =0. The last 16 bits of the destination register are updated. 

prior to the instruction , v0 reg was {{15389 vrf[ 0]=[631cc0b92aaf49352c358a8a2f2f8c39][ffff]}} and after the instruction was executed, v0 register was updated to {{15487 vrf[ 0]=[631cc0b92aaf49352c358a8a2f2fbe7b][ffff]}} . 



This is happening at pc {{0x800008ee}} . 



To recreate this failure ,

# clone federation and checkout the commit edda85d26065db592f171a3978f4217439df43f1
# build the design coreip_u8_minimal_vector and run the test using the outline 
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l2_tlb_ram_ext,1,0,32:.*\\.l1dcDataArrayBank.*ext,1,0,10:.*\\.icDataArray.*ext,1,0,25:.*\\.cc_banks.*ext,1,0,20:.*\\.l1dcTagArray.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,32:.*\\.RamBank.*ext,1,0,10:.*\\.TagRAM_ext,1,0,25"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+verbose""
  ],
  ""subdir"": ""t0000_lmul8"",
  ""subtest"": ""vslide1up.vx"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vslide1up.vx_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-50_LMUL-8_TGV-1_IMM-1_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 235098967
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



The generated waves are at {{gamma29:/scratch/verif/srivatsa/avl_0_vtg_2/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vslide1up.vx}}





Similar issue on {{vfslide1up.vf}} instruction as well. 
the waves and logs are at {{gamma29:/scratch/verif/srivatsa/avl_0_vtg_2/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vfslide1up.vf}}",Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1802,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{repository={count=6, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":6,""lastUpdated"":""2022-09-22T18:49:29.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":6,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/d2138c337dcc81d9c740bce07fb06ec54876c3e2,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyt8n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,14:06.7,"06/Apr/22 4:14 PM;6065017e90e3950069cf01c5;I am able to reproduce a similar issue with VTG test on {{v*slide1*}} and forcing {{avl = 0}}



{noformat}|                                                                                   name   |                   config   | simulator   |   cputime |   bucket | UUID         |
|------------------------------------------------------------------------------------------|----------------------------|-------------|-----------|----------|--------------|
| sim/tgv-single-insn.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vslide1up.vx      | coreip_u8_minimal_vector   | vcs         |     86.83 |        1 | 70cc4d8350   |
| sim/tgv-single-insn.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vslide1up.vi      | coreip_u8_minimal_vector   | vcs         |      0    |        2 | 274aec9940   |
| sim/tgv-single-insn.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vslide1down.vi    | coreip_u8_minimal_vector   | vcs         |      0    |        2 | bb7ba0923f   |
| sim/tgv-single-insn.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfslide1up.vf     | coreip_u8_minimal_vector   | vcs         |     72.78 |        1 | 499225d782   |
| sim/tgv-single-insn.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vslide1up.vx      | coreip_u8_minimal_vector   | vcs         |     86.2  |        1 | 7d1ac57198   |
| sim/tgv-single-insn.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vslide1up.vi      | coreip_u8_minimal_vector   | vcs         |      0    |        2 | 4ec64fe962   |
| sim/tgv-single-insn.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vslide1down.vx    | coreip_u8_minimal_vector   | vcs         |    156.25 |        3 | 2cf52bfa53   |
| sim/tgv-single-insn.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vslide1down.vi    | coreip_u8_minimal_vector   | vcs         |      0    |        2 | 6ebc170fcd   |
| sim/tgv-single-insn.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vfslide1up.vf     | coreip_u8_minimal_vector   | vcs         |    144.26 |        3 | f1282d42d2   |
| sim/tgv-single-insn.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vfslide1down.vf   | coreip_u8_minimal_vector   | vcs         |    138.68 |        3 | 53290a0b45   |
| sim/tgv-single-insn.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vslide1up.vx      | coreip_u8_minimal_vector   | vcs         |    145.92 |        3 | e35bbb3d45   |
| sim/tgv-single-insn.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vslide1up.vi      | coreip_u8_minimal_vector   | vcs         |      0    |        2 | e5cf270f3c   |
| sim/tgv-single-insn.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vslide1down.vx    | coreip_u8_minimal_vector   | vcs         |    146.18 |        3 | 207eab9802   |
| sim/tgv-single-insn.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vslide1down.vi    | coreip_u8_minimal_vector   | vcs         |      0    |        2 | 2e979b0b97   |
| sim/tgv-single-insn.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vfslide1up.vf     | coreip_u8_minimal_vector   | vcs         |    139.05 |        3 | 59d4f3a1c0   |
| sim/tgv-single-insn.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vfslide1down.vf   | coreip_u8_minimal_vector   | vcs         |    137.57 |        3 | d4f0416d55   |
| sim/tgv-single-insn.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vslide1up.vx      | coreip_u8_minimal_vector   | vcs         |     74.54 |        1 | 51b50db941   |
| sim/tgv-single-insn.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vslide1up.vi      | coreip_u8_minimal_vector   | vcs         |      0    |        2 | 30382fba0f   |
| sim/tgv-single-insn.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vslide1down.vx    | coreip_u8_minimal_vector   | vcs         |    151.54 |        3 | b8cc4925d5   |
| sim/tgv-single-insn.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vslide1down.vi    | coreip_u8_minimal_vector   | vcs         |      0    |        2 | 29bce4538c   |
| sim/tgv-single-insn.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfslide1up.vf     | coreip_u8_minimal_vector   | vcs         |     82.87 |        1 | 65921b76d8   |
| sim/tgv-single-insn.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfslide1down.vf   | coreip_u8_minimal_vector   | vcs         |    123.33 |        3 | ea0a112662   |{noformat}",06/Apr/22 4:16 PM;5a938e9c0913194d2d262658;You should be able to reproduce with the outline. And I’m guessing it needs the fractional lmul as well ,"06/Apr/22 4:29 PM;6065017e90e3950069cf01c5;[~accountid:5a938e9c0913194d2d262658] , I am able to reproduce with the listed outline, but I thought it was a sting outline.

Anyway I am looking into it.","06/Apr/22 4:35 PM;5a938e9c0913194d2d262658;No these are vtg tests, with randomized avl",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] lmul not being updated after vsetvli instruction,[TGV] lmul,Execution Unit ,Vector,,,MAL-1798,112187,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,4/6/2022 14:56,9/7/2022 17:43,9/28/2022 0:51,4/8/2022 13:50,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"In one of the generated VTG tests, it seems like the lmul is not changed back to 1, after a vsetvli instruction , and a vslide is performed on lmul = 4, thus updating the wrong vector register. 



i see lmul being set to 4, to perform a vnmsub.vx instruction

{noformat}vsetvli t0, t0, e32, m4, tu, mu
core   0: 3 0x000000008000319a (0x0122f2d7) x 5 0x0000000000000010
core   0: 0x000000008000319e (0xaec76057) vnmsub.vx v0, v12, a4
core   0: 3 0x000000008000319e (0xaec76057) e32 m4 l16 v 0 0x6cc76cc82798a24ec6fdf85bb1502aaf v 1 0x9ea91448d030645e2bd18181248de8bd v 2 0xe457f2c9dfb325a0f83dc2e0972eb13d v 3 0xd0cf6463622d81acd12ab8baeb16e57d{noformat}



But after when we are copying the data back to memory, we set the lmul to 1, and perform the vlslidedown, but RTL seems to perform the slide as if lmul = 4, and updates 4 vector registers. 



{noformat}C                   0:      45701 vrf[ 4]=[248de8bd6cc76cc82798a24ec6fdf85b][ffff]
C                   0:      45702 vrf[ 5]=[972eb13d9ea91448d030645e2bd18181][ffff]
C                   0:      45703 vrf[ 6]=[eb16e57de457f2c9dfb325a0f83dc2e0][ffff]
C                   0:      45704 vrf[ 7]=[00000000d0cf6463622d81acd12ab8ba][ffff]
.
.
C                   0:      45710 [1] pc=[00000000800031d8] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[3e00b257] vslidedown.vi v4, v0, 1{noformat}



Thus causing a mismatch. 



To recreate the failure;

# clone federation and checkout the commit edda85d26065db592f171a3978f4217439df43f1
# build coreip_u8_minimal_vector and rerun the test using the outline 
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l2_tlb_ram_ext,1,0,32:.*\\.l1dcDataArrayBank.*ext,1,0,10:.*\\.icDataArray.*ext,1,0,25:.*\\.cc_banks.*ext,1,0,20:.*\\.l1dcTagArray.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,32:.*\\.RamBank.*ext,1,0,10:.*\\.TagRAM_ext,1,0,25"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+verbose""
  ],
  ""subdir"": ""t0000_lmul4"",
  ""subtest"": ""vnmsub.vx"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vnmsub.vx_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-50_LMUL-4_TGV-1_IMM-1_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 712569615
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



The generated waves are at {{gamma29:/scratch/verif/srivatsa/avl_0_vtg_2/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vnmsub.vx}}",Alexandre Solomatnikov,David Kravitz,Josh Smith,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,07/Apr/22 7:13 PM;sols;MAL-1798.png;https://sifive.atlassian.net/secure/attachment/70519/MAL-1798.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-08T12:56:41.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/d59e0a7cb82cbdd4ed7be57f3fc44f0f5e4fb38c,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyt7z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,14:03.4,"07/Apr/22 7:14 AM;5fd15143b4a74900763834e0;At cycle 45676, the {{vnmsub.vx}} being tested (with LMUL=4) goes into the TGV dispatch buffer in the RDU. At 45690 and following, the {{vmv}} and {{vslidedown}} instructions reach the dispatch buffer; the {{vlmul}} in their payloads still indicates LMUL=4. In between was a {{vsetvli}} that sets LMUL=1 for the shift-store-check loop. It appears that LMUL change is not properly reflected in RDU. Passing on to [~accountid:5acffeafaa802f2a797a955c] for futher investigation.","07/Apr/22 7:44 AM;5acffeafaa802f2a797a955c;Yeah, this is an issue with the logic in the RDU which tries to maintain a local copy of {{vtype}} and {{vl}}.  What happened is this:

* The first {{vsetvli}} which set LMUL=4 updates the local RDU copy. It is assigned color 0xf.
* The {{vnmsub.vx}} instruction dispatches with LMUL=4
* The second {{vsetvli}} sets the local RDU copy of LMUL=1. It is assigned color 0x0.
* The first {{vsetvli}} instruction executes and writes back. The logic in the RDU which monitors for {{vset*}} writeback incorrectly thinks it should grab this result (it’s looking for color 0xf instead of color 0x0) and sets the local RDU copy of LMUL back to 4
* The {{vslidedown}} instruction dispatches with LMUL=4

[~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] FYI","07/Apr/22 7:13 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;[~accountid:5acffeafaa802f2a797a955c] {{vsetColorAdj_REN_1}} incorrectly changes from 0 to 7 because {{vset_REN_r[1]}} changes to 0 even though {{enable_REN_1}} is 0:

!MAL-1798.png|width=1912,height=742!

The reason is this code you wrote:

{noformat}  val vset_REN      = WireInit(0.U(mp.nRename.W))
...
    vset_REN          := RegEnable(vset_ID,            enable_REN.head){noformat}

It only depends on {{enable_REN_0}}

It can be fixed by something like:

{noformat}  val vset_REN = (enable_REN zip vset_ID).map{case (v, i) => RegEnable(i, v)}{noformat}

But I don’t know what is the intent of the original code since you wrote.","07/Apr/22 9:40 PM;5acffeafaa802f2a797a955c;Ah, yeah we should probably just do what you suggested.",08/Apr/22 11:44 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;With [https://github.com/sifive/federation/pull/21691|https://github.com/sifive/federation/pull/21691|smart-link]  the test passed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] test random AVL in VTG outline,,,,,,MAL-1797,112162,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,4/6/2022 7:59,7/12/2022 9:54,9/28/2022 0:51,6/7/2022 11:12,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/Top,TGV_RTL/VEX,,,,,,,0,,,,Remove {{avl = 128}} in TGV outline to allow random testing of vl values,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,MAL-1801,MAL-1802,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/f350de3b2ab424f5dd642526bfd43ca2d5fb0a53,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyt2n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
HWPF: anchor point for each subzone to maintain the direction counter,,,,,,MAL-1796,112161,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,4/6/2022 7:59,5/3/2022 20:32,9/28/2022 0:51,4/8/2022 7:16,,,,,,,,,,,,,RTL/HWPF,,,,,,,,,0,,,,"Current, implementation updates the direction counter based on the last two demands but the direction counter should be updated based on the anchor point(first demand to a subzone) for each subzone. ",Benoy Alexander,Binayak Tiwari,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,5e1370feefa19b0e976b5c24,60a963ed8cbda700681b40c1,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Prefetch,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-07T21:55:02.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyt2f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,46:40.2,"08/Apr/22 4:46 PM;5d7bfdaa003e040c3e175060;update simulation result of this JIRA. [https://docs.google.com/spreadsheets/d/1TpkZ8wPrKHV9HGl5G8g67OUIAgMiBNleDSw12MJDgyY/edit#gid=0|https://docs.google.com/spreadsheets/d/1TpkZ8wPrKHV9HGl5G8g67OUIAgMiBNleDSw12MJDgyY/edit#gid=0|smart-link] 

|SPECfp test name|workload ID|IPC (After [MAL-1796|https://sifive.atlassian.net/browse/MAL-1796] merged)|IPC (master before merged)|perf change in %|
|soplex-ref|0027/149|1.350|0.613|120.15%|
|soplex-ref|0027/150|1.000|0.599|66.93%|
|soplex-ref|0027/151|1.173|0.610|92.34%|
|soplex-ref|0027/153|1.429|0.668|113.98%|
|soplex-ref|0027/155|1.312|0.610|114.81%|",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Load-Transfer Buffer entries,,,,,,MAL-1795,112077,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Yohann Rabefarihy,61730c9cbcb57400683f15a6,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,4/5/2022 5:56,9/19/2022 16:10,9/28/2022 0:51,8/17/2022 1:00,,,,,,,,,,,Panda DR,,TGV_RTL/BAL,,,,,,,,,0,,,,Populate the LTB with entries for data and CAM logic for matching uops to entries using ROB IDs.,David Kravitz,John Ingalls,,,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2008,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2432,MAL-2659,,,,,,,,MAL-2006,MAL-2032,MAL-2033,MAL-2034,MAL-2038,MAL-2039,MAL-2057,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,May be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=20}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":20,""lastUpdated"":""2022-07-13T13:50:32.000-0700"",""stateCount"":20,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":20,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,,,,100,,,,,,,,,,,,,,,2|hzysgv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vfmul.f.s returning wrong value,[TGV] vfmul.f.s,Execution Unit ,Vector,,,MAL-1794,111963,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,4/4/2022 17:11,9/7/2022 17:43,9/28/2022 0:51,4/12/2022 9:45,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"On master {{4a224212e14}}, {{coreip_u8_minimal_vector}} configuration

+*outline:*+

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vfmv.f.s"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vfmv.f.s_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-10_LMUL-1_AVL-128_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-0"",
  ""seed"": {
    ""value"": 4282876139
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

+*Error:*+



{noformat}$finish called from file ""/sifive/tools/synopsys/vcs/R-2020.12-SP2-5/etc/uvm-1.2/base/uvm_root.svh"", line 527.                                                                                                                                                                            ==========SIMULATION STATS FOR HART 0==========
Simulation CPU time = 81.547009 seconds
Simulation cycles = 14613                                                                                                                                                                                                                                                                 Simulation clocks per second = 179.197253
Simulation instruction retire count = 6268
Simulation trap count = 0
==================================================                                                                                                                                                                                                                                        *Verdi* : Flush all FSDB Files at 294,342,500 ps.
*Verdi* : Flush all FSDB Files at 294,342,500 ps.                                                                                                                                                                                                                                         
*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 58869 simulation cycles (in TestDriver.report_phase_actions)                                                                                                                                                    
*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 58869 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 294,342,500 ps.                                                                                                                                                                                                                                         *Verdi* : Close all FSDB Files at 294,342,500 ps.
$finish at simulation time            294342500                                                                                                                                                                                                                                                      V C S   S i m u l a t i o n   R e p o r t
Time: 294342500 ps
CPU Time:     83.300 seconds;       Data structure size:  39.3Mb
Mon Apr  4 16:48:02 2022
=== sitest found errors in test sim/rerun.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfmv.f.s:
Scoreboard config: xLen=64 | fLen=64 | vLen=128 | vaddrExtended=42 | vec_reg_count=32 | enable_check=1 | verbosity=0 | enable_wrdata_check=1 | error_count=1 | stall_cycle_count=30000 | enable_cosim_mmc=1
[COSIM-ERROR][0] COSIM VS RTL WRDATA MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [13717] InstInfo: VLD=1 | PC=0x00000000800008c2 | INSN=0x42901bd7 | INST_DST=FLOAT | REDUCTION = false | WR: en=true r23=0x0000000000000000 mask=ff | READY=1 | CSR_TIMER=13717 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080000aa4 | MCAUSE=0x0000000000000000 | VSTART=102 | VL=0 | VSEGELT=0

[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x00000000800008c2 | INSN=0x42901bd7 | INST_DST=FLOAT | REDUCTION = false | WR: en=true r23=0xffffffff4cfc3151 mask=ff

sifive_test_results_pkg::set@(t=284313000): Test Result Setting for Index ID [3] Done [1] Success [0] Exit Code [13107]

sifive_test_results_pkg::report_status.unnamed$$_0@(t=294343000): Test Result Checking Registered Name [TestDriver.testHarness.PL2Scb] Index ID [2] Done [0] Success [0] Exit Code [0]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=294343000): FAILED: Test Result Registered Name [TestDriver.testHarness.cosim] Index ID [3] Done [1] Success [0] Exit Code [13107]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=294343000): FAILED: Test Result Registered Name [TestDriver.testHarness.i_TF] Index ID [4] Done [1] Success [0] Exit Code [0]

sifive_test_results_pkg::report_status@(t=294343000): done:          3, registered:          3, success:          1


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 58869 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 294,342,500 ps.

C                   0:      13704 [1] pc=[00000000800008be] W[r 5=0000000000000004][1] R[r 5=0000000000000004] R[r 0=0000000000000000] inst=[0102f2d7] DASM(0102f2d7)
Error: Instruction-by-Instruction check failed
C                   0:      13717 [1] pc=[00000000800008c2] W[f23=0000000000000000][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[42901bd7] DASM(42901bd7)

C                   0:      14218 [1] pc=[0000000080000724] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[0000bffd] DASM(0000bffd)
Error: Instruction-by-Instruction check failed

                                                                                                                                                                                                                                                                                          *** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 58869 simulation cycles (in TestDriver.report_phase_actions)
Error: simulation sim/rerun.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfmv.f.s failed
Error: some simulations failed{noformat}",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-05T13:52:50.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/37c16f69247d96df4d561cff443dbb1ff811eee7,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,100,,,,,,,,,,,,,,,2|hzys07:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Apr/22 9:51 AM;6065017e90e3950069cf01c5;The fix for this test [https://github.com/sifive/federation/commit/37c16f69247d96df4d561cff443dbb1ff811eee7|https://github.com/sifive/federation/commit/37c16f69247d96df4d561cff443dbb1ff811eee7|smart-link]  uses the NaN boxing to infer the value tag, that is the value format is determined based on the value itself. This assumes that a proper NaN boxing was performed on the vector side.

In the case when a large precision NaN appears to be a box for a smaller precision value it is going to be interpreted as a boxing NaN in IEEE format and a boxing NaN in recoded format will be sent into the scalar FP pipe (including scalar FP PRF). 

* if the value is later used as a larger precision number it will be interpreted as a NaN (although it may not be equal to the canonical NaN, it will behave as a NaN)
* if the value is later used as a smaller precision number, it may be interpreted as any potential values corresponding to its payload.



The canonical NaN in the larger precision cannot be interpreted as a boxing NaN for any smaller precision.","12/Apr/22 4:33 PM;6065017e90e3950069cf01c5;I wonder what happens if we do:

* Load V a non-canonical large NaN appearing as a boxing value in the vector side
* move V from vector to scalar
* store back the value in memory from scalar storage (RF)

Is the store value the same as the loaded one ?

e.g.g V=0xffffffffcafebebe 

* appears as {{0xffffffffcafebebe}}  in VRF
* {{vmv.f.s}} with {{SEW=64}}, detected as 32-bit boxed value by {{V2S}}
** {{0xcafebebe}}(IEEE-754) gets converted to {{0x18b7ebebe}}(RecF32)
** {{0x18b7ebebe}}(RecF32) gets boxed into get stored as {{0x1f-1fffff8b7ebebe}} (boxed RecF64)
* {{fsd}} 
** gets converted to {{0xffffffff8b7ebebe}} (because store uses opcode to determine fp format)

NaN payload is different \!





{noformat}$ python3 ~/floatConverter/script_hardfloat_ieee.py --input-size 32 ieeetorecfn 0xcafe_bebe
0x18b7ebebe
$ python3 ~/floatConverter/script_hardfloat_ieee.py --input-size 64 recfntoieee 0x1f001ffff8b7ebebe
0xfff1ffff8b7ebebe
$ python3 ~/floatConverter/script_hardfloat_ieee.py --input-size 64 recfntoieee 0x1f01fffff8b7ebebe
0xffffffff8b7ebebe
$ python3 ~/floatConverter/script_hardfloat_ieee.py --input-size 64 recfntoieee 0x1f01fffff8b7ebebe
0xffffffff8b7ebebe
$ python3 ~/floatConverter/script_hardfloat_ieee.py --input-size 64 recfntoieee 0x1ffffffff8b7ebebe
0xffffffff8b7ebebe
$ python3 ~/floatConverter/script_hardfloat_ieee.py --input-size 64 recfntoieee 0x1f01fffff8b7ebebe
0xffffffff8b7ebebe
$ python3 ~/floatConverter/script_hardfloat_ieee.py --input-size 64 ieeetorecfn 0xffff_ffff_cafe_bebe
0x1e00fffffcafebebe
$ python3 ~/floatConverter/script_hardfloat_ieee.py --input-size 64 recfntoieee 0x1e00fffffcafebebe
0xffffffffcafebebe{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] v(f)mv.s.(xf) wrongfully writing data in PRF while vl=0,[TGV] v(f)mv.s.(xf),Execution Unit ,Vector PRF,,,MAL-1793,111956,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,4/4/2022 15:53,9/7/2022 17:43,9/28/2022 0:51,4/7/2022 9:48,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"I see a mismatch on the lower 8bytes of data from the vadd instruction. the instruction is {{vadd.vv v25, v24, v16}}. When i trace back the operands, i see the {{v24 =0xff0600f9ff0600f9ffe4001bfffe0001}} , but im not able to trace back the data in v16, as its being updated by a vrem.vv instruction, where the data is not printed out in the instruction trace of RTl or cosim. 

And in both the RTL and Cosim instruction trace, no destination reg data is printed out, when V16 is an operand after the vrem.vv instruction.

The vrem.vv instruction which updates V16 is at pc 0x400e0f44 and the data mismatch happens at PC 0x40440824. The higher 8bytes of the data in the V25 reg is the same between RTL and cosim. 



To recreate this failure, 



# clone federation and checkout the commit 05a17be728f320d2139305c846365005d3858470
# build the design coreip_u8_minimal_vector and rerun the test using the outline
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_stall_cycle_count=500000"",
    ""+cosim_scoreboard_trap_epc_count=30"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """",
    ""+verbose""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0135"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1971201171
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}



The waves are generated at {{gamma29:/scratch/verif/srivatsa/sting_tgv_regression_2/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0135/sting/sifive/vector/vector_tgv_dev.conf}}",Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1801,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-06T17:10:25.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/8eacf6e69345ecd187142064fe15283e83c7efc1,,,,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyrz3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,51:47.3,"05/Apr/22 11:51 AM;6065017e90e3950069cf01c5;[~accountid:5a938e9c0913194d2d262658] , what could explain this:

{quote}And in both the RTL and Cosim instruction trace, no destination reg data is printed out, when V16 is an operand after the vrem.vv instruction.{quote}",05/Apr/22 11:59 AM;6065017e90e3950069cf01c5;I think it may be because {{vl}} is forced to zero before the {{vrem.vv}} so in fact (at least for the RTL) no uop is actually executed.,"05/Apr/22 1:33 PM;5a938e9c0913194d2d262658;So looking back at the trace, between RTL and spike,

the last valid update to V16 reg happens at pc {{0x404405c8}} to value {{0x01fe01fe00ff00ff00ff00ff00ff00ff}}
and to V24 reg it happens at {{0x2210177a}} to value {{0xff0600f9ff0600f90000000000000000}} on the RTL instruction trace. But spike seems to no update the destination reg, as vl = 0. The instruction is a 

{noformat}vmv.s.x v24, t5
 e64 m1 l0  {noformat}


So i think spike holds on the the old value of v24 reg which is 0xff0600f9ff0600f9ffe4001bfffe0001 

So if we add these values, we do get the expected spike data to be 0x0xE3011B00FD0100 in the lower 64 bits of the register, where its actually mismatching. 


According to the spec;

{quote}The {{vmv.s.x}} instruction copies the scalar integer register to element 0 of the destination vector register. If SEW < XLEN, the least-significant bits are copied and the upper XLEN-SEW bits are ignored. If SEW > XLEN, the value is sign-extended to SEW bits. The other elements in the destination vector register ( 0 < index < VLEN/SEW) are treated as tail elements using the current tail agnostic/undisturbed policy. If {{vstart}} ≥ {{vl}}, no operation is performed and the destination register is not updated.{quote}

|Note|As a consequence, when {{vl}}=0, no elements are updated in the destination vector register group, regardless of {{vstart}}.|

Seems like the issue is with vmv.s.x updating the vector register, when vl = 0. ",05/Apr/22 1:50 PM;6065017e90e3950069cf01c5;I am able to get vtg failures on {{vmv.s.x}} test by forcing {{avl = 0}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] [RVV 16.6] Whole Vector Register Move instructions,,,,,,MAL-1792,111948,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,4/4/2022 14:54,7/14/2022 0:36,9/28/2022 0:51,7/1/2022 8:36,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,,,,Implement the four {{vmv<nr>r.v}} instructions,Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,MAL-2108,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-30T21:00:25.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/b53223667fcc0a79387a33f8a2e467a06e647488,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzyrxr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[TGV] [RVV 15.8, 15.9] Vector Iota and Element Index Instructions",,,,,,MAL-1791,111946,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,4/4/2022 14:39,7/12/2022 9:54,9/28/2022 0:51,6/9/2022 8:25,,,,,,,,,,,,,TGV_RTL/MU,,,,,,,,,0,,,,"Implement the {{viota.m}} and {{vid.v}} instructions.

Keep in mind this note from the RVV spec:
Note Microarchitectures can implement {{vid.v}} instruction using the same datapath as {{viota.m}} but with an implicit set mask source.",Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,,,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,,,,,,,,,,,,,,,,,,MAL-1789,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,{},,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyrxb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[TGV] [RVV 15.4, 15.5, 15.6] Set-*-first mask bit instructions",,,,,,MAL-1790,111945,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,4/4/2022 14:35,7/12/2022 9:54,9/28/2022 0:51,6/9/2022 8:25,,,,,,,,,,,,,TGV_RTL/MU,,,,,,,,,0,,,,"Implement the {{vmsbf.m}}, {{vmsif.m}}, and {{vmsof.m}} instructions",Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,,,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,,,,,,,,,,,,,,,,,,MAL-1789,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,{},,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyrx3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[TGV] [RVV 15.2, 15.3] Vector count population and find-first-set in mask instructions",,,,,,MAL-1789,111944,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,4/4/2022 14:32,7/12/2022 9:54,9/28/2022 0:51,6/9/2022 8:26,,,,,,,,,,,,,TGV_RTL/MU,TGV_RTL/X2Y,,,,,,,,0,,,,Implement these instructions that write results back to the integer register file.,Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,,,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,,,,,,,,,,,,,,,,,,MAL-2026,,,,MAL-1788,MAL-1790,MAL-1791,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-06-13T23:12:53.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyrwv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] [RVV 15.1] Vector Mask-Register Logical Instructions,,,,,,MAL-1788,111943,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,4/4/2022 14:29,7/12/2022 9:54,9/28/2022 0:51,6/9/2022 8:24,,,,,,,,,,,,,TGV_RTL/MU,,,,,,,,,0,,,,Implement these instructions in the mask unit,Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,,,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,,,,,,,,,,,,,,,,,,MAL-1789,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-08T08:45:29.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyrwn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] divReady deasserts and never comes back,[TGV] divReady,Execution Unit ,,,,MAL-1787,111938,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,4/4/2022 13:25,9/7/2022 17:43,9/28/2022 0:51,5/16/2022 11:52,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"We see a store q hang assertion being fired on a sting test run. the assertion fired is 

{noformat}Error: ""/scratch/verif/srivatsa/sting_tgv_regression_2/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_StQEntry_assert.sv"", 675: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.StQ.stqEntries_0.SiFive_StQEntry_assert_0: at time 5230602500 ps
Assertion failed (verification library): StQEntry FSM Hang  @[StoreQ.scala 1190:14]

Fatal: ""/scratch/verif/srivatsa/sting_tgv_regression_2/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_StQEntry_assert.sv"", 684: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.StQ.stqEntries_0.SiFive_StQEntry_assert_0: at time 5230602500 ps

$finish called from file ""/scratch/verif/srivatsa/sting_tgv_regression_2/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_StQEntry_assert.sv"", line 684.{noformat}

To recreate this failure

# clone federation and checkout the commit 05a17be728f320d2139305c846365005d3858470
# build coreip_u8_minimal_vector design and run the test using the outline 
{noformat}override_testbench_in_outline(""coreipvipcosim"")                                                                                                                                                                                                                                                                                                                                                                                            
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_stall_cycle_count=500000"",
    ""+cosim_scoreboard_trap_epc_count=30"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """", 
    ""+verbose""
  ],  
  ""subdir"": ""sting_StingSiFiveTuple_T_0162"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 4191934756
  },  
  ""sim"": {
    ""vendor"": ""vcs""
  },  
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },  
  ""waves"": {
    ""dumper"": ""all""
  },  
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}



the waves are at {{gamma29:/scratch/verif/srivatsa/sting_tgv_regression_2/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0162/sting/sifive/vector/vector_tgv_dev.conf}}",David Kravitz,John Ingalls,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,5fd15143b4a74900763834e0,5bb6808b9ba2930990f81895,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-04-12T09:04:08.000-0700"",""stateCount"":3,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/18e661e82500be8f3aef6b5331fd56c97651b1ad,,,,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyrvr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,10:26.1,"06/Apr/22 6:10 PM;5fd15143b4a74900763834e0;At 3,426,842.5, a {{vdiv.vv}} operation issues and {{divReady}} deasserts 2 cycles later. It never reasserts. That leads to another divide getting stuck in the VEX IssQ, which eventually prevents a StQ entry from retiring (this problem could also have shown up as a ROB hang).

Passing to Nicolas to debug. Maybe it would be worth adding a non-synthesizable watchdog timer that could assert whenever a divide (or more precisely {{divReady}} reassert) has taken longer than the maximum expected time.",11/Apr/22 4:17 PM;6065017e90e3950069cf01c5;[https://github.com/sifive/federation/pull/21699|https://github.com/sifive/federation/pull/21699|smart-link]  and [https://github.com/sifive/federation/pull/21674|https://github.com/sifive/federation/pull/21674|smart-link]  partially fix this issue. Simulation goes fine until about cycle 171652 when another mismatch appears. To be investigated,16/May/22 11:52 AM;6065017e90e3950069cf01c5;full outline is passing on master,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
HWPF: introducing aggressiveness counter,,,,,,MAL-1786,111923,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,4/4/2022 10:00,7/4/2022 22:35,9/28/2022 0:51,7/4/2022 19:47,,,,,,,,,,,,,RTL/HWPF,,,,,,,,,0,,,,"For BPM, we want to maintain an aggressiveness counter instead of {{hitL1MSHRCounter}} and {{hitL2MSHRCounter}} for dynamic distance. Aggressiveness counter is increased:

# on demand confirmation
# on late prefetch i.e, we generate PF for an address that is a hit on the access map

[~accountid:5e1370feefa19b0e976b5c24] found some of the edge cases that are improved by moving away from hitL1/L2 MSHR counter ",Benoy Alexander,Binayak Tiwari,Brian Grayson,Fu-Ching Yang,Hung-Lun Chen,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,5e1370feefa19b0e976b5c24,60a963ed8cbda700681b40c1,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,60ce876f624d7000695b9589,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Prefetch,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-07-04T18:49:06.000-0700"",""stateCount"":3,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,3,0,,,,100,,,,,,,,,,,,,,,2|hzyrtj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,56:15.8,"16/May/22 11:56 PM;5d7bfdaa003e040c3e175060;Re-post info from the slack: the correlation snippets result based on current development branch. [https://docs.google.com/spreadsheets/d/1JmpZdR6ZoJ_z0edklbzdqFIzOZOvZHd7r3BEfyGpo00/edit#gid=0|https://docs.google.com/spreadsheets/d/1JmpZdR6ZoJ_z0edklbzdqFIzOZOvZHd7r3BEfyGpo00/edit#gid=0|smart-link]

SPECINT  libquantum seems to be hurt pretty bad (0.34% -> -30%) but lots of SPECfp perf loss (bwaves/gamess-cytosine/gamess-triazolium/leslie3d-ref/wrf-ref) have been recovered.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: consolidated LoadQ Data Return FSM behavior assertion,LSU: consolidated LoadQ Data Return FSM ,LSU (Load Store Unit),LdQ (Load Queue),,Refer https://github.com/sifive/arch-specs/blob/master/core/mallard_lsu_mas.adoc#81-ldq-entries-management,MAL-1785,111890,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,4/3/2022 5:53,4/5/2022 8:13,9/28/2022 0:51,4/3/2022 13:32,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"Following assertion failure is observed in recent mallard regressions:

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/291/builds/coreip_p550/verilog/design/assertions/SiFive_LdQEntry_assert.sv"", 614: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.lsu.LdQ.ldqEntries_13.SiFive_LdQEntry_assert_0: at time 6425642500 ps
Assertion failed (verification library): LdQEntry wait to ResolveFlush until all older hazards become known  @[LoadQ.scala 2219:16]{noformat}


{{lsu.LdQ.ldqEntries_13.SiFive_LdQEntry_assert_0.ldqE_flushNotResolve_q}} is asserted at {{T:6425462500.}} This happens as both {{lsu.LdQ.ldqEntries_13.io_lstoVec_ldqEntryUpdate_0_valid}} & {{lsu.LdQ.ldqEntries_13.io_lstoVec_ldqEntryUpdate_0_bits_rawHazardStqNdx_valid}} go high.

{{lsu.LdQ.ldqEntries_13.SiFive_LdQEntry_assert_0.io_lstoVec_ldqEntryUpdate_0_valid}} is seen to be asserted since {{T: 6425582500}}. This valid along with ldqE_flushNotResolve_q trigger the assertion.

Wave Dump for quick look: {{gamma10:/scratch/saurabhs/mallard_master_291/federation/builds/coreip_p550/sim/sim/LDQ_Entry.outline/sting_StingPmpTuple_T_0135/sting/valtrix/algorithms/pmp/storeamo_acc_fault_uswr_pmp_regn_tor_xxnwxr.conf}}

Summary of all failures can be seen at: [https://simscope.internal.sifive.com/rules/745.1|https://simscope.internal.sifive.com/rules/745.1]

*Config:* coreip_p550

*Commit:* 940f456

*rerun.outline:*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+pl2_randomBlockGlobalArbEnable=1"",
    """"
  ],
  ""subdir"": ""sting_StingPmpTuple_T_0135"",
  ""subtest"": ""valtrix/algorithms/pmp/storeamo_acc_fault_uswr_pmp_regn_tor_xxnwxr.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1335757134
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Saurabh Singh,,,,,,,,,,,,,,,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1780,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1779,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{repository={count=6, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":6,""lastUpdated"":""2022-04-09T11:22:50.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":6,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/21570,,,,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyrmv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"Add support for ""simple branch only"" integer execution pipe",,,,,,MAL-1784,111871,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Julian Bailey,629ab2a89bc7150068d00cdf,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,4/1/2022 14:26,8/18/2022 2:59,9/28/2022 0:51,8/12/2022 1:06,,,,,,,,,,,,,RTL/IEX,RTL/RDU,,,,,,,,0,,,,"During the Healdsburg performance modeling studies, we explored having an IEX configuration where one pipe is dedicated only to simple branches which don’t have any destination registers.  The current Mallard generator doesn’t really allow for that kind of setting, so we need to modify the generator to allow that.

This would involve tying off the register writeback port and any tag broadcast buses to optimize out the wakeup path back to the issue queues.",Brian Grayson,Fu-Ching Yang,Ian Chuang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,Julian Bailey,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,61aaae1d9615eb006f5ff922,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,629ab2a89bc7150068d00cdf,,,,,,,,,,,,,,,,,,,,MAL-2299,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Mid Core,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-08-12T01:16:47.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,f543329d3f2c1ee223f9cf373aae9c2d79dbd83c,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,,,,,,,,,,,,,2|hzyriv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,42:17.2,12/Jul/22 9:42 AM;629ab2a89bc7150068d00cdf;MAL-1784-simple_branch_only created,"18/Jul/22 1:37 AM;629ab2a89bc7150068d00cdf;General Plan….Subject to change as I understand more of the code:

* ExPipe.scala
** add parameter “DispatchSimpleBranchOnly” to ExPipe::IexSupportParams, with default value “false”.
** Make changes to the ExPipe tying off the relevant ports etc. 
** Run tests to ensure nothing is broken with the parameter == false.
* Changes will be needed to IEX.scala
** Parameters will need to be passed through.
* Dispatch will need to be aware this pipe is different and not to issue non-simple branches. Talk to Francois about RDU support.","18/Jul/22 2:18 AM;629ab2a89bc7150068d00cdf;Hi [~accountid:5acffeafaa802f2a797a955c] 
In commit [10542cee3df5a6528db988175491d08c51eec69d|https://github.com/sifive/federation/commit/10542cee3df5a6528db988175491d08c51eec69d] (10/12/2021) I can see that the parameter {{dispatchBranchOnly}} has been added in EXUPipe.scala but this parameter isnt tied to anything in the ExPipe. If an ExPipe is set to be _displatchBranchOnly_ wouldnt you expect for something within the pipe to change?



Even the higher level iex.scala doesnt have any changes other than the parameters (set to default of false).","18/Jul/22 6:59 AM;629ab2a89bc7150068d00cdf;Sorry, just to clarify this ticket, the simple branch pipe will *only* execute branches with no registers…so no standard ALU, register transfers etc? The pipe will only handle simple branches?","18/Jul/22 7:40 AM;5acffeafaa802f2a797a955c;{quote}In commit [10542cee3df5a6528db988175491d08c51eec69d|https://github.com/sifive/federation/commit/10542cee3df5a6528db988175491d08c51eec69d] (10/12/2021) I can see that the parameter {{dispatchBranchOnly}} has been added in EXUPipe.scala but this parameter isnt tied to anything in the ExPipe. If an ExPipe is set to be _displatchBranchOnly_ wouldnt you expect for something within the pipe to change?{quote}

No, the {{dispatchBranchOnly}} parameter only affected the dispatch policy.  We would only dispatch branches to that issue queue/execution pipe, however simple single-cycle ALU instructions were still supported on that pipe.  So simple ALU instructions could cross-issue from the adjacent pipe.

That whole setup was to create an execution pipe that was largely dedicated to executing branches.  But if there were no ready branches to execute, then the pipe could execute a simple ALU instruction that cross-issue from the adjacent pipe.

What we’re trying to do now is create an execution pipe that really can only execute simple branches which don’t have any destination registers.","18/Jul/22 7:43 AM;629ab2a89bc7150068d00cdf;Okay, thanks, this is much clearer now…might adjust my general plan 🙂 ","19/Jul/22 5:21 AM;629ab2a89bc7150068d00cdf;So I have committed a simple change which adds simple branches only parameter, ensure parameter stops JALR link address calculation and writeback, in theory if all other features of the pipe are disabled and only branch support writeback should be optimised out.



However the tag stuff is a bit more complex. I can see the {{thisPipeTag}} IO port where the tags are broadcast. I was going to nuke the tag valid in the ISS stage of the pipe but a comment says:

{noformat}  // Note: Instructions which complete from this pipe, but don't necessarily write to the PRF should 
  //       still set instTag.valid but not broadcast. This is because instTag is piped down for the 
  //       completion request's GID.{noformat}

So I am not sure if I can just not set instTag.valid 

I could zero the valids on the broadcast port but I am trying to do this without checking that none of the parameters enabling other features of the ExPipe are set. Other option would be to add a second parameter to the ExPipe to say “noTagBroadcast” which would disable the broadcast but not sure if that is dangerous.

Still investigating and finding my way around the code ","19/Jul/22 5:34 AM;5acffeafaa802f2a797a955c;Ah, right. I forgot that {{instTag_WB}} is still used for the completion request.  The main thing is tying off {{io.thisPipeTag}} though, to optimize away the bus that gets broadcasted to all of the other modules.

{quote}I could zero the valids on the broadcast port but I am trying to do this without checking that none of the parameters enabling other features of the ExPipe are set.{quote}

If you added a parameter to {{IexSupportParams}} to indicate this pipe should only support simple branches, I think you can just check that parameter to tie off {{io.thisPipeTag}}.  We can add {{require()}} statements checking that if the simple branch parameter is true, all of the other things like {{i2f}}, {{sys}}, {{div}}, {{mul}}, etc… must be false.  The require statement would throw an error at compile time telling whoever modified the json file that they did something wrong.","19/Jul/22 6:33 AM;629ab2a89bc7150068d00cdf;Okay, I had already added a require for supports branches but will add the requires for the other features being off. Makes sense. I wanted to check that it was going to be completely mutually exclusive to all other features, will add that now ","26/Jul/22 3:01 AM;629ab2a89bc7150068d00cdf;Thought I would update this ticket with current status:

* I have pushed my changes for simple branch support to origin on the branch. 
* I need the [PR 24746|https://github.com/sifive/federation/pull/24746] to be merged on to master first as it has fixes for tying off the vector ports and ALU correctly.
* The ExPipe has a simple branch parameter and this has been added to tilemaker and unitparam so it can be passed through from the JSON.
* [~accountid:5acffeafaa802f2a797a955c] I assume there will be some work on the RDU to ensure that instructions cannot be dispatched to this new pipe type? Or is this within the EXPipe itself?","26/Jul/22 12:12 PM;5acffeafaa802f2a797a955c;[~accountid:629ab2a89bc7150068d00cdf] Yes the RDU needs to be modified to know which pipes an instruction can go to:

{noformat}      // Pipe supports executing the instruction
      iexPipeSupport(j) := (!inst.branch || mp.iexPipes(j).es.branch) &&
                           (!inst.jalr || (j == mp.firstBrPipeIdx)) &&
                           (!inst.mulOrPopc || mp.iexPipes(j).es.mul) &&
                           (!inst.div || mp.iexPipes(j).es.div) &&
                           !(inst.system && !inst.vconfigRead) &&
                           (!inst.fd || (inst.xs1 && mp.iexPipes(j).es.i2f)) &&
                           (!inst.s2v || (inst.xs1 && mp.iexPipes(j).es.i2v)) &&
                           (!(inst.v && inst.vwunary) || (inst.xd  && mp.iexPipes(j).es.v2i)) &&
                           (!isa.scie.B || !inst.scie || mp.iexPipes(j).es.scie) &&
                           (!cmovConvert_ID(i) || mp.iexPipes(j).es.cmov) &&
                           (!(inst.vset || inst.vconfigRead) || mp.iexPipes(j).es.vset) &&
                           (!moveElimSel_ID(i)){noformat}

I think in this case we just need to add another check that’s kind of backwards compared to the existing ones.  Here we need to check that either the {{simpleBranch}} pipe parameter is false, or {{inst.branch}} is true.

I think the cross issue “okay” determination should just work.","28/Jul/22 5:48 AM;629ab2a89bc7150068d00cdf;Okay *locally and temporarily,* i have modified the tile_healdsburg.json so that the 7th IEX pipeline has the simpleBranch support (it already had {{dispatchBranchOnlyPresent}} set).

{noformat}      { ""issq"": { ""nEnt"": 24, ""crossIss"": 12, ""hasDiv"": false, ""hasCmov"": false },
        ""pipe"": { ""hasBranch"": true, ""supportSimpleBranchesOnly"": true, ""dispatchBranchOnlyPresent"": false, ""hasI2f"": false, ""hasSys"": false, ""hasMul"": false, ""hasDiv"": false, ""hasScie"": false, ""hasCmov"": false }
      }{noformat}

 This is just so that I can check the generated verilog and determine that the changes actually work and dont break the core with some simple testing.

The generated EXPipe.scala has the following output ports, most have been trimmed away as they are tied off when simpleBranchesOnly are supported on the pipe.

{noformat}  output [3:0]  io_pcmtReadReq_RR_pcmtIdx,
  output [9:0]  io_gid_RR,
  output        io_mightFlush_RR,
                io_brFlushReq_EX_valid,
  output [9:0]  io_brFlushReq_EX_bits_gid,
                io_brFlushReq_EX_bits_rhfPtr,
  output [7:0]  io_brFlushReq_EX_bits_brqIdx,
  output [50:0] io_brFlushReq_EX_bits_pc,
  output        io_branchResult_EX_valid,
                io_branchResult_EX_bits_predCorrect,
  output [7:0]  io_branchResult_EX_bits_brqIdx,
  output        io_cmplReq_WB_valid,
  output [9:0]  io_cmplReq_WB_bits,
  output        io_thisPipeTagReplay_0,
                io_thisPipeTagReplay_1,
                io_thisPipeReplay_0,
                io_thisPipeReplay_1,
  output [63:0] io_thisPipeFwdData_0,
                io_thisPipeFwdData_1,
  output        io_fastReplay_EX,
                io_idle,
                io_perfEvents_branchTargetMispred,
                io_predicateWriteReq_WB_valid,
  output [8:0]  io_predicateWriteReq_WB_bits_idx,
  output        io_predicateWriteReq_WB_bits_result,
                io_thisPipePredTag_0_valid,
  output [9:0]  io_thisPipePredTag_0_bits_prIdx,
  output        io_thisPipePredTag_1_valid,
  output [9:0]  io_thisPipePredTag_1_bits_prIdx,
  output        io_thisPipePredTag_2_valid,
  output [9:0]  io_thisPipePredTag_2_bits_prIdx,
  output        io_thisPipePredTag_3_valid,
  output [9:0]  io_thisPipePredTag_3_bits_prIdx,
  output        io_thisPipePredTagReplay_0,
                io_thisPipePredTagReplay_1,
                io_thisPipePredFwdData_0,
                io_thisPipePredFwdData_1);{noformat}

[~accountid:5acffeafaa802f2a797a955c] is there anything here that you think should not be present? 

I am unsure about {{io_thisPipeFwdData_0}} & {{io_thisPipeFwdData_1}} as we aren’t generating results from branches right?","28/Jul/22 5:55 AM;5acffeafaa802f2a797a955c;Yeah, I’m a little curious about the following, as they should only be needed for integer pipes which actually produce results.

{noformat}  output        io_thisPipeTagReplay_0,
                io_thisPipeTagReplay_1,
  output [63:0] io_thisPipeFwdData_0,
                io_thisPipeFwdData_1,{noformat}

It’s also possible that they are being preserved in the verilog because they are being cross-module referenced by something in the testbench.  We’d have to check {{<federation>/mallard/src/main/scala/grandcentral/MallardTileView.scala}} to see if it looks like we are tapping those signals.","28/Jul/22 10:06 AM;629ab2a89bc7150068d00cdf;Okay, I have pushed the most recent updates to the branch and I will create a +draft+ pull request to let CI run and document what has happened so far. The core doesn’t look broken and seems to be working fine.","29/Jul/22 6:21 AM;629ab2a89bc7150068d00cdf;It looks like while in general that healdsburg is functional with this change (and set in the config too). Coremark isnt happy….

{noformat}Scoreboard config: xLen=64 | fLen=64 | vLen=128 | vaddrExtended=51 | vec_reg_count=0 | enable_check=1 | vreg_mask_skip=0 | verbosity=0 | enable_wrdata_check=1 | error_count=1 | stall_time=600000 | enable_cosim_mmc=0
Reset m_pl2_csc_inner_agents  dc
Reset m_pl2_mmc_inner_agents  dc
Error: ""/scratch/jbailey/federation/builds/coreip_healdsburg/verilog/design/assertions/SiFive_IssQEntry_24_assert.sv"", 181: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.iex.issueQueues_1.entries_10.SiFive_IssQEntry_24_assert: at time 2909702500 ps
Assertion failed (verification library): make sure we don't match tag on a source that's marked ready  @[MallardUtil.scala 605:20]
Fatal: ""/scratch/jbailey/federation/builds/coreip_healdsburg/verilog/design/assertions/SiFive_IssQEntry_24_assert.sv"", 183: TestDriver.testHarness.system.subsystem.tile_prci_domain.tile.core.iex.issueQueues_1.entries_10.SiFive_IssQEntry_24_assert: at time 2909702500 ps
$finish called from file ""/scratch/jbailey/federation/builds/coreip_healdsburg/verilog/design/assertions/SiFive_IssQEntry_24_assert.sv"", line 183.
==========SIMULATION STATS FOR HART 0==========
Simulation CPU time = 5630.252700 seconds
Simulation cycles = 145381
Simulation clocks per second = 25.821399
Simulation instruction retire count = 311243
Simulation trap count = 0
=================================================={noformat}

I am going to see if I can work out what is wrong…maybe something isnt tied off correctly or maybe too much has been tied off…

","01/Aug/22 6:42 AM;629ab2a89bc7150068d00cdf;[~accountid:5acffeafaa802f2a797a955c] I know you are very busy but some help with this would be great. The coremark test is dying and while I have looked at the swaves for the assertion I am unsure what exactly is going on and why.

The log files and waves are here: /scratch/jbailey/federation/builds/coreip_healdsburg/sim/rerun/rerun_failures.outline/disableClockGate/useries_coremark_tuned

I forgot to run with verdi, so the waves are .vpd for dve…","01/Aug/22 8:01 AM;5acffeafaa802f2a797a955c;[~accountid:629ab2a89bc7150068d00cdf] Which server did you run the simulation on?  {{/scratch}} space is local to one machine, so I need to know which machine to log onto to find your waves.",01/Aug/22 8:05 AM;629ab2a89bc7150068d00cdf;gamma02 sorry forgot to add that\!,"02/Aug/22 11:08 AM;5acffeafaa802f2a797a955c;[~accountid:629ab2a89bc7150068d00cdf] It looks like the {{thisPipePredTagReplay}} outputs from {{exPipes_6}} were removed, so I suppose it was probably tied off?  What happened is that the instruction in issue queue 1 entry 10 was depending on the predicate tag 0x30a.  At time 8,080,019ns the predicate tag 0x30a is broadcasted as valid from pipe 6.  On the next cycle, the instruction from pipe 6 replays from the RR stage, but the {{thisPipePredTagReplay}} output from pipe 6 isn’t connected.  So the move instruction in issue queue 1 doesn’t see that the branch is replaying and sets the source as ready.  The branch then issues again later and broadcasts the predicate tag again, and the assertion fires.

I can see from the verilog that the predicate tag replay signals are only hooked up from pipe 5.","02/Aug/22 12:45 PM;629ab2a89bc7150068d00cdf;Hey Josh, Yeah I tied those off…tprobably by accident 🙂 

It wasn’t clear to me what the assertaion actually meant…","03/Aug/22 12:52 AM;629ab2a89bc7150068d00cdf;out of interest, what causes the replay in the first place?","03/Aug/22 4:23 AM;5acffeafaa802f2a797a955c;I didn’t actually look at what caused it, but it’s almost always a load miss that causes dependent instructions to replay.  Given that the branch re-issued much later, that’s most certainly the case.","03/Aug/22 2:07 PM;629ab2a89bc7150068d00cdf;Thats fixed this issue, I think if the CI passes we should be good to go for PR…","05/Aug/22 9:25 AM;629ab2a89bc7150068d00cdf;PR has been merged, might be a couple of things to check…will leave this open for the moment.","11/Aug/22 4:18 AM;629ab2a89bc7150068d00cdf;When making further changes to tidy up the healdsburg EXPipe simple branhc support….I see the following coremark/dhrystone:

||*Test*||*Score*||*Expected & Range*||
|dhrystone|9.104|{panel:bgColor=#ffebe6}
 9.722 (Range of Min:9.479 Max:9.965)
{panel}|
|disableClockGate dhrystone|9.104|{panel:bgColor=#ffebe6}
9.722 (Range of Min:9.479 Max:9.965)
{panel}|
|Useries_coremark_tuned|10.119|{panel:bgColor=#e3fcef}
Score OK
{panel}|
|disableClockGate Useries_coremark_tuned|10.121|{panel:bgColor=#e3fcef}
Score OK
{panel}|

I don’t know what has caused the performance drop here, I rolled back the current changes on the branch ([MAL-1784-SimpleBranchOnlyCleanup|https://github.com/sifive/federation/tree/MAL-1784-SimpleBranchOnlyCleanup]) and I see the same issue…dhrystone score lower than it should be but coremark is okay….","11/Aug/22 8:57 AM;5acffeafaa802f2a797a955c;[~accountid:629ab2a89bc7150068d00cdf] I think the Dhrystone score issue is my fault, sorry about that.  I made a PR to reduce the size of some structures in Healdsburg but forgot to manually update the expected scores: [https://github.com/sifive/federation/pull/24913|https://github.com/sifive/federation/pull/24913|smart-link] ","11/Aug/22 9:20 AM;629ab2a89bc7150068d00cdf;Thats no problem, as long as it isn’t something I did by accident 🙂 ",,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: SiFive_HwpfBitPattern_1_assert,Assertion Failure: SiFive_HwpfBitPattern_1_assert,LSU (Load Store Unit),HWPF (Hardware Prefetch),HWPF_Entries,Refer https://github.com/sifive/arch-specs/blob/master/core/hwpf_mas.adoc,MAL-1783,111695,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,3/31/2022 0:04,4/12/2022 11:43,9/28/2022 0:51,4/4/2022 13:08,,,,,,,,,,,,,RTL/HWPF,,,,,,,,,0,,,,"The following error is observed on mallard-nightly-xprop regressions due to {{hwpf.hwpfEntries_1.updateLeadingEdgeValid}} transitioning to xx.

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-xprop-coreip_mallard-test-nightly-xprop/74/builds/coreip_p650/verilog/design/assertions/SiFive_HwpfBitPattern_1_assert.sv"", 1035: TestDriver.testHarness.system.tile_prci_domain.tile.core.lsu.hwpf.hwpfEntries_1.SiFive_HwpfBitPattern_1_assert_0: at time 1978462500 ps
Assertion failed (verification library): HWPF Entry BPM: leading edge should not point to false demand miss in access map.  @[HwpfBitPattern.scala 121:16]{noformat}

Similar assertion failures are observed for all hwpfEntries block.

At _T:1978362500ps_ {{hwpfEntries_1.updateAccessMap}} asserts. {{hwpfEntries_1._updateLeadingEdgeValid_T_2}} is uninitialized at this time stamp and this causes {{hwpf.hwpfEntries_1.updateLeadingEdgeValid}} to transition to xx.

{{hwpfEntries_1._updateLeadingEdgeValid_T_2}} is driven by {{hwpfEntries_1.up_direction ,}} {{hwpfEntries_1.up_subZoneIdx & hwpfEntries_1.up_prevAddr}} which are uninitialized till this time, get update later when {{hwpfEntries_1.io_update_allocate}} is asserted at T:1978382500ps.

Wave Dump is present at {{gamma10:/scratch/saurabhs/mallard_master_289/federation/builds/coreip_p650/sim/sim/HwpfBitPattern_1.outline/sting_StingTopOnlyTuple_T_0027/sting/valtrix/only_fp_ld.conf}}

Steps to reproduce:
Checkout commit 65a50c47
Build coreip_p650
rerun.outline:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingTopOnlyTuple_T_0027"",
  ""subtest"": ""valtrix/only_fp_ld.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3048404681
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,Saurabh Singh,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1520,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-04T13:06:26.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Simulation-Directed,Simulation-STiNG,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyqlb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Mar/22 12:11 AM;607e26f781e7b900681be48c;Same assertion failure for {{hwpf_entries_0}} happens right with similar cause of xx propagation right after reset is deasserted at {{T:2382500ps}}. {{hwpf.hwpfEntries_0.SiFive_HwpfBitPattern_assert_0.updateLEEdge}}  samples {{hwpf.hwpfEntries_0.up_pfEngineValid & hwpf.hwpfEntries_0.updateLeadingEdgeValid.}}
Looks like these registers need to be initialized during reset.

Wave Dump: {{gamma10: /scratch/saurabhs/mallard_master_289/federation/builds/coreip_p650/sim/sim/HwpfBitPattern.outline/hart0/error3/inject_ecc_error/ecc_flush_discard_nmi}}

*Note:* Reproducing this failure will be fairly quicker as test ends after only 480 simulation cycles.

*Config:* coreip_p650
*Commit:* 65a50c47
*rerun.outline:*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""inject_ecc_error/ecc_flush_discard_nmi"",
  ""raw_plusargs"": [
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,0,0,32,0:.*\\.l1dcTagArray.*ext,1,1,32"",
    ""+disable_ecc_asserts=1"",
    ""+gdi_nmi_enable=1"",
    ""+gdi_testname=nmi_drive_vectors_seq"",
    ""+disable_cache_checker=0"",
    ""+hwpfCSR_setVal=217687130636191"",
    ""+hwpf2CSR_setVal=18335"",
    ""+pl2_scb_enable_state_check=0"",
    ""+pl2_scb_enable_data_check=0"",
    ""+ecc_err_inject_mailbox=1""
  ],
  ""subdir"": ""hart0/error3"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3089788554
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""program"": {
    ""hartid"": 0,
    ""env"": ""abi"",
    ""mem"": ""axi4_periph_port_mem""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vstart value issue,[TGV] vstart,,,,,MAL-1782,111663,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Zhiqiang Hao,5d02d411febd110bc78aabc3,Zhiqiang Hao,5d02d411febd110bc78aabc3,3/30/2022 17:20,9/7/2022 17:43,9/28/2022 0:51,6/9/2022 17:50,,,,,,,,,,,,,TGV_RTL/Top,,,,,,,,,0,TGV,,,"Commit: 

{noformat}commit e329ee6bd456d1aa9cfdf597512d1da3541ec79c (HEAD -> master, origin/master, origin/HEAD)
Author: Andrew Gouldey <79490918+andrew-gouldey-sifive@users.noreply.github.com>
Date:   Wed Mar 30 14:45:06 2022 -0600

    Update TLtoACE5 bridge to avoid Probe.toT by default (CIP-3319). (#21498){noformat}

Config: {{coreip_u8_minimal_vector}}

Waveform:

{noformat}gamma28
/scratch/verif/zhiqiangh/sting/federation/builds/coreip_u8_minimal_vector/sim/debug1/rerun.outline/sting_StingSiFiveTuple_T_0214/sting/sifive/vector/vector_tgv_dev.conf{noformat}

Rerun:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_stall_cycle_count=500000"",
    ""+cosim_scoreboard_trap_epc_count=30"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.l2_tlb_ram_ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+verbose""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0214"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3093770124
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



Error Msg:

{noformat}[COSIM-ERROR][0] COSIM VS RTL WRDATA MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [346647] InstInfo: VLD=1 | PC=0x0000000080010c58 | INSN=0x00802573 | INST_DST=INT | REDUCTION = false | WR: en=true r10=0x0000000000000014 mask=ff | READY=1 | CSR_TIMER=346647 | PRV=3 | MSTATUS=0x8000000a00007c00 | MTVEC=0x0000000080000400 | MCAUSE=0x0000000000000002 | VSTART=20 | VL=0 | VSEGELT=0
[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000080010c58 | INSN=0x00802573 | INST_DST=INT | REDUCTION = false | WR: en=true r10=0x0000000000000000 mask=ff{noformat}



In simulation, it will set {{vstart}} to 0x14 at

{noformat}C                   0:     344682 [1] pc=[0000000040b01510] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[008a5073] csrwi   vstart, 20{noformat}

Then it will execute a {{vsetvli}}

{noformat}C                   0:     345045 [1] pc=[0000000040b0152c] W[r 6=0000000000000008][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[01107357] vsetvli t1, zero, e32, m2, tu, mu{noformat}

It will reset {{vstart}} to 0



When it reads {{vstart}} from trap_handler

RTL will get 0x14, instead of 0, which will cause a COSIM MISMATCH

{noformat}C                   0:     346647 [1] pc=[0000000080010c58] W[r10=0000000000000014][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00802573] csrr    a0, vstart{noformat}",Alexandre Solomatnikov,Josh Smith,Nicolas Brunie,Zhiqiang Hao,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-31T10:23:56.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/edd793b5918,,,,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyqf3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,26:57.6,"30/Mar/22 5:26 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;{{vstart}} reset to 0 after successful vector instruction execution is not implemented yet.

cc: [~accountid:5acffeafaa802f2a797a955c] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vcompress.vm cosim mismatch,[TGV] vcompress.vm,Execution Unit ,Vector,,,MAL-1781,111659,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,3/30/2022 15:50,9/7/2022 17:43,9/28/2022 0:51,4/26/2022 13:18,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"

{noformat}=== sitest found errors in test sim/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vcompress.vm:
Scoreboard config: xLen=64 | fLen=64 | vLen=128 | vaddrExtended=51 | vec_reg_count=32 | enable_check=1 | verbosity=0 | enable_wrdata_check=1 | error_count=1 | stall_cycle_count=30000 | enable_cosim_mmc=1
[COSIM-ERROR][0] COSIM VS RTL WRDATA MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [10276] InstInfo: VLD=1 | PC=0x000000008000093a | INSN=0x3ff36057 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r0=0x5cffffffffffffffff1932e027db477d mask=ffff | READY=1 | CSR_TIMER=10276 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080000d08 | MCAUSE=0x0000000000000000 | VSTART=114 | VL=0 | VSEGELT=0

[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x000000008000093a | INSN=0x3ff36057 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r0=0x5cca7a3d1c385637191932e027db477d mask=ffff

sifive_test_results_pkg::set@(t=208373000): Test Result Setting for Index ID [3] Done [1] Success [0] Exit Code [13107]

sifive_test_results_pkg::report_status.unnamed$$_0@(t=218423000): Test Result Checking Registered Name [TestDriver.testHarness.PL2Scb] Index ID [2] Done [0] Success [0] Exit Code [0]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=218423000): FAILED: Test Result Registered Name [TestDriver.testHarness.cosim] Index ID [3] Done [1] Success [0] Exit Code [13107]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=218423000): FAILED: Test Result Registered Name [TestDriver.testHarness.i_TF] Index ID [4] Done [1] Success [0] Exit Code [0]

sifive_test_results_pkg::report_status@(t=218423000): done:          3, registered:          3, success:          1


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 43685 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* WARNING: fsdbDumpflush - The FSDB file has not been created.

hart0-S enable: 0000000000000000000000000000000000000000
Error: Instruction-by-Instruction check failed
Error: Instruction-by-Instruction check failed



*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 43685 simulation cycles (in TestDriver.report_phase_actions)
Error: simulation sim/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vcompress.vm failed{noformat}

Waveform: gamma11:/scratch/sols/tgv3/federation/builds/46171ed4569/coreip_p670/sim/sim/rerun.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vcompress.vm



commit: [https://github.com/sifive/federation/commit/46171ed4569|https://github.com/sifive/federation/commit/46171ed4569|smart-link] 



{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vcompress.vm"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vcompress.vm_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_FLMUL-0_NonzeroVstart-0_Sample-10_LMUL-1_AVL-128_TGV-1_IMM-0_LdStAccFault-1_TAILAgnostic-1"",
  ""seed"": {
    ""value"": 1498506954
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Alexandre Solomatnikov,Nicolas Brunie,,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,VI-6758,,,,MAL-2124,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/46171ed4569,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-05-12T08:59:57.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyqe7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,01:23.8,"30/Mar/22 6:01 PM;6065017e90e3950069cf01c5;This error is a bit strange, it seems cosim is not accepting a result value where {{vcompress.vm}} tail is fed with all 1s.

If I modify the RTL to force undisturbed tail, the test is passing:



{noformat}--- a/block-tgv-sifive/src/main/scala/core/tgv/VectorPermuteUnit.scala
+++ b/block-tgv-sifive/src/main/scala/core/tgv/VectorPermuteUnit.scala
@@ -404,7 +404,7 @@ class VectorPermuteUnit(bParams: BulletCoreParams, tp: TGVParams, ep: VexPipePar
   val slideInsFullData = io.data(0) & slideInsMsk & io.mask

   val all1s       = Fill(tp.dLen, 1.U(1.W))
-  val preTailData = Mux(!tgvVectorCmd.vconfig.vtype.vta, io.destDataIn, all1s)
+  val preTailData = io.destDataIn // Mux(!tgvVectorCmd.vconfig.vtype.vta, io.destDataIn, all1s)

   // dynamic slide amount read from io.data(0) is truncated to tp.eLen bits
   // FIXME-TGV: it should be truncated to xLen bits{noformat}","05/Apr/22 3:06 PM;6065017e90e3950069cf01c5;I think we can consider this one as resolved, unless we want to keep it open pending the cosim / spike update VI-6758","26/Apr/22 1:18 PM;6065017e90e3950069cf01c5;It seems the test is no passing on master.
I am not sure which commit to associate with the fix as the latest PR associated with this task was not sufficient to get the test to pass.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
LSU: retain flushing LoadQ Entry until flushed,,,,,,MAL-1780,111639,,Task,Reopened,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Alvin Tung,60f1ecfcf664300069fbfb00,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,3/30/2022 10:38,6/24/2022 14:56,9/28/2022 0:51,,,,,,,,,,,,,,RTL/LSU,,,,,,,,,0,,,,"[~accountid:60f1ecfcf664300069fbfb00] has been chasing down some Formal Verification checker failures where a LoadQ Entry that _would_ create a read-after-read data hazard for a newer instruction instead requests flush and disappears.  Functionally this works today because the newer instruction will be flushed as well from the whole machine by the ROB, but there is a time window where the newer loads could resolve (but not commit) and return data (even when chicken bits {{disableLoadDataReturnForRaRHazard && disableLoadDataReturnForPotentialRaRHazard}} are set).

We can close this time window by keeping the flushing LoadQ Entry around until it is itself flushed by the ROB.  We can do this _without_ adding any more register bits by re-encoding the existing bits {{ldqE_needsResolveFlush_q}} and {{ldqE_requestResolveFlush_q}} into:

{noformat}ldqE_hazardFsmState_q = RegEnable(UInt(LdqHazardFsm.width.W))

object LdqHazardFsm {
  val width = 2
  def Idle:              UInt = 0.U(width.W)
  def NeedsResolveFlush: UInt = 1.U(width.W)
  def Request:           UInt = 2.U(width.W)
  def Requested:         UInt = 3.U(width.W)
}{noformat}

* Pros
** Makes the design more functionally robust and predictable to verify.
** Honors the intended function of the chicken bits {{disableLoadDataReturnForRaRHazard && disableLoadDataReturnForPotentialRaRHazard}}, just in case those are needed for a functional bug workaround or timing side-channel attack security mitigation.
* Cons
** Slows down the out-of-order claim deadlock avoidance flush, because the lifetime of a flushing LoadQ Entry will be longer, slowing down popping the flushing entry off the back of the LoadQ and subsequently re-issuing the older instruction that is waiting to claim a freed LoadQ or MSHR entry.",Alvin Tung,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,,60f1ecfcf664300069fbfb00,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,MAL-765,MAL-1785,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6947,,,,,MAL-1779,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Load/Store,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=4}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":4,""lastUpdated"":""2022-04-28T10:19:40.000-0700"",""stateCount"":4,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":4,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/21608,,,,,,,,,,,,Formal,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyqan:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Apr/22 9:38 AM;5bb6808b9ba2930990f81895;[https://github.com/sifive/federation/pull/21608|https://github.com/sifive/federation/pull/21608|smart-link] does this by holding the flushing LoadQ Entry in the {{NeedsData}} state, rather than adding a {{LdqHazardFsm.Requested}} state.","28/Apr/22 8:51 AM;5bb6808b9ba2930990f81895;VI-6947 found that this was causing hangs in P550 booting Linux on the FPGA.

Reverted for now in https://github.com/sifive/federation/pull/22155

We can retry after we root cause this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
LSU: consolidate LoadQ Data Return FSM state bits,,,,,,MAL-1779,111638,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,3/30/2022 10:20,9/6/2022 9:16,9/28/2022 0:51,3/30/2022 19:12,,,,,,,,,,,,,RTL/LSU,Timing,,,,,,,,0,,,,"[https://sifive.atlassian.net/browse/MAL-478|https://sifive.atlassian.net/browse/MAL-478|smart-link] added a new register bit {{ldqE_requestDataReturnFromL2_q}} to every LoadQ Entry alongside existing bits {{ldqE_needsDataReturn_q}} and {{ldqE_requestDataReturn(FromLsu)_q}}.  These three bits can be consolidated into two register bits instead:

{noformat}ldqE_dataFsmState_q = RegEnable(UInt(LdqDataFsm.width.W))

object LdqDataFsm {
  val width = 2
  def Idle:       UInt = 0.U(width.W)
  def NeedsData:  UInt = 1.U(width.W)
  def ReqFromLsu: UInt = 2.U(width.W)
  def ReqFromL2:  UInt = 3.U(width.W)
}{noformat}",John Ingalls,,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-478,,MAL-1785,VI-6776,,,,,,,,MAL-1780,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-31T14:21:00.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/21509,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyqaf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,5,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
HWPF: Fixing Leading Edge (LE) to point to farthest left/right depending on the stream direction,,,,,,MAL-1778,111634,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,3/30/2022 9:41,5/24/2022 11:07,9/28/2022 0:51,5/24/2022 11:06,,,,,,,,,,,,,RTL/HWPF,,,,,,,,,0,,,,{{LE}} should point to the farthest left or right in an entire subZone of the current demand address depending on the direction of the demand stream.,Benoy Alexander,Binayak Tiwari,Brian Grayson,Fu-Ching Yang,Hung-Lun Chen,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,5e1370feefa19b0e976b5c24,60a963ed8cbda700681b40c1,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,60ce876f624d7000695b9589,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-28T04:24:25.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyq9j:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,31:24.6,"25/Apr/22 7:31 PM;5d7bfdaa003e040c3e175060;SI06 correlation snippets result:

 [https://docs.google.com/spreadsheets/d/1jgB9A_HeKktbzxi28CjxjwOMzYfUbuv5COMcp8Dvetw/edit#gid=0|https://docs.google.com/spreadsheets/d/1jgB9A_HeKktbzxi28CjxjwOMzYfUbuv5COMcp8Dvetw/edit#gid=0|smart-link]  Check:  *Change1 + Change1 vs Change3*

I think overall it looks ok. But, I think there are 3 snippets drop more than 5% need to look into. 

[~accountid:60ce876f624d7000695b9589]  can you take a look at *0010/123* which drop more than 5%? ","28/Apr/22 1:41 AM;60ce876f624d7000695b9589;Currently,  I am working on other correlation issues and will take a look at {{0010/123}} after finishing.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] VType/VL overwritten for vector instruction stalled in DIS,[TGV] VType/VL  vector instruction stalled in DIS,Instruction decode and dispatch ,,,,MAL-1777,111574,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,3/29/2022 22:05,9/7/2022 17:43,9/28/2022 0:51,3/30/2022 9:59,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"On {{coreip_p670}} with commit {{71b985e}}, a VTG test was failing with a cosim mismatch on a vslide1down instruction.

It appears that with the new {{vsetvl}} logic, when a new {{vsetvl}} instruction moves to REN and sets the {{vsetvlStall_ID}} flag, it can cause the vtype/vl values for an older instruction in DIS stage to be overwritten if that instruction stalls in DIS.

Failing outline:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul4"",
  ""subtest"": ""vwadd.wv"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vwadd.wv_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_VSETIVLI-0_FENCEbeforeVSETVL-0_VSETVL-1_FLMUL-0_NonzeroVstart-0_Sample-10_LMUL-4_AVL-128_TGV-1_IMM-0_LdStAccFault-1"",
  ""seed"": {
    ""value"": 1800426750
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Josh Smith,Nicolas Brunie,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-30T09:58:39.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7c3574cef18b29693be141343c2cf6012dc209f9,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzypxb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
HWPF: Fixing aggressiveness,,,,,,MAL-1776,111563,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,3/29/2022 21:30,4/4/2022 15:44,9/28/2022 0:51,4/2/2022 9:33,,,,,,,,,,,,,RTL/HWPF,,,,,,,,,0,,,,"{{AG}} stage generates pf addresses equal to {{io.hwpfControl.initialDist}}, however, {{DIS}} stage is sending one less than the initial distance.",Binayak Tiwari,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,,60a963ed8cbda700681b40c1,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{repository={count=3, dataType=repository}, json={""cachedValue"":{""errors"":[],""summary"":{""repository"":{""overall"":{""count"":3,""lastUpdated"":""2022-04-07T21:59:49.000-0700"",""dataType"":""repository""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzypuv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] ROB Retire Hang in `vsetivli` test,[TGV] ROB,Execution Unit ,ROB,,,MAL-1775,111536,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Zhiqiang Hao,5d02d411febd110bc78aabc3,Zhiqiang Hao,5d02d411febd110bc78aabc3,3/29/2022 15:11,9/7/2022 17:43,9/28/2022 0:51,3/30/2022 15:19,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"The assertion firing is

{noformat}Error: ""/scratch/verif/zhiqiangh/sting/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", 2156: TestDriver.testHarness.system.tile_prci_domain.tile.core.rdu.rob.SiFive_ROB_assert_0: at time 2312502500 ps
Assertion failed (verification library): ROB Retire Hang  @[ROB.scala 679:9]
Fatal: ""/scratch/verif/zhiqiangh/sting/federation/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", 2165: TestDriver.testHarness.system.tile_prci_domain.tile.core.rdu.rob.SiFive_ROB_assert_0: at time 2312502500 ps{noformat}



Config: {{coreip_u8_minimal_vector}}

Commit:

{noformat}d937949d1599315eeda92464c592c8a71d009ac9{noformat}

Rerun:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+verbose""
  ],
  ""subdir"": ""t0000_lmul8"",
  ""subtest"": ""vsetivli"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vsetivli_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_FENCEbeforeVSETVL-0_FLMUL-0_NonzeroVstart-0_Sample-10_LMUL-8_AVL-128_TGV-1_IMM-0_LdStAccFault-1"",
  ""seed"": {
    ""value"": 3093770124
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}",Josh Smith,Zhiqiang Hao,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,5d02d411febd110bc78aabc3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-30T13:34:01.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,46171ed456980514c038eeffbdfbcf9eefeba842,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyprj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,45:01.6,30/Mar/22 9:45 AM;5acffeafaa802f2a797a955c;The test is hanging because IEX never sends a completion back to the ROB after executing the {{vsetivli}} instruction.  This is because the destination register is x0.  The ExPipe has other special cases where it needs to send completions back even though the register file is not written (such as branches).  We need to handle {{vset*}} instructions the same way and send a completion back in any case.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"Combine IFU, RDU, CSRFile, and PTW into larger block",,,,,,MAL-1774,111526,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,3/29/2022 11:38,7/22/2022 7:44,9/28/2022 0:51,4/21/2022 15:38,,,,,,,,,,,,,Implementation,RTL/Frontend,RTL/RDU,RTL/Tile,,,,,,0,,,,"To help support hierarchical PD builds for P650 and beyond, there’s a desire to combine the IFU and the RDU into one larger block at the core level.

Separately, the PTW was recently moved out of the LSU and really wants to sit either with the LSU or the IFU.  So there was also an ask to place the PTW inside of the same block with the IFU+RDU.

This is also going to require changes to DV collateral and things like GrandCentral.",John Ingalls,Josh Smith,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1836,MAL-1967,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-04-26T17:04:53.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6bb737c2d64c0a17554bbaa1369eab3f6beacbe6,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzypq7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] implement support for vcompress.vm for LMUL > 1,,,,,,MAL-1773,111511,109919,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/29/2022 9:46,5/5/2022 15:56,9/28/2022 0:51,5/5/2022 15:56,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=DECLINED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-26T12:43:24.000-0700"",""stateCount"":1,""state"":""DECLINED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/53ff1f2fb78e9ab7a6b2f6343391e17e6f87f763,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzypnj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,109919,[TGV] permutation support for LMUL > 1,Done
[TGV] implement support for vrgather for LMUL > 1,,,,,,MAL-1772,111510,109919,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/29/2022 9:45,5/5/2022 15:55,9/28/2022 0:51,5/5/2022 15:55,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-05T15:54:54.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/53ff1f2fb78e9ab7a6b2f6343391e17e6f87f763,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzypnb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,109919,[TGV] permutation support for LMUL > 1,Done
HWPF timing: prefReq.lateCancel,,,,,,MAL-1771,111502,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,3/29/2022 9:12,9/6/2022 9:16,9/28/2022 0:51,3/29/2022 10:27,,,,,,,,,,,,,RTL/HWPF,Timing,,,,,,,,0,,,,"Currently the {{prefReq.earlyValid}} signals from the HWPF Entries are used live in the same cycle in {{prefReqArb}}, and {{prefReq.lateCancel}} is tied to false.

As we grow from 8 to 16 HWPF Entries from P550 to P650, and even more with Large Stride + BPM, I expect that we will need to move some terms from {{prefReq.earlyValid}} to {{prefReq.lateCancel}}, even though I don’t see this path in timing reports _yet_.",Binayak Tiwari,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,,60a963ed8cbda700681b40c1,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Prefetch,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-03-30T09:16:59.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/21466,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzypmf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] HWPF: issueBubble based on HwpfIssQ fullness for LMUL>=4,,,,,,MAL-1770,111500,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Binayak Tiwari,60a963ed8cbda700681b40c1,John Ingalls,5bb6808b9ba2930990f81895,John Ingalls,5bb6808b9ba2930990f81895,3/29/2022 8:46,9/27/2022 13:55,9/28/2022 0:51,,,,,,,,,,,,,,Performance,RTL/HWPF,,,,,,,,0,,,,"[https://sifive.atlassian.net/browse/SPARTA-1714|https://sifive.atlassian.net/browse/SPARTA-1714|smart-link] found that loads starve prefetches when vector loads are generated in clumps with LMUL=4+, because prefetches only force their way into the LSTA stage via {{hwpfControl.issueBubble}} every 4 or 8 cycles.

A possible fix could be to change [https://github.com/sifive/federation/blob/9f4b027601e7affba3172460b1b2147bdd75924a/mallard/src/main/scala/core/mallard/LSTPipe.scala#L363|https://github.com/sifive/federation/blob/9f4b027601e7affba3172460b1b2147bdd75924a/mallard/src/main/scala/core/mallard/LSTPipe.scala#L363] to blow a bigger hole for prefetches when the HwpfIssQ has multiple prefetches requesting.

{noformat}hwpf_issReqBlock :=
  (  io.hwpfControl.issueBubble
  && io.hwpfIssQ_lstaReq.earlyValid
  && (  ((io.ptwMem.req.valid || !io.ptwMem.req.ready) && rr_valid_q)
     || io.hwpfIssQ_multipleReady)){noformat}",Benoy Alexander,John Ingalls,Knute Lingaard,Nicolas Brunie,Zhen Wei,,,,,,,,,,,5e1370feefa19b0e976b5c24,5bb6808b9ba2930990f81895,5e1374fb7a22c90da0c60495,6065017e90e3950069cf01c5,5e49f622a17f930c9b94b6cd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1295,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzyplz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,2,,,,,,,,Panda PR,,,,,,,,,,,,,,,,,,,,,,,,,,42:56.0,"29/Mar/22 1:42 PM;5e1370feefa19b0e976b5c24;As for the number of cycles to blow holes when there are multiple ready prefetches, we should consider making that another CSR that is programmable.  Since this may be a sensitive to different customer’s workloads.","14/Apr/22 12:35 PM;5e1370feefa19b0e976b5c24;Ran a study with blowing 2 and 3 bubbles when there are multiple prefetches in the issue queue.  For SI06 and SF06, it is negligible to small loss overall:
[https://sifive.atlassian.net/wiki/spaces/CIP/pages/2242871366/SPARTA-1729+When+LSU+blows+holes+for+prefetches+allow+for+N+bubbles+when+multiple+prefetches+are+ready|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2242871366/SPARTA-1729+When+LSU+blows+holes+for+prefetches+allow+for+N+bubbles+when+multiple+prefetches+are+ready|smart-link] ",14/Apr/22 8:11 PM;5e49f622a17f930c9b94b6cd;Can both LST pipes blow holes for prefetches at the same time?,15/Apr/22 7:04 AM;5e1370feefa19b0e976b5c24;We can only send 1 prefetch down either pipe (per cycle).,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] refactor TGVVectorCmd,,,,,,MAL-1769,111498,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/29/2022 8:36,7/12/2022 9:54,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"List of possible improvements for TGV command bundle:

* the {{llp}} method inherited from Bullet should be overidden in {{TGVVectorCmd}} to exclude {{inarrow2}} ops (and simplify [https://github.com/sifive/federation/blob/master/block-tgv-sifive/src/main/scala/core/tgv/VexPipe.scala#L508|https://github.com/sifive/federation/blob/master/block-tgv-sifive/src/main/scala/core/tgv/VexPipe.scala#L508])",Kira Tsao,Nicolas Brunie,,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1924,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzyplj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] wrong result for vrgather with fractional LMUL,,,,,,MAL-1768,111474,109726,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,3/28/2022 23:59,4/13/2022 23:01,9/28/2022 0:51,3/29/2022 9:26,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"+*Outline:*+

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l",Brad Wu,Nicolas Brunie,,,,,,,,,,,,,,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-29T09:25:57.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/71b985e4686b291f093160a1a60f88e18c1ae242,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzypg7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,34:05.9,"29/Mar/22 12:02 AM;62103777eb2978006893b778;Outline:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vrgather.vv"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vrgather.vv_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_VSETIVLI-0_FENCEbeforeVSETVL-0_VSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-10_LMUL-1_AVL-128_TGV-1_IMM-0_LdStAccFault-1"",
  ""seed"": {
    ""value"": 1666063943
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}

Error:

{noformat}Scoreboard config: xLen=64 | fLen=64 | vLen=128 | vaddrExtended=42 | vec_reg_count=32 | enable_check=1 | verbosity=0 | enable_wrdata_check=1 | error_count=1 | stall_cycle_count=30000 | enable_cosim_mmc=1
[COSIM-ERROR][0] COSIM VS RTL WRDATA MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [18878] InstInfo: VLD=1 | PC=0x0000000080000f36 | INSN=0x333d8bd7 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r23=0xcfc85b75e751c43dbd00000000880000 mask=ffff | READY=1 | CSR_TIMER=18878 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x00000000800011fc | MCAUSE=0x0000000000000000 | VSTART=123 | VL=0 | VSEGELT=0

[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000080000f36 | INSN=0x333d8bd7 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r23=0xcfc85b75e751c43dbd00000000000000 mask=00ff

sifive_test_results_pkg::set@(t=387293000): Test Result Setting for Index ID [3] Done [1] Success [0] Exit Code [13107]

sifive_test_results_pkg::report_status.unnamed$$_0@(t=397343000): Test Result Checking Registered Name [TestDriver.testHarness.PL2Scb] Index ID [2] Done [0] Success [0] Exit Code [0]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=397343000): FAILED: Test Result Registered Name [TestDriver.testHarness.cosim] Index ID [3] Done [1] Success [0] Exit Code [13107]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=397343000): FAILED: Test Result Registered Name [TestDriver.testHarness.i_TF] Index ID [4] Done [1] Success [0] Exit Code [0]
{noformat}

Possible sequence to reproduce error:

{noformat}  VSETVLI(16, e8, m1, tu, mu)
  LOAD_ADDR(in_28, 15)
  LOAD_SCALAR_AND_VSLIDE1UP(lb, v27, v0, -1, 16)
  VSETVLI(16, e8, m1, tu, mu)
  LOAD_ADDR(in_29, 15)
  LOAD_SCALAR_AND_VSLIDE1UP(lb, v23, v0, -1, 16)
  VSETVLI(16, e8, m1, tu, mu)
  LOAD_ADDR(in_30, 15)
  LOAD_SCALAR_AND_VSLIDE1UP(lb, v19, v0, -1, 16)
# -------------------- test instruction
  VSETVLI(8, e8, mf2, tu, mu)
  vrgather.vv v23, v19, v27{noformat}","29/Mar/22 12:34 AM;6065017e90e3950069cf01c5;Thanks for the report [~accountid:62103777eb2978006893b778] . It was a similar error to [https://sifive.atlassian.net/browse/MAL-1745|https://sifive.atlassian.net/browse/MAL-1745|smart-link], the input data for the permutation must be masked to only allow VLMAX element to be non-zero.

Patch is available for review in [https://github.com/sifive/federation/pull/21456|https://github.com/sifive/federation/pull/21456|smart-link] ",29/Mar/22 12:37 AM;6065017e90e3950069cf01c5;It should be interesting to test {{vrgatherei16}} with {{mf2}} and SEW=0 (8-bit). As this is a corner case when we do not need the 2 sources / 2 destinations used in this case when {{LMUL=1}}.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,109726,[TGV] test / debug and enable fractional LMUL in TGV VTG testing,Done
[TGV][RVV 14.4] Vector Widening Floating-Point Reduction,,,,,,MAL-1767,111463,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/28/2022 20:33,8/7/2022 20:53,9/28/2022 0:51,8/7/2022 20:53,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"RVV’s specification [https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#144-vector-widening-floating-point-reduction-instructions|https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#144-vector-widening-floating-point-reduction-instructions|smart-link] 



Same remark than [MAL-1766|https://sifive.atlassian.net/browse/MAL-1766]: we may want to consider different implementation for ordered and unordered sum",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Kira Tsao,Nicolas Brunie,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,MAL-1950,MAL-1949,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,MAL-2097,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-07-07T20:15:38.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzypdr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,48:21.6,03/Aug/22 10:48 PM;5e1a4f5ec578120daca5ff8e;I think we are able to resolve this task since all FP reduction are tested and passed with {{enable_masking}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][RVV 14.3] Vector Single-Width Floating-Point Reduction,,,,,,MAL-1766,111462,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/28/2022 20:32,7/29/2022 9:25,9/28/2022 0:51,7/29/2022 9:25,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"RVV’s specification: [https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#143-vector-single-width-floating-point-reduction-instructions|https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#143-vector-single-width-floating-point-reduction-instructions|smart-link] 



Depending on performance requirements we may instantiate different harware to do the ordered and unordered sum versions (ordered sum could benefit from a single very low latency floating-point adder).",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,MAL-1949,MAL-1950,MAL-1965,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-27T09:59:53.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzypdj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][RVV 14.2] Vector Widening Integer Reduction,,,,,,MAL-1765,111461,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/28/2022 20:32,7/12/2022 9:54,9/28/2022 0:51,6/7/2022 11:10,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"RVV’s specification: [https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#142-vector-widening-integer-reduction-instructions|https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#142-vector-widening-integer-reduction-instructions|smart-link] 

{{vwredsumu.vs}} and {{vwredsum.vs}}",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,MAL-1948,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,{},,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/b26ca34f4e71453769d7f6de93215dd72004d98f,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzypdb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,07/Jun/22 11:10 AM;6065017e90e3950069cf01c5;Implemented as part of [https://sifive.atlassian.net/browse/MAL-1948|https://sifive.atlassian.net/browse/MAL-1948|smart-link]  by [https://github.com/sifive/federation/pull/22955|https://github.com/sifive/federation/pull/22955|smart-link] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][RVV 14.1] Vector Single-Width Integer Reduction,,,,,,MAL-1764,111460,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/28/2022 20:32,7/12/2022 9:54,9/28/2022 0:51,6/29/2022 17:54,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,RVV’s specification: [https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#141-vector-single-width-integer-reduction-instructions|https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#141-vector-single-width-integer-reduction-instructions|smart-link] ,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,MAL-1881,MAL-1882,MAL-1948,MAL-2159,MAL-2160,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzypd3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][RVV 13.19] Narrowing Floating-Point/Integer Type-Convert,,,,,,MAL-1763,111459,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/28/2022 20:30,7/12/2022 9:54,9/28/2022 0:51,4/20/2022 22:42,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,RVV’s specification: [https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#1319-narrowing-floating-pointinteger-type-convert-instructions|https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#1319-narrowing-floating-pointinteger-type-convert-instructions|smart-link] ,Brad Wu,Nicolas Brunie,,,,,,,,,,,,,,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-20T19:01:58.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzypcv:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,40:11.5,"11/Apr/22 10:40 PM;62103777eb2978006893b778;I have implemented {{vfncvt*}} which can output VLEN bits results per cycle. But it requires minor modification to {{LongLatencyPipeline}}, since it can only handle VLEN bits source by Bullet's design.

After discussed with [~accountid:5e1a4f5ec578120daca5ff8e] , we decided to move {{vf[w,n]cvt*}} to {{VectorShiftUnit}} (and change its name to a more appropriate one) so that “2*VLEN → VLEN“ (such as narrowing or sliding) operations can be implemented in the same module.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][RVV 13.15] Vector Floating-Point Merge,,,,,,MAL-1762,111457,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Shaka Kao,5f94696c29bd8a006f94f0e1,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/28/2022 20:26,7/12/2022 9:54,9/28/2022 0:51,6/14/2022 7:35,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,RVV’s specification: [https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#1315-vector-floating-point-merge-instruction|https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#1315-vector-floating-point-merge-instruction|smart-link] ,Nicolas Brunie,Shaka Kao,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-06-14T07:03:36.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/781206891db930ebc35627feb14efee43947522a,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzypcf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,17:44.5,"08/Jun/22 5:17 AM;5f94696c29bd8a006f94f0e1;Reference:

[https://sifive.atlassian.net/browse/MAL-1751?focusedCommentId=361657|https://sifive.atlassian.net/browse/MAL-1751?focusedCommentId=361657|smart-link] ",13/Jun/22 8:20 AM;6065017e90e3950069cf01c5;Same question than for [https://sifive.atlassian.net/browse/MAL-1751|https://sifive.atlassian.net/browse/MAL-1751|smart-link] : I don’t see the FP merge instructions in the instruction test list: [https://github.com/sifive/federation/blob/master/test-outlines/rvv_isa_inst_tgv.rb|https://github.com/sifive/federation/blob/master/test-outlines/rvv_isa_inst_tgv.rb] ,13/Jun/22 9:32 AM;6065017e90e3950069cf01c5;Re-opening this until we get the instruction into the VTG list.,13/Jun/22 10:17 PM;5f94696c29bd8a006f94f0e1;Updated. Please refer: [https://sifive.atlassian.net/browse/MAL-1751?focusedCommentId=363199|https://sifive.atlassian.net/browse/MAL-1751?focusedCommentId=363199|smart-link] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][RVV 13.14] Vector Floating-Point Classify,,,,,,MAL-1761,111456,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brad Wu,62103777eb2978006893b778,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/28/2022 20:25,7/12/2022 9:54,9/28/2022 0:51,4/7/2022 4:07,,,,,,,,,,,,,TGV_RTL/Top,,,,,,,,,0,,,,RVV’s specification: [https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#1314-vector-floating-point-classify-instruction|https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#1314-vector-floating-point-classify-instruction|smart-link] ,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-07T04:06:48.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzypc7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][RVV 13.13] Vector Floating-Point Compare,,,,,,MAL-1760,111455,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/28/2022 20:21,9/23/2022 0:27,9/28/2022 0:51,8/7/2022 16:40,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"RVV’s specification: [https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#1313-vector-floating-point-compare-instructions|https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#1313-vector-floating-point-compare-instructions|smart-link] 

Missing instruction in main {{vtg-tgv-tests.outline}}

{noformat}vmfeq.* (2 insns)
vmfne.* (2 insns)
vmflt.* (2 insns)
vmfle.* (2 insns)
vmfgt.* (2 insns)
vmfge.* (2 insns){noformat}",Kira Tsao,Nicolas Brunie,Shaka Kao,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,MAL-2245,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-08-07T16:28:32.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,,,,,,,,,,,,,2|hzypbz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,46:53.4,"17/Apr/22 6:46 PM;5e1a4f5ec578120daca5ff8e;Removed from {{VectorCompareUnit}}, these should be implemented under {{VectorMaskUnit}}.","20/Jul/22 2:19 PM;6065017e90e3950069cf01c5;[~accountid:5e1a4f5ec578120daca5ff8e] , could you list what remains to be done / tested in this task (if anything) ?","21/Jul/22 8:32 PM;5e1a4f5ec578120daca5ff8e;This design of this task is done, but the tests are still failing due to the tail policy supporting from spike/cosim. [https://sifive.atlassian.net/browse/MAL-1722|https://sifive.atlassian.net/browse/MAL-1722|smart-link]  has the same issue.",21/Jul/22 10:10 PM;6065017e90e3950069cf01c5;[~accountid:5e1a4f5ec578120daca5ff8e]  can you link both tasks as “blocked by” the task associated with tail policy supported by spike/cosim fix ?,06/Aug/22 1:26 AM;5f94696c29bd8a006f94f0e1;vector floating-point compare instructions would be added to {{rvv_isa_inst_tgv.rb}} in this [PR|https://github.com/sifive/federation/pull/25142].,"07/Aug/22 4:40 PM;5f94696c29bd8a006f94f0e1;PR ([https://github.com/sifive/federation/pull/25142|https://github.com/sifive/federation/pull/25142|smart-link] ) merged.

Add RVV 13.13 Vector FP compare instructions to:

# {{rvv_isa_inst_tgv.rb}}
# {{vtg-tgv-tests.outline}}
## Add RVV 13.13 instructions to the “ta_insts” group to force  {{tail_agnostic = 1}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][RVV 13.12] Vector Floating-Point Sign-Injection,,,,,,MAL-1759,111454,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/28/2022 20:20,7/12/2022 9:54,9/28/2022 0:51,4/7/2022 3:55,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,RVV’s specification: [https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#1312-vector-floating-point-sign-injection-instructions|https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#1312-vector-floating-point-sign-injection-instructions|smart-link] ,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-06T23:22:15.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzypbr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][RVV 13.11] Vector Floating-Point MIN/MAX ,,,,,,MAL-1758,111453,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Brad Wu,62103777eb2978006893b778,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/28/2022 20:19,7/12/2022 9:54,9/28/2022 0:51,4/6/2022 19:45,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,RVV’s specification: [https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#1311-vector-floating-point-minmax-instructions|https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#1311-vector-floating-point-minmax-instructions|smart-link] ,Brad Wu,Nicolas Brunie,,,,,,,,,,,,,,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1707,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzypbj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,45:10.2,06/Apr/22 7:45 PM;62103777eb2978006893b778;Resolved by https://sifive.atlassian.net/browse/MAL-1707,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
"[TGV][RVV 13.9, 13.10] Vector Floating-Point Reciprocal Square Root and Reciprocal Estimate Instructions",,,,,,MAL-1757,111452,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/28/2022 20:17,7/13/2022 23:11,9/28/2022 0:51,6/15/2022 9:45,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"RVV’s specification: [https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#139-vector-floating-point-reciprocal-square-root-estimate-instruction|https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#139-vector-floating-point-reciprocal-square-root-estimate-instruction|smart-link] 



These instructions are implemented in Bullet’s LLP, we may want to extract them (latency should be quite small, as this is an extended table lookup).",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Kira Tsao,Nicolas Brunie,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,CIP-3723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-02T08:39:55.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzypbb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,45:14.3,15/Jun/22 9:18 AM;6065017e90e3950069cf01c5;[~accountid:5e1a4f5ec578120daca5ff8e] can we close this task ?,"15/Jun/22 9:45 AM;5e1a4f5ec578120daca5ff8e;[~accountid:6065017e90e3950069cf01c5] yes, let me do it :) ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][RVV 12.5] Vector Narrowing Fixed-Point Clip Instructions,,,,,,MAL-1756,111451,110786,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/28/2022 20:15,6/1/2022 22:35,9/28/2022 0:51,5/17/2022 8:53,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,RVV’s specification: [https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#125-vector-narrowing-fixed-point-clip-instructions|https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#125-vector-narrowing-fixed-point-clip-instructions|smart-link] ,Alexandre Solomatnikov,Nicolas Brunie,,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-05-17T08:48:08.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0f180c081a60b09b1b59d1b9f1499b6576af5173,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzypb3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,110786,[TGV][RVV 12] add support for RISC-V vector fixed-point instructions,Done
[TGV][RVV 12.4] Vector Single-Width Scaling Shift Instructions ,,,,,,MAL-1755,111450,110786,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/28/2022 20:15,4/27/2022 19:17,9/28/2022 0:51,4/13/2022 23:08,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,RVV’s specification: [https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#124-vector-single-width-scaling-shift-instructions|https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#124-vector-single-width-scaling-shift-instructions|smart-link] ,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6b68017cce0c0f8ce6cfbe08b1bec75c76f76eb8,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzypav:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,110786,[TGV][RVV 12] add support for RISC-V vector fixed-point instructions,Done
[TGV][RVV 12.3] Vector Single-Width Fractional Multiply with Rounding and Saturation,,,,,,MAL-1754,111449,110786,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/28/2022 20:14,4/27/2022 19:17,9/28/2022 0:51,4/13/2022 23:07,,,,,,,,,,,,,TGV_RTL/Top,,,,,,,,,0,,,,RVV’s specifcation: [https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#123-vector-single-width-fractional-multiply-with-rounding-and-saturation|https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#123-vector-single-width-fractional-multiply-with-rounding-and-saturation|smart-link] ,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6b68017cce0c0f8ce6cfbe08b1bec75c76f76eb8,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzypan:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,110786,[TGV][RVV 12] add support for RISC-V vector fixed-point instructions,Done
[TGV][RVV 12.2] Vector Single-Width Averaging Add and Subtract,,,,,,MAL-1753,111448,110786,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/28/2022 20:13,4/27/2022 19:17,9/28/2022 0:51,4/13/2022 23:07,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,RVV’s specification: [https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#121-vector-single-width-saturating-add-and-subtract|https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#121-vector-single-width-saturating-add-and-subtract|smart-link] ,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6b68017cce0c0f8ce6cfbe08b1bec75c76f76eb8,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzypaf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,110786,[TGV][RVV 12] add support for RISC-V vector fixed-point instructions,Done
[TGV][RVV 12.1] vector Single-Width Saturating Add and Subtract,,,,,,MAL-1752,111447,110786,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/28/2022 20:11,4/27/2022 19:17,9/28/2022 0:51,4/13/2022 23:07,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,RVV’s specification: [https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#121-vector-single-width-saturating-add-and-subtract|https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#121-vector-single-width-saturating-add-and-subtract|smart-link] ,David Kravitz,Nicolas Brunie,,,,,,,,,,,,,,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0453ae89c1a3d9406fe7454adfa9fc9d20105306,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzypa7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,110786,[TGV][RVV 12] add support for RISC-V vector fixed-point instructions,Done
[TGV][RVV 11.15] Implement support for vector integer merge instructions,,,,,,MAL-1751,111446,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Shaka Kao,5f94696c29bd8a006f94f0e1,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/28/2022 20:09,7/12/2022 9:54,9/28/2022 0:51,6/14/2022 7:35,,,,,,,,,,,,,TGV_RTL/ISS,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,0,,,,RVV’s specification: [https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#1115-vector-integer-merge-instructions|https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#1115-vector-integer-merge-instructions|smart-link] ,Andrew Hanselman,David Kravitz,Kira Tsao,Nicolas Brunie,Shaka Kao,,,,,,,,,,,609d7e1f5998a6006800dcc5,5fd15143b4a74900763834e0,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13/Jun/22 10:06 PM;ug:113b86d8-ecfc-456b-a6a8-529c0abb7d7d;image-20220614-044927.png;https://sifive.atlassian.net/secure/attachment/73159/image-20220614-044927.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-06-14T07:03:36.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/781206891db930ebc35627feb14efee43947522a,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyp9z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,34:57.3,"15/Apr/22 12:34 AM;5e1a4f5ec578120daca5ff8e;Removed from {{VectorCompareUnit}}, these should be implemented under {{VectorMaskUnit}}.","15/Apr/22 11:40 AM;6065017e90e3950069cf01c5;{quote}Removed from {{VectorCompareUnit}}, these should be implemented under {{VectorMaskUnit}}.{quote}

[~accountid:5e1a4f5ec578120daca5ff8e] , I am not sure of the reason why ? this op takes a mask input but it outputs a vector register result. What is the rationale behind allocating it to the mask unit ?","17/Apr/22 6:46 PM;5e1a4f5ec578120daca5ff8e;Sorry, I putted this comment in the wrong ticket 😖 I’m going to put this in [https://sifive.atlassian.net/browse/MAL-1760|https://sifive.atlassian.net/browse/MAL-1760|smart-link] ","17/Apr/22 8:23 PM;6065017e90e3950069cf01c5;Thanks for the clarification [~accountid:5e1a4f5ec578120daca5ff8e] , comment makes much more sense on the other task indeed.","08/Jun/22 5:17 AM;5f94696c29bd8a006f94f0e1;Hi [~accountid:6065017e90e3950069cf01c5] , we put {{merge}} (int/fp) and {{carry/borrow}} implementation together. Since these two kinds of ops use the same “read mask” and “write mask”.

# These instructions are encoded as {{masked}} instructions (vm=0) 
# But they operate on and write back {{all}} body elements

In other words, they need to use mask-register as a source ({{mask_EX}} in VexPipe.scala), but their results should be {{AND}} (masked) with {{all1s}}. This scenario affects the {{maskedOldDestData_EX}} and {{simpleResult_EXN}} implementation.

Currently, {{vmerge}} and {{vfmerge}} are passed (VTG).","08/Jun/22 7:47 AM;6065017e90e3950069cf01c5;Hi [~accountid:5f94696c29bd8a006f94f0e1] , thanks for the details.

Once the implementation is merged we will want to test the timing. It seems the first stage is becoming critical (e.g. [https://sifive.atlassian.net/browse/MAL-2004|https://sifive.atlassian.net/browse/MAL-2004|smart-link] ) so this may necessitate some optimizations (in particular determining how much logic we can share, and how much we need to split in order to meet timing).",13/Jun/22 8:19 AM;6065017e90e3950069cf01c5;[~accountid:5f94696c29bd8a006f94f0e1]  I don’t see the vector integer merge instructions in the test list: [https://github.com/sifive/federation/blob/master/test-outlines/rvv_isa_inst_tgv.rb|https://github.com/sifive/federation/blob/master/test-outlines/rvv_isa_inst_tgv.rb]  . Have they been forgotten or is there something preventing us from adding them ?,"13/Jun/22 8:34 AM;5e1a4f5ec578120daca5ff8e;If I remember correctly, [~accountid:5f94696c29bd8a006f94f0e1] didn’t put int/fp merge instructions yet because we aren’t turning on the enabling_masking under tgv-vtg-tests.outline. That means the merge instructions aren’t really been tested. Please correct me if I was wrong.","13/Jun/22 8:43 AM;5fd15143b4a74900763834e0;That’s OK, but then the Jira shouldn’t be resolved until the instructions are in the main {{.rb}} file",13/Jun/22 8:44 AM;6065017e90e3950069cf01c5;I logged a specific Jira [https://sifive.atlassian.net/browse/MAL-2045|https://sifive.atlassian.net/browse/MAL-2045|smart-link] ,"13/Jun/22 9:24 AM;5fd15143b4a74900763834e0;I’d kind of prefer the original one stay open. The intent of all the other ones was to synchronize with VTG passing. Open to doing this one differently, but only if there is a good reason.",13/Jun/22 9:32 AM;6065017e90e3950069cf01c5;Re-opening this until we get the instruction into the VTG list.,"13/Jun/22 10:06 PM;5f94696c29bd8a006f94f0e1;[~accountid:5fd15143b4a74900763834e0] , [~accountid:6065017e90e3950069cf01c5] , for integer/floating-point merge operations, I run VTG test with {{enable_masking = 1}}

all vmerge tests (total 16 tests) passed for

# LMUL=1/2/4/8/fraction
# tested instructions: {{vmerge.vvm}}, {{vmerge.vxm}}, {{vmerge.vim}}, and {{vfmerge.vfm}}



I filed a [PR|https://github.com/sifive/federation/pull/23513] to add these merge instructions into {{test-outlines/rvv_isa_inst_tgv.rb}}, and after your approval, I will set this Jira to resolved. Thanks.

==============================

Per the below waveform snapshot, the operation result (simpleResult_EXN_T_59) matches our expectations:
{{Mux(mask[i], instSrcs_EX_0[i], instSrcs_EX_1[i])}}

!image-20220614-044927.png|width=91.66666666666666%!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Timing: Reduce use of F0 flush valid in IFU,,,,,,MAL-1750,111435,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,3/28/2022 18:45,9/3/2022 7:44,9/28/2022 0:51,4/14/2022 18:02,,,,,,,,,,,,,Implementation,RTL/Frontend,Timing,,,,,,,0,,,,"As of now, all the major units in Mallard except for the IFU see a branch pipeline flush delayed by one cycle.  This is to help reduce fanout on the critical BR1/F0 stage flush signal coming from the branch units, to improve timing.

However, not all of the IFU needs to get flushed immediately from BR1/F0 either.  We can flush parts of the IFU from the F1 stage of the flush just fine.  We should do this to help reduce fanout on the critical flush signal even more.  We just need to be careful not to allow some instructions to sneak by without getting flushed properly",I-Cheng Cheng,Josh Smith,,,,,,,,,,,,,,5d7bfdaa003e040c3e175060,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-14T18:02:22.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,  91ee977b0767ce9e8d99b598b22f487b889f23bf,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyp7r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] cleaning up vector div control,,,,,,MAL-1749,111413,,Task,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/28/2022 14:08,9/15/2022 8:06,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Simplify (better readability) and improve control code for vector division.

* find a way to ensure {{divKill}} mechanism is properly tested (coverpoint ?)
* currently the result-only shifting mechanism (using {{noOpShiftStarted}}) is not used (the divider will iterate over all the vector elements, active or inactive) and compute a result for each, result may be inserted or not depending on mask, but even if {{vl=0}}, {{DLEN / SEW}} divisions are performed => wasteful)
* add watchdog assertion on division to ensure it does not hang",David Kravitz,Nicolas Brunie,,,,,,,,,,,,,,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,MAL-1729,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,MAL-2604,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-26T16:56:48.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,2|hzyp3z:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,37:36.6,"11/Apr/22 4:03 PM;6065017e90e3950069cf01c5;{quote}add watchdog assertion on division to ensure it does not hang{quote}

[~accountid:5fd15143b4a74900763834e0]  as you suggested this in a review, I wanted to ask, do you know of a simple example for this I could use as a starting point ?","11/Apr/22 4:37 PM;5fd15143b4a74900763834e0;There are examples in Mallard LoadQ ({{ldqE_hangCounter}}), StoreQ (similar), ROB, MSHR, etc. Look for strings like {{_hangThreshold}} or {{angCounter}} (apparently no agreement on fooH vs foo_h).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
HWPF: Fixing window size for BPM,,,,,,MAL-1748,111401,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,3/28/2022 12:01,5/3/2022 20:32,9/28/2022 0:51,3/29/2022 17:11,,,,,,,,,,,,,RTL/HWPF,,,,,,,,,0,,,,"Currently, BPM has {{8KB}} window in each direction, this leads to the matching window size of {{16KB}} , we should have a window size of {{8KB}}, i.e, {{4KB}} in each direction.",Benoy Alexander,Binayak Tiwari,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,5e1370feefa19b0e976b5c24,60a963ed8cbda700681b40c1,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Prefetch,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-29T09:21:22.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyp1b:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
HWPF: improved pattern finding,,,,,,MAL-1747,111400,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,Binayak Tiwari,60a963ed8cbda700681b40c1,3/28/2022 11:55,5/3/2022 20:43,9/28/2022 0:51,5/3/2022 20:43,,,,,,,,,,,,,RTL/HWPF,,,,,,,,,0,,,,"On the engine allocation, we want 3 demand misses to start looking for a pattern. After the engine is trained using 3 demand misses, we then look for “N” demand miss-confirmations to start looking for another pattern. Currently, RTL is only looking for demand miss-confirmation because N=3, later on, we want “N” to be parameterized. If N>3, we may lock to a pattern late, and if N<3 we may not lock to a pattern.  
Following improvements are needed to improve the pattern finding:

1. On the engine allocation, look for 3 demand misses (on the same subzone) to find the first pattern. After the initial pattern, retrain counter will take over in finding the pattern.

2. Use old pattern until retrain finds a new pattern (in an event where we never find a better pattern, prefetching some is better than none)

3. Subzone change while counting demand miss on the engine allocation should reset the count.

4. Direction of the stream is updated for {{AG}} stage only when the pattern changes.",Benoy Alexander,Binayak Tiwari,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,John Ingalls,,,,,,,,,5e1370feefa19b0e976b5c24,60a963ed8cbda700681b40c1,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1869,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=4}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":4,""lastUpdated"":""2022-04-25T07:38:28.000-0700"",""stateCount"":4,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":4,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyp13:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,29:34.7,"16/Apr/22 6:29 PM;5d7bfdaa003e040c3e175060;Correlation simulation result for this JIRA.

[https://docs.google.com/spreadsheets/d/1UV5z_NkF_oslc_JluNBW0G3ybWpGHfMVVUr17_Ag8nQ/edit#gid=0|https://docs.google.com/spreadsheets/d/1UV5z_NkF_oslc_JluNBW0G3ybWpGHfMVVUr17_Ag8nQ/edit#gid=0|smart-link] 

SPECfp wrf-ref (+2~3%), some of the soplex (+14%~+51%).

I think we still need to take a look:  lbm-ref and bwaves.","24/Apr/22 8:27 PM;5d7bfdaa003e040c3e175060;In[ \[MAL-1747] HWPF: changing the direction of PF only on pattern change #22048|https://github.com/sifive/federation/pull/22048], we have following two change that can boost performance.

# the direction of the PF addresses was not set properly, this change will make sure the direction of the PF changes only when the pattern changes. (lbm-ref +1%)
# access map entries should not be reset once it is set, this change will prevent the access map to reset unless the sub-zone is replaced.  Some of perf boost are recovering the perf issue caused by [https://sifive.atlassian.net/browse/MAL-1786|https://sifive.atlassian.net/browse/MAL-1786|smart-link].(bwaves-ref + 20%,  soplex-pds +0%~+36%, soplex-ref +10%~+38%, leslie3d-ref +4~9%………)

[https://docs.google.com/spreadsheets/d/1jgB9A_HeKktbzxi28CjxjwOMzYfUbuv5COMcp8Dvetw/edit#gid=0|https://docs.google.com/spreadsheets/d/1jgB9A_HeKktbzxi28CjxjwOMzYfUbuv5COMcp8Dvetw/edit#gid=0|smart-link] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: SiFive_NLP_assert,Assertion Failure: SiFive_NLP_assert,NLP (Next Line Predictor),,,Refer https://github.com/sifive/arch-specs/blob/master/core/mallard_mas.adoc#541-next-line-predictor,MAL-1746,111353,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,3/27/2022 23:49,4/12/2022 11:32,9/28/2022 0:51,4/8/2022 6:30,,,,,,,,,,,,,RTL/Frontend,,,,,,,,,0,,,,"*Error:*

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-coreip_mallard-test-nightly/287/builds/coreip_p650/verilog/design/assertions/SiFive_NLP_assert.sv"", 246: TestDriver.testHarness.system.tile_prci_domain.tile.core.frontend.nlp.SiFive_NLP_assert_0: at time 26115042500 ps
Assertion failed: NLP RAS multi-hit

    at NLP.scala:700 assert(!(io.valid_F1 && PopCount(rasHits_F1) > 1.U),    ""NLP RAS multi-hit""){noformat}


Wave dump with trace log for quick look: 
{{gamma10: /scratch/saurabhs/mallard_master_287/federation/builds/coreip_p650/sim/sim/NLP_assert.outline/sting_StingVMTuple_T_0442/sting/valtrix/supervisor/rand_pte_rsw.conf}}


*Config:* coreip_p650

*Commit:* dd51433

*rerun.outline:*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+MEM_ERROR_INJECT=.*\\.icTagArray.*ext,1,0,20:.*\\.icDataArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,20:.*\\.cc_dir_ext,0,1,25:.*\\.TagRAM_ext,1,0,20:.*\\.icWayPredArray.*ext,1,0,32:.*\\.l1dcTagArray.*ext,1,0,20:.*\\.l1dcDataArrayBank.*ext,1,0,10:.*\\.RamBank.*ext,1,0,20"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""sting_StingVMTuple_T_0442"",
  ""subtest"": ""valtrix/supervisor/rand_pte_rsw.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2185458475
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

*SimScope:* https://simscope.internal.sifive.com/sigs/1468/citgo1c57q8n",Andrew Hanselman,Dave Parry,Josh Smith,Saurabh Singh,,,,,,,,,,,,609d7e1f5998a6006800dcc5,5cc37f384573b30ffbeb88b0,5acffeafaa802f2a797a955c,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-08T06:23:27.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,777d71e7030f59c537a28a2ed67dd880186c4130,,,,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyorb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,40:04.3,29/Mar/22 11:40 AM;5cc37f384573b30ffbeb88b0;[~accountid:609d7e1f5998a6006800dcc5] is this behavior particular to the new RAM-based NLP? ,"29/Mar/22 11:58 AM;5acffeafaa802f2a797a955c;[~accountid:5cc37f384573b30ffbeb88b0] Yeah, after taking a quick look I believe this is another corner case with the new SRAM-based NLP.

[~accountid:609d7e1f5998a6006800dcc5] It looks like a case where a return trains the nlpRas in F4 in the same cycle that a fetch in F1 matches both the return in F4 and whatever is in the update buffer.  The update buffer hit ends up making the fetch in F1 think that it did not hit the return in F4, and ends up allocating another nlpRas entry with the same tag.",29/Mar/22 12:01 PM;609d7e1f5998a6006800dcc5;[~accountid:5acffeafaa802f2a797a955c] Thanks for looking at this. I’ll try to get to this soon.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] wrong result for vslidedown with fractional LMUL,,,,,,MAL-1745,111345,109726,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Brad Wu,62103777eb2978006893b778,Brad Wu,62103777eb2978006893b778,3/27/2022 20:46,4/13/2022 23:01,9/28/2022 0:51,3/29/2022 0:26,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"When {{vslide(1)down.*}} is executed with a fractional LMUL, the input vector must be limited to VLMAX (and 0 extended above). 

[https://github.com/riscv/riscv-v-spec/blob/master/v-spec.adoc#1632-vector-slidedown-instructions|https://github.com/riscv/riscv-v-spec/blob/master/v-spec.adoc#1632-vector-slidedown-instructions|smart-link] 

If LMUL is fractional this means the non-zero inputs is less than VLEN.",Brad Wu,Nicolas Brunie,,,,,,,,,,,,,,62103777eb2978006893b778,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-28T17:35:30.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/88cc2188b018dde686f57dde1dd3134e777721c5,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyopj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,05:57.9,"27/Mar/22 8:47 PM;62103777eb2978006893b778;Config: coreip_u8_minimal_vector
Outline:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vslidedown.vi"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vslidedown.vi_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_VSETIVLI-0_FENCEbeforeVSETVL-0_VSETVL-0_FLMUL-1_NonzeroVstart-0_Sample-10_LMUL-1_AVL-128_TGV-1_IMM-0_LdStAccFault-1"",
  ""seed"": {
    ""value"": 710190855
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}

Error message:

{noformat}=== sitest found errors in test sim/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vslidedown.vi:
Scoreboard config: xLen=64 | fLen=64 | vLen=128 | vaddrExtended=42 | vec_reg_count=32 | enable_check=1 | verbosity=0 | enable_wrdata_check=1 | error_count=1 | stall_cycle_count=30000 | enable_cosim_mmc=1
[COSIM-ERROR][0] COSIM VS RTL WRDATA MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [13821] InstInfo: VLD=1 | PC=0x0000000080000994 | INSN=0x3ec335d7 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r11=0x5c3167eb5d430db600000000fc6c2596 mask=ffff | READY=1 | CSR_TIMER=13821 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080000f9c | MCAUSE=0x0000000000000000 | VSTART=60 | VL=0 | VSEGELT=0

[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x0000000080000994 | INSN=0x3ec335d7 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r11=0x5c3167eb5d430db60000000000000000 mask=00ff

sifive_test_results_pkg::set@(t=283853000): Test Result Setting for Index ID [3] Done [1] Success [0] Exit Code [13107]

sifive_test_results_pkg::report_status.unnamed$$_0@(t=293903000): Test Result Checking Registered Name [TestDriver.testHarness.PL2Scb] Index ID [2] Done [0] Success [0] Exit Code [0]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=293903000): FAILED: Test Result Registered Name [TestDriver.testHarness.cosim] Index ID [3] Done [1] Success [0] Exit Code [13107]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=293903000): FAILED: Test Result Registered Name [TestDriver.testHarness.i_TF] Index ID [4] Done [1] Success [0] Exit Code [0]

sifive_test_results_pkg::report_status@(t=293903000): done:          3, registered:          3, success:          1
{noformat}","27/Mar/22 8:50 PM;62103777eb2978006893b778;Possible sequence to reproduce error:

{noformat}  li TESTNUM, 29

  VSETVLI(8, e16, m1, tu, mu)
  LOAD_ADDR(in_40, 14)
  LOAD_SCALAR_AND_VSLIDE1UP(lh, v11, v0, -2, 8)
  VSETVLI(8, e16, m1, tu, mu)
  LOAD_ADDR(in_41, 14)
  LOAD_SCALAR_AND_VSLIDE1UP(lh, v12, v0, -2, 8)
# -------------------- test instruction
  VSETVLI(4, e16, mf2, tu, mu)
  vslidedown.vi v11, v12, 6
{noformat}","28/Mar/22 10:05 AM;6065017e90e3950069cf01c5;This is a real issue, the check with VLMAX has not been adapted the VLMAX is derived from a fractional LMUL.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,109726,[TGV] test / debug and enable fractional LMUL in TGV VTG testing,Done
[TGV] Create IP level synthesis bench in TGV,,,,,,MAL-1744,111337,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,3/27/2022 19:24,4/29/2022 11:50,9/28/2022 0:51,4/6/2022 20:39,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"Though we already have *fpu_syn_bench*, but we can’t reuse it in TGV because the repository restriction. We have to create a dedicate synthesis bench for TGV project.",Kira Tsao,,,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1837,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-31T14:45:38.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,CIP-3430,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR3.00 (SHA c59ec231),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyonr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Additional Healdsburg updates,,,,,,MAL-1743,111268,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Brian Grayson,5e1371705361330daaeaf389,Brian Grayson,5e1371705361330daaeaf389,Brian Grayson,5e1371705361330daaeaf389,3/25/2022 10:18,3/28/2022 14:00,9/28/2022 0:51,3/25/2022 12:33,,,,,,,,,,,,,Performance,,,,,,,,,0,,,,"* Widened fetch width in instructions and in bytes
* Reduced L2 and L3 sizes to match new POR
* Adjusted performance expectations to match",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-25T12:32:38.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyo93:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,,25/Mar/22 12:33 PM;5e1371705361330daaeaf389;Merged to master.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Timing: Fix thisPipePredTag timing,,,,,,MAL-1742,111264,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,3/25/2022 8:42,3/31/2022 16:28,9/28/2022 0:51,3/28/2022 12:08,,,,,,,,,,,,,Implementation,RTL/IEX,,,,,,,,0,,,,"After looking at some timing reports involving the issue queue ready → issue queue ready paths, one path that showed up was actually related to the cmov predicate tag broadcast.  Currently, there is some decoding happening after the issue queue picker which adds a couple gates to this path.  This should just be a bit from the issue queue payload instead of having some decoding.",Alexandre Solomatnikov,Josh Smith,,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-03-28T16:58:33.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0ce2d585c560457f378904ebab2b4e7caa52028e,,,,,,,,,,,,Physical Design,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyo87:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion from vexPRA module,[TGV] Assertion vexPRA module,Execution Unit ,Vex PIpe ,,,MAL-1741,111239,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,3/24/2022 15:16,7/14/2022 11:32,9/28/2022 0:51,3/28/2022 14:06,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"An assertion is being fired from the vexPRA module, where we are setting the same physical register ready twice.

the assertion fired is 

{noformat}Error: ""/scratch/verif/srivatsa/sting_tgv_regression/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_PRA_5_assert.sv"", 18: TestDriver.testHarness.system.tile_prci_domain.tile.core.tgv.vexPra.SiFive_PRA_5_assert_0: at time 7640582500 ps
Assertion failed: Physical register set as ready twice
    at PRF.scala:72 assert(!(readyVec & setVec).orR, ""Physical register set as ready twice""){noformat}



To recreate this failure, 

# Clone federation and checkout the commit d3482a7377008a47d43f8403c1676f51962a72ec
# build design coreip_u8_minimal_vector
# rerun the test using the outline 
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_stall_cycle_count=500000"",
    ""+cosim_scoreboard_trap_epc_count=30"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+MEM_ERROR_INJECT=.*\\.cc_banks.*ext,1,0,25:.*\\.cc_dir_ext,0,1,15:.*\\.icDataArray.*ext,1,0,20:.*\\.l1dcDataArrayBank.*ext,1,0,10:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l1dcTagArray.*ext,1,0,32:.*\\.l2_tlb_ram_ext,1,0,20:.*\\.RamBank.*ext,1,0,15:.*\\.icTagArray.*ext,1,0,10:.*\\.TagRAM_ext,1,0,15"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+verbose""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0118"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 774426323
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



The waves are at {{gamma29:/scratch/verif/srivatsa/sting_tgv_regression/builds/coreip_u8_minimal_vector/sim/sim2/rerun.outline/sting_StingSiFiveTuple_T_0118/sting/sifive/vector/vector_tgv_dev.conf}}",David Kravitz,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=OPEN, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-26T16:56:48.000-0700"",""stateCount"":1,""state"":""OPEN"",""open"":true,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/fdcbfc5856f280da9fd175dcf3fb7b018d690458,,,,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,100,,,,,,,,,,,,,,,2|hzyo3r:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,54:00.6,27/Mar/22 1:54 PM;5fd15143b4a74900763834e0;The assertion fires when a {{vrem.vv}} instruction (PC=2154090a) with LMUL=2 writes the 2nd register worth of results. The {{prIdx}} of both writebacks to the VRF are the same. This bug may have been fixed already by one of [~accountid:6065017e90e3950069cf01c5]'s merges. I’m assigning to him to check if that’s the situation.,"28/Mar/22 9:43 AM;6065017e90e3950069cf01c5;

{noformat}=== sitest found errors in test sim/rerun.outline/sting_StingSiFiveTuple_T_0118/sting/sifive/vector/vector_tgv_dev.conf:
(FrontPort) Axi4MasterSeq scheduler started
""/scratch/nicolasb/federation_bis/builds_mfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_PRA_5_assert.sv"", 69: TestDriver.testHarness.system.tile_prci_domain.tile.core.tgv.vexPra.InvisibleBind_assert.assert__chisel3_builtin: started at 6257982500ps failed at 6257982500ps
        Offending '(reset | ((readyVec & (({96 {io_setReq_0_valid}} & _GEN[95:0]) | ({96 {io_setReq_1_valid}} & _GEN_0[95:0]))) == 96'b0))'

Error: ""/scratch/nicolasb/federation_bis/builds_mfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_PRA_5_assert.sv"", 69: TestDriver.testHarness.system.tile_prci_domain.tile.core.tgv.vexPra.InvisibleBind_assert.assert__chisel3_builtin: at time
6257982500 ps
Assertion failed: Physical register  80 set as ready twice (only first conflicting id shown)

    at PRF.scala:75 assert(!(readyVec & setVec).orR, ""Physical register %d set as ready twice (only first conflicting id shown)"", firstRegSetTwice)


Error: ""/scratch/nicolasb/federation_bis/builds_mfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", 482: TestDriver.testHarness.system.tile_prci_domain.tile.core.rdu.rob.InvisibleBind_assert: at time 8266522500 ps
Assertion failed (verification library): ROB Retire Hang around entry 63   @[ROB.scala 679:9]

Fatal: ""/scratch/nicolasb/federation_bis/builds_mfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", 484: TestDriver.testHarness.system.tile_prci_domain.tile.core.rdu.rob.InvisibleBind_assert: at time 8266522500 ps

$finish called from file ""/scratch/nicolasb/federation_bis/builds_mfc/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", line 484.


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 1653304 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 8,266,522,500 ps.

*Verdi* : Close all FSDB Files at 8,266,522,500 ps.
""/scratch/nicolasb/federation_bis/vsrc/sim/common/../TestDriver.sv"", 520: TestDriver.assert_final_phase.final_error: started at 8266522500ps failed at 8266522500ps
        Offending '(current_phase === shutdown_e)'


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 1653304 simulation cycles (in TestDriver.report_phase_actions)
Error: simulation sim/rerun.outline/sting_StingSiFiveTuple_T_0118/sting/sifive/vector/vector_tgv_dev.conf failed
Error: some simulations failed{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vset color is not recovered correctly if a flush occurs during an ongoing rewind,[TGV] vset color is not recovered correctly,,,,,MAL-1740,111222,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,3/24/2022 8:45,3/25/2022 8:15,9/28/2022 0:51,3/24/2022 11:29,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"The ID stage maintains the next vset color to allocate.  After pipeline flushes, if vset instructions are flushed, we need to rewind the color.  Currently, there's a problem if a rewind is ongoing while another flush happens.   In that scenario, we will fail to back up the colors which are currently being returned by the ROB in the same cycle as the flush.",Alexandre Solomatnikov,Josh Smith,,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6756,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-24T11:28:27.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,c5adfc07fb8a101f8fc5cd563abb053bd9537d55,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzynzz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV/backlog] refactor TGV vector payload micro-code,,,,,,MAL-1739,111220,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/24/2022 8:17,5/5/2022 13:48,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,TGV,,,"micro-code for TGV execution pipeline has grown organically and should be clean-up

The list of new information which needs to be passed over is:

* *forceUseVS1* {{vs1}}source should be read (even if opcode would indicate otherwise): _this is used by intermediary uops in LMUL > 1 chains_
* *forceUnVS1* operand generally read from {{vs1}}for this uop should be left undisturbed
* *forceUnVS2* operand generally read from {{vs2}}for this uop should be left undisturbed
* *ovldImm* generic immediate 
** (initially used to overload the value carried by {{rs1}} if {{rs1}} is used to encode an actual register index (e.g. when forceUseVS1 is set)
** use to carry *lastSeqId* the last expected csid for a uop in a complex sequence
* *csid* complex sequence id: position of the uop in a complex id sequence

Currently we rely on other information to determine either {{vd}} and {{vd + 1}} should be read / written",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,MAL-1822,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzynzj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Uninitialized StqE register stqE_data_q_r_3 causing assertion failures due to x-prop,assertion failure due to x-prop,LSU (Load Store Unit),LDPipe,,Refer https://github.com/sifive/arch-specs/blob/master/core/mallard_lsu_mas.adoc#load-data-ld-pipe,MAL-1738,111219,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,3/24/2022 8:16,3/27/2022 19:30,9/28/2022 0:51,3/24/2022 13:52,,,,,,,,,,,Orca PR,,RTL/LSU,,,,,,,,,0,Mallard,NIGHTLY,xprop,"The Assertion Failures mentioned in linked FED tickets are seen on [fed/master/nightly-mallard-xprop/71|https://simscope.internal.sifive.com/r/fed/master/nightly-mallard-xprop/71]

Observations frome debugging one of the failures ({{SiFive_LSU_assert}}): 

{noformat}Error: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-xprop-coreip_mallard-test-nightly-xprop/71/builds/coreip_p650/verilog/design/assertions/SiFive_LSU_assert.sv"", 21727: TestDriver.testHarness.system.tile_prci_domain.tile.core.lsu.SiFive_LSU_assert_0: at time 276042500 ps
Assertion failed (verification library): timing optimized equation for lsuRobExcArb in MAL-239 does not match simpler functional equation  @[LSU.scala 1783:16]

Fatal: ""/scratch/jenkins/archived-builds/fed/master/nightly-mallard-xprop-coreip_mallard-test-nightly-xprop/71/builds/coreip_p650/verilog/design/assertions/SiFive_LSU_assert.sv"", 21736: TestDriver.testHarness.system.tile_prci_domain.tile.core.lsu.SiFive_LSU_assert_0: at time 276042500 ps{noformat}

The assertion triggers when {{tile.core.lsu.SiFive_LSU_assert_0.LDPipes_io_ldwbVec_robException_0_earlyValid}} transitions to xx. 

Tracing back the origin of xx, I observe:
{{lsu.LDPipes.LDPipes_0.ldr_metaInfo_q_stldfStqDcd[8]}} goes high at {{T:275782500ps}}, latches {{lsu.LDPipes.LDPipes_0.io_stqVec_lstm_8_bits_data[63:0]}}which has xx in bits \[63:32]. 

Lower 4 bytes transition to non-xx value but the upper 4 bytes are still uninitialized. This comes from register
{{tile.core.lsu.StQ.stqEntries_8.stqE_data_q_r_3[31:0]}} which is uninitialized. This register is expected to be latched with {{sdo_stqEntryUpdateData_bits_data[63:32]}}when {{_stqE_data_q_T_11}} is high, which doesn't happen over the course of simulation. Similar registers, {{stqE_data_q_r_2, stqE_data_q_r_1}} do get initialized when {{_stqE_data_q_T_5}} & {{_stqE_data_q_T_8}}go high respectively. 


This is an internal register, suggesting this is not a test issue where some initialization was missed.

Wave Dump & signal.rc for quick look available at
{{gamma10:/scratch/saurabhs/mallard_master_286/federation/builds/coreip_p650/sim/sim/LSU.outline/atomic_increment}}

*Steps to reproduce the error for above observation:*
*Commit:* fdf3af2
*Config:* coreip_p650
*rerun.outline:*

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""atomic_increment"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 2300962731
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""xprop"": {
    ""enable"": true
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))) {noformat}",John Ingalls,Saurabh Singh,,,,,,,,,,,,,,5bb6808b9ba2930990f81895,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,MAL-1100,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-70,,FED-2052,FED-2051,FED-2050,,,,,,,FED-2048,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-27T08:00:00.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/pull/21393,,,,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzynzb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,02:46.4,"24/Mar/22 12:02 PM;5bb6808b9ba2930990f81895;This was caused by [https://github.com/sifive/federation/pull/21175|https://github.com/sifive/federation/pull/21175|smart-link] not zero-extending {{StoreGen.data}} above the enabled bytes through the {{AMOALU}}, similar to as was seen in [https://sifive.atlassian.net/browse/MAL-1100|https://sifive.atlassian.net/browse/MAL-1100|smart-link].",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Change LTB claim interface to match new signal names,,,,,,MAL-1737,111216,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,3/24/2022 7:32,4/8/2022 7:46,9/28/2022 0:51,4/8/2022 7:44,,,,,,,,,,,,,TGV_RTL/BAL,,,,,,,,,0,TGV,,,"See the new names in [https://sifive.atlassian.net/wiki/spaces/CIP/pages/2228715521/LSU+to+TGV+interface|https://sifive.atlassian.net/wiki/spaces/CIP/pages/2228715521/LSU+to+TGV+interface|smart-link], created by [~accountid:61730c9cbcb57400683f15a6] ",David Kravitz,,,,,,,,,,,,,,,5fd15143b4a74900763834e0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1551,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-04-05T01:59:32.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/89c48d00da1194cdbcb752755f7928ad3dee29c3,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzynz3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,08/Apr/22 7:44 AM;5fd15143b4a74900763834e0;The I/O and logic changes have been completed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] v(s/z)ext wrong rs2 field set during last step of sequencing,[TGV] v(s/z)ext wrong rs2,,,,,MAL-1735,111182,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,3/23/2022 16:47,7/14/2022 11:32,9/28/2022 0:51,3/24/2022 9:59,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"When the vl is 25, sew is 32 and lmul is 8, for the u8_minimal_vector design, whose vlen is 128, for the instruction {{vsext.vf2 v8, v0}} .

the registers v8-v13 are correctly sign extended and the elements are updated, but for the final element from reg v3\[15:0] is 0x858f and the written value to the vector register according to instruction trace is v14\[31:0] is 0x0000087c, which is the first sign extended element value. 

This is causing a mismatch between RTL and cosim, and the test ends. 



to recreate this failure : 

# Clone federation and checkout the commit e13b45ac7d30338062350910d229d7e94614dcee
# build the design coreip_u8_minimal_vector
# rerun the test using the outline
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_stall_cycle_count=500000"",
    ""+cosim_scoreboard_trap_epc_count=30"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=200"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    ""+MEM_ERROR_INJECT=.*\\.icTagArray.*ext,1,0,15:.*\\.cc_dir_ext,0,1,5:.*\\.cc_banks.*ext,1,0,32:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.icDataArray.*ext,1,0,32:.*\\.RamBank.*ext,1,0,32:.*\\.TagRAM_ext,1,0,32:.*\\.l1dcTagArray.*ext,1,0,25:.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+verbose""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0193"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 653697094
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}


the waves are at {{gamma29:/scratch/srivatsa/fed01/sting-2.0.7/builds/sting_v2/coreip_u8_minimal_vector/sim/sim_rerun/rerun.outline/sting_StingSiFiveTuple_T_0193/sting/sifive/vector/vector_tgv_dev.conf}}",Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,VI-6710,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-24T09:45:28.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/786fa3b50ccf8c3c14d06d71dbc1c3283cd1444a,,,,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzynrj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,05:39.0,"23/Mar/22 9:05 PM;6065017e90e3950069cf01c5;(removing previous comment, it is a {{vslide1up.vx}}(supported) not {{vslideup.vx}})",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] x2yFreePtr does not rewind correctly on flush,[TGV] x2yFreePtr,,,,,MAL-1734,111169,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,3/23/2022 15:22,3/31/2022 12:15,9/28/2022 0:51,3/29/2022 17:30,,,,,,,,,,,,,RTL/RDU,,,,,,,,,0,TGV,,,"We get an assertion in the RDU unit firing, in one of the sting tests. Seems like the assertion is fired, as the branch instruction is executed. The fired assertion is 

{noformat}Error: ""/scratch/srivatsa/fed01/sting-2.0.7/builds/sting_v2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_RDU_assert.sv"", 1354: TestDriver.testHarness.system.tile_prci_domain.tile.core.rdu.SiFive_RDU_assert_0: at time 2145882500 ps
Assertion failed (verification library): S2V alloc pointer is older than completed pointer  @[RDU.scala 1991:13]{noformat}



To recreate the failure, 

# Clone federation and checkout the commit e13b45ac7d30338062350910d229d7e94614dcee
# build the design coreip_u8_minimal_vector
# rerun the test using the outline
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_stall_cycle_count=500000"",
    ""+cosim_scoreboard_trap_epc_count=30"",
    ""+axi_mem_latency_cycles=10"",
    ""+axi_mem_dither_cycles=10"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """",
    ""+verbose""
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0157"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3456085250
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}



the waveform is at {{gamma29:/scratch/srivatsa/fed01/sting-2.0.7/builds/sting_v2/coreip_u8_minimal_vector/sim/sim_rerun/rerun.outline/sting_StingSiFiveTuple_T_0157/sting/sifive/vector/vector_tgv_dev.conf}}",Andrew Hanselman,Srivatsa Yogendra,,,,,,,,,,,,,,609d7e1f5998a6006800dcc5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25/Mar/22 12:25 PM;ug:03c2888a-5ac7-445d-b700-4a271a824946;image-20220325-192517.png;https://sifive.atlassian.net/secure/attachment/70059/image-20220325-192517.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-29T17:28:24.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,19bb26ee099734cdc4a611b88d5a9323a7f024de,,,,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzynov:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,25:57.7,"25/Mar/22 12:25 PM;609d7e1f5998a6006800dcc5;When {{x2yCmplPtr}} advances past the ROB retire/commit pointers, a flush can occur that points to an ROB entry older than the {{x2yCmplPtr}}. When this occurs the {{x2yCmplPtr}} and {{x2yFreePtr}} must be rewound properly. {{x2yCmplPtr}} was being rewound properly, but entries were not being return to the {{x2yFreePtr}}, causing this assertion. PR with fix adds logic to properly rewind {{x2yFreePtr}} on flushes older than the {{x2yCmplPtr}}. 

Waveform shows correct rewind behavior under this scenario.

!image-20220325-192517.png|width=1439,height=434!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] implement support for vslidedown.vx for LMUL > 1,,,,,,MAL-1733,111166,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/23/2022 14:34,5/5/2022 15:57,9/28/2022 0:51,4/15/2022 14:59,,,,,,,,,,,,,TGV_RTL/SEQ,TGV_RTL/VEX,,,,,,,,0,TGV,,,,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1686,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1821,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-04-15T14:50:39.000-0700"",""stateCount"":3,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/cd751c9402a08d0a834ec45caed91f9f9488ec15,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzynof:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Vector sequencer assertion on valid vector instruction,[TGV] Vector sequencer assertion,,,,,MAL-1732,111153,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,3/23/2022 11:10,7/14/2022 11:32,9/28/2022 0:51,3/30/2022 13:31,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,TGV,,,"When i look into the vector sequencer inputs, i see supported opcodes being sent to the sequencer, but i *think* its trapping on the {{vmv.x.s}} instruction. Cause i can trace it back the assertion being fired because of the early valid signal from that opcode being sent to the sequencer. 

The assertion fired is

{noformat}Error: ""/scratch/srivatsa/fed01/sting-2.0.7/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VectorSequencer_assert.sv"", 136: TestDriver.testHarness.system.tile_prci_domain.tile.core.tgv.vectorSequencer.SiFive_VectorSequencer_assert_0: at time 1649242500 ps
Assertion failed
    at VectorSequencer.scala:306 assert(entryValid(0)){noformat}

To recreate this failure:

# Clone federation and checkout the commit d6040b9038b32ad09b4ff84b287c7786aa39fa2f
# build the design coreip_u8_minimal_vector
# rerun the test using the outline
{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+cosim_scoreboard_stall_cycle_count=500000"",
    ""+cosim_scoreboard_trap_epc_count=30"",
    ""+axi_mem_latency_cycles=10"",
    ""+axi_mem_dither_cycles=10"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingSiFiveTuple_T_0248"",
  ""subtest"": ""sifive/vector/vector_tgv_dev.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1562238070
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}



The generated waves are at {{gamma29:/scratch/srivatsa/fed01/sting-2.0.7/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/sting_StingSiFiveTuple_T_0248/sting/sifive/vector/vector_tgv_dev.conf}}",Alexandre Solomatnikov,David Kravitz,Srivatsa Yogendra,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-30T13:23:19.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/21bc33a49c04d443a50986bc00d368ebe2d6361f,,,,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzynlz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,51:11.6,23/Mar/22 11:51 AM;5fd15143b4a74900763834e0;Can you post the error/assertion info? That will help me figure out who should look at it first.,"23/Mar/22 11:52 AM;5a938e9c0913194d2d262658;Its in now, my bad, i missed that. ",25/Mar/22 1:10 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;Rerun after [https://github.com/sifive/federation/commit/9c30b1065ddccb322437f773326c625d264abfeb|https://github.com/sifive/federation/commit/9c30b1065ddccb322437f773326c625d264abfeb|smart-link] ,"28/Mar/22 12:46 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;After rerun I got different assertion:

{noformat}    at VectorSequencer.scala:327 assert(!bypassOrDropDone.orR){noformat}

looking into this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] implement issue constraint for complex permutation uops,,,,,,MAL-1731,111134,109919,Sub-task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,François Donati,624f6b22f813eb00692ee29a,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/23/2022 8:37,7/22/2022 15:38,9/28/2022 0:51,6/16/2022 1:11,,,,,,,,,,,,,TGV_RTL/ISS,TGV_RTL/VEX,,,,,,,,0,TGV,,,"Any uops produced from a complex permutation ({{vrgather(ei16)}}, {{vslide(up/down).vx}}, {{vcompress.vm}} *when LMUL > 1*) cannot be issued if another sequence (with a different {{gid}} per [MAL-1730|https://sifive.atlassian.net/browse/MAL-1730]) is executing. This implies some modification of the corresponding {{IssQ}} to block any subsequent non-compatible sequence from issuing (it may require the permutation engine to forward the current {{gid}} or the IssQ to keep track of the {{gid}} of the executing sequence).",Brian Grayson,François Donati,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,Nicolas Brunie,,,,,,,,,5e1371705361330daaeaf389,624f6b22f813eb00692ee29a,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-06-09T13:45:33.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzynhz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,30:44.7,10/May/22 9:30 AM;5acffeafaa802f2a797a955c;Assigning to Francois for now,"25/May/22 9:51 AM;6065017e90e3950069cf01c5;I think the specification of the blocking condition needs to be extended: when a complex sequence is executing we must block any permutation (LMUL > 1 or LMUL <=1) whose gid does not match. 

We can still mix  complex and non-complex permutation in a ROB group with the same {{gid}} as long as we keep a single complex permutation per group.","03/Jun/22 8:08 AM;6065017e90e3950069cf01c5;Update: this task was partially executed by [~accountid:624f6b22f813eb00692ee29a]  in [https://github.com/sifive/federation/pull/22851|https://github.com/sifive/federation/pull/22851|smart-link] .

[~accountid:624f6b22f813eb00692ee29a] raised deadlock situations which lead to multiple scenarios being discussed:



[https://sifive.slack.com/archives/C01MHGLSZ0D/p1653347880534239|https://sifive.slack.com/archives/C01MHGLSZ0D/p1653347880534239|smart-card]



[https://sifive.slack.com/archives/C01MHGLSZ0D/p1654013369166539|https://sifive.slack.com/archives/C01MHGLSZ0D/p1654013369166539|smart-card]

[~accountid:5e137458efa19b0e976b5c7a] is working on modelling those scenarios and should be ready to present first results by {{2022-06-14}} 

The final solution remains to be selected based on the perf team recommendations, ","10/Jun/22 2:34 AM;624f6b22f813eb00692ee29a;I added a mechanism to issue complex permutation in order with respect to permute instructions, that prevent the deadlocking scenario:

[https://github.com/sifive/federation/pull/23342|https://github.com/sifive/federation/pull/23342|smart-link] 

Performace results will determine if a more complex solution needs to be implemented.","16/Jun/22 1:11 AM;624f6b22f813eb00692ee29a;Performance study conclusion regarding deadlock scenario is available here:
https://sifive.atlassian.net/wiki/spaces/CIP/pages/2252242945/SPARTA-1826+Complex+Permutation+Deadlock+Prevention

There is no visible impact on perf for currently implemented solution (issuing complex permutation in order with respect to other permutaions), while the other solution (using replay and keeping uop longer in queue) show some degradation.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,109919,[TGV] permutation support for LMUL > 1,Done
[TGV] implement insn grouping constraint for complex permutations,,,,,,MAL-1730,111133,109919,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,François Donati,624f6b22f813eb00692ee29a,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/23/2022 8:32,6/3/2022 8:15,9/28/2022 0:51,6/3/2022 8:15,,,,,,,,,,,,,TGV_RTL/Top,,,,,,,,,0,TGV,,,"The execution pipeline has some constraints when executing long complex instructions: {{vrgather(ei16)}}, {{vslide(up/down).vx}}, {{vcompress.vm}} *when LMUL > 1*. One of those constraints is that at most one such operation may be in-flight (issued and executing) at any time. To enforce this we want to rely on the instruction {{gid}} field, this implies that no such two instructions share the same {{gid}}, thus they must not be grouped together during decode.",Alexandre Solomatnikov,Brian Grayson,François Donati,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,Nicolas Brunie,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5e1371705361330daaeaf389,624f6b22f813eb00692ee29a,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-01T01:13:59.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/2144c2980266a4f217e46f42e9f24ce4bbd4ddf3,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzynhr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,38:42.5,23/Mar/22 8:36 AM;6065017e90e3950069cf01c5;[~accountid:5acffeafaa802f2a797a955c]  (cc [~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] ) I think the {{lmul}} value is not known  -known- when instructions are grouped so we may need to enforce the non-grouping constraint without considering the {{lmul}} value,"23/Mar/22 8:38 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;

{quote}[~accountid:5acffeafaa802f2a797a955c] (cc [~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] ) I think the {{lmul}} value is not known known when instruction are grouped so we may need to enforce the non-grouping constraint without considering the {{lmul}} value{quote}

{{lmul}} is known in REN stage of RDU",10/May/22 9:30 AM;5acffeafaa802f2a797a955c;Assigning to Francois for now,"03/Jun/22 8:05 AM;6065017e90e3950069cf01c5;[~accountid:624f6b22f813eb00692ee29a] , wasn’t this task fully implemented by your PR [https://github.com/sifive/federation/pull/22851|https://github.com/sifive/federation/pull/22851|smart-link]  ?",03/Jun/22 8:11 AM;624f6b22f813eb00692ee29a;I confirm that task is implemented,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,109919,[TGV] permutation support for LMUL > 1,Done
"[TGV] only instantiate min(nVDiv, dBytes >> sew) dividers in VexPipe",,,,,,MAL-1729,111097,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Shaka Kao,5f94696c29bd8a006f94f0e1,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/22/2022 17:02,8/30/2022 18:27,9/28/2022 0:51,8/3/2022 1:42,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"TGV inherits the division implementation of Bullet which does not limit the number of divider instantiated.

For large precision (e..g 64-bit) and relatively small DLEN (e.g. 128) it does not make sense to instantiate 4 FP64 divider, area is wasted.",Brad Wu,Kira Tsao,Nicolas Brunie,Shaka Kao,,,,,,,,,,,,62103777eb2978006893b778,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,MAL-1749,MAL-2144,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28/Mar/22 1:44 AM;ug:113b86d8-ecfc-456b-a6a8-529c0abb7d7d;image-20220328-084251.png;https://sifive.atlassian.net/secure/attachment/70079/image-20220328-084251.png,28/Mar/22 1:44 AM;ug:113b86d8-ecfc-456b-a6a8-529c0abb7d7d;image-20220328-084350.png;https://sifive.atlassian.net/secure/attachment/70078/image-20220328-084350.png,30/Mar/22 8:17 AM;ug:113b86d8-ecfc-456b-a6a8-529c0abb7d7d;image-20220330-151539.png;https://sifive.atlassian.net/secure/attachment/70208/image-20220330-151539.png,30/Mar/22 8:17 AM;ug:113b86d8-ecfc-456b-a6a8-529c0abb7d7d;image-20220330-151558.png;https://sifive.atlassian.net/secure/attachment/70209/image-20220330-151558.png,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-08-02T22:50:57.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,1,0,,,,100,,,,,,,,,,,,,,,2|hzynaf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,44:29.6,"28/Mar/22 1:44 AM;5f94696c29bd8a006f94f0e1;For TGV, I think the _Number of Divider_ could be {{dLen / eLen}} (aka _Number of Lanes_).

So, current RTL modification is:

{noformat}-  val bParams = new BulletCoreParams(eLen = tp.eLen, vLen = mp.vLen, vMemDataBits = tp.dLen,
+  val bParams = new BulletCoreParams(eLen = tp.eLen, vLen = mp.vLen, vMemDataBits = tp.dLen, nVDiv = tp.numLanes,
                                      vectorFPU=Some(vFpuParams)){noformat}



Verilog hierarchy:

*Before* modification

!image-20220328-084251.png|width=390,height=351!



*After* modificatioin

!image-20220328-084350.png|width=413,height=228!","28/Mar/22 9:32 AM;6065017e90e3950069cf01c5;[~accountid:5f94696c29bd8a006f94f0e1] , I think we want to keep more dividers for the smaller precision.

I think it would be better if the JSON nVdiv parameter drove the lowest precision divider number and then we limit it to {{dLen / eLen}} for the largest precision.

For example with DLEN=128, and eLEN=64, we should have

* 4 half precision dividers
* 4 single precision dividers
* 2 double precision dividers","28/Mar/22 5:40 PM;6065017e90e3950069cf01c5;the nVdiv parameter we can reuse is [https://github.com/sifive/federation/blob/master/src/main/scala/core/bullet/Core.scala#L95|https://github.com/sifive/federation/blob/master/src/main/scala/core/bullet/Core.scala#L95].

I don’t know if you want to keep it at the core level or expose it at the pipeline level. I think uniform across pipeline is Ok, so core level is fine.

[~accountid:5f94696c29bd8a006f94f0e1] You just need to expose it at the JSON level and use it as an upper bound for the number of dividers in any precision.","29/Mar/22 6:57 AM;5f94696c29bd8a006f94f0e1;[~accountid:6065017e90e3950069cf01c5] , it’s okay to add a JSON parameter (for example, {{numberOfDivider}}) for {{nVDiv}}. Bullet adds the {{nVDiv}} in {{BulletCoreParams}} but does not emit it to the designJSON.

One question for “\[…]expose it at the JSON level and use it as an upper bound for the number of dividers \[…]”

We are not sure the “upper bound” meaning here. For example, if a user sets the {{numberOfDivider}} to {{8}} (just in case a user does it), is the {{8}} is the “upper bound” of the divider number? In other words, {{realNumberOfDivider = max(numberOfDivider, dLen/eLen)}}?

Or we need to setup a constrain to avoid the unreasonable setting via designJSON parameter.","29/Mar/22 7:05 AM;6065017e90e3950069cf01c5;{quote}it’s okay to add a JSON parameter (for example, {{numberOfDivider}}) for {{nVDiv}}. Bullet adds the {{nVDiv}} in {{BulletCoreParams}} but does not emit it to the designJSON.{quote}

I think it is cleaner if we expose it a the JSON level. We are going to add other parameters when you improved the vector divider to TGV, an {{nVDiv}} is part of the parameter which should be exposed and explored (Although I think we will stick to a very small subset of value for the standard / customer configurations, to keep test space tracktable).



{quote}We are not sure the “upper bound” meaning here. For example, if a user sets the {{numberOfDivider}} to {{8}} (just in case a user does it), is the {{8}} is the “upper bound” of the divider number? In other words, {{realNumberOfDivider = max(numberOfDivider, dLen/eLen)}}?{quote}

At least it is my vision. Currently there is no way for TGV divider to use extra divider on top of {{dLen / eLen}} so it is really a waste to instantiate it.

In the future we may want to design a micro-arch where LMUL > 1 division are supported through extra divider, but this should be put in the backlog and not implemented right away.

{quote}Or we need to setup a constrain to avoid the unreasonable setting via designJSON parameter.{quote}

This could be a {{require}} either in UnitParams.scala or directly in the VexPipe to ensure the parameters are sound","30/Mar/22 8:17 AM;5f94696c29bd8a006f94f0e1;Push a branch, {{tgv-mal-1729-nVDiv}}, to master. Will discuss this modification with [~accountid:6065017e90e3950069cf01c5]  in TGV debug session.



Run two JSON configs:

#  {{coreip_u8_minimal_vector}}: use the default value, *2*. (do not set nVDiv via JSON).
# {{coreip_p670}}: modify {{specs/design/standard/p670.json}} to set nVDiv to 6 (just for the experiment)

Verilog hierarchy:

Case 1:

!image-20220330-151539.png|width=325,height=179!



Case 2:

!image-20220330-151558.png|width=358,height=367!","30/Mar/22 8:48 AM;6065017e90e3950069cf01c5;[~accountid:5f94696c29bd8a006f94f0e1] , this looks a bit strange. Why is there 6 dividers in Case 2 ? We would want 4 single and 2 double dividers, {{nVdiv}} should be thresholded by {{dLen / elen}}at least and optimally by {{dLen / SEW}}.

You suggestion is interesting, let’s discuss this during the TGV debug session (not sure how debug is related 🙂 ), if you can open a draft PR on this branch you could use this as support.","09/May/22 12:27 AM;5f94696c29bd8a006f94f0e1;status update:

# RTL refacoring done \[of course, needs for review].
## Remove TGV vector divider back to Bullet vector.
# synthesis done.
## Detail info see [https://sifive.atlassian.net/wiki/spaces/~247505244/pages/2244313703/nVDiv+for+TGV#Synthesis|https://sifive.atlassian.net/wiki/spaces/~247505244/pages/2244313703/nVDiv+for+TGV#Synthesis|smart-link] 
## Basically no area impact for divider modifications. 
# PR under review.",02/Aug/22 10:51 PM;5f94696c29bd8a006f94f0e1;PR merged into master. [https://sifive.atlassian.net/browse/MAL-1729|https://sifive.atlassian.net/browse/MAL-1729|smart-link] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Add a JSON knob to support fp16 in TGV and disable it by default,,,,,,MAL-1728,111075,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Shaka Kao,5f94696c29bd8a006f94f0e1,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/22/2022 13:08,9/27/2022 10:31,9/28/2022 0:51,4/26/2022 16:37,,,,,,,,,,,,,TGV_RTL/Top,,,,,,,,,0,TGV,,,"Partial half precision support has been enabled in some modules of TGV.

This support should be properly disabled when the configuration does not request it and the default configurations (at least p670) should be modified (if need be) to make sure it does not enable fp16 support.",Nicolas Brunie,Shaka Kao,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-22T02:34:46.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyn6n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,56:24.5,24/Mar/22 8:56 PM;5f94696c29bd8a006f94f0e1;{{mk/base_configs/coreip_u8_minimal_vector.mk}},"25/Mar/22 1:48 AM;5f94696c29bd8a006f94f0e1;on federation master (hash: 9bcfbfba7d4c631ffecd9d33a4d7b7ebb771ac43)

Below designJsons enable FP16 (scalar FP or vector FP).  Seems that for Mallard series configurations, only {{design-definitions/tiles/tile_mallard_maxed_out.json}} enable FP16.

{noformat}[/scratch/shakak/tgv-rampup/federation/specs] (MAL-1728)
>ag ""floatingPointHalfPrecisionPresent.*true"" -i -l
design/coverage/e6_coverage.json
design/coverage/e2_coverage.json
design/coverage/u7_coverage.json
design/spanning/viu75_512_pl2.json
design/spanning/u6mc_maxed_out.json
design/spanning/p270mc_maxed_out.json
design/spanning/u7_maxed_out.json
design/spanning/s6_maxed_out.json
design/spanning/u6mc_maxed_out_wg.json
design/spanning/u7mc_maxed_out_wg.json
design/spanning/s7_maxed_out.json
design/spanning/u7mc_maxed_out.json
design/spanning/s2_maxed_out.json
design/spanning/e3_maxed_out.json
design/spanning/e7_maxed_out.json
design/spanning/p270_pl2.json
design/spanning/u6_maxed_out.json
design/spanning/e6_maxed_out.json
design/spanning/e7mc_maxed_out.json
design/spanning/s2_maxed_out_extra.json
design/spanning/s5_maxed_out.json
design/spanning/x280_pl2.json
design/spanning/e2_maxed_out_extra.json
design/spanning/x280mc_maxed_out.json
design/spanning/s7mc_maxed_out.json
design/spanning/e2_maxed_out.json
design/marketing/x280_min_ppa.json
design/marketing/p270_min_ppa.json
design/release-ppa-regression/s6_ppa_regress_new.json
design/release-ppa-regression/u6_ppa_regress_new.json
design/release-ppa-regression/u7_ppa_regress_new.json
design/release-ppa-regression/u7_ppa_regress_same.json
design/release-ppa-regression/s7_ppa_regress_new.json
design/release-ppa-regression/e2_ppa_regress_new.json
design/release-ppa-regression/s2_ppa_regress_same.json
design/release-ppa-regression/e2_ppa_regress_same.json
design/release-ppa-regression/s2_ppa_regress_new.json
design/release-ppa-regression/e6_ppa_regress_new.json
design/standard/vis75_128.json
design/standard/vis75_256.json
design/standard/u77.json
design/customer/viu75_512_gin.json
design/customer/amazon_blink_config_1.json
design/customer/viu75_512_gin3.json
design/customer/vis75_g6soc.json
design/customer/viu7_g6soc.json
design-definitions/tiles/tile_p270.json
design-definitions/tiles/tile_mallard_maxed_out.json{noformat}



UnitParams.scala:

The default value of {{floatingPointHalfPrecisionPresent}} is {{false}} for {{UnitMallardTileParams}}.","25/Mar/22 5:22 AM;6065017e90e3950069cf01c5;[~accountid:5f94696c29bd8a006f94f0e1] , one of the issue may be that the half precision enable / disable is not properly forwarded in TGV.

In particular we have a static configuration [https://github.com/sifive/federation/blob/master/block-tgv-sifive/src/main/scala/core/tgv/TGV.scala#L125|https://github.com/sifive/federation/blob/master/block-tgv-sifive/src/main/scala/core/tgv/TGV.scala#L125]

{noformat}  val vFpuParams = VectorFPUParams(vectorMinFLen = 16, vectorFLen = 64,
                                   vectorFpHasSinglePrecision = true, vectorFpHasDoublePrecision = true){noformat}

{{vectorMinFLen}} should maybe not be forced to {{16}}","25/Mar/22 5:45 AM;5f94696c29bd8a006f94f0e1;[~accountid:6065017e90e3950069cf01c5] , thanks for your guidance.

Yes, so far we could force the {{minFLen}} to 32. 

One question is, in Bullet vector, we separate the floating-point control ({{vectorFloatingPointPresent}}, {{vectorFloatingPointType}}, {{vectorFloatingPointType}}) from scalar. In other words, previously, vector FPU parameters are controlled by scalar FPU parameters ({{floatingPointPresent}}, {{floatingPointType}}, {{floatingPointHalfPrecisionPresent}}).

Would the TGV use dedicated/separated FP parameters? Or, for both CPU (for example, Mallard) and TGV has the same “type” of FPU?

If TGV uses dedicated FPU parameters, we can modify JSONReader/UnitParam and pass the vector FPU parameters to TGV. Thus, we don’t need to use the static value for {{VectorFPUParams}}.","25/Mar/22 6:41 AM;6065017e90e3950069cf01c5;{quote}Would the TGV use dedicated/separated FP parameters? Or, for both CPU (for example, Mallard) and TGV has the same “type” of FPU?{quote}

[~accountid:5f94696c29bd8a006f94f0e1] this is a great question that I will pass to [~accountid:5fd15143b4a74900763834e0] 

I think TGV (and Mallard to a certain extend) are intended to be built only with floating-point present (for both if TGV is enabled), and with double precision support. Though, I don’t know if this is the default or the only thing we want to support short / long term ?

If TGV and scalar are driven by the same options, {{minFLen}} should be driven by the right combination of ({{floatingPointPresent}}, {{floatingPointType}}, {{floatingPointHalfPrecisionPresent}}).","28/Mar/22 2:35 AM;5f94696c29bd8a006f94f0e1;Terms: {{FPU_Type}} means FPU control parameters such as {{floatingPointPresent}}, {{floatingPointType}}, and {{floatingPointHalfPrecisionPresent}}.



\[Update]

I watch the TGV Bullpen video (03.25), and it seems currently TGV FPU would not support half-precision, and controlled by the scalar FPU parameters. But since Mallard can have FP16, so we cannot fully rely on the scalar FPU parameters (for example, even scalar FPU set {{floatingPointHalfPrecisionPresent}} to {{true}}, TGV FPU still not support FP16).

The easily way is to force the {{vectorMinFLen}} to {{32}}, and let {{VectorFPUParams}} remained. In the furture, if TGV supports FP16 or Zve*, we can reuse {{VectorFPUParams}} to pass vector FPU parameters.

{noformat}val vFpuParams = VectorFPUParams(vectorMinFLen = 32, vectorFLen = 64,
                                   vectorFpHasSinglePrecision = true, vectorFpHasDoublePrecision = true){noformat}

----

Two alternatives:

# TGV FPU_Type is controlled by scalar (for example, Mallard) FPU_Type.
# TGV has dedicated FPU_Type, and can be separated controlled from scalar part. (Note: Vector FPU is a “subset” of scalar FPU. In other words, if scalar FPU is a “single-precision” FPU, vector FPU cannot be a “double-precision” FPU).

For Item (1), uses {{MallardCoreParams.fpu}} to obtain the FPU parameter control/setting.

For Item (2), we need to add {{vectorFloatingPointPresent}}, {{vectorFloatingPointType}}, and {{vectorFloatingPointHalfPrecisionPresent}} in UnitParams.scala and modify JSONReader to obtain the vector FPU control from designJSON. Then, we can reuse {{VectorFPUParams}} to pass vector FPU parameters/settings to TGV ALU.

Moreover, not sure if TGV supports Zve* (Zve32*, Zve64*) extensions in the future? If Yes, we might need an extra parameter to distinguish Z (Full “V”) and Zve (subset of “V”). In Bullet vector, {{vectorZvePresent}} is used for Zve*. ({{vectorPresent}} and {{vectorZvePresent}} are mul-exclusive; V and Zve cannot enabled at the same time). ","28/Mar/22 5:31 PM;6065017e90e3950069cf01c5;{quote}Moreover, not sure if TGV supports Zve* (Zve32*, Zve64*) extensions in the future?{quote}

I don’t think TGV will support Zve*, at least in the short term future.



I like item (2) better","06/Apr/22 11:20 AM;6065017e90e3950069cf01c5;It seems we may have to change things a bit

* FP16 support will be disabled in P670
* FP16 support should still be an option

So we may want to:

* Expose {{vectorHasHalfPrecision}} as a JSON option to enable / disable FP16 support in TGV
* Add a new spanning config {{coreip_u8_maxed_1vecpipe}} configuration with FP16 enabled (for testing)
* Add a specific VTG outline with FP16 variants of instructions enabled to test the new configuration","11/Apr/22 12:08 AM;5f94696c29bd8a006f94f0e1;Draft PR: [https://github.com/sifive/federation/pull/21710|https://github.com/sifive/federation/pull/21710|smart-link] 

Note: [https://sifive.atlassian.net/wiki/spaces/~247505244/pages/2240282772/TGV+Add+vector+fp16+support|https://sifive.atlassian.net/wiki/spaces/~247505244/pages/2240282772/TGV+Add+vector+fp16+support|smart-link] ","26/Apr/22 4:37 PM;5f94696c29bd8a006f94f0e1;Fixed a {{require}} statement bug for vectorFPU checking.

Jira: [https://sifive.atlassian.net/browse/FED-2078|https://sifive.atlassian.net/browse/FED-2078|smart-link] 

PR (merged to master): [https://github.com/sifive/federation/pull/22054|https://github.com/sifive/federation/pull/22054|smart-link] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] vfrdiv.vf failing tgv test for LMUL 4 and 8,[TGV] vfrdiv.vf failing tgv test for LMUL ,Execution Unit ,Vector,,,MAL-1727,111013,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/21/2022 17:36,3/24/2022 15:24,9/28/2022 0:51,3/23/2022 7:44,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"+*outline:*+

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJEC",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1726,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-23T07:07:24.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/d33e5f693218fcaa2c383002e7e184d4789c9b23,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzymun:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Add some missing FP instructions to vtg-tgv-tests.outline,,,,,,MAL-1726,110957,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,3/21/2022 9:56,3/24/2022 15:24,9/28/2022 0:51,3/22/2022 12:57,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"Going through the ""supported instructions"" spreadsheet, there are some missing that are very similar to instructions that *are* listed. Please check these instructions and add to the outline if passing / file additional tickets as appropriate for specific issues.

vfwadd.vf, vfwsub.{vv, vx}
{vfmul, vfdiv, vfrdiv}.vf
{vfmacc, vfmadd, vfmsub}.*
All (most?) of the convert ops in section 13.17 of RVV spec",David Kravitz,,,,,,,,,,,,,,,5fd15143b4a74900763834e0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1727,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-03-29T12:49:40.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/37fcb0a0ce8af07f7e38555685510fe3e9957ed2,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzymlz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Move instructions tagged as moveElim still contend for RDU pipe assignment,,,,,,MAL-1725,110935,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Low,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,3/21/2022 7:40,5/3/2022 20:32,9/28/2022 0:51,4/15/2022 6:29,,,,,,,,,,,,,RTL/RDU,,,,,,,,,0,,,,"Some work/discussion to better correlate the Dabble/RTL RDU behavior found that move ops are still claiming a pipe during pipe assignment even when they are not ultimately dispatched to an execution pipe. This just makes the pipe assignment a little less efficient. This change should mask/remove them from the pipe assignment to enable more optimal assignment of instructions which do require execution pipes.

Discussion:
[https://sifive.atlassian.net/browse/SPARTA-1600?focusedCommentId=338170|https://sifive.atlassian.net/browse/SPARTA-1600?focusedCommentId=338170|smart-link] ",Andrew Hanselman,Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Knute Lingaard,,,,,,,,,,609d7e1f5998a6006800dcc5,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1374fb7a22c90da0c60495,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Mid Core,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-14T07:49:53.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,f5cf44dccb31ac1a556d74131ccaac148f9f21ce,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzymhr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion failure ROB Retire Hang,[TGV] Assertion failure ROB,Instruction decode and dispatch ,Sclar ROB,,,MAL-1724,109613,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,3/3/2022 0:36,3/23/2022 12:55,9/28/2022 0:51,3/21/2022 7:41,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,TGV,,,"While running the vtg test on TGV config we see assertion failure of ROB Retire Hang

*Error message* 

{noformat}Error: ""/scratch/ishitashah/tgv_regression/sign_rob_assert_hang_26/federation/builds2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", 2156: TestDriver.testHarness.system.tile_prci_domain.tile.core.rdu.rob.SiFive_ROB_assert_0: at time 2413262500 ps
Assertion failed (verification library): ROB Retire Hang  @[ROB.scala 679:9]
Fatal: ""/scratch/ishitashah/tgv_regression/sign_rob_assert_hang_26/federation/builds2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_ROB_assert.sv"", 2165: TestDriver.testHarness.system.tile_prci_domain.tile.core.rdu.rob.SiFive_ROB_assert_0: at time 2413262500 ps{noformat}

*SHA*:fbba4bc
*config*:coreip_u8_minimal_vector

*rerun.outline*

{code:java}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.TagRAM_ext,1,0,25:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.icDataArray.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32:.*\\.l1dcDataArrayBank.*ext,1,0,25"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul2"",
  ""subtest"": ""vwaddu.wx"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vwaddu.wx_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_VSETIVLI-1_FENCEbeforeVSETVL-0_VSETVL-0_FLMUL-0_NonzeroVstart-0_Sample-10_LMUL-2_AVL-128_TGV-1_IMM-1_LdStAccFault-1"",
  ""seed"": {
    ""value"": 4069703678
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){code}

*Dump path*: 

{noformat}gamma25:/scratch/ishitashah/tgv_regression/sign_rob_assert_hang_26/federation/builds2/coreip_u8_minimal_vector/sim/rerundir1/rerun.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vwaddu.wx{noformat}",Ishita Shah,Nicolas Brunie,,,,,,,,,,,,,,607e26355431a500701f5aed,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,4ff7c9f637d2a0ce8f76553f8cfca7626a30d8d2,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyesf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,57:34.8,"17/Mar/22 2:57 PM;6065017e90e3950069cf01c5;This looks like a deadlock condition in the {{VectorSequencer}}.

I think this may be fixed in [https://github.com/sifive/federation/pull/21243|https://github.com/sifive/federation/pull/21243|smart-link] 

I was able to fix it locally with the following patch:



{noformat}--- a/block-tgv-sifive/src/main/scala/core/tgv/VectorSequencer.scala
+++ b/block-tgv-sifive/src/main/scala/core/tgv/VectorSequencer.scala
@@ -275,7 +275,7 @@ class VectorSequencer(val mp: MallardCoreParams, val bParams: BulletCoreParams)(
       assert(entries(0).payload.vector.vtypeValid, ""instruction is not dispatched until vtype is known"")
       assert(entries(0).payload.vector.vlValid,    ""TGV TODO: implement vl forwarding"")

-      when(entryValid(i) && !entryFlush(i) && entries.map(_.payload.singleCycle).reduce(_ && _)) {
+      when(entryValid(i) && !entryFlush(i) && entries.zipWithIndex.map({case (e, i) => !entryValid(i) || e.payload.singleCycle}).reduce(_ && _)) {
         assert(entries(i).payload.vector.vtypeValid, ""instruction is not dispatched until vtype is known"")
         assert(entries(i).payload.vector.vlValid,    ""TGV TODO: implement vl forwarding"")
{noformat}

(which reduce the singleCycle predicate to valid entries, PR21243 goes one steps further and reduces it to the first i+1 entries)","21/Mar/22 7:40 AM;6065017e90e3950069cf01c5;[~accountid:607e26355431a500701f5aed]  it looks like this issue has been fixed on master (I tried the outline with {{76fb65a5e1e78}}).

Could you confirm and close the ticket if appropriate ?",21/Mar/22 8:24 AM;607e26355431a500701f5aed;Ya sure will check and update it.,21/Mar/22 10:43 PM;607e26355431a500701f5aed;Working with the fix {{76fb65a5e1e78}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] fix standard length shift .vi version,[TGV] fix standard length shift .vi version,,,,,MAL-1723,110861,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/18/2022 12:26,3/24/2022 15:24,9/28/2022 0:51,3/22/2022 17:15,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"Tests failing when trying to extend the list of supported instructions:

{noformat}|                                                                          name   |                   config   | simulator   |   cputime |   bucket | UUID         |
|---------------------------------------------------------------------------------|----------------------------|-------------|-----------|----------|--------------|
| sim/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vsll.vi    | coreip_u8_minimal_vector   | vcs         |     57.92 |        1 | 21a3a54fe4   |
| sim/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vsra.vi    | coreip_u8_minimal_vector   | vcs         |     58.84 |        1 | e0e649667d   |
| sim/vtg-tgv-tests.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vsrl.vi    | coreip_u8_minimal_vector   | vcs         |     57.74 |        1 | af14f342d2   |
| sim/vtg-tgv-tests.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vsll.vi    | coreip_u8_minimal_vector   | vcs         |     59.55 |        1 | 93db0b2431   |
| sim/vtg-tgv-tests.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vsra.vi    | coreip_u8_minimal_vector   | vcs         |     58.13 |        1 | 29ee01a108   |
| sim/vtg-tgv-tests.outline/t0000_lmul2/vector/vector_tests_gen/rvv_64/vsrl.vi    | coreip_u8_minimal_vector   | vcs         |     66.85 |        1 | 6f369bda67   |
| sim/vtg-tgv-tests.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vsll.vi    | coreip_u8_minimal_vector   | vcs         |     51.56 |        1 | d9f3538717   |
| sim/vtg-tgv-tests.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vsra.vi    | coreip_u8_minimal_vector   | vcs         |     57.07 |        1 | 138a83f9b5   |
| sim/vtg-tgv-tests.outline/t0000_lmul4/vector/vector_tests_gen/rvv_64/vsrl.vi    | coreip_u8_minimal_vector   | vcs         |     54.98 |        1 | 8f7289a794   |
| sim/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vsll.vi    | coreip_u8_minimal_vector   | vcs         |     71.47 |        1 | b59b13300e   |
| sim/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vsra.vi    | coreip_u8_minimal_vector   | vcs         |     67.99 |        1 | b7e1566581   |
| sim/vtg-tgv-tests.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vsrl.vi    | coreip_u8_minimal_vector   | vcs         |     62.42 |        2 | 6b81de98d9   |{noformat}",Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-22T16:23:33.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/4bd273fe21f1c0dd242746d279f51e4bf08d045f,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzym27:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] [RVV 11.4] implement vector result add with carry / subtract with borrow vadc.* / vsbc.*,,,,,,MAL-1722,110854,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Shaka Kao,5f94696c29bd8a006f94f0e1,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/18/2022 10:26,8/5/2022 1:45,9/28/2022 0:51,7/25/2022 10:16,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,Implement instruction listed in [https://github.com/riscv/riscv-v-spec/blob/master/v-spec.adoc#114-vector-integer-add-with-carry--subtract-with-borrow-instructions|https://github.com/riscv/riscv-v-spec/blob/master/v-spec.adoc#114-vector-integer-add-with-carry--subtract-with-borrow-instructions|smart-link] ,Nicolas Brunie,Shaka Kao,,,,,,,,,,,,,,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,MAL-1687,VI-7492,MAL-2245,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-2158,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-07-11T20:59:27.000-0700"",""stateCount"":3,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/d50319cadbf643ea592f661d88bcea76a0a48029,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,3,0,,,,100,,,,,,,,,,,,,,,2|hzym0n:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,37:28.7,"18/Mar/22 10:32 AM;6065017e90e3950069cf01c5;[~accountid:609d7e1f5998a6006800dcc5] , [~accountid:5fd15143b4a74900763834e0] pointed out that implementation for this will be my responsibility, I just assigned it to you so that you can notify me once the basic work on mask is done. You can also re-assign it to me and set your mask task(s) as blocking for this one.",11/Jul/22 7:37 AM;5f94696c29bd8a006f94f0e1;PR ([https://github.com/sifive/federation/pull/24020|https://github.com/sifive/federation/pull/24020|smart-link] ) has merged into master.,"11/Jul/22 6:13 PM;5f94696c29bd8a006f94f0e1;Hi [~accountid:6065017e90e3950069cf01c5] , since RVV 11.4 (Vector Integer Add-with-Carry / Subtract-with-Borrow Instructions) has two groups:

# produce sum;
# produce mask;

for “produce sum” ops,

{noformat}vadc.vvm
vadc.vxm
vadc.vim
vsbc.vvm
vsbc.vxm{noformat}

 

they passed VTG tests on master (1d064d3bd779dd409) with the following settings in the outline file:

{noformat}enable_masking = 1
num_of_tests_gen = 100
flmul = 1
lmuls = [1, 2, 4, 8]
tail_agnostic = 0/1 <-- both 0 and 1 are tested.
raw_plusargs.append(""+enable_spike_cosim""){noformat}



Do you agree that we add above instructions first in {{rvv_isa_inst_tgv.rb}} now for general TGV regression?

Or wait for mask-out instructions (vmadc.vvm, etc.) ready then add all RVV 11.4 instructions to {{rvv_isa_inst_tgv.rb}} ? ","11/Jul/22 7:03 PM;6065017e90e3950069cf01c5;[~accountid:5f94696c29bd8a006f94f0e1] , I am Ok with adding the instruction in 2 separate waves. Please add the supported instructions right away and file a ticket to track the addition of the remaining instructions to the test list (can be a subtask of this ticket).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Assertion Failure: SiFive_NLP_assert,Assertion Failure: SiFive_NLP_assert,NLP (Next Line Predictor),,,Refer https://github.com/sifive/arch-specs/blob/master/core/mallard_mas.adoc#541-next-line-predictor,MAL-1720,110835,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Saurabh Singh,607e26f781e7b900681be48c,Saurabh Singh,607e26f781e7b900681be48c,3/18/2022 8:58,3/24/2022 15:33,9/28/2022 0:51,3/23/2022 13:01,,,,,,,,,,,,,RTL/Frontend,,,,,,,,,0,Mallard,,,"[~accountid:609d7e1f5998a6006800dcc5] debugged the failure.

A bug was found in the NLP implementation where the update buffer entry would not forward correctly when there is a main miss, RAS hit, and a uBuf hit. This bug was likely introduced when the muxing logic in the NLP was updated to improve timing.

*Config:* coreip_p650
*Commit:* b024490
*Error:*
{noformat}

""/scratch/saurabhs/mallard_RIT_238/federation/builds/coreip_p650/verilog/design/assertions/SiFive_NLP_assert.sv"", 200: TestDriver.testHarness.system.tile_prci_domain.tile.core.frontend.nlp.SiFive_NLP_assert_0: at time 687322500 ps
Assertion failed: NLP read has more than one valid matching entry
    at NLP.scala:378 assert(!(io.valid_F1 && PopCount(Cat(nlpHits_F1)) > 1.U) || io.nlpBankConflict_F1, ""NLP read has more than one valid matching entry"")

Fatal: ""/scratch/saurabhs/mallard_RIT_238/federation/builds/coreip_p650/verilog/design/assertions/SiFive_NLP_assert.sv"", 209: TestDriver.testHarness.system.tile_prci_domain.tile.core.frontend.nlp.SiFive_NLP_assert_0: at time 687322500 ps
{noformat}

*rerun.outline:*

{noformat}
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""sting"",
  ""raw_plusargs"": [
    ""+enable_irritation"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    ""+gdi_tlc_test_enable=1"",
    """"
  ],
  ""subdir"": ""sting_StingPipelineTuple_T_0152"",
  ""subtest"": ""sifive/core/mal_804.conf"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 4146292137
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""program"": {
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_read_inbound,10101010:80808080"",
      ""uvm_test_top,torture_inbound,10101010:80808080""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{noformat}
",Josh Smith,Saurabh Singh,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,607e26f781e7b900681be48c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FED-2043,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6af671f988cf7ae0b14fa220591f71f1deb5cf38,,,,,,,,,,,,Simulation-STiNG,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzylp3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,19:05.5,18/Mar/22 8:59 AM;607e26f781e7b900681be48c;[https://github.com/sifive/federation/pull/21242|https://github.com/sifive/federation/pull/21242|smart-link] is in place to fix this.,18/Mar/22 9:12 AM;607e26f781e7b900681be48c;[~accountid:609d7e1f5998a6006800dcc5]  Please see if {{Affects previously released IP/Silicon }}needs to be updated for this ticket.,"18/Mar/22 9:19 AM;5acffeafaa802f2a797a955c;[~accountid:609d7e1f5998a6006800dcc5] if this is purely due to the SRAM-based NLP which came in after the Orca AP release, then it doesn’t affect any previous releases.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] implement support for vslideup.vx for LMUL > 1,,,,,,MAL-1719,110828,109919,Sub-task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/18/2022 7:47,4/21/2022 14:19,9/28/2022 0:51,4/15/2022 15:00,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"Implement permutation engine and support for {{vslideup.vx}} when LMUL > 1

* sequencing multiple linked uops in {{VectorSequencer}}
* exexcuting the dependent sequence in {{VexPipe}}",Brian Grayson,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Nicolas Brunie,,,,,,,,,,,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,MAL-1702,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-04-15T11:15:32.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/e95346c3126917d24d1f3be558e04bfb8f7a27e6,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzylov:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,109919,[TGV] permutation support for LMUL > 1,Done
IJTP and RAS tagging for predictor security,,,,,,MAL-1718,110827,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Cyril Bresch,5fa5f3f5b45b2e0074939e18,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,3/18/2022 7:44,8/13/2022 1:55,9/28/2022 0:51,8/4/2022 5:22,,,,,,,,,,,,,Performance,RTL/Frontend,,,,,,,,0,,,,"For Spectre-like side channel mitigations, some changes have been proposed for some of the predictor structures in Mallard.",Alexandre Solomatnikov,Brian Grayson,Chia-I Chen,Cyril Bresch,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5e1371705361330daaeaf389,61aaafab977c5b007241043c,5fa5f3f5b45b2e0074939e18,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-52,MAL-2383,,,,,,,,,,,,,,,,,,,,,,,,,Branch Prediction,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To be modeled,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,706ec7a7ef5c8f31d650d7d358d865ecd27881ec,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzylon:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,5,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,13:38.6,18/Mar/22 7:46 AM;5acffeafaa802f2a797a955c;[~accountid:61b2a458657a0500706b9c39] FYI,"29/May/22 8:36 AM;5acffeafaa802f2a797a955c;[~accountid:5fa5f3f5b45b2e0074939e18] We still have some time to finish this task, but when do you think you will be able to get to it?","29/May/22 3:13 PM;5fa5f3f5b45b2e0074939e18;[~accountid:5acffeafaa802f2a797a955c] , I’m back to office the 31, I'm going to have a quick discussion with [~accountid:5cddd0c6c33a5d0dcf0b3fe2] , to start directly with the IJTP, then the RAS. I'll let you know on Tuesday.","03/Aug/22 10:15 AM;5acffeafaa802f2a797a955c;[~accountid:5fa5f3f5b45b2e0074939e18] So do you believe that all of the necessary changes are in the RTL?  I thought that we still needed to handle the chicken bit lock capability, but I see that was removed from the HAS as well.","04/Aug/22 12:20 AM;5fa5f3f5b45b2e0074939e18;[~accountid:5acffeafaa802f2a797a955c] I confirm, all the necessary changes have been done in the RTL to mitigate some spectre-v2 attack classes.
Yes, the chicken bit lock capability has been removed from the HAS, after discussion with [~accountid:5cd5e44a25d61c0dc614f58c] and [~accountid:5cddd0c6c33a5d0dcf0b3fe2] we figured out that it does not provide that much additional security.

As the access to this chicken bit is performed in M mode, if an attacker manages to gain this level of privilege, he will have many more opportunities to leak secrets than just disabling the chicken bit and try to launch a painful a Spectre attack",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] s2v ops with vl=0 or vl<vstart must not send early completion,[TGV] s2v ops,Execution Unit ,Sclar to vector Unit ,,,MAL-1717,110789,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,3/17/2022 11:30,7/14/2022 11:32,9/28/2022 0:51,3/21/2022 14:37,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,TGV,,,"In rat, for initializing the vector registers, we use a loop of lb, and vslidedown.vx instructions. 

{noformat}.L27:
  lb x11, (x14) # s34 (init)
    800004cc:	00070583          	lb	a1,0(a4)
  vslide1down.vx v0, v0, x11 # s34 (init)
    800004d0:	3e05e057          	vslide1down.vx	v0,v0,a1
  addi x14, x14, 1 # s34 (init)
    800004d4:	0705                	addi	a4,a4,1
  bne x14, x10, .L27 # s34 (init)
    800004d6:	fea71be3          	bne	a4,a0,800004cc <no_wfi+0x14c>{noformat}

After the first vector register v0 is initialized and the core does not take the branch, the RTL is hitting the assertion 

{code:java}Error: ""/scratch/srivatsa/fed01/master/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_IssQEntry_assert.sv"", 79: TestDriver.testHarness.system.tile_prci_domain.tile.core.iex.issueQueues_0.entries_1.SiFive_IssQEntry_assert_0: at time 207082500 ps
Assertion failed (verification library): make sure we don't match tag on a source that's marked ready  @[MallardUtil.scala 506:20]{code}

We are seeing on multiple seeds of the rat generated test. But all fail at the same location of the test. 

To recreate this failure:

1. clone federation and checkout the commit 074a8e214214554ef67318607ae888cbbbdb9ca8
2. build coreip_u8_minimal_vector config
3. run the test using the outline 

{code:java}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.tag_array_.*ext,0,1,32:.*\\.data_arrays_0_.*ext,0,1,32:.*\\.syssram.*ext,0,1,32:.*\\.island.*\\.lim\\.syssram.*ext,0,1,32:.*\\.tagged_tables_0_.*ext,0,1,32:.*\\.base_table_0_.*ext,0,132"",
    ""+verbose""
  ],
  ""subdir"": ""rat_default_T_0543"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3093770124
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){code}

The waveform is located at gamma29:/scratch/srivatsa/fed01/master/builds/coreip_u8_minimal_vector/sim/sim/rat.outline/rat_default_T_0543/rat/default

Another outline where test test fails is 

{code:java}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.tag_array_.*ext,0,1,32:.*\\.data_arrays_0_.*ext,0,1,32:.*\\.syssram.*ext,0,1,32:.*\\.island.*\\.lim\\.syssram.*ext,0,1,32:.*\\.tagged_tables_0_.*ext,0,1,32:.*\\.base_table_0_.*ext,0,132"",
    ""+verbose""
  ],
  ""subdir"": ""rat_default_T_0214"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1298508491
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){code}",Alexandre Solomatnikov,Andrew Hanselman,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,609d7e1f5998a6006800dcc5,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-21T13:22:32.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/2291d63ae0cd716f286dbb4bdb37c96707d8ff5f,,,,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzylg7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,08:04.1,"21/Mar/22 10:08 AM;609d7e1f5998a6006800dcc5;While the assertion here is located in the IssQ, we are pretty sure this can be traced back to the vector sequencer {{zeroCycle}} behavior. 

The ROB group in question is composed of 3 instructions requiring 3 completion requests before retirement.

{noformat}  lb x11, (x14) # s34 (init)
    800004cc:	00070583          	lb	a1,0(a4)
  vslide1down.vx v0, v0, x11 # s34 (init)
    800004d0:	3e05e057          	0x3e05e057
  addi x14, x14, 1 # s34 (init)
    800004d4:	0705                	addi	a4,a4,1{noformat}


When {{vslide1down.vx}} moves through the vector sequencer, it’s determined that the {{zeroCycle}} can apply to the vector uop generation because there are no valid elements according to {{vstart}} and {{vl}}. The sequencer produced an early completion request for this instruction. At this point, the scalar uop which should produce {{x11}} into the transfer buffer was already assigned transfer buffer entry {{0x04}} and dispatched. When the producer op was first issued to the execution pipe, it was replayed by a load miss. Eventually, the {{addi}} instruction was able to complete, and the {{lb}} instruction did also complete with valid data. This marked the S2V producer op as ready, and the entire ROB group was marked as complete.

The logic maintaining track of available physical/virtual S2V buffer entries moved the {{s2vFreePtr}} from {{0x04 -> 0x05}} when the ROB group was marked as complete. This prevented the S2V scalar uop from issuing because it was no longer in the sliding window ({{0x05 -> 0x15}}) with access to physical transfer buffer entries. Eventually, another instruction broadcast with the same source tag that the {{lb}} instruction had used previously. This triggered the attached assertion trace.

[~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] [~accountid:6065017e90e3950069cf01c5] plan to implement a vector NOP, dependent on the S2V producer instruction, which returns a completion request later when the S2V producer has properly staged through the scalar execution pipeline.","21/Mar/22 2:37 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;After this fix the test runs longer until it tries to write 10 to `vstart`, which is not supported yet, and hangs:


{code:java}
Running test sim/MAL-1708.outline/rat_default_T_0793/rat/default
Spike simulation PASSED successfully.
=== sitest found errors in test sim/MAL-1708.outline/rat_default_T_0793/rat/default:
Scoreboard config: xLen=64 | fLen=64 | vLen=128 | vaddrExtended=42 | vec_reg_count=32 | enable_check=1 | verbosity=0 | enable_wrdata_check=1 | error_count=1 | stall_cycle_count=30000 | enable_cosim_mmc=1
Error: ""/scratch/sols/tgv3/federation/builds/7b21e298675_m/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_StQEntry_assert.sv"", 675: TestDriver.testHarness.system.tile_prci_domain.tile.core.lsu.StQ.stqEntries_0.SiFive_StQEntry_assert_0: at time 2129742500 ps
Assertion failed (verification library): StQEntry FSM Hang  @[StoreQ.scala 1194:14]

Fatal: ""/scratch/sols/tgv3/federation/builds/7b21e298675_m/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_StQEntry_assert.sv"", 684: TestDriver.testHarness.system.tile_prci_domain.tile.core.lsu.StQ.stqEntries_0.SiFive_StQEntry_assert_0: at time 2129742500 ps
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Support the full list of RVV 1.0 instruction in TGV execution pipelines,,,,,,MAL-1716,110788,,Epic,In Progress,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/17/2022 11:14,9/24/2022 17:50,9/28/2022 0:51,,,,,,,,,,,,,,TGV_RTL/Top,,,,,,,,,0,TGV,,,,David Kravitz,Nicolas Brunie,,,,,,,,,,,,,,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1749,MAL-1751,MAL-1757,MAL-1758,MAL-1759,MAL-1760,MAL-1761,MAL-1762,MAL-1763,MAL-1764,MAL-1765,MAL-1766,MAL-1767,MAL-1769,MAL-1781,VI-6758,MAL-1788,MAL-1789,MAL-1790,MAL-1791,MAL-1792,MAL-1797,MAL-1808,MAL-1811,MAL-1828,MAL-1837,MAL-1838,MAL-1848,MAL-1849,MAL-1850,MAL-1715,MAL-1864,MAL-1937,MAL-1951,MAL-1952,MAL-1973,MAL-2004,MAL-2026,MAL-2027,MAL-2045,MAL-2071,MAL-2084,MAL-2126,MAL-2135,MAL-2161,MAL-2188,MAL-2189,MAL-2196,MAL-2206,MAL-2229,MAL-2236,MAL-2237,MAL-2239,MAL-2245,MAL-2252,MAL-2262,MAL-2275,MAL-2291,MAL-2317,MAL-2365,MAL-2373,MAL-2375,MAL-2381,MAL-2387,MAL-2441,MAL-2542,MAL-2661,MAL-2710,,,,,,,,,,,,,,,MAL-2209,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-06-12T20:14:30.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,ghx-label-7,,[TGV] implement RVV 1.0 instruction support in VexPipe,To Do,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,,,,purple,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzylfz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,In Progress
[TGV][RVV 12] add support for RISC-V vector fixed-point instructions,,,,,,MAL-1715,110786,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/17/2022 11:07,7/13/2022 6:48,9/28/2022 0:51,6/23/2022 17:43,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"Implement support for instructions listed here: https://github.com/riscv/riscv-v-spec/blob/master/v-spec.adoc#sec-vector-fixed-point

Partial list of instructions currently not supported:
{code:java}
        vsaddu.vv
        vsaddu.vx
        vsaddu.vi
        vsadd.vv
        vsadd.vx
        vsadd.vi
        vssubu.vv
        vssubu.vx
        vssub.vv
        vssub.vx
{code}
",Brian Grayson,David Kravitz,Fu-Ching Yang,I-Cheng Cheng,Jaksa Djordjevic,Kira Tsao,Nicolas Brunie,,,,,,,,,5e1371705361330daaeaf389,5fd15143b4a74900763834e0,5ca54304bb1ed00ac5e5e852,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-04-11T21:16:43.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzylfj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,57:16.0,08/Apr/22 4:57 AM;5fd15143b4a74900763834e0;Please leave this open until all the sub-tasks have been closed.,12/Apr/22 12:38 AM;5e1a4f5ec578120daca5ff8e;Sorry I didn't notice there are subtasks beneath.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
wrong opByteMask_EX using in llpByteMaskEnable,wrong opByteMask_EX,,,,,MAL-1713,110736,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,Kira Tsao,5e1a4f5ec578120daca5ff8e,3/16/2022 17:40,4/13/2022 23:01,9/28/2022 0:51,3/23/2022 23:08,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,,,,"In current design, we have a functiuon *llpByteMaskEnable* to generate the byte enable bits for propagating the *oldDestDataIn* to *oldDesDataOut* for the bytes we are not operating.

The usage of *opByteMask_EX* should be correct *~opByteMask_EX*, and even rename to *opByteMaskOut_EX* to make it clear.

{code:scala}
  val opByteMask_EX  = Fill(tp.nVectorDsts * tp.dBytes, 1.U(1.W))

  def llpByteMaskEnable(index: Int): Bool = {
    ((augVectorCmd_EX.uop.vd_wide && !augVectorCmd_EX.uop.vs2_wide) || (index < tp.dBytes).B) && // excluding high part for non-widening ops 
    llpIssue && ((!vconfig_EX.vtype.vma && opByteMask_EX(index)) ||
                 (!vconfig_EX.vtype.vta && vlByteMask_EX(index)))
  }
  val oldDestDataIn = Cat(Seq(instSrcs_EX(3), instSrcs_EX(2)))
  val oldDesDataOut = withClock(llpClock) { ByteEnPipe((0 until tp.nVectorDsts * tp.dBytes).map(llpByteMaskEnable(_)), oldDestDataIn, tp.llpPipelineDepth) }
{code}

",Kira Tsao,Nicolas Brunie,,,,,,,,,,,,,,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-03-20T22:35:43.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyl4v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[FPU] Register ready twice ,[FPU] Register,,,,,MAL-1712,110723,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Erdinc Ozturk,61ccb01d90cfd20071b96af2,Erdinc Ozturk,61ccb01d90cfd20071b96af2,3/16/2022 15:36,7/21/2022 17:21,9/28/2022 0:51,3/18/2022 11:50,,,,,,,,,,,,,RTL/FEX,,,,,,,,,0,,,,"On a modified p550 configuration with

* 2-cycle IEX Mul
* combined FMA / FMUL
* FMUL (full) latency set to 2 cycles

rerun.outline file content:

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
""name"": ""rv64ud-fadd"",
""enable_postsim_py_check"": false,
""seed"": {""value"": 1791095845},
""sim"": {""vendor"": ""vcs""}
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}


Error message:

{noformat}Assertion failed: Physical register set as ready twice

at PRF.scala:72 assert(!(readyVec & setVec).orR, ""Physical register set as ready twice"")

Fatal: ""/scratch/erdinco/federation/builds/coreip_p550/verilog/design/assertions/SiFive_PRA_2_assert.sv"", 27: TestDriver.testHarness.system.tile_prci_domain.tile.core.rdu.fexPra.SiFive_PRA_2_assert_0: at time 59142500 ps$finish called from file ""/scratch/erdinco/federation/builds/coreip_p550/verilog/design/assertions/SiFive_PRA_2_assert.sv"", line 27.

FAILED *** The Simulation Finished, Did NOT Finish Successfully after 11828 simulation cycles (in TestDriver.report_phase_actions)Verdi WARNING: fsdbDumpflush - The FSDB file has not been created.

Verdi WARNING: fsdbDumpFinish - The FSDB file has not been created.""/scratch/erdinco/federation/vsrc/sim/common/../TestDriver.sv"", 520: TestDriver.assert_final_phase.final_error: started at 59142500ps failed at 59142500psOffending '(current_phase === shutdown_e)'

FAILED *** The Simulation Finished, Did NOT Finish Successfully after 11828 simulation cycles (in TestDriver.report_phase_actions)

Error: simulation sim/rv64ud-fadd failedError: some simulations failed{noformat}




*branch:* [https://github.com/sifive/federation/tree/pd-study-13_P550_FMUL_2_cycle_int_MUL|https://github.com/sifive/federation/tree/pd-study-13_P550_FMUL_2_cycle_int_MUL|smart-link] ",Erdinc Ozturk,,,,,,,,,,,,,,,61ccb01d90cfd20071b96af2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-07-21T16:59:35.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/d2cefc2755830ae0f781381c20d90ee5c52866b8,,,,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,,,,,,,,,,,,,2|hzyl2v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] extend list of covered vector multiply instructions,,,,,,MAL-1711,110714,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/16/2022 11:57,3/24/2022 15:24,9/28/2022 0:51,3/21/2022 13:23,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,A few instructions from https://github.com/riscv/riscv-v-spec/blob/master/v-spec.adoc#1110-vector-single-width-integer-multiply-instructions are currently not covered by VTG testing and should be,Nicolas Brunie,,,,,,,,,,,,,,,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-18T15:54:02.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/7761d90ce92271f6c34ea7d4680eeb758b625a0e,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyl13:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
update the CCL spec with DH channel and DR channel lateCancel/skidValid,,,,,,MAL-1710,110356,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,John Ingalls,5bb6808b9ba2930990f81895,Dixiao Jiang,600f59061959540115a2836d,Dixiao Jiang,600f59061959540115a2836d,3/11/2022 12:39,3/23/2022 12:57,9/28/2022 0:51,3/21/2022 14:56,,,,,,,,,,,Orca PR,,Documentation,,,,,,,,,0,,,,"We not see spec with DH Response channel and DR channel lateCancel/skidValid on 
 https://github.com/sifive/arch-specs/blob/master/core/privateL2_mas.adoc

There are interface assertions that @Alvin Tung wrote in https://github.com/sifive/federation/blob/master/src/main/scala/cachelink/Monitor.scala

The spec may need to updated with it ",Abhinay Kayastha,Alvin Tung,Dixiao Jiang,John Ingalls,,,,,,,,,,,,5e13703feb2ae70ea1dfe6b2,60f1ecfcf664300069fbfb00,600f59061959540115a2836d,5bb6808b9ba2930990f81895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1215,MAL-1214,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-21T15:15:33.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/arch-specs/pull/696,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyix3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Sequencer credit count assertion [Issue 2],[TGV] Sequencer credit,,,,,MAL-1709,110707,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Duplicate,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,3/16/2022 9:57,7/14/2022 11:32,9/28/2022 0:51,3/18/2022 17:48,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,TGV,,,"I see the Sequencer credit count assertion firing again after the fix made in MAL-1694. 

The assertion seems to fire in the same location, of the test, at the startup, when vsetvli is set and before the vector instruction is committed. 

{noformat}Error: ""/scratch/srivatsa/fed01/rat_for_tgv/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VectorSequencer_assert.sv"", 291: TestDriver.testHarness.system.tile_prci_domain.tile.core.tgv.vectorSequencer.SiFive_VectorSequencer_assert_0: at time 203282500 ps
Assertion failed: VectorSequencer credit count is wrong
    at VectorSequencer.scala:183 assert(creditReg <= tp.nVSeqEntries.U, ""VectorSequencer credit count is wrong""){noformat}

to recreate the failure 
1. clone federation and checkout the commit ef24ccc610db4052676f3b2bba7eb1caf14ebfc3
2. build coreip_u8_minimal_vector
3. rerun the test using the outline

{code:java}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim"",
    ""+verbose""
  ],
  ""subdir"": ""rat_default_T_0384"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 491263
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){code}

The waves are at: 
gamma29:/scratch/srivatsa/fed01/master_2/builds/coreip_u8_minimal_vector/sim/sim/rat.outline/rat_default_T_0384/rat/default",Alexandre Solomatnikov,Srivatsa Yogendra,,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1708,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzykzr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,42:34.5,"18/Mar/22 7:42 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;Please, rebase after [https://github.com/sifive/federation/pull/21243|https://github.com/sifive/federation/pull/21243|smart-link]  merged and rerun. If this still happens, update.",18/Mar/22 9:59 AM;5a938e9c0913194d2d262658;Im still seeing this assertion after the mentioned PR. I have updated the description to reflect the new commit and rerun.outline to reproduce the failure,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Sequencer credit count assertion [Issue 1],[TGV] Sequencer credit,,,,,MAL-1708,110706,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,3/16/2022 9:56,7/14/2022 11:32,9/28/2022 0:51,3/20/2022 11:37,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,TGV,,,"I see the Sequencer credit count assertion firing again after the fix made in MAL-1694. 

The assertion seems to fire in the same location, of the test, at the startup, when vsetvli is set and before the vector instruction is committed. 



{noformat}Error: ""/scratch/srivatsa/fed01/rat_for_tgv/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VectorSequencer_assert.sv"", 291: TestDriver.testHarness.system.tile_prci_domain.tile.core.tgv.vectorSequencer.SiFive_VectorSequencer_assert_0: at time 203282500 ps
Assertion failed: VectorSequencer credit count is wrong
    at VectorSequencer.scala:183 assert(creditReg <= tp.nVSeqEntries.U, ""VectorSequencer credit count is wrong""){noformat}

to recreate the failure 
1. clone federation and checkout the commit ef24ccc610db4052676f3b2bba7eb1caf14ebfc3
2. build coreip_u8_minimal_vector
3. rerun the test using the outline

{code:java}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim"",
    ""+verbose""
  ],
  ""subdir"": ""rat_default_T_0793"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 4005303368
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){code}

The waves are at: 
gamma29:/scratch/srivatsa/fed01/master_2/builds/coreip_u8_minimal_vector/sim/sim/rat.outline/rat_default_T_0793/rat/default",Alexandre Solomatnikov,Srivatsa Yogendra,,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1709,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-20T11:31:09.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/4ff7c9f637d2a0ce8f76553f8cfca7626a30d8d2,,,,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzykzj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,42:23.4,"18/Mar/22 7:42 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;Please, rebase after [https://github.com/sifive/federation/pull/21243|https://github.com/sifive/federation/pull/21243|smart-link]  merged and rerun. If this still happens, update.",18/Mar/22 9:56 AM;5a938e9c0913194d2d262658;Im still seeing this assertion after the mentioned PR. I have updated the description to reflect the new commit and rerun.outline to reproduce the failure,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV][RVV 11.9] implement min/max support in VexPipe,,,,,,MAL-1707,110698,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/16/2022 9:31,5/11/2022 21:10,9/28/2022 0:51,4/6/2022 9:25,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"minmax support needs to be implemented in TGV.

RVV’s specification: [https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#119-vector-integer-minmax-instructions|https://github.com/riscv/riscv-v-spec/blob/v1.0/v-spec.adoc#119-vector-integer-minmax-instructions|smart-link] 

We can start with mimicking Bullet’s implementation

* use VectorALU to perform comparison subtraction
* use {{comparisonMask}} function to build min/max selection
* apply mask and build results",Brad Wu,Brandon Wu,Kira Tsao,Nicolas Brunie,Shaka Kao,,,,,,,,,,,62103777eb2978006893b778,61fd7660f51e8500708a3914,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,5f94696c29bd8a006f94f0e1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1828,,,,,,,,MAL-1758,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1705,,,,,,,,,,,,,,,,19/Apr/22 10:13 PM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220420-051224.png;https://sifive.atlassian.net/secure/attachment/70937/image-20220420-051224.png,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-04-28T03:24:46.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/6f9a407b50c7254f71692564bb8f04368a27ea25,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzykyn:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,46:00.7,"28/Mar/22 2:46 AM;5f94696c29bd8a006f94f0e1;We have a short discussion on Mar. 28 for this Jira, and [~accountid:5e1a4f5ec578120daca5ff8e]  guides [~accountid:61fd7660f51e8500708a3914] and me to review the min/max implementation in Bullet vector unit. TGV RTL implementation for min/max is under discussion.",28/Mar/22 9:23 AM;6065017e90e3950069cf01c5;[~accountid:5f94696c29bd8a006f94f0e1]  Does your review match what I listed in the task description ? (reusing {{VectorALU}} which is already instantiated in TGV’s {{VexPipe}} and adding a call to {{comparisonMaks}} to build the required mask before applying them),"28/Mar/22 9:26 AM;5e1a4f5ec578120daca5ff8e;[~accountid:6065017e90e3950069cf01c5] yes it did, we think this is the fastest way to reuse the module and reference the outside comparison logic. But I think we may need one addition stage to release the timing pressure.","28/Mar/22 9:59 AM;6065017e90e3950069cf01c5;[~accountid:5e1a4f5ec578120daca5ff8e] more stages would make sense. Let’s try to do a parameterized design with a final {{Pipe}} with custom latency to be retimed.

Beware tag injections mechanism is latency dependent. If the module is a single cycle tag are injected in ISS, else it may be issued later (tags must be injected 2 cycles before the result is presented to the bypass network).",28/Mar/22 3:08 PM;61fd7660f51e8500708a3914;[~accountid:5f94696c29bd8a006f94f0e1] I guess you’ve mentioned the wrong person? Maybe it should be [~accountid:62103777eb2978006893b778]  not me lol~,"28/Mar/22 5:16 PM;5f94696c29bd8a006f94f0e1;[~accountid:61fd7660f51e8500708a3914] , sorry for your inconvenience… Search “Br” and hit the “TAB” then…. 🤣 ",28/Mar/22 5:58 PM;61fd7660f51e8500708a3914;Never mind lol~,"31/Mar/22 8:44 PM;62103777eb2978006893b778;I implemented vfmin/vfmax and vmin/vmax in 2 versions:

* Ver.1: Reusing Bullet’s function and chain it after vectorALU

* Ver.2: Use dedicated min/max logic

The conclusion can be found here [https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2234254167/MAL-1707+min+max+support|https://sifive.atlassian.net/wiki/spaces/~656691523/pages/2234254167/MAL-1707+min+max+support|smart-link] 

TL;DR: Stick to Ver.1 as long as it does not introduce critical path.","19/Apr/22 10:13 PM;5e1a4f5ec578120daca5ff8e;From the top critical path of synthesis result, input data comes into {{VectorALU}} took *248ps* to output, and goes into {{comparemod}}.
But {{comparemod}} needs *104ps* to do the comparison, and we need addition *73ps* for the forwarding network. We almost hit the data required time even without {{comparemod}}.

{noformat}  Point                                       Fanout       Cap     Trans      Incr       Path
  ----------------------------------------------------------------------------------------------
  clock clock (rise edge)                                                    0.000      0.000
  clock network delay (ideal)                                                0.000      0.000
  core/tgv/vex/exPipes_0/instPayload_EX_cmn_ctrl_funct7_reg_2_/CP (DFQD4BWP240H8P57PDULVT)
                                                                   0.000     0.000      0.000 r
  core/tgv/vex/exPipes_0/instPayload_EX_cmn_ctrl_funct7_reg_2_/Q (DFQD4BWP240H8P57PDULVT)
                                                                   0.027     0.037      0.037 f
  core/tgv/vex/exPipes_0/vectorALUOut_alu_1/io_in_ctrl_inv1 (SiFive_MallardTile_SiFive_VectorALU_2)
                                                                             0.000      0.097 f
  core/tgv/vex/exPipes_0/vectorALUOut_alu_1_io_out_byte_cout_7 (net)
                                                         0.001               0.000      0.248 f
  core/tgv/vex/exPipes_0/comparemod/io_vectorALUResp_1_byte_cout_7 (SiFive_MallardTile_SiFive_VectorCompareUnit_1)
                                                                             0.000      0.248 f
  core/tgv/vex/exPipes_0/comparemod/io_vectorALUResp_1_byte_cout_7 (net)
                                                         0.001               0.000      0.248 f
  core/tgv/vex/exPipes_0/comparemod/io_dataOut_bits[68] (net)
                                                1        0.000               0.000      0.352 f
  core/tgv/vex/exPipes_0/comparemod/io_dataOut_bits[68] (SiFive_MallardTile_SiFive_VectorCompareUnit_1)
                                                                             0.000      0.352 f
  core/tgv/vex/exPipes_1/instSrcs_EX_0_reg_68_/DA (DFMQD2BWP240H8P57PDSVT)
                                                                   0.005     0.000      0.425 f
  ----------------------------------------------------------------------------------------------
  data required time                                                                    0.315
  data arrival time                                                                    -0.425
  ----------------------------------------------------------------------------------------------
  slack (VIOLATED)                                                                     -0.110{noformat}

Here's the characterization result of {{comparemod}} without pipeline(pure combination logic). I think we will need additional cycle for comparemod.

!image-20220420-051224.png|width=1781,height=988!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Fix EnqCoupling dropped from various dispBuf params,,,,,,MAL-1706,110696,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,Andrew Hanselman,609d7e1f5998a6006800dcc5,3/16/2022 9:16,5/3/2022 20:32,9/28/2022 0:51,4/7/2022 9:25,,,,,,,,,,,,,Performance,RTL/RDU,TGV_RTL/RDU,,,,,,,0,,,,"When removing {{nSrcs}} and parameterizing the {{dispPayload}} type in the {{dispBuf}} module, it looks removing {{nSrcs}} from the parameter list occured twice. Commits [c48f291|https://github.com/sifive/federation/commit/c48f2915668addf5e8c8263cfd0daa4140fdc010] (initially removed {{nSrcs}} and retained {{enqCoupling}}, merged in October 2021, no affect on {{enqCoupling}} behavior) and [82f5632|https://github.com/sifive/federation/commit/82f5632799351d03535034c42bebe232e0ca55d0] (must have been a parallel PR or something, removed nSrcs as well, merging in Jan 2022 removed {{enqCoupling}}). 

I'd recommend expanding the dispatch module instantiations to assign parameters by name, and reapply {{enqCoupling}} to all dispatch buffer instantiations.",Alexandre Solomatnikov,Andrew Hanselman,Brian Grayson,Fu-Ching Yang,Ian Chuang,I-Cheng Cheng,Jaksa Djordjevic,Josh Smith,Knute Lingaard,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,609d7e1f5998a6006800dcc5,5e1371705361330daaeaf389,5ca54304bb1ed00ac5e5e852,61aaae1d9615eb006f5ff922,5d7bfdaa003e040c3e175060,5e137307c578120daca51d52,5acffeafaa802f2a797a955c,5e1374fb7a22c90da0c60495,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Mid Core,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-04-07T11:16:54.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289068792e0d6092ba120cca2d60a0af4f17bd09,,,,,,,,,,,,Simulation-Performance Correlation,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,Possible impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyky7:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,55:42.7,16/Mar/22 9:52 AM;609d7e1f5998a6006800dcc5;FYI: [~accountid:5e1374fb7a22c90da0c60495] [~accountid:5acffeafaa802f2a797a955c] ,16/Mar/22 9:55 AM;5e1374fb7a22c90da0c60495;We noticed in correlation that the accidental removal of this functionality drops performance a bit in P650.,"17/Mar/22 6:45 AM;61aaae1d9615eb006f5ff922;I am not sure if the following issue I found when working on [https://sifive.atlassian.net/browse/SPARTA-1600|https://sifive.atlassian.net/browse/SPARTA-1600|smart-link]is related to this {{enqCoupling}} issue, but let me go through it here first. 

I found P650 doing dispatching is 

{noformat}Calculating the dispatch targets by the contention/padding algo for all instructions in the window (4 instructions for P650) 
Checking if the instructions are not necessary to dispatch 
Assigning the instructions to the enqueue ports in order, according to the above 2 points {noformat}

So, if we have an instruction group (4 instructions in the REN window) that is {{or zero zero zero}}, {{adduw}}, {{adduw}}, and {{adduw}}. The result of the first step is {{0, 1, 0, 1}}, and the first instruction is {{nop}} so it is not valid for dispatching, and finally, the result turns out to be {{X, 1, 0, 1}} (X means not valid). The first instruction wastes an chance to dispatch.

I wonder how many instructions are like this case so I traced the code and found this. [https://github.com/sifive/federation/blob/master/mallard/src/main/scala/core/mallard/RDU.scala#L638|https://github.com/sifive/federation/blob/master/mallard/src/main/scala/core/mallard/RDU.scala#L638] 
But it’s talking about the instructions that are not completed at ID in advance. 
Do we have a white list that might be more intuitive to estimate the performance impact? ","17/Mar/22 8:29 AM;609d7e1f5998a6006800dcc5;I think they are different issues. 

The line you’ve pointed out does indicate that we do identify NOPs during ID, {{cmpl_ID}}, but the signal we use to bind instructions to pipes in REN is {{pipeTgt_REN}} (execution pipe supports the instruction) and {{queueTgt_REN}}(issue queue is allowed to queue this instruction). This allows the RDU to handle the branch only execution pipe but still allow cross issue. When the RDU fuses ops, it will generate a NOP which shouldn’t consume a pipe assignment slot, but the RDU does not have any NOP whitelist that is uses to identify and handle this form of NOP.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Assertion Failure: SiFive_VexPipe_assert on unsupported vminu.vv instruction,[TGV] Assertion Failure: SiFive_VexPipe_assert on unsupported vminu.vv instruction,Execution Unit ,VexPIpe,,,MAL-1705,110684,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Ishita Shah,607e26355431a500701f5aed,Ishita Shah,607e26355431a500701f5aed,3/16/2022 6:17,4/6/2022 11:15,9/28/2022 0:51,4/6/2022 11:15,,,,,,,,,,,,,TGV_RTL/Top,,,,,,,,,0,TGV,,,"There is an assertion failure seen in the lastest VTG regression
Error message 

{code:java}Error: ""/scratch/ishitashah/tgv_regression/sign_31_u8_minimal_vector/federation/builds2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", 354: TestDriver.testHarness.system.tile_prci_domain.tile.core.tgv.vex.exPipes_0.SiFive_VexPipe_assert_0: at time 2157982500 ps
Assertion failed: Vex PRF write should only be enabled for a valid result
    at VexPipe.scala:1026 assert(!(io.rfWriteReq_WB(i).valid && !instValid_WB(i)), ""Vex PRF write should only be enabled for a valid result"")

Fatal: ""/scratch/ishitashah/tgv_regression/sign_31_u8_minimal_vector/federation/builds2/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", 363: TestDriver.testHarness.system.tile_prci_domain.tile.core.tgv.vex.exPipes_0.SiFive_VexPipe_assert_0: at time 2157982500 ps{code}

*SHA* : c118c8e
*config*:coreip_u8_minimal_vector
*rerun.outline*

{code:java}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""torture"",
  ""raw_plusargs"": [
    ""+clock_periph=3"",
    ""+clock_div0=3"",
    ""+clock_div1=3"",
    ""+clock_div2=3"",
    ""+clock_div3=3"",
    ""+clock_div4=3"",
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+axi_mem_latency_cycles=40"",
    ""+axi_mem_dither_cycles=20"",
    ""+enable_spike_cosim"",
    ""+amba_vip_select=2"",
    ""+gdi_amba_test_enable=1"",
    """",
    ""+cosim_scoreboard_stall_cycle_count=500000""
  ],
  ""subdir"": ""torture_branch_T_1836"",
  ""subtest"": ""branch"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3609708974
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""2000000""
  },
  ""program"": {
    ""torture_inbound"": true,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  },
  ""uvm"": {
    ""set_config_string"": [
      ""uvm_test_top,torture_inbound,20001000:20001400%80008400:80008800"",
      ""uvm_test_top,torture_read_inbound,80007ae0:800082e8%20000000:20000dc8""
    ],
    ""testname"": ""torture_test""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){code}

Path for waves
{{gamma25:/scratch/ishitashah/tgv_regression/sign_31_u8_minimal_vector/federation/builds2/coreip_u8_minimal_vector/sim/rerundir1/rerun.outline/torture_branch_T_1836/torture/branch}}",David Kravitz,Ishita Shah,Josh Smith,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,5fd15143b4a74900763834e0,607e26355431a500701f5aed,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MAL-1707,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,{},,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/6f9a407b50c7254f71692564bb8f04368a27ea25,,,,,,,,,,,,Simulation-Torture,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzykvr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,23:31.2,"16/Mar/22 8:23 AM;6065017e90e3950069cf01c5;It looks like an -non-vector- unsupported instruction is steered to the vector side without being supported.

The WB signal is set during ISS because the instruction is detected as 0-latency but as no unit support this instruction no result is never injected nor the valid result flag set.



{noformat}00000000200008c4 <pseg_80>:
    200008c4:   895a                    mv      s2,s6
    200008c6:   b2fd0513                addi    a0,s10,-1233
    200008ca:   8c72                    mv      s8,t3
    200008cc:   00ad7663                bgeu    s10,a0,200008d8 <pseg_81>
    200008d0:   135680d7                vminu.vv        v1,v21,v13
    200008d4:   73dd                    lui     t2,0xffff7
    200008d6:   032a                    slli    t1,t1,0xa{noformat}","16/Mar/22 8:40 AM;6065017e90e3950069cf01c5;it seems the unsupported instruction is {{vminu.vv}}

[~accountid:607e26355431a500701f5aed]  (cc[~accountid:5a938e9c0913194d2d262658] ) is the test generation limited to a certain list of instructions or are all the vector instructions potentially generated ?","16/Mar/22 8:41 AM;6065017e90e3950069cf01c5;I am able to get the same failure with VTG configured to generate {{vminu.vv}}



{noformat}=== sitest found errors in test sim/tgv-MAL-1705.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vminu.vv:
Scoreboard config: xLen=64 | fLen=64 | vLen=128 | vaddrExtended=42 | vec_reg_count=32 | enable_check=1 | verbosity=0 | enable_wrdata_check=1 | error_count=1 | stall_cycle_count=30000 | enable_cosim_mmc=1
Error: ""/scratch/nicolasb/federation_bis/builds_SFC/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", 354: TestDriver.testHarness.system.tile_prci_domain.tile.core.tgv.vex.exPipes_0.SiFive_VexPipe_assert_0: at time 279642500 ps
Assertion failed: Vex PRF write should only be enabled for a valid result

    at VexPipe.scala:1026 assert(!(io.rfWriteReq_WB(i).valid && !instValid_WB(i)), ""Vex PRF write should only be enabled for a valid result"")


Fatal: ""/scratch/nicolasb/federation_bis/builds_SFC/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", 363: TestDriver.testHarness.system.tile_prci_domain.tile.core.tgv.vex.exPipes_0.SiFive_VexPipe_assert_0: at time 279642500 ps
$finish called from file ""/scratch/nicolasb/federation_bis/builds_SFC/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VexPipe_assert.sv"", line 363.


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 55928 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* WARNING: fsdbDumpflush - The FSDB file has not been created.

*Verdi* WARNING: fsdbDumpFinish - The FSDB file has not been created.
""/scratch/nicolasb/federation_bis/vsrc/sim/common/../TestDriver.sv"", 520: TestDriver.assert_final_phase.final_error: started at 279642500ps failed at 279642500ps
        Offending '(current_phase === shutdown_e)'


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 55928 simulation cycles (in TestDriver.report_phase_actions)
Error: simulation sim/tgv-MAL-1705.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vminu.vv failed
Error: some simulations failed{noformat}","16/Mar/22 1:52 PM;5a938e9c0913194d2d262658;This is a torture test, it should not be generating vector insts. Looking to see whats happening","16/Mar/22 2:06 PM;5a938e9c0913194d2d262658;I think i understand whats happening here. The generated program is 

{noformat}pseg_80:
  mv x18, x22
  addi x10, x26, -1233
  mv x24, x28
  bgeu x26, x10, pseg_81
  .half 0x80d7
  .half 0x1356
  .half 0x73dd
  .half 0x032a{noformat}

So , what torture does is, it puts in illegal opcodes after a branch, to make sure the branch is taken or the simulation fails. These inserted opcodes seem to be a vector instruction which is not supported yet. 

From the instruction trace i see the branch being taken, and jumping to pseg_81.

{noformat}C                   0:      96899 [1] pc=[00000000200008c6] W[r10=fffffffffffff422][1] R[r26=fffffffffffff8f3] R[r 0=0000000000000000] inst=[b2fd0513] addi    a0, s10, -1233
C                   0:      96899 [1] pc=[00000000200008ca] W[r24=0000000000000000][1] R[r 0=0000000000000000] R[r28=0000000000000000] inst=[00008c72] c.mv    s8, t3
C                   0:      96899 [1] pc=[00000000200008cc] W[r 0=0000000000000000][0] R[r26=fffffffffffff8f3] R[r10=fffffffffffff422] inst=[00ad7663] bgeu    s10, a0, pc + 12
C                   0:      96904 [1] pc=[00000000200008d8] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[0000a801] c.j     pc + 16;pseg_81
C                   0:      96910 [1] pc=[00000000200008e8] W[r28=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[00000e17] auipc   t3, 0x0
C                   0:      96910 [1] pc=[00000000200008ec] W[r28=00000000200008e0][1] R[r28=0000000000000000] R[r 0=0000000000000000] inst=[ff8e0e13] addi    t3, t3, -8
C                   0:      96959 [1] pc=[00000000200008f0] W[r28=0000000040000080][1] R[r28=00000000200008e0] R[r 0=0000000000000000] inst=[000e3e03] ld      t3, 0(t3){noformat}


So im guessing the core is speculatively executing these instructions after the branch , which is causing an unsupported vector instruction to be sent down the VEX pipe. ","16/Mar/22 2:07 PM;5a938e9c0913194d2d262658;We might want to fix this assertion to account for speculative execution, not not fire i guess. ","16/Mar/22 3:17 PM;6065017e90e3950069cf01c5;{quote}We might want to fix this assertion to account for speculative execution, not not fire i guess.{quote}

I don’t think that is the solution, and we do not know in `the execution pipeline that the instruction is speculated.","16/Mar/22 3:21 PM;6065017e90e3950069cf01c5;The issue should disappear once the instruction is properly implemented:

The core will not trap on an illegal issue until the branch is sure to be executed as speculated (which would not be the case here) ([~accountid:5acffeafaa802f2a797a955c]  for confirmation). The problem here is that an instruction, thought to be a {{vminu.vv}}is issued in the VexPipe, but at it is not supported yet, the insn tag reaches WB without any result being available, which triggers the assertion. Once the instruction is properly supported, a result will be submitted and the assertion will be cleared. The branch will be detected as mis-speculated later on and everything will be flushed.","16/Mar/22 3:27 PM;5a938e9c0913194d2d262658;Do we not have limits in the decode stage to trigger an illegal instruction exception for un implemented instructions? If yes, this should not be sent to the execution pipeline right? ","16/Mar/22 3:39 PM;6065017e90e3950069cf01c5;{quote}Do we not have limits in the decode stage to trigger an illegal instruction exception for un implemented instructions? If yes, this should not be sent to the execution pipeline right?{quote}

This is above my pay grade. [~accountid:5acffeafaa802f2a797a955c] will know more.



Thinking about it, this may be a hole in TGV decode / disptach, tagging [~accountid:5fd15143b4a74900763834e0] here.","16/Mar/22 3:43 PM;5acffeafaa802f2a797a955c;[~accountid:5a938e9c0913194d2d262658] There’s a difference between an illegal instruction and an instruction which is not yet implemented in TGV. The Mallard/TGV RTL is not keeping a list in RTL of unimplemented instructions and preventing them from dispatching.  If the instruction is properly illegal, Mallard should not dispatch it to any execution unit.  I’m just seeing this ticket now though.","16/Mar/22 3:44 PM;5fd15143b4a74900763834e0;afaik, we do not have the illegal instruction logic implemented yet.","16/Mar/22 3:53 PM;5a938e9c0913194d2d262658;{quote}There’s a difference between an illegal instruction and an instruction which is not yet implemented in TGV.{quote}

ooh yea i do agree. As we are implementing new instructions, we can consider unimplemented as illegal (i guess. But i'm thinking this is more effort than what its worth). 

{quote}The Mallard/TGV RTL is not keeping a list in RTL of unimplemented instructions and preventing them from dispatching.{quote}

Ok. This makes sense. 

If we decide to leave this ticket open, thats ok with us. We will keep an eye out for this test case. 

cc [~accountid:607e26355431a500701f5aed] [~accountid:5d02d411febd110bc78aabc3] [~accountid:607e26831417e2006abb3189] [~accountid:5dbc8d4f3a09190c2ad5f41d] ","06/Apr/22 9:24 AM;6065017e90e3950069cf01c5;this problem should be fixed by [https://github.com/sifive/federation/pull/21625|https://github.com/sifive/federation/pull/21625|smart-link] 

(test on-going)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] stall after flush while waiting for most recent vset,[TGV] stall ,,,,,MAL-1704,110635,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/15/2022 16:51,3/17/2022 16:40,9/28/2022 0:51,3/16/2022 15:19,,,,,,,,,,,,,TGV_RTL/RDU,TGV_RTL/Top,,,,,,,,0,TGV,,,"on  {{u8_minimal_vector}} configuration from  -(a0924df050b)- {{47278c27005}}

*outline:*

{code:java}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1"",
    ""+dump-stop=350000000""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vfsqrt.v"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vfsqrt.v_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_VSETIVLI-1_FENCEbeforeVSETVL-0_VSETVL-0_FLMUL-0_NonzeroVstart-0_Sample-10_LMUL-1_AVL-128_TGV-1_IMM-0_LdStAccFault-1"",
  ""seed"": {
    ""value"": 1355129329
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""fsdb""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){code}

*Error:*

Simulation fails with {{  Error: never saw expected PASSED message }}

{noformat}=== sitest found errors in test reduced_sim/rerun.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfsqrt.v:
Error: never saw expected PASSED message
Error: subprocess vcs.sim. exited with signal 9 (KILL)
Error: simulation reduced_sim/rerun.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vfsqrt.v failed
Error: some simulations failed{noformat}

It looks like the core is stalled on {{waitForVSRF_DIS_1}}

!image-20220315-235223.png|width=1926,height=459!



 ",Alexandre Solomatnikov,Josh Smith,Nicolas Brunie,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,15/Mar/22 6:08 PM;sols;Screen Shot 2022-03-15 at 6.01.14 PM.png;https://sifive.atlassian.net/secure/attachment/69672/Screen+Shot+2022-03-15+at+6.01.14+PM.png,15/Mar/22 4:49 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-2022-03-15-16-49-20-838.png;https://sifive.atlassian.net/secure/attachment/69669/image-2022-03-15-16-49-20-838.png,15/Mar/22 4:53 PM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220315-235223.png;https://sifive.atlassian.net/secure/attachment/69670/image-20220315-235223.png,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,363c4199979fb06a342b089b2b1728ab59734dff,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzykin:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,08:10.9,"15/Mar/22 5:06 PM;6065017e90e3950069cf01c5;Trace ends somewhere around (if this can help reduce the simulation span):



{noformat}C                   0:      16206 vrf[ 1]=[000000003fd2e2efcfac588de0cac2b4][ffff]
C                   0:      16207 vrf[ 0]=[000000003fd2e2efcfac588de0cac2b4][ffff]
C                   0:      16210 [1] pc=[0000000080000be0] W[r 5=0000000080001468][1] R[r 5=000000008000146c] R[r 0=0000000000000000] inst=[000012f1] DASM(000012f1)
C                   0:      16210 [1] pc=[0000000080000be2] W[r 0=0000000000000000][0] R[r 6=ffffffffe0cac2b4] R[r 0=0000000000000000] inst=[3a0360d7] DASM(3a0360d7)
C                   0:      16210 [1] pc=[0000000080000be6] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[5e008057] DASM(5e008057)
C                   0:      16210 [1] pc=[0000000080000bea] W[r 7=0000000000000001][1] R[r 7=0000000000000002] R[r 0=0000000000000000] inst=[000013fd] DASM(000013fd)
C                   0:      16210 [1] pc=[0000000080000bec] W[r 0=0000000000000000][0] R[r 7=0000000000000001] R[r 0=0000000000000000] inst=[fe0398e3] DASM(fe0398e3)
C                   0:      16210 [1] pc=[0000000080000bdc] W[r 6=ffffffffc7b26195][1] R[r 5=0000000080001468] R[r 0=0000000000000000] inst=[0002a303] DASM(0002a303)
C                   0:      16211 vrf[ 1]=[3fd2e2efcfac588de0cac2b4c7b26195][ffff]
C                   0:      16212 vrf[ 0]=[3fd2e2efcfac588de0cac2b4c7b26195][ffff]
C                   0:      16214 [1] pc=[0000000080000be0] W[r 5=0000000080001464][1] R[r 5=0000000080001468] R[r 0=0000000000000000] inst=[000012f1] DASM(000012f1)
C                   0:      16214 [1] pc=[0000000080000be2] W[r 0=0000000000000000][0] R[r 6=ffffffffc7b26195] R[r 0=0000000000000000] inst=[3a0360d7] DASM(3a0360d7)
C                   0:      16214 [1] pc=[0000000080000be6] W[r 0=0000000000000000][0] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[5e008057] DASM(5e008057)
C                   0:      16214 [1] pc=[0000000080000bea] W[r 7=0000000000000000][1] R[r 7=0000000000000001] R[r 0=0000000000000000] inst=[000013fd] DASM(000013fd)
C                   0:      16214 [1] pc=[0000000080000bec] W[r 0=0000000000000000][0] R[r 7=0000000000000000] R[r 0=0000000000000000] inst=[fe0398e3] DASM(fe0398e3){noformat}","15/Mar/22 6:08 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;I got the same thing on my dev branch: {{vsetPra.get.io.readResp(1)}} never switches to 1:

!Screen Shot 2022-03-15 at 6.01.14 PM.png|width=2349,height=1276!","16/Mar/22 1:59 PM;5acffeafaa802f2a797a955c;[~accountid:6065017e90e3950069cf01c5] [~accountid:557058:e51f5c3d-42d7-403f-9271-0d982f42a185] I reproduced your hang, and then cherry-picked my fix in this PR and the test passed: [https://github.com/sifive/federation/pull/21247|https://github.com/sifive/federation/pull/21247|smart-link] 

So I’ll mark this is linked or a duplicate.","16/Mar/22 3:19 PM;5acffeafaa802f2a797a955c;Resolving this issue along with MAL-1698 and MAL-1699, since I believe I have fixed all of these specific failures.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Vlenb reg is 0 when read,Vlenb reg,,,,,MAL-1703,110628,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,3/15/2022 16:11,3/16/2022 10:30,9/28/2022 0:51,3/16/2022 4:52,,,,,,,,,,,,,RTL/IEX,,,,,,,,,0,,,,"I see the csr read to vlenb reg responding to 0, which should actually be Vlen/8

the instruction trace is 
{code:java}
C                   0:       9203 [1] pc=[000000008000060a] W[r 8=0000000000000000][1] R[r 0=0000000000000000] R[r 0=0000000000000000] inst=[c2202473] csrr    s0, vlenb
{code}

to recreate the failure 
1. clone federation and checkout the commit 06f0fccfdd8b2d1c2ffeb31a67af3ed90f819f5e
2. build coreip_u8_minimal_vector
3. rerun the test using the outline

{code:java}
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vlenb_csr"",
  ""raw_plusargs"": [
    ""+verbose""
  ],
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 1791095845
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""waves"": {
    ""dumper"": ""all""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{code}

The generated waves are at 
gamma29:/scratch/srivatsa/fed01/master/builds/coreip_u8_minimal_vector/sim/sim/csr_vlenb.outline/vector/vlenb_csr/waves.fsdb",Josh Smith,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-16T04:51:31.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,04cd2181885e11884ddd89c5e9b4545ae6f8332b,,,,,,,,,,,,Simulation-Directed,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzykgf:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,42:54.3,"15/Mar/22 4:42 PM;5acffeafaa802f2a797a955c;Oh, yeah this looks like an RTL bug that was introduced with my changes for {{vset}} handling.  Basically, when a CSR read/write instruction in the system pipeline injects into the integer pipeline for the register writeback, it zeros out part of the instruction payload to help optimize away logic.  But with the new logic added for {{vset}} stuff, some of the zero’d out payload was actually needed to handle this operation correctly.","16/Mar/22 4:52 AM;5acffeafaa802f2a797a955c;[~accountid:5a938e9c0913194d2d262658] I merged my commit into master, but I tested the fix on top of the commit that was mentioned in this ticket.  It appears that you were working on some branch which did not have the vlenb_csr test, so I couldn't rerun that test again directly from master.",16/Mar/22 4:53 AM;5acffeafaa802f2a797a955c;Please close the ticket if it appears to be working for you,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] implement conditional instantiation of permute unit,,,,,,MAL-1702,110603,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/15/2022 14:14,6/3/2022 8:04,9/28/2022 0:51,6/3/2022 8:04,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,Currently (as of master `a53c4434e`). The permute unit is always instantiated into `VexPipe` even if it should be predicated to the `VexSupportParams` `perm` parameter value.,Alexandre Solomatnikov,David Kravitz,Kira Tsao,Nicolas Brunie,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,MAL-1719,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-05-24T16:47:57.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-1716,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/af651120ea4bdff374e849e6f47b99eee5691e64,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzykb3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Mar/22 2:15 PM;6065017e90e3950069cf01c5;This needs to be cleaned-up, but I may delay it after [https://sifive.atlassian.net/browse/MAL-1686|https://sifive.atlassian.net/browse/MAL-1686|smart-link], as I have already heavily modified the permutation unit/engine and its integration.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] wrong result for `vwaddu.wv` in u8_minimal_vector config,[TGV] wrong result for `vwaddu.wv`,,,,,MAL-1701,110514,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Kira Tsao,5e1a4f5ec578120daca5ff8e,Nicolas Brunie,6065017e90e3950069cf01c5,Nicolas Brunie,6065017e90e3950069cf01c5,3/14/2022 21:13,4/6/2022 18:12,9/28/2022 0:51,3/17/2022 15:58,,,,,,,,,,,,,TGV_RTL/Top,,,,,,,,,0,TGV,,,"Issue report on master {{d7893f9c1f5}}
bad result for {{vwaddu.wv}} test generated from {{vtg-tgv-tests.outline}} (at least with LMUL 1, 2 and 4)

+*rerun.outline:*+

{noformat}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vwaddu.wv"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vwaddu.wv_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_VSETIVLI-1_FENCEbeforeVSETVL-0_VSETVL-0_FLMUL-0_NonzeroVstart-0_Sample-10_LMUL-1_AVL-128_TGV-1_IMM-0_LdStAccFault-1"",
  ""seed"": {
    ""value"": 4282876139
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){noformat}



+*error reported:*+

{noformat}=== sitest found errors in test sim/rerun.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vwaddu.wv:
Scoreboard config: xLen=64 | fLen=64 | vLen=128 | vaddrExtended=42 | vec_reg_count=32 | enable_check=1 | verbosity=0 | enable_wrdata_check=1 | error_count=1 | stall_cycle_count=30000 | enable_cosim_mmc=1
[COSIM-ERROR][0] COSIM VS RTL WRDATA MISMATCH
[COSIM-ERROR][0] m_dut_inst_item: [14971] InstInfo: VLD=1 | PC=0x00000000800009fe | INSN=0xd3072857 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r16=0xb3ecff4ede302fe5c345282772821182 mask=ffff r17=0x399d851d399d851d0859217108592171 mask=ffff | READY=1 | CSR_TIMER=14971 | PRV=3 | MSTATUS=0x8000000a00006680 | MTVEC=0x0000000080000ecc | MCAUSE=0x0000000000000000 | VSTART=15 | VL=0 | VSEGELT=0

[COSIM-ERROR][0] m_cosim_inst_info: VLD=0 | PC=0x00000000800009fe | INSN=0xd3072857 | INST_DST=VECTOR | REDUCTION = false | WR: en=true r16=0xb3ecff4ede302fe5c345282772821182 mask=0f0f r17=0x399d851da9c8f46c08592171b1111f98 mask=0f0f

Pending PC in the Instruction Queue: 38

sifive_test_results_pkg::report_status.unnamed$$_0@(t=315303000): Test Result Checking Registered Name [TestDriver.testHarness.PL2Scb] Index ID [2] Done [0] Success [0] Exit Code [0]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=315303000): FAILED: Test Result Registered Name [TestDriver.testHarness.cosim] Index ID [3] Done [1] Success [0] Exit Code [13107]
sifive_test_results_pkg::report_status.unnamed$$_0@(t=315303000): FAILED: Test Result Registered Name [TestDriver.testHarness.i_TF] Index ID [4] Done [1] Success [0] Exit Code [0]

sifive_test_results_pkg::report_status@(t=315303000): done:          3, registered:          3, success:          1


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 63061 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 315,302,500 ps.

C                   0:      15006 vrf[ 0]=[61e2ddc6399d851d5b081d5708592171][ffff]
Error: Instruction-by-Instruction check failed
C                   0:      15007 [1] pc=[0000000080000a30] W[r 5=0000000080001328][1] R[r 5=0000000080001324] R[r 0=0000000000000000] inst=[00000291] DASM(00000291)

C                   0:      15493 [1] pc=[0000000080000f7c] W[r 0=0000000000000000][0] R[r 5=00000000800006ee] R[r 0=0000000000000000] inst=[00008282] DASM(00008282)
Error: Instruction-by-Instruction check failed


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 63061 simulation cycles (in TestDriver.report_phase_actions)
Error: simulation sim/rerun.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vwaddu.wv failed{noformat}



Details: under investigation (*TBD*)",Alexandre Solomatnikov,Kira Tsao,Nicolas Brunie,,,,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5e1a4f5ec578120daca5ff8e,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,15/Mar/22 8:04 AM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220315-144133.png;https://sifive.atlassian.net/secure/attachment/69644/image-20220315-144133.png,15/Mar/22 8:04 AM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220315-144204.png;https://sifive.atlassian.net/secure/attachment/69647/image-20220315-144204.png,15/Mar/22 8:04 AM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220315-144430.png;https://sifive.atlassian.net/secure/attachment/69646/image-20220315-144430.png,15/Mar/22 8:04 AM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220315-144517.png;https://sifive.atlassian.net/secure/attachment/69643/image-20220315-144517.png,15/Mar/22 8:04 AM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220315-150445.png;https://sifive.atlassian.net/secure/attachment/69645/image-20220315-150445.png,15/Mar/22 8:57 AM;4e443b7c-0535-4eb3-aa1e-0e7f47ca68aa;image-20220315-154449.png;https://sifive.atlassian.net/secure/attachment/69650/image-20220315-154449.png,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,build u8_minimal_vector and execute following outline,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-15T14:42:57.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/c3ff522864c6655220ab91eb8ab57cc3ed0a6f3a,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyjrb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,"
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.l1dcDataArrayBank.*ext,1,0,32:.*\\.icWayPredArray.*ext,1,0,20:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.cc_dir_ext,0,1,5:.*\\.l1dcTagArray.*ext,1,0,15:.*\\.cc_banks.*ext,1,0,25:.*\\.RamBank.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vwaddu.wv"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vwaddu.wv_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_VSETIVLI-1_FENCEbeforeVSETVL-0_VSETVL-0_FLMUL-0_NonzeroVstart-0_Sample-10_LMUL-1_AVL-128_TGV-1_IMM-0_LdStAccFault-1"",
  ""seed"": {
    ""value"": 4282876139
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))",,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,04:59.7,14/Mar/22 9:31 PM;6065017e90e3950069cf01c5;It looks like the issue is in the last {{vslidedown.vx}} unloading loop sequence,"15/Mar/22 8:04 AM;5e1a4f5ec578120daca5ff8e;A small discover from the tests. Setting {{IMM-0}} to {{IMM-1}} in ""generator_args"" from the failing {{rerun.outline}}, will make the test pass. And VTG is default using {{IMM-1}}. But from the generated test.S, they are totally the same.

The main reason that causing this issue is the last uop missing. LLP receive all the micro-op except the last one in the failing case, but not all the cases. Even using {{IMM-0}}, they are several tests are running correctly before the fail.



Here’s the waveform slice that both {{IMM-0}} and {{IMM-1}} are correct executed, same {{vtype}} setting and same test value.

{{IMM-0}}:

!image-20220315-144133.png|width=1374,height=143!

{{IMM-1}}:

!image-20220315-144204.png|width=1384,height=144!

In above case, you can see the issue to LLP of {{IMM-0}} is back2back, but having hole in {{IMM-1}}, but both of them are correct because no uop missing.

Then the failing is here:

{{IMM-0}}:

!image-20220315-144430.png|width=1339,height=145!

{{IMM-1}}:

!image-20220315-144517.png|width=1381,height=141!

In {{IMM-1}}, LLP is receiving 2 uop. Only 1 uop in {{IMM-0}}, which causing part of result missing.



The VectorSequencer seems ok from the deq0 and deq1 side.

!image-20220315-150445.png|width=1416,height=464!","15/Mar/22 8:57 AM;5e1a4f5ec578120daca5ff8e;Another issue in the development of cracking narrowing operation into 2 uop, the last uop is missing too, but not related to {{IMM}} value.

The failing test is going to execute:

{noformat}# -------------------- test instruction
  VSETIVLI(8, e32, m2, tu, mu)
  vnsrl.wv v16, v16, v16{noformat}

!image-20220315-154449.png|width=1383,height=877!

As the waveform, the last uop(*_rd: 0x11, rs1: 0x11, rs2: 0x13_*) is existing on the list but the mux pick up the {{entries_1}} payload due to {{validEntry_1}} is high.

Which means it’s choosing this block

[https://github.com/sifive/federation/blob/1e2b1aed8bf2bf0e638c81f7f92860a885f97f76/block-tgv-sifive/src/main/scala/core/tgv/VectorSequencer.scala#L271|https://github.com/sifive/federation/blob/1e2b1aed8bf2bf0e638c81f7f92860a885f97f76/block-tgv-sifive/src/main/scala/core/tgv/VectorSequencer.scala#L271]

rather then the uop block

[https://github.com/sifive/federation/blob/1e2b1aed8bf2bf0e638c81f7f92860a885f97f76/block-tgv-sifive/src/main/scala/core/tgv/VectorSequencer.scala#L306|https://github.com/sifive/federation/blob/1e2b1aed8bf2bf0e638c81f7f92860a885f97f76/block-tgv-sifive/src/main/scala/core/tgv/VectorSequencer.scala#L306]

Is this a priority issue?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Create a separate VTG outline file for load/store instructions,,,,,,MAL-1700,110503,,Task,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,3/14/2022 17:52,7/1/2022 11:41,9/28/2022 0:51,6/23/2022 11:45,,,,,,,,,,,,,Verification,,,,,,,,,0,TGV,,,"Once we have one (some?) load instruction working, it might be a good idea to have separate outlines for the ""Execution pipeline"" tests and the ""Baler pipeline"" tests. That might make it faster to do sanity checking when making changes that only affect one or the other.

Run the idea past the DV team before merging.

Of course, there will be some load/store ops in the sanity outline once they're stable enough.",David Kravitz,,,,,,,,,,,,,,,5fd15143b4a74900763834e0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Vector,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-07-01T11:20:11.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,MAL-2006,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/9c5497a67cb1b1b15d9856f9c7f730aa8b810750,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,2,0,,,,100,,,,,,,,,,,,,,,2|hzyjov:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,23/Jun/22 11:45 AM;5fd15143b4a74900763834e0;Done. VTG does not yet pass because of VI-7507.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] In correct slide operation popping up again,[TGV] In correct,,,,,MAL-1699,110477,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,3/14/2022 14:35,9/7/2022 17:50,9/28/2022 0:51,3/16/2022 15:18,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,TGV,,,"I see incorrect slide of data happening on, vslideup instruction. During the instruction, only about 8 bits is slid up in the vector register, instead of 32 bits. And the test passes with fence before the vsetvl inst. 

To recreate the failure 

1. clone federation and checkout fbba4bc2351ad6f9a824020a719a7d119a79f41e
2. builds coreip_u8_minimal_vector fbba4bc2351ad6f9a824020a719a7d119a79f41e
3. rerun the test using the outline

{code:java}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.TagRAM_ext,1,0,25:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.icDataArray.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32:.*\\.l1dcDataArrayBank.*ext,1,0,25"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul1"",
  ""subtest"": ""vmv.v.v"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vmv.v.v_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_VSETIVLI-1_FENCEbeforeVSETVL-0_VSETVL-0_FLMUL-0_NonzeroVstart-0_Sample-10_LMUL-1_AVL-128_TGV-1_IMM-1_LdStAccFault-1"",
  ""seed"": {
    ""value"": 2439785760
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){code}



The waves for this run are at {{gamma29:/scratch/srivatsa/fail_rerun/fbba4bc2351ad6f9a824020a719a7d119a79f41e/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/t0000_lmul1/vector/vector_tests_gen/rvv_64/vmv.v.v}}",David Kravitz,Josh Smith,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,15/Mar/22 6:52 AM;ug:03996552-4b14-4132-be2b-a08c9c621951;image-20220315-135151.png;https://sifive.atlassian.net/secure/attachment/69642/image-20220315-135151.png,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-16T15:17:37.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,363c4199979fb06a342b089b2b1728ab59734dff,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyjlr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,28:59.8,"15/Mar/22 6:28 AM;5fd15143b4a74900763834e0;Assigning to Josh so he can confirm/deny it’s the same root cause as [https://sifive.atlassian.net/browse/MAL-1698|https://sifive.atlassian.net/browse/MAL-1698|smart-link]. If so, should close this as a duplicate.","15/Mar/22 6:52 AM;5fd15143b4a74900763834e0;Not sure these are the right signals to indicate a problem, but this looked plausible enough to ask if it’s the same as [https://sifive.atlassian.net/browse/MAL-1698|https://sifive.atlassian.net/browse/MAL-1698|smart-link].


!image-20220315-135151.png|width=324,height=143!","16/Mar/22 7:45 AM;5acffeafaa802f2a797a955c;No, this appears to be a slightly different issue where a vset instruction in REN stage is updating the local RDU copy of vtype/vl, but in the same cycle the instruction is getting flushed. The local copy of vtype/vl in the RDU gets updated anyway.  It should be restored from the VSRF, but due to a bug in my logic if it only takes one cycle to recover the next vset color then we don’t read the VSRF.

This is still kind of related to recovering after flushed vset instructions go through the RDU, so I’ll work on fixing this also.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
VMV.x.s copying 64 bits instead of 32 bits of data,VMV.x.s ,,,,,MAL-1698,110474,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,3/14/2022 13:37,7/14/2022 11:32,9/28/2022 0:51,3/16/2022 15:18,,,,,,,,,,,,,TGV_RTL/RDU,,,,,,,,,0,,,,"I see vmv.s.x moving 64 bits of data to the scalar register , when sew is set to 32. It performs correct copying, during the first iteration of the loop, but copies 64 bits during the 2nd iteration of the loop. 

Causing a data mismatch between rtl and spike. The vmx.s.x inst is at address `0x80001736`

To recreate this failure, 

1. git clone and checkout the commit fbba4bc2351ad6f9a824020a719a7d119a79f41e
2. build coreip_u8_minimal_vector
3. rerun the test using the outline

{code:java}override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""vector/vector_tests_gen/rvv_64"",
  ""raw_plusargs"": [
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.TagRAM_ext,1,0,25:.*\\.l2_tlb_ram_ext,1,0,32:.*\\.icDataArray.*ext,1,0,25:.*\\.icTagArray.*ext,1,0,32:.*\\.l1dcDataArrayBank.*ext,1,0,25"",
    ""+disable_ecc_correctable_asserts=1""
  ],
  ""subdir"": ""t0000_lmul8"",
  ""subtest"": ""vfsqrt.v"",
  ""enable_postsim_py_check"": false,
  ""generator_args"": ""vfsqrt.v_Masking-0_Exception-0_CheckFflags-0_CheckVxsat-0_CheckVtype-1_CSRWWithNoOp-0_CSRWbeforeVSETVL-0_VSETIVLI-1_FENCEbeforeVSETVL-0_VSETVL-0_FLMUL-0_NonzeroVstart-0_Sample-10_LMUL-8_AVL-128_TGV-1_IMM-1_LdStAccFault-1"",
  ""seed"": {
    ""value"": 1076680355
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""program"": {
    ""env"": ""abi""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true))){code}

The waves for this run are at {{gamma29:/scratch/srivatsa/fail_rerun/fbba4bc2351ad6f9a824020a719a7d119a79f41e/builds/coreip_u8_minimal_vector/sim/sim/rerun.outline/t0000_lmul8/vector/vector_tests_gen/rvv_64/vfsqrt.v}}",David Kravitz,Josh Smith,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,,,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-16T15:17:37.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,363c4199979fb06a342b089b2b1728ab59734dff,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyjlb:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,17:49.9,"14/Mar/22 3:17 PM;5fd15143b4a74900763834e0;I need some clarification. Is the problem a {{vmv.s.x}} instruction as described in the text, or is it a {{vmv.x.s}} which is what’s in the assembly code at 0x80001736?

The two instructions are opposites, but both legal mnemonics, so it’s important to identify the right one.","14/Mar/22 3:31 PM;5a938e9c0913194d2d262658;The instruction is {{vmv.x.s}} , not {{vmv.s.x}} . My bad sorry. Corrected the description","14/Mar/22 5:29 PM;5fd15143b4a74900763834e0;I did a little digging and saw the instructions (there are actually two identical moves, 3 instructions apart that should do exactly the same thing) have the correct {{vsew}} = 2 on the first pass through the loop but have an incorrect {{vsew}} = 3 on the second pass through the loop. Looking back at what came into the sequence, that pattern was present there, too. That led me to ask Josh to investigate what’s going on in the RDU.

Timing of this is roughly 28450-28525 and the ROB id is going 16-1a across the 4 {{vmv.x.s}} instructions I checked.","14/Mar/22 6:21 PM;5acffeafaa802f2a797a955c;This appears to be an issue with the assignment and recovery of vset colors (VSRF entries), which are used for reading vtype/vl.  An instruction in ID stage allocated a color, but the instruction needed to be replayed because there was actually some ICache parity error.  After the pipeline flush, the vset color was restored to an incorrect value, and the copy of vtype/vl which exists in the RDU was restored to the wrong value.

I’m testing out a fix.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Core determinism for lockstep,,,,,,MAL-1696,110350,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,,Josh Smith,5acffeafaa802f2a797a955c,Cameron McNairy,61b2affdb0b630006aa0ca4f,Cameron McNairy,61b2affdb0b630006aa0ca4f,3/11/2022 11:18,3/11/2022 11:53,9/28/2022 0:51,,,,,,,,,,,,,,RTL/Tile,,,,,,,,,0,,,,"SiFive is building Dual Core LockStep (DCLS) into a number of our products.  A key requirement for this to work is that the replicated functional block (tile in this case) is deterministic -- each tile will produce the same outputs when given the same inputs.  

This is being filed to track this requirement for Mallard.",Cameron McNairy,Josh Smith,,,,,,,,,,,,,,61b2affdb0b630006aa0ca4f,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzyivz:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,53:01.3,"11/Mar/22 11:39 AM;61b2affdb0b630006aa0ca4f;Note, there is the opportunity to build determinism via code execution post-reset.  The idea is that a minimum state is deterministic and then the code initializes state that is not yet initialized – such as array tags.",11/Mar/22 11:53 AM;5acffeafaa802f2a797a955c;I’m hoping that for Mallard we won’t have to do much (if anything) because we already have hardware initialization state machines for things like the caches and branch predictors.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
Assertion issue regarding check while Mallard core operating in single step,Assertion issue  check while Mallard,,,,,MAL-1695,110328,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,Josh Smith,5acffeafaa802f2a797a955c,3/11/2022 8:55,5/10/2022 12:00,9/28/2022 0:51,3/15/2022 15:55,,,,,,,,,,,,,RTL/RDU,,,,,,,,,0,,,,"The RDU in Mallard has an assertion to check that while in single-step mode, at most one instruction is valid in the ROB:



{code:java}
  // Check that during singleStep mode, ROB is either empty, or write pointer is one greater than retire pointer
  // - Check starting from 2nd cycle that io.singleStep is asserted, because during first cycle ROB may be flushing from *RET
  assert(!(io.singleStep && RegNext(io.singleStep)) || robEmpty_DIS || (rob.io.robWrPtr === rob.io.robRetirePtr.increment(1.U, robParams.nEnt)))
{code}

The intent of the assertion is to check that when the `io.singleStep` input transitions to high, that the ROB should be empty or just have a single valid entry (by comparing the write pointer and retire pointer).  However, if something like a return from debug mode ends up flushing multiple entries in the ROB the assertion may fire while those ROB entries are rewound.

I believe this is just an issue with the assertion, not the design.",Josh Smith,,,,,,,,,,,,,,,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=2}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":2,""lastUpdated"":""2022-04-18T18:12:27.000-0700"",""stateCount"":2,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":2,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,"Assertion only issue, does not affect RTL. ",CAT-D,,Non-RTL,,Low,Technically I believe this could happen on any Mallard-based configuration,,,Assertion may erroneously file in RDU while entering single step mode,"I do not believe this to be an actual design issue, just a problem with the way the assertion is written",1. BRC: Should not Publish,,,,,,,,,,8def9635f1941eee2e4cea8687ddabb933973cf6,,,,,,,,,,,,Simulation-Torture,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyitr:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,This was apparently found on https://simscope.internal.sifive.com/models/master--g6soc_eswin_narwhal--4b10bdf376c66a77408462b41bb85e7274d4980e,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,15/Mar/22 3:55 PM;5acffeafaa802f2a797a955c;Merged assertion fix into master.  Still needs to be back-ported into Narwhal.  This would even affect Mongoose I suppose.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
[TGV] Sequencer credit count assertion on u8_minimal_vector config,[TGV] Sequencer credit count assertion on u8_minimal_vector config,,,,,MAL-1694,110170,,Bug,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Alexandre Solomatnikov,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,Srivatsa Yogendra,5a938e9c0913194d2d262658,Srivatsa Yogendra,5a938e9c0913194d2d262658,3/10/2022 17:27,9/7/2022 17:50,9/28/2022 0:51,3/15/2022 16:45,,,,,,,,,,,,,TGV_RTL/SEQ,,,,,,,,,0,TGV,,,"m running into an assertion, when we are initializing the v0 register, with sew=8, lmul =1 using vslide1down.
its going through the loop almost 14 out of 16 times and hits an assertion. 

the assertion fired is

{code:java}
=== sitest found errors in test sim3/rat.outline/rat_default_T_0543/rat/default:
Scoreboard config: xLen=64 | fLen=64 | vLen=128 | vaddrExtended=42 | vec_reg_count=32 | enable_check=1 | verbosity=0 | enable_wrdata_check=1 | error_count=1 | stall_cycle_count=30000 | enable_cosim_mmc=1
Error: ""/scratch/srivatsa/fed01/rat_for_tgv/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VectorSequencer_assert.sv"", 283: TestDriver.testHarness.system.tile_prci_domain.tile.core.tgv.vectorSequencer.SiFive_VectorSequencer_assert_0: at time 206802500 ps
Assertion failed: VectorSequencer credit count is wrong

    at VectorSequencer.scala:174 assert(creditReg <= tp.nVSeqEntries.U, ""VectorSequencer credit count is wrong"")

Fatal: ""/scratch/srivatsa/fed01/rat_for_tgv/builds/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_VectorSequencer_assert.sv"", 292: TestDriver.testHarness.system.tile_prci_domain.tile.core.tgv.vectorSequencer.SiFive_VectorSequencer_assert_0: at time 206802500 ps
{code}

To recreate the failure, 

1.  git clone federation and checkout the commit 7d27a274078edce951150768773370bdfb583ae4
2. build the config coreip_u8_minimal_vector
3. rerun the simulation using the outline

{code:java}
override_testbench_in_outline(""coreipvipcosim"")
add_subcircuit_in_outline([])
require 'json'
opts = <<'JSON'
{
  ""name"": ""rat"",
  ""raw_plusargs"": [
    ""+use_sb"",
    ""+mem_stats"",
    ""+sb_max_num_errors=0"",
    ""+enable_spike_cosim"",
    ""+MEM_ERROR_INJECT=.*\\.tag_array_.*ext,0,1,32:.*\\.data_arrays_0_.*ext,0,1,32:.*\\.syssram.*ext,0,1,32:.*\\.island.*\\.lim\\.syssram.*ext,0,1,32:.*\\.tagged_tables_0_.*ext,0,1,32:.*\\.base_table_0_.*ext,0,132"",
    ""+verbose""
  ],
  ""subdir"": ""rat_default_T_0543"",
  ""subtest"": ""default"",
  ""enable_postsim_py_check"": false,
  ""seed"": {
    ""value"": 3093770124
  },
  ""sim"": {
    ""vendor"": ""vcs""
  },
  ""tilelink"": {
    ""timeout"": ""100000000000""
  },
  ""waves"": {
    ""dumper"": ""all""
  },
  ""program"": {
    ""hartid"": 0,
    ""reset_vector_scheme"": ""first_mem_periph_sys""
  }
}
JSON
run_test(configure_test(**JSON.parse(opts, symbolize_names: true)))
{code}

the generated waveforms are at `gamma29:/scratch/srivatsa/fed01/rat_for_tgv/builds/coreip_u8_minimal_vector/sim/sim3/rat.outline/rat_default_T_0543/rat/default`
",Alexandre Solomatnikov,David Kravitz,Josh Smith,Lun Li,Nicolas Brunie,Srivatsa Yogendra,,,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,5acffeafaa802f2a797a955c,5dbc8d4f3a09190c2ad5f41d,6065017e90e3950069cf01c5,5a938e9c0913194d2d262658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-15T14:06:10.000-0700"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,VI-6535,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/a53c4434e184ba928ff6f81fb057316177d61b9b,,,,,,,,,,,,Simulation-RAT,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyhxj:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,49:30.4,"15/Mar/22 12:49 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;After the fix for this assertion simulation fails with another assertion

{noformat}Running test sim/rat.outline/rat_default_T_0543/rat/default
Spike simulation PASSED successfully.
=== sitest found errors in test sim/rat.outline/rat_default_T_0543/rat/default:
Scoreboard config: xLen=64 | fLen=64 | vLen=128 | vaddrExtended=42 | vec_reg_count=32 | enable_check=1 | verbosity=0 | enable_wrdata_check=1 | error_count=1 | stall_cycle_count=30000 | enable_cosim_mmc=1
Error: ""/scratch/sols/MAL-1694/federation/builds/7d27a274078_m/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_IssQEntry_assert.sv"", 79: TestDriver.testHarness.system.tile_prci_domain.tile.core.iex.issueQueues_0.entries_1.SiFive_IssQEntry_assert_0: at time 207082500 ps
Assertion failed (verification library): make sure we don't match tag on a source that's marked ready  @[MallardUtil.scala 506:20]

Fatal: ""/scratch/sols/MAL-1694/federation/builds/7d27a274078_m/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_IssQEntry_assert.sv"", 88: TestDriver.testHarness.system.tile_prci_domain.tile.core.iex.issueQueues_0.entries_1.SiFive_IssQEntry_assert_0: at time 207082500 ps

$finish called from file ""/scratch/sols/MAL-1694/federation/builds/7d27a274078_m/coreip_u8_minimal_vector/verilog/design/assertions/SiFive_IssQEntry_assert.sv"", line 88.


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 41416 simulation cycles (in TestDriver.report_phase_actions)
*Verdi* : Flush all FSDB Files at 207,082,500 ps.

*Verdi* : Close all FSDB Files at 207,082,500 ps.
""/scratch/sols/MAL-1694/federation/vsrc/sim/common/../TestDriver.sv"", 525: TestDriver.assert_final_phase.final_error: started at 207082500ps failed at 207082500ps
	Offending '(current_phase === shutdown_e)'


*** FAILED *** The Simulation Finished, Did NOT Finish Successfully after 41416 simulation cycles (in TestDriver.report_phase_actions)
Error: simulation sim/rat.outline/rat_default_T_0543/rat/default failed
Error: some simulations failed{noformat}

Please, test it and create another bug ticket if necessary.

CC: [~accountid:5acffeafaa802f2a797a955c] ","15/Mar/22 4:29 PM;5a938e9c0913194d2d262658;I ran the test with multiple seeds and i am still seeing the assertion reported. Did u run it with multiple seeds? 

I rebased the branch for master, the new commit id will be {{289b000613a56347e89fbb8986a8f3c99df74020}}

I think u should be able to replicate with running the rat.outline#5. Let me know if u need anything else.





I am looking into the issQ assertion. ","15/Mar/22 4:43 PM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;Unless it is exactly the same test and seed you should not re-open the same ticket.

If the test or seed is different, then you should debug it as much as possible and only after that file a new ticket.",15/Mar/22 4:45 PM;5a938e9c0913194d2d262658;ok. I will keep that in mind. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Put vtg-tgv-tests.outline instructions into same order as RVV spec,,,,,,MAL-1693,110076,,Task,Closed,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,David Kravitz,5fd15143b4a74900763834e0,3/10/2022 6:53,3/24/2022 11:08,9/28/2022 0:51,3/11/2022 5:41,,,,,,,,,,,,,Verification,,,,,,,,,0,TGV,,,"Just keep things better organized, have the instruction list match the RVV spec. That will also help with maintaining the ""supported instruction"" spreadsheet (still in development).",David Kravitz,Nicolas Brunie,,,,,,,,,,,,,,5fd15143b4a74900763834e0,6065017e90e3950069cf01c5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=1}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":1,""lastUpdated"":""2022-03-10T19:12:01.000-0800"",""stateCount"":1,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":1,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/fbba4bc2351ad6f9a824020a719a7d119a79f41e,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyhf3:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Panda DR,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Mar/22 5:41 AM;5fd15143b4a74900763834e0;Done. While at it, added 7 `vmv` instructions and noticed some gaps that we should be able to quickly fill.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
Clear or save/restore or randomize GHR on privilege level changes,,,,,,MAL-1692,110036,,Task,Open,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,High,,Josh Smith,5acffeafaa802f2a797a955c,Brian Grayson,5e1371705361330daaeaf389,Brian Grayson,5e1371705361330daaeaf389,3/9/2022 18:12,3/24/2022 11:09,9/28/2022 0:51,,,,,,,,,,,,,,RTL/Frontend,,,,,,,,,0,,,,"There is a potential for cross-privilege-level training if we allow a global GHR, across all privilege modes. The paper [https://www.vusec.net/projects/bhi-spectre-bhb/|https://www.vusec.net/projects/bhi-spectre-bhb/] talks about ways to do this, in regard to indirect branches, but it seems it could apply to conditional branches as well.

We should think about solving this. Here are two ideas:

* -Easy: on every privilege level switch (up or down), clear the GHR. This will incur some performance penalty, but given that we are doing a privilege level switch, a few mispredicts should be the least of our performance concerns.-
* Harder: on every privilege level switch (up or down), save the current GHR to a latch for the old privilege level, and load the new GHR from a latch for the new privilege level. This has the advantage of allowing better performance, but at the cost of area and complexity, and also possibly allowing cross-time same-privilege-level training: if userland calls syscall 1 a bunch of times in a row, and the GHR updates due to that are saved and restored, then on an Nth syscall, perhaps to syscall 2, the supervisor may predict to go to syscall 1.

-So the more I think about it, it seems our DEFAULT mode should be to clear the GHR on all privilege mode changes. If we want, we can have a chicken bit to allow it to either be save/restored, or to just be globally maintained regardless of privilege level.-

Thinking about this some more, even clearing the GHR does not avoid the potential for training – if the GHR is always cleared, then it is deterministic, and userland can still train by doing the same syscall over and over, and then do a different one.

Maybe we need to do something like fill the GHR with random data, that is NOT based on the current GHR state, to avoid the potential for training.",Adam George,Andrew Hanselman,Brian Grayson,Josh Smith,,,,,,,,,,,,61b2a458657a0500706b9c39,609d7e1f5998a6006800dcc5,5e1371705361330daaeaf389,5acffeafaa802f2a797a955c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Not assigned,,,,,,,,,,{},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2|hzyh6v:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Healdsburg DR,,,,,,,,,,,,,,,,,,,,,,,,,,23:02.5,09/Mar/22 7:23 PM;5acffeafaa802f2a797a955c;[~accountid:61b2a458657a0500706b9c39] [~accountid:609d7e1f5998a6006800dcc5] ,"10/Mar/22 7:02 AM;5e1371705361330daaeaf389;Josh and I slacked a bit, and where I am currently landing is the following:
On a privilege-level switch:

* generate a 16-bit CRC (of some form) of the current values of {{mcycles}} and {{minstret}} – in the nefarious case, we may not have more than 16 bits of entropy, so don’t expect there to be more than that
* XOR the current GHR value with that CRC

That will ensure that the GHR value when switching privilege levels is untrainable and also unpredictable.

(If we cleared it each time, which was my first idea, it would be predictable, and thus one could train the predictor.)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,To Do
[TGV] invalid value for fwdCtl.pipeSel inside VexPipe.scala,[TGV] invalid value fwdCtl.pipeSel inside VexPipe.scala,Execution Unit ,Vex Pipe,,,MAL-1691,110003,,Bug,Resolved,MAL,Mallard,software,Josh Smith,5acffeafaa802f2a797a955c,,,Medium,Done,Nicolas Brunie,6065017e90e3950069cf01c5,Yohann Rabefarihy,61730c9cbcb57400683f15a6,Yohann Rabefarihy,61730c9cbcb57400683f15a6,3/9/2022 9:21,9/7/2022 17:51,9/28/2022 0:51,3/15/2022 14:54,,,,,,,,,,,,,TGV_RTL/VEX,,,,,,,,,0,TGV,,,"The following line is generated in a different way with CIRCT and SFC:

{noformat}// Check for source replays
val instSrcReplay_ISS = io.issReq_ISS.bits.srcInfo.map(s => (s.fwdCtl.stageSel & io.exPipeTagReplay(s.fwdCtl.pipeSel).asUInt).orR).reduce(_ || _) ||
io.issReq_ISS.bits.srcInfo.map(s => s.tag.valid && !s.tag.ready && !s.fwdCtl.stageSel.orR).reduce(_ || _){noformat}

SFC is generating {{io_issReq_ISS_bits_srcInfo_fwdCtl_pipeSel==[1-2]}}
CIRCT is generating {{io_exPipeTagReplay[io_issReq_ISS_bits_srcInfo_fwdCtl_pipeSel[1:0]]}}

currently {{io_issReq_ISS_bits_srcInfo_fwdCtl_pipeSel}} goes to 3 sometimes in Vex but we only have 3 possible sources.

SFC is Hiding the bug, We should fix it and add/rework assertion directly on {{io_issReq_ISS_bits_srcInfo_fwdCtl_pipeSel}}

it might be good to add/rework the assertion on every fwd logic (iex,fex,vex,lsu)",Alexandre Solomatnikov,David Kravitz,Jack Koenig,John Ingalls,Megan Wachs,Nicolas Brunie,Schuyler Eldridge,Yohann Rabefarihy,,,,,,,,557058:e51f5c3d-42d7-403f-9271-0d982f42a185,5fd15143b4a74900763834e0,557058:7fb69e23-d272-4a29-b30f-7807a07523eb,5bb6808b9ba2930990f81895,557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66,6065017e90e3950069cf01c5,5f5948f840e048006e127cf2,61730c9cbcb57400683f15a6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10/Mar/22 9:04 AM;ug:0ab16f0d-620c-41fb-843b-ac132cd8bc86;image-20220310-170354.png;https://sifive.atlassian.net/secure/attachment/69517/image-20220310-170354.png,,,,,,,,,,,,,,,,master,No,,,,,,S5CSD,,,,0,,,,,,,NO,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Won’t be modeled,,,,,,,,,,"{pullrequest={dataType=pullrequest, state=MERGED, stateCount=3}, json={""cachedValue"":{""errors"":[],""summary"":{""pullrequest"":{""overall"":{""count"":3,""lastUpdated"":""2022-03-14T20:29:58.000-0700"",""stateCount"":3,""state"":""MERGED"",""open"":false,""dataType"":""pullrequest""},""byInstanceType"":{""GitForJiraCloud"":{""count"":3,""name"":""GitForJiraCloud""}}}}},""isStale"":true}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://github.com/sifive/federation/commit/df31ebebc6d1706d4b68aacf1c70ab7e7dbcbc07,,,,,,,,,,,,Simulation-VTG,,,,Narwhal -> GR2.00 (SHA 8029003f),,,,No impact,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,100,,,,,,,,,,,,,,,2|hzyh0f:,,,,,,,,,,,,,,,,,,,,,,,,,,,,Normal - Typical issue,,,,,,,,,,,,,,,,,Orca PR,,,,,,,,,,,,,,,,,,,,,,,,,,05:58.7,09/Mar/22 10:05 AM;6065017e90e3950069cf01c5;Issue revealed with  {{circt 0.0.7}},09/Mar/22 1:55 PM;6065017e90e3950069cf01c5;The issue may be related to the fact we collapse {{io.thisPipeTagReplay}}flag for both destinations in {{VEX}} ,"10/Mar/22 9:04 AM;6065017e90e3950069cf01c5;I have an on-going fix for the {{VexPipe}} but it seems the issue is also impacting the integer pipes.

!image-20220310-170354.png|width=2421,height=1397!

We seems to often rely on the property that out-of-bound indexing will still return a value.","15/Mar/22 11:19 AM;557058:28a605dd-cf39-41a5-b8a5-747f16cb2a66;[~accountid:6065017e90e3950069cf01c5] while this issue was exposed by using MFC, on master for deliveries we only use SFC. Given that, is there actually an issue in RTL shipped to customers so far?  Or is this TGV only?","15/Mar/22 11:33 AM;6065017e90e3950069cf01c5;The issue reported here is TGV only, so no impact on RTL shipped to customer.

MFC seems to show this issue in other places (in the non-vector side, but still on the TGV codebase so with vector related changes).

I suspect that we have missed similar issues in other part of the code. We seem to often rely on OoB indexing returning a default value, I don’t know if this is by design or by chance.","15/Mar/22 11:58 AM;557058:e51f5c3d-42d7-403f-9271-0d982f42a185;{quote}OoB indexing returning a default value{quote}

According to [~accountid:557058:7fb69e23-d272-4a29-b30f-7807a07523eb] this is Chisel semantics, even though spec says otherwise.","15/Mar/22 12:22 PM;557058:7fb69e23-d272-4a29-b30f-7807a07523eb;{quote}According to [~accountid:557058:7fb69e23-d272-4a29-b30f-7807a07523eb] this is Chisel semantics, even though spec says otherwise.{quote}

There is no Chisel spec--the implementation has behavior that we can change but only with proper consideration of not breaking existing code without a proper deprecation or migration.

We have room to enhance the API here at the Chisel-level but we need to do it thoughtfully to ensure we don’t break cases that are intentionally relying on this API which has always been the behavior in Chisel3.

I’m curious [~accountid:6065017e90e3950069cf01c5], when you say “bug” do you strictly mean that it’s not the behavior you intended? Or is this something that manifests in the Verilog doing the wrong thing? If the latter is the case, should this have been caught by testing/verification?","15/Mar/22 12:26 PM;6065017e90e3950069cf01c5;{quote}I’m curious [~accountid:6065017e90e3950069cf01c5], when you say “bug” do you strictly mean that it’s not the behavior you intended? Or is this something that manifests in the Verilog doing the wrong thing? If the latter is the case, should this have been caught by testing/verification?{quote}

In the case of the {{pipeSel}} I was not aware that the value could “overflow”  (in the sense be larger than the array it tries to index). It happens than when it overflows the selection is actually not used (for different reasons) so the bug could not have been caught by testing / verification as it has no way of manifesting itself, but as far as our use (at least my use) of {{pipeSel}} here there was an error no checking for OoB condition or not extending target array sufficiently. Let’s say it is half a bug: I was not aware of the actual range of value that could be taken.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done
